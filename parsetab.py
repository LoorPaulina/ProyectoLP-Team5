
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_claseinput_concatenacion : concatenacionSimpleCadena\n                           | concatenacion_funcionconcatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DERvalorCadena : CADENA\n                   | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROoperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineavalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacionelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                     sentencia_while : WHILE declaracion DO sentencia_while END\n                      | WHILE declaracion DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                 | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER'
    
_lr_action_items = {'VARIABLE':([0,27,28,30,33,35,36,37,38,41,42,44,47,48,56,57,58,60,61,62,63,64,65,80,87,88,115,127,128,137,139,144,145,146,150,153,154,155,157,159,160,162,165,167,169,177,179,180,192,196,197,203,204,206,216,217,219,226,],[25,70,-41,-42,-29,86,90,92,100,110,110,110,-28,110,120,121,127,-76,-77,-78,-79,-80,-81,145,110,-101,120,-86,-87,70,90,-84,-88,-85,86,90,-82,-83,181,100,110,110,110,191,120,110,90,-102,205,110,181,181,25,110,223,-131,110,-130,]),'PRINT':([0,33,41,42,44,47,48,87,88,127,128,144,145,146,160,162,165,177,180,196,204,206,217,219,226,],[28,-29,28,28,28,-28,28,28,-101,-86,-87,-84,-88,-85,28,28,28,28,-102,28,28,28,-131,28,-130,]),'PUTS':([0,33,41,42,44,47,48,87,88,127,128,144,145,146,160,162,165,177,180,196,204,206,217,219,226,],[30,-29,30,30,30,-28,30,30,-101,-86,-87,-84,-88,-85,30,30,30,30,-102,30,30,30,-131,30,-130,]),'GETS':([0,33,41,42,44,47,48,87,88,127,128,144,145,146,160,162,165,177,180,196,204,206,217,219,226,],[34,-29,34,34,34,-28,34,34,-101,-86,-87,-84,-88,-85,34,34,34,34,-102,34,34,34,-131,34,-130,]),'LLAVE_IZ':([0,33,41,42,44,47,48,57,87,88,127,128,144,145,146,160,162,165,177,180,196,204,206,217,219,226,],[35,-29,35,35,35,-28,35,35,35,-101,-86,-87,-84,-88,-85,35,35,35,35,-102,35,35,35,-131,35,-130,]),'IF':([0,33,41,42,44,47,48,67,68,69,70,71,72,87,88,127,128,144,145,146,160,162,165,177,180,196,204,206,217,219,226,],[36,-29,36,36,36,-28,36,139,-46,-47,-48,-49,-50,36,-101,-86,-87,-84,-88,-85,36,36,36,36,-102,36,36,36,-131,36,-130,]),'DEF':([0,114,204,],[37,163,37,]),'CORCHETE_IZ':([0,38,57,159,204,],[38,38,38,38,38,]),'COMENTARIO':([0,204,],[39,39,]),'COMENTARIO_MULTI':([0,204,],[40,40,]),'WHILE':([0,160,204,],[41,41,41,]),'CASE':([0,204,],[42,42,]),'UNTIL':([0,204,],[44,44,]),'CLASS':([0,204,],[45,45,]),'PARENTESIS_IZ':([0,28,29,30,33,36,41,42,44,47,48,49,50,51,52,53,54,55,57,74,87,88,92,127,128,133,139,144,145,146,153,154,155,160,162,165,177,179,180,189,196,204,206,217,219,226,],[29,73,74,79,-29,91,29,29,29,-28,29,74,-31,-32,-33,-34,-35,-36,74,74,29,-101,157,-86,-87,169,91,-84,-88,-85,91,-82,-83,29,29,29,29,91,-102,203,29,29,29,-131,29,-130,]),'FLOTANTE':([0,27,28,29,30,33,36,38,41,42,44,47,48,49,50,51,52,53,54,55,57,58,60,61,62,63,64,65,74,80,87,88,127,128,137,139,144,145,146,151,153,154,155,159,160,162,165,177,179,180,196,204,206,217,219,226,],[47,47,-41,47,-42,-29,47,98,47,47,47,-28,47,47,-31,-32,-33,-34,-35,-36,47,47,-76,-77,-78,-79,-80,-81,47,47,47,-101,-86,-87,47,47,-84,-88,-85,47,47,-82,-83,98,47,47,47,47,47,-102,47,47,47,-131,47,-130,]),'ENTERO':([0,27,28,29,30,33,36,38,41,42,44,47,48,49,50,51,52,53,54,55,57,58,60,61,62,63,64,65,74,80,81,87,88,91,127,128,137,139,142,144,145,146,151,153,154,155,159,160,162,165,177,179,180,196,204,206,217,219,226,],[33,33,-41,77,-42,-29,33,97,33,33,33,-28,33,33,-31,-32,-33,-34,-35,-36,33,33,-76,-77,-78,-79,-80,-81,33,33,146,33,-101,156,-86,-87,33,33,156,-84,-88,-85,33,33,-82,-83,97,33,33,33,33,33,-102,33,33,33,-131,33,-130,]),'WHEN':([0,23,24,26,30,33,34,43,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,111,117,118,119,120,122,123,124,125,126,127,128,138,140,141,143,144,145,146,147,148,149,158,164,171,172,178,180,190,204,207,208,220,227,],[48,-21,-22,-24,-75,-29,-89,48,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,48,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,-64,-26,-44,-105,-104,-102,-121,48,-23,-103,-107,-106,]),'CADENA':([0,27,28,30,38,56,57,115,137,151,159,169,204,],[26,68,-41,-42,96,26,122,26,68,176,96,26,26,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,30,33,34,39,40,43,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,112,117,118,119,120,122,123,124,125,126,127,128,129,130,134,136,138,140,141,143,144,145,146,147,148,149,158,164,170,171,172,178,180,187,190,198,200,201,202,207,208,211,220,221,222,224,227,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-75,-29,-89,-71,-72,-119,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,-120,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-97,-98,-93,-96,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,-64,-26,-94,-44,-105,-104,-102,-118,-121,-91,-117,-116,-122,-23,-103,-92,-107,-132,-66,-129,-106,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,30,33,34,39,40,43,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,112,117,118,119,120,122,123,124,125,126,127,128,129,130,134,136,138,140,141,143,144,145,146,147,148,149,158,161,164,170,171,172,178,180,182,185,186,187,188,190,195,198,199,200,201,202,204,207,208,211,213,214,215,218,220,221,222,224,225,227,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-75,-29,-89,-71,-72,-119,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,-120,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-97,-98,-93,-96,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,-64,187,-26,-94,-44,-105,-104,-102,198,200,201,-118,202,-121,208,-91,211,-117,-116,-122,-69,-23,-103,-92,222,-67,-68,224,-107,-132,-66,-129,227,-106,]),'MAS':([2,22,23,25,26,31,33,46,47,75,77,78,102,117,118,119,120,121,122,123,141,164,],[-38,50,56,-25,-24,-37,-29,115,-28,-38,-29,-37,-38,50,-38,-27,-25,-25,-24,50,-39,-26,]),'MENOS':([2,22,31,33,47,75,77,78,102,117,118,123,141,],[-38,51,-37,-29,-28,-38,-29,-37,-38,51,-38,51,-39,]),'DIVISION':([2,22,31,33,47,75,77,78,102,117,118,123,141,],[-38,52,-37,-29,-28,-38,-29,-37,-38,52,-38,52,-39,]),'MULTIPLICACION':([2,22,31,33,47,75,77,78,102,117,118,123,141,],[-38,53,-37,-29,-28,-38,-29,-37,-38,53,-38,53,-39,]),'EXPONENCIACION':([2,22,31,33,47,75,77,78,102,117,118,123,141,],[-38,54,-37,-29,-28,-38,-29,-37,-38,54,-38,54,-39,]),'MODULO':([2,22,31,33,47,75,77,78,102,117,118,123,141,],[-38,55,-37,-29,-28,-38,-29,-37,-38,55,-38,55,-39,]),'DO':([23,24,26,30,33,34,47,59,66,67,68,69,70,71,72,78,84,88,94,101,102,103,104,105,106,107,108,109,113,117,118,119,120,122,123,124,125,126,127,128,132,138,140,141,143,144,145,146,147,148,149,158,164,171,172,178,180,207,208,220,227,],[-21,-22,-24,-75,-29,-89,-28,131,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,160,-108,-109,-110,-111,-112,-113,-114,-115,162,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,168,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,-64,-26,-44,-105,-104,-102,-23,-103,-107,-106,]),'IGUAL_DOBLEP':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,116,117,118,119,120,122,123,124,125,126,127,128,138,140,141,143,144,145,146,147,148,149,158,164,171,172,178,180,207,208,220,227,],[-21,-22,-24,-75,-29,-89,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,165,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,-64,-26,-44,-105,-104,-102,-23,-103,-107,-106,]),'ELSE':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,117,118,119,120,122,123,124,125,126,127,128,138,140,141,143,144,145,146,147,148,149,152,158,164,171,172,178,180,207,208,209,220,227,],[-21,-22,-24,-75,-29,-89,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,177,-64,-26,-44,-105,-104,-102,-23,-103,219,-107,-106,]),'ELSEIF':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,88,94,102,103,104,105,106,107,108,109,117,118,119,120,122,123,124,125,126,127,128,138,140,141,143,144,145,146,147,148,149,152,158,164,171,172,178,180,207,208,209,220,227,],[-21,-22,-24,-75,-29,-89,-28,-51,-43,-46,-47,-48,-49,-50,-37,-124,-101,-65,-108,-109,-110,-111,-112,-113,-114,-115,-40,-38,-27,-25,-52,-53,-54,-55,-56,-86,-87,-45,-73,-39,-74,-84,-88,-85,-90,-95,-123,179,-64,-26,-44,-105,-104,-102,-23,-103,179,-107,-106,]),'IGUAL':([25,110,],[57,57,]),'PUNTO':([25,34,121,],[59,82,166,]),'DOBLE_IGUAL':([25,31,33,47,89,90,110,],[60,60,-29,-28,60,60,60,]),'DIFERENTE':([25,31,33,47,89,90,110,],[61,61,-29,-28,61,61,61,]),'MAYOR_QUE':([25,31,33,47,89,90,110,],[62,62,-29,-28,62,62,62,]),'MENOR_QUE':([25,31,33,47,89,90,110,],[63,63,-29,-28,63,63,63,]),'MENOR_IGUAL_QUE':([25,31,33,47,89,90,110,],[64,64,-29,-28,64,64,64,]),'MAYOR_IGUAL_QUE':([25,31,33,47,89,90,110,],[65,65,-29,-28,65,65,65,]),'PARENTESIS_DER':([26,33,47,73,75,78,79,117,118,120,141,156,157,173,181,183,193,210,212,],[-24,-29,-28,140,141,-37,143,-40,-38,-25,-39,-30,182,194,-99,199,207,-100,221,]),'VARIABLECLASE':([27,28,30,137,],[71,-41,-42,71,]),'SIMBOLO':([27,28,30,137,],[72,-41,-42,72,]),'TRIPLE_IGUAL':([32,194,],[81,-70,]),'COMA':([33,47,67,68,69,70,71,72,85,94,95,96,97,98,99,100,158,175,176,181,205,],[-29,-28,137,-46,-47,-48,-49,-50,150,-65,159,-59,-60,-61,-62,-63,-64,-125,-126,197,216,]),'AND':([33,47,88,127,128,144,145,146,],[-29,-28,154,-86,-87,-84,-88,-85,]),'OR':([33,47,88,127,128,144,145,146,],[-29,-28,155,-86,-87,-84,-88,-85,]),'LLAVE_DER':([33,35,47,83,85,174,175,176,],[-29,84,-28,149,-127,-128,-125,-126,]),'CORCHETE_DER':([38,93,94,95,96,97,98,99,100,158,184,],[94,158,-65,-58,-59,-60,-61,-62,-63,-64,-57,]),'ID_CLASE':([45,],[114,]),'EACH':([59,135,],[132,170,]),'CONCAT':([59,166,],[133,133,]),'SORT':([59,],[134,]),'FOR':([59,],[135,]),'TO_F':([59,],[136,]),'TRES_PUNTOS':([76,77,156,],[142,-30,-30,]),'CHOMP':([82,],[148,]),'ASIGNA_HASH':([86,],[151,]),'BARRA':([131,168,191,205,223,],[167,192,204,217,226,]),'INITIALIZE':([163,],[189,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,204,],[1,214,]),'operacionAritmetica':([0,29,41,42,44,48,49,57,74,87,160,162,165,177,196,204,206,219,],[2,75,102,102,102,102,118,118,75,102,102,102,102,102,102,2,102,102,]),'input_concatenacion':([0,57,204,],[3,126,3,]),'asignacion':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[4,103,103,103,103,103,103,103,103,103,103,4,103,103,]),'impresion':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[5,104,104,104,104,104,104,104,104,104,104,5,104,104,]),'impresion_vacia':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[6,105,105,105,105,105,105,105,105,105,105,6,105,105,]),'expresiones_booleanas':([0,36,41,42,44,48,87,139,153,160,162,165,177,179,196,204,206,219,],[7,88,106,106,106,106,106,88,180,106,106,106,106,88,106,7,106,106,]),'solicitudDatosTeclado':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[8,107,107,107,107,107,107,107,107,107,107,8,107,107,]),'hashes':([0,41,42,44,48,57,87,160,162,165,177,196,204,206,219,],[9,108,108,108,108,124,108,108,108,108,108,108,9,108,108,]),'estructura_if':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[10,109,109,109,109,109,109,109,109,109,109,10,109,109,]),'funciones':([0,204,],[11,11,]),'funcionesEstructuras':([0,204,],[12,12,]),'array':([0,38,57,159,204,],[13,99,125,99,13,]),'each_array':([0,204,],[14,14,]),'comentarios':([0,204,],[15,15,]),'each_hash':([0,204,],[16,16,]),'sentencia_while':([0,160,204,],[17,186,17,]),'sentencia_case':([0,204,],[18,18,]),'sentencias_when':([0,43,204,],[19,112,19,]),'sentencia_until':([0,204,],[20,20,]),'definicion_clase':([0,204,],[21,21,]),'expresionNumerica':([0,29,41,42,44,48,49,57,74,87,160,162,165,177,196,204,206,219,],[22,22,22,22,22,22,117,123,22,22,22,22,22,22,22,22,22,22,]),'concatenacionSimpleCadena':([0,57,204,],[23,23,23,]),'concatenacion_funcion':([0,57,204,],[24,24,24,]),'valor_print':([0,41,42,44,48,87,160,162,165,177,196,204,206,219,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'valorNumerico':([0,27,29,36,41,42,44,48,49,57,58,74,80,87,137,139,151,153,160,162,165,177,179,196,204,206,219,],[31,69,78,89,31,31,31,31,78,78,128,78,144,31,69,89,175,89,31,31,31,31,89,31,31,31,31,]),'rangos':([0,36,41,42,44,48,87,139,153,160,162,165,177,179,196,204,206,219,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'sentencia_when':([0,43,111,204,],[43,43,161,43,]),'valorCadena':([0,56,57,115,169,204,],[46,119,46,164,193,46,]),'operadores':([22,117,123,],[49,49,49,]),'operadoresComparacion':([25,31,89,90,110,],[58,80,80,58,58,]),'valores':([27,137,],[66,171,]),'valor':([27,137,],[67,67,]),'soloEnteros':([29,91,142,],[76,76,173,]),'elemento_hash':([35,],[83,]),'claveValor':([35,150,],[85,174,]),'condicionIf':([36,139,179,],[87,172,196,]),'elementos_array':([38,159,],[93,184,]),'elemento_array':([38,159,],[95,95,]),'declaracion':([41,42,44,48,87,160,162,165,177,196,206,219,],[101,111,113,116,152,185,188,190,195,209,218,225,]),'funcionesArray':([59,],[129,]),'funcionesNumeros':([59,],[130,]),'estructura_ifUnaLinea':([67,],[138,]),'funcionesFormatoImpresion':([82,],[147,]),'funcionesComparacion':([88,],[153,]),'estructura_secundaria_if':([152,209,],[178,220,]),'argumentos':([157,197,203,],[183,210,212,]),'each_args_hash':([192,],[206,]),'cuerpo_each':([204,],[213,]),'vacio':([204,],[215,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',37),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',38),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',43),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',55),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',56),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',88),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',89),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',107),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',108),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',121),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',125),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',126),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',127),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',128),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',129),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',130),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',134),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',135),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',136),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',143),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',164),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',165),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',168),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',169),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',170),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',176),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',177),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',178),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',179),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',180),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',198),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',205),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',206),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',207),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',208),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',209),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',218),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',219),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',226),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',227),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',228),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',229),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',230),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',237),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',238),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',246),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',248),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',249),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',251),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',256),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',260),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',261),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',264),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',265),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',266),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',270),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',271),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',272),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',273),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',274),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',275),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',278),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',279),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',282),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',283),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',284),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',285),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',286),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',323),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',324),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END','funciones',5,'p_funciones','sintactico.py',328),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END','funciones',6,'p_funciones','sintactico.py',329),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',332),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',333),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',336),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',339),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',342),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',343),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',362),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',363),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',367),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',368),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',371),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',372),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',375),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',378),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',379),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',381),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',382),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',383),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',384),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',385),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',386),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',387),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',388),
  ('sentencia_while -> WHILE declaracion DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',394),
  ('sentencia_while -> WHILE declaracion DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',395),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',398),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',401),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',402),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',405),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',408),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',412),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',413),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',416),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',417),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',420),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',421),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',425),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',428),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',429),
  ('definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER','definicion_clase',7,'p_definicion_clase','sintactico.py',432),
]
