
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NEWLINE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanoselementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaracion ENDestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,28,29,30,31,32,36,37,38,39,40,41,43,46,47,48,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,80,81,88,89,116,120,121,138,139,148,150,154,155,156,157,161,165,166,167,168,169,171,172,174,175,176,177,183,186,188,191,198,200,201,204,219,220,221,225,229,230,231,233,241,243,247,255,256,258,260,262,268,270,],[26,-22,72,-46,78,-47,86,92,93,101,92,115,115,-31,-32,115,78,-35,-36,-37,-38,-39,-40,127,128,138,-88,-89,-90,-91,-92,-93,-94,155,157,115,-114,92,181,127,-99,-100,72,92,-97,-23,-98,-101,86,92,-95,-96,92,203,101,115,128,115,128,115,115,224,127,115,115,92,-116,115,181,181,128,242,115,-117,203,115,26,115,92,264,-151,115,-115,203,-150,277,]),'PRINT':([0,28,41,43,46,47,48,88,89,138,139,154,155,156,157,172,175,177,183,191,198,201,204,229,230,233,241,243,256,258,260,268,270,],[30,-22,30,30,-31,-32,30,30,-114,-99,-100,-97,-23,-98,-101,30,30,30,30,30,30,-116,30,30,-117,30,30,30,-151,30,-115,-150,30,]),'PUTS':([0,28,41,43,46,47,48,88,89,138,139,154,155,156,157,172,175,177,183,191,198,201,204,229,230,233,241,243,256,258,260,268,270,],[32,-22,32,32,-31,-32,32,32,-114,-99,-100,-97,-23,-98,-101,32,32,32,32,32,32,-116,32,32,-117,32,32,32,-151,32,-115,-150,32,]),'GETS':([0,28,41,43,46,47,48,88,89,138,139,154,155,156,157,172,175,177,183,191,198,201,204,229,230,233,241,243,256,258,260,268,270,],[35,-22,35,35,-31,-32,35,35,-114,-99,-100,-97,-23,-98,-101,35,35,35,35,35,35,-116,35,35,-117,35,35,35,-151,35,-115,-150,35,]),'LLAVE_IZ':([0,28,41,43,46,47,48,58,88,89,138,139,154,155,156,157,172,174,175,176,177,183,191,198,201,204,221,229,230,233,241,243,256,258,260,268,270,],[36,-22,36,36,-31,-32,36,36,36,-114,-99,-100,-97,-23,-98,-101,36,36,36,36,36,36,36,36,-116,36,36,36,-117,36,36,36,-151,36,-115,-150,36,]),'IF':([0,28,41,43,46,47,48,69,70,71,72,73,74,88,89,138,139,154,155,156,157,172,175,177,183,191,198,201,204,229,230,233,241,243,256,258,260,268,270,],[37,-22,116,116,-31,-32,116,150,-53,-54,-55,-56,-57,116,-114,-99,-100,-97,-23,-98,-101,116,116,116,116,116,116,-116,116,116,-117,116,37,116,-151,116,-115,-150,116,]),'DEF':([0,218,241,270,],[38,237,38,38,]),'CORCHETE_IZ':([0,39,58,171,174,176,221,241,],[39,39,39,39,39,39,39,39,]),'WHILE':([0,28,41,43,46,47,48,88,89,138,139,154,155,156,157,172,175,177,183,191,198,201,204,229,230,233,241,243,256,258,260,268,270,],[40,-22,40,40,-31,-32,40,40,-114,-99,-100,-97,-23,-98,-101,40,40,40,40,40,40,-116,40,40,-117,40,40,40,-151,40,-115,-150,40,]),'CASE':([0,241,],[41,41,]),'UNTIL':([0,241,],[43,43,]),'PARENTESIS_IZ':([0,28,30,31,32,41,43,46,47,48,50,51,52,53,54,55,56,58,88,89,90,93,138,139,145,154,155,156,157,172,174,175,176,177,183,191,198,201,204,221,229,230,233,241,243,251,256,258,260,268,270,],[31,-22,75,31,79,31,31,-31,-32,31,31,-35,-36,-37,-38,-39,-40,31,31,-114,168,169,-99,-100,188,-97,-23,-98,-101,31,31,31,31,31,31,31,31,-116,31,31,31,-117,31,31,31,262,-151,31,-115,-150,31,]),'SIMBOLO':([0,28,29,30,32,37,40,41,43,46,47,48,58,61,62,63,64,65,66,67,80,88,89,116,138,139,148,150,154,155,156,157,165,166,167,168,172,174,175,177,183,191,198,200,201,204,221,229,230,233,241,243,247,256,258,260,268,270,],[28,-22,74,-46,-47,28,28,28,28,-31,-32,28,132,-88,-89,-90,-91,-92,-93,-94,28,28,-114,28,-99,-100,74,28,-97,-23,-98,-101,28,-95,-96,28,28,132,28,28,28,28,28,28,-116,28,132,28,-117,28,28,28,28,-151,28,-115,-150,28,]),'FLOTANTE':([0,28,29,30,31,32,37,39,40,41,43,46,47,48,50,51,52,53,54,55,56,58,59,61,62,63,64,65,66,67,81,88,89,116,138,139,148,150,154,155,156,157,162,163,165,166,167,168,171,172,174,175,176,177,183,191,198,200,201,204,221,229,230,233,241,243,247,256,258,260,268,270,],[46,-22,46,-46,46,-47,46,99,46,46,46,-31,-32,46,46,-35,-36,-37,-38,-39,-40,46,46,-88,-89,-90,-91,-92,-93,-94,46,46,-114,46,-99,-100,46,46,-97,-23,-98,-101,46,46,46,-95,-96,46,99,46,46,46,46,46,46,46,46,46,-116,46,46,46,-117,46,46,46,46,-151,46,-115,-150,46,]),'ENTERO':([0,28,29,30,31,32,37,39,40,41,43,46,47,48,50,51,52,53,54,55,56,58,59,61,62,63,64,65,66,67,81,88,89,116,138,139,148,150,154,155,156,157,162,163,165,166,167,168,171,172,174,175,176,177,183,191,198,200,201,204,221,229,230,233,241,243,247,256,258,260,268,270,],[47,-22,47,-46,47,-47,47,98,47,47,47,-31,-32,47,47,-35,-36,-37,-38,-39,-40,47,47,-88,-89,-90,-91,-92,-93,-94,47,47,-114,47,-99,-100,47,47,-97,-23,-98,-101,47,47,47,-95,-96,47,98,47,47,47,47,47,47,47,47,47,-116,47,47,47,-117,47,47,47,47,-151,47,-115,-150,47,]),'WHEN':([0,24,25,27,28,32,35,42,46,47,68,69,70,71,72,73,74,77,78,84,95,103,104,105,106,107,108,109,110,111,112,113,114,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,149,151,152,153,154,155,156,157,158,159,160,170,182,190,197,199,210,212,213,214,215,216,222,234,235,241,244,245,259,269,],[48,-24,-25,-27,-22,-87,-102,48,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,48,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-99,-100,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,-79,-29,-49,-120,-119,-64,-59,-60,-61,-62,-63,-139,-134,-135,48,-26,-118,-122,-121,]),'CLASS':([0,241,],[49,49,]),'CADENA':([0,29,30,32,36,39,57,58,121,148,161,162,163,171,174,176,188,221,241,],[27,70,-46,-47,87,97,27,129,27,70,87,194,195,97,129,212,27,129,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,35,42,46,47,68,69,70,71,72,73,74,77,78,84,95,104,105,106,107,108,109,110,111,112,113,114,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,146,149,151,152,153,154,155,156,157,158,159,160,170,182,189,190,197,199,209,210,212,213,214,215,216,222,234,235,236,244,245,249,259,261,263,265,269,278,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-87,-102,-137,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-138,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-51,-52,-99,-100,-110,-111,-34,-106,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,-79,-29,-107,-49,-120,-119,-136,-64,-59,-60,-61,-62,-63,-139,-134,-135,-140,-26,-118,-104,-122,-105,-81,-149,-121,-154,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,35,42,46,47,68,69,70,71,72,73,74,77,78,84,95,104,105,106,107,108,109,110,111,112,113,114,118,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,144,146,149,151,152,153,154,155,156,157,158,159,160,164,170,173,179,180,182,189,190,197,199,207,208,209,210,211,212,213,214,215,216,217,222,227,228,232,234,235,236,238,239,240,241,244,245,249,250,252,253,254,257,259,261,263,265,266,269,271,272,273,274,275,276,278,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-87,-102,-137,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-138,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-51,-52,-99,-100,-110,-111,-34,-106,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,197,-79,209,-155,-156,-29,-107,-49,-120,-119,234,235,-136,-64,197,-59,-60,-61,-62,-63,236,-139,197,245,249,-134,-135,-140,-157,-158,-64,-84,-26,-118,-104,261,263,-82,-83,265,-122,-105,-81,-149,269,-121,-159,278,-160,-161,-131,-124,-154,]),'MAS':([2,23,24,26,27,34,45,46,47,76,77,78,104,115,124,125,126,127,128,129,130,152,182,212,213,277,],[-42,51,57,-28,-27,-41,121,-31,-32,-42,-41,-44,-42,-44,51,-42,-30,-28,-28,-27,51,-43,-29,-27,51,-44,]),'MENOS':([2,23,26,34,46,47,76,77,78,104,115,124,125,128,130,152,213,277,],[-42,52,-44,-41,-31,-32,-42,-41,-44,-42,-44,52,-42,-44,52,-43,52,-44,]),'DIVISION':([2,23,26,34,46,47,76,77,78,104,115,124,125,128,130,152,213,277,],[-42,53,-44,-41,-31,-32,-42,-41,-44,-42,-44,53,-42,-44,53,-43,53,-44,]),'MULTIPLICACION':([2,23,26,34,46,47,76,77,78,104,115,124,125,128,130,152,213,277,],[-42,54,-44,-41,-31,-32,-42,-41,-44,-42,-44,54,-42,-44,54,-43,54,-44,]),'EXPONENCIACION':([2,23,26,34,46,47,76,77,78,104,115,124,125,128,130,152,213,277,],[-42,55,-44,-41,-31,-32,-42,-41,-44,-42,-44,55,-42,-44,55,-43,55,-44,]),'MODULO':([2,23,26,34,46,47,76,77,78,104,115,124,125,128,130,152,213,277,],[-42,56,-44,-41,-31,-32,-42,-41,-44,-42,-44,56,-42,-44,56,-43,56,-44,]),'DO':([24,25,27,28,32,35,46,47,60,68,69,70,71,72,73,74,77,78,84,95,102,104,105,106,107,108,109,110,111,112,113,114,119,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,143,149,151,152,153,154,155,156,157,158,159,160,170,182,190,197,199,210,212,213,214,215,216,234,235,244,245,259,269,],[-24,-25,-27,-22,-87,-102,-31,-32,142,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,172,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,177,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-99,-100,187,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,-79,-29,-49,-120,-119,-64,-59,-60,-61,-62,-63,-134,-135,-26,-118,-122,-121,]),'IGUAL_DOBLEP':([24,25,26,27,28,32,33,34,35,46,47,68,69,70,71,72,73,74,77,78,84,91,92,95,104,105,106,107,108,109,110,111,112,113,114,115,122,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,149,151,152,153,154,155,156,157,158,159,160,170,182,190,197,199,210,212,213,214,215,216,234,235,244,245,259,269,277,],[-24,-25,61,-27,-22,-87,61,61,-102,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,61,61,-80,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,61,183,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-99,-100,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,-79,-29,-49,-120,-119,-64,-59,-60,-61,-62,-63,-134,-135,-26,-118,-122,-121,61,]),'ELSE':([24,25,27,28,32,35,46,47,68,69,70,71,72,73,74,77,78,84,95,104,105,106,107,108,109,110,111,112,113,114,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,149,151,152,153,154,155,156,157,158,159,160,164,170,182,190,197,199,210,211,212,213,214,215,216,234,235,244,245,246,259,269,],[-24,-25,-27,-22,-87,-102,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-99,-100,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,198,-79,-29,-49,-120,-119,-64,198,-59,-60,-61,-62,-63,-134,-135,-26,-118,258,-122,-121,]),'ELSEIF':([24,25,27,28,32,35,46,47,68,69,70,71,72,73,74,77,78,84,95,104,105,106,107,108,109,110,111,112,113,114,124,125,126,127,128,129,130,131,132,133,134,136,137,138,139,149,151,152,153,154,155,156,157,158,159,160,164,170,182,190,197,199,210,211,212,213,214,215,216,234,235,244,245,246,259,269,],[-24,-25,-27,-22,-87,-102,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-142,-80,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-99,-100,-50,-85,-43,-86,-97,-23,-98,-101,-103,-108,-141,200,-79,-29,-49,-120,-119,-64,200,-59,-60,-61,-62,-63,-134,-135,-26,-118,200,-122,-121,]),'NEWLINE':([24,25,27,44,46,47,77,78,84,95,123,124,125,126,127,128,129,130,131,132,133,134,136,137,152,160,170,178,179,180,182,212,213,214,215,216,223,238,239,240,244,275,276,],[-24,-25,-27,120,-31,-32,-41,-44,-142,-80,-152,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-43,-141,-79,218,219,220,-29,-59,-60,-61,-62,-63,-153,-157,-158,-64,-26,219,220,]),'IGUAL':([26,115,117,181,277,],[58,174,176,221,221,]),'PUNTO':([26,35,128,],[60,82,185,]),'NAVE':([26,28,33,34,46,47,91,92,115,277,],[62,-22,62,62,-31,-32,62,62,62,62,]),'DIFERENTE':([26,28,33,34,46,47,91,92,115,277,],[63,-22,63,63,-31,-32,63,63,63,63,]),'MAYOR_QUE':([26,28,33,34,46,47,91,92,115,277,],[64,-22,64,64,-31,-32,64,64,64,64,]),'MENOR_QUE':([26,28,33,34,46,47,91,92,115,123,277,],[65,-22,65,65,-31,-32,65,65,65,184,65,]),'MENOR_IGUAL_QUE':([26,28,33,34,46,47,91,92,115,277,],[66,-22,66,66,-31,-32,66,66,66,66,]),'MAYOR_IGUAL_QUE':([26,28,33,34,46,47,91,92,115,277,],[67,-22,67,67,-31,-32,67,67,67,67,]),'PARENTESIS_DER':([27,28,46,47,75,76,77,78,79,124,125,127,138,139,152,154,155,156,157,169,202,203,205,226,248,267,],[-27,-22,-31,-32,151,152,-41,-44,153,-45,-42,-28,-99,-100,-43,-97,-23,-98,-101,204,230,-112,233,244,-113,270,]),'Y_SIGNO':([28,46,47,89,138,139,154,155,156,157,230,],[-22,-31,-32,166,-99,-100,-97,-23,-98,-101,166,]),'O_SIGNO':([28,46,47,89,138,139,154,155,156,157,230,],[-22,-31,-32,167,-99,-100,-97,-23,-98,-101,167,]),'VARIABLECLASE':([28,29,30,32,41,43,46,47,48,88,89,120,138,139,148,154,155,156,157,172,175,177,183,191,198,201,204,219,220,229,230,233,243,256,258,260,268,270,],[-22,73,-46,-47,117,117,-31,-32,117,117,-114,117,-99,-100,73,-97,-23,-98,-101,117,117,117,117,117,117,-116,117,117,117,117,-117,117,117,-151,117,-115,-150,117,]),'LLAVE_DER':([36,46,47,83,85,192,193,194,195,196,],[84,-31,-32,160,-147,-148,-143,-144,-146,-145,]),'EXCLAMACION_BAJO':([37,116,150,165,166,167,200,247,],[90,90,90,90,-95,-96,90,90,]),'CORCHETE_DER':([39,94,95,96,97,98,99,100,101,170,206,],[95,170,-80,-73,-74,-75,-76,-77,-78,-79,-72,]),'COMA':([46,47,69,70,71,72,73,74,85,95,96,97,98,99,100,101,170,193,194,195,196,203,242,],[-31,-32,148,-53,-54,-55,-56,-57,161,-80,171,-74,-75,-76,-77,-78,-79,-143,-144,-146,-145,231,255,]),'ID_CLASE':([49,184,],[123,223,]),'TRUE':([58,174,221,],[136,136,136,]),'FALSE':([58,174,221,],[137,137,137,]),'EACH':([60,147,],[143,189,]),'TO_F':([60,],[144,]),'CONCAT':([60,185,],[145,145,]),'SORT':([60,],[146,]),'FOR':([60,],[147,]),'CHOMP':([82,],[159,]),'ASIGNA_HASH':([86,87,],[162,163,]),'BARRA':([142,187,224,242,264,],[186,225,241,256,268,]),'INITIALIZE':([237,],[251,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,241,],[1,253,]),'operacionAritmetica':([0,31,41,43,48,50,58,88,172,174,175,176,177,183,191,198,204,221,229,233,241,243,258,270,],[2,76,104,104,104,125,125,104,104,125,104,125,104,104,104,104,104,125,104,104,2,104,104,104,]),'input_concatenacion':([0,58,174,176,221,241,],[3,134,134,216,134,3,]),'asignacion':([0,41,43,48,88,120,172,175,177,183,191,198,204,219,220,229,233,241,243,258,270,],[4,105,105,105,105,180,105,105,105,105,105,105,105,180,180,105,105,4,105,105,276,]),'impresion':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[5,106,106,106,106,106,106,106,106,106,106,106,106,106,5,106,106,106,]),'impresion_vacia':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[6,107,107,107,107,107,107,107,107,107,107,107,107,107,6,107,107,107,]),'expresiones_booleanas':([0,37,40,41,43,48,88,116,150,165,168,172,175,177,183,191,198,200,204,229,233,241,243,247,258,270,],[7,89,102,108,108,108,108,89,89,89,202,108,108,108,108,108,108,89,108,108,108,7,108,89,108,108,]),'solicitudDatosTeclado':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[8,109,109,109,109,109,109,109,109,109,109,109,109,109,8,109,109,109,]),'hashes':([0,41,43,48,58,88,172,174,175,176,177,183,191,198,204,221,229,233,241,243,258,270,],[9,110,110,110,131,110,110,131,110,214,110,110,110,110,110,131,110,110,9,110,110,110,]),'estructura_ifUnaLinea':([0,41,43,48,69,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[10,114,114,114,149,114,114,114,114,114,114,114,114,114,114,10,114,114,114,]),'estructura_if':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[11,111,111,111,111,111,111,111,111,111,111,111,111,111,11,111,111,111,]),'funciones':([0,241,270,],[12,12,274,]),'funcionesEstructuras':([0,241,],[13,13,]),'array':([0,39,58,171,174,176,221,241,],[14,100,133,100,133,215,133,14,]),'each_array':([0,241,],[15,15,]),'each_hash':([0,241,],[16,16,]),'sentencia_while':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[17,113,113,113,113,207,113,113,113,113,113,113,113,113,17,113,113,113,]),'sentencia_case':([0,241,],[18,18,]),'sentencias_when':([0,42,241,],[19,118,19,]),'sentencia_until':([0,241,],[20,20,]),'definicion_clase':([0,241,],[21,21,]),'entero_a_flotante':([0,241,],[22,22,]),'expresionNumerica':([0,31,41,43,48,50,58,88,172,174,175,176,177,183,191,198,204,221,229,233,241,243,258,270,],[23,23,23,23,23,124,130,23,23,130,23,213,23,23,23,23,23,130,23,23,23,23,23,23,]),'concatenacionSimpleCadena':([0,58,174,176,221,241,],[24,24,24,24,24,24,]),'concatenacion_funcion':([0,58,174,176,221,241,],[25,25,25,25,25,25,]),'valor_print':([0,41,43,48,88,172,175,177,183,191,198,204,229,233,241,243,258,270,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'valorSimbolo':([0,37,40,41,43,48,80,88,116,150,165,168,172,175,177,183,191,198,200,204,229,233,241,243,247,258,270,],[33,33,33,33,33,33,154,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'valorNumerico':([0,29,31,37,40,41,43,48,50,58,59,81,88,116,148,150,162,163,165,168,172,174,175,176,177,183,191,198,200,204,221,229,233,241,243,247,258,270,],[34,71,77,91,91,34,34,34,77,77,139,156,34,91,71,91,193,196,91,91,34,77,34,77,34,34,34,34,91,34,77,34,34,34,34,91,34,34,]),'sentencia_when':([0,42,103,241,],[42,42,173,42,]),'encabezadoClase':([0,241,],[44,44,]),'valorCadena':([0,57,58,121,174,176,188,221,241,],[45,126,45,182,45,45,226,45,45,]),'operadores':([23,124,130,213,],[50,50,50,50,]),'operadoresComparacion':([26,33,34,91,92,115,277,],[59,80,81,81,59,59,59,]),'valores':([29,148,],[68,190,]),'valor':([29,148,],[69,69,]),'elemento_hash':([36,],[83,]),'claveValor':([36,161,],[85,192,]),'condicionIf':([37,116,150,165,200,247,],[88,175,191,201,229,260,]),'elementos_array':([39,171,],[94,206,]),'elemento_array':([39,171,],[96,96,]),'declaracion':([41,43,48,88,172,175,177,183,191,198,204,229,233,243,258,270,],[103,119,122,164,208,211,217,222,227,228,232,246,250,257,266,273,]),'asignacion_clase':([41,43,48,88,120,172,175,177,183,191,198,204,219,220,229,233,243,258,270,],[112,112,112,112,179,112,112,112,112,112,112,112,179,179,112,112,112,112,275,]),'booleanos':([58,174,221,],[135,210,240,]),'funcionesArray':([60,],[140,]),'funcionesNumeros':([60,],[141,]),'funcionesFormatoImpresion':([82,],[158,]),'funcionesComparacion':([89,230,],[165,247,]),'cuerpoVariables':([120,219,220,270,],[178,238,239,271,]),'estructura_secundaria_if':([164,211,246,],[199,199,259,]),'argumentos':([169,231,262,],[205,248,267,]),'each_args_hash':([225,],[243,]),'cuerpo_each':([241,],[252,]),'vacio':([241,],[254,]),'cuerpoClase':([270,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',41),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',42),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',81),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',82),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',88),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',101),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',102),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',136),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',137),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',156),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',157),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',169),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',174),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',191),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',192),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',193),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',194),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',195),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',196),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',201),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',202),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',203),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',204),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',218),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',257),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',258),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',263),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',264),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',265),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',269),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',270),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',277),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',278),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',279),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',280),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',281),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',300),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',303),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',304),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',305),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',306),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',307),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',308),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',313),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',314),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',315),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',316),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',317),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',318),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',319),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',329),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',330),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',338),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',339),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',340),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',341),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',342),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',350),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',351),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',360),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',364),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',365),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',369),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',375),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',376),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',377),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',382),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',383),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',384),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',385),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',386),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',387),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',388),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',392),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',393),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',397),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',398),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',399),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',400),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',401),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',465),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',466),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',469),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',470),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',474),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',475),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',479),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',483),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',487),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',488),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',508),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',509),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',514),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',515),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',516),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',517),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',521),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',522),
  ('estructura_ifUnaLinea -> IF condicionIf declaracion END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',526),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',531),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',532),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',536),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',537),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',538),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',539),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',540),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',541),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',542),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',543),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',544),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',545),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',546),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',550),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',551),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',558),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',562),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',563),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',567),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',571),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',576),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',577),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',581),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',582),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',583),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',584),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',588),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',589),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',593),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',597),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',598),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',601),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',602),
  ('definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',11,'p_definicion_clase','sintactico.py',605),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',609),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',610),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',611),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',612),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',616),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',617),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',618),
]
