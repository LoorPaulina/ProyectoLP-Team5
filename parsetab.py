
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS IF IGUAL IGUAL_DOBLEP IN LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MULTIPLICACION NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHILE YIELD Y_SIGNOcuerpo : operacionSumavalorNumerico : FLOTANTE \n                     | ENTERO operadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION operacionSuma : valorNumerico operadores valorNumerico '
    
_lr_action_items = {'FLOTANTE':([0,6,7,8,9,10,11,],[4,4,-4,-5,-6,-7,-8,]),'ENTERO':([0,6,7,8,9,10,11,],[5,5,-4,-5,-6,-7,-8,]),'$end':([1,2,4,5,12,],[0,-1,-2,-3,-9,]),'MAS':([3,4,5,],[7,-2,-3,]),'MENOS':([3,4,5,],[8,-2,-3,]),'DIVISION':([3,4,5,],[9,-2,-3,]),'MULTIPLICACION':([3,4,5,],[10,-2,-3,]),'EXPONENCIACION':([3,4,5,],[11,-2,-3,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'operacionSuma':([0,],[2,]),'valorNumerico':([0,6,],[3,12,]),'operadores':([3,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionSuma','cuerpo',1,'p_cuerpo','sintactico.py',5),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',23),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',24),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',26),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',27),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',28),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',29),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',30),
  ('operacionSuma -> valorNumerico operadores valorNumerico','operacionSuma',3,'p_operacionSuma','sintactico.py',32),
]
