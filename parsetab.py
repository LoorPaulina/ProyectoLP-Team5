
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NEWLINE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanoselementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaracion ENDestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,28,29,30,31,32,37,38,39,40,41,42,44,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,82,83,90,91,118,122,123,140,141,150,152,157,158,159,160,164,168,169,170,171,172,174,175,177,178,179,180,186,189,191,194,201,203,204,207,222,223,224,228,232,233,234,236,244,246,250,258,259,261,263,265,271,273,],[26,-22,73,-46,79,-47,88,94,95,103,94,117,117,-31,-32,117,79,-35,-36,-37,-38,-39,-40,129,130,140,-89,-90,-91,-92,-93,-94,-95,158,160,117,-115,94,184,129,-100,-101,73,94,-98,-23,-99,-102,88,94,-96,-97,94,206,103,117,130,117,130,117,117,227,129,117,117,94,-117,117,184,184,130,245,117,-118,206,117,26,117,94,267,-152,117,-116,206,-151,280,]),'PRINT':([0,28,42,44,47,48,49,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[30,-22,30,30,-31,-32,30,30,-115,-100,-101,-98,-23,-99,-102,30,30,30,30,30,30,-117,30,30,-118,30,30,30,-152,30,-116,-151,30,]),'PUTS':([0,28,42,44,47,48,49,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[32,-22,32,32,-31,-32,32,32,-115,-100,-101,-98,-23,-99,-102,32,32,32,32,32,32,-117,32,32,-118,32,32,32,-152,32,-116,-151,32,]),'PRINTF':([0,28,42,44,47,48,49,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[33,-22,33,33,-31,-32,33,33,-115,-100,-101,-98,-23,-99,-102,33,33,33,33,33,33,-117,33,33,-118,33,33,33,-152,33,-116,-151,33,]),'GETS':([0,28,42,44,47,48,49,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[36,-22,36,36,-31,-32,36,36,-115,-100,-101,-98,-23,-99,-102,36,36,36,36,36,36,-117,36,36,-118,36,36,36,-152,36,-116,-151,36,]),'LLAVE_IZ':([0,28,42,44,47,48,49,59,90,91,140,141,157,158,159,160,175,177,178,179,180,186,194,201,204,207,224,232,233,236,244,246,259,261,263,271,273,],[37,-22,37,37,-31,-32,37,37,37,-115,-100,-101,-98,-23,-99,-102,37,37,37,37,37,37,37,37,-117,37,37,37,-118,37,37,37,-152,37,-116,-151,37,]),'IF':([0,28,42,44,47,48,49,70,71,72,73,74,75,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[38,-22,118,118,-31,-32,118,152,-53,-54,-55,-56,-57,118,-115,-100,-101,-98,-23,-99,-102,118,118,118,118,118,118,-117,118,118,-118,118,38,118,-152,118,-116,-151,118,]),'DEF':([0,221,244,273,],[39,240,39,39,]),'CORCHETE_IZ':([0,40,59,174,177,179,224,244,],[40,40,40,40,40,40,40,40,]),'WHILE':([0,28,42,44,47,48,49,90,91,140,141,157,158,159,160,175,178,180,186,194,201,204,207,232,233,236,244,246,259,261,263,271,273,],[41,-22,41,41,-31,-32,41,41,-115,-100,-101,-98,-23,-99,-102,41,41,41,41,41,41,-117,41,41,-118,41,41,41,-152,41,-116,-151,41,]),'CASE':([0,244,],[42,42,]),'UNTIL':([0,244,],[44,44,]),'PARENTESIS_IZ':([0,28,30,31,32,33,42,44,47,48,49,51,52,53,54,55,56,57,59,90,91,92,95,140,141,147,157,158,159,160,175,177,178,179,180,186,194,201,204,207,224,232,233,236,244,246,254,259,261,263,271,273,],[31,-22,76,31,80,81,31,31,-31,-32,31,31,-35,-36,-37,-38,-39,-40,31,31,-115,171,172,-100,-101,191,-98,-23,-99,-102,31,31,31,31,31,31,31,31,-117,31,31,31,-118,31,31,31,265,-152,31,-116,-151,31,]),'SIMBOLO':([0,28,29,30,32,38,41,42,44,47,48,49,59,62,63,64,65,66,67,68,82,90,91,118,140,141,150,152,157,158,159,160,168,169,170,171,175,177,178,180,186,194,201,203,204,207,224,232,233,236,244,246,250,259,261,263,271,273,],[28,-22,75,-46,-47,28,28,28,28,-31,-32,28,134,-89,-90,-91,-92,-93,-94,-95,28,28,-115,28,-100,-101,75,28,-98,-23,-99,-102,28,-96,-97,28,28,134,28,28,28,28,28,28,-117,28,134,28,-118,28,28,28,28,-152,28,-116,-151,28,]),'FLOTANTE':([0,28,29,30,31,32,38,40,41,42,44,47,48,49,51,52,53,54,55,56,57,59,60,62,63,64,65,66,67,68,83,90,91,118,140,141,150,152,157,158,159,160,165,166,168,169,170,171,174,175,177,178,179,180,186,194,201,203,204,207,224,232,233,236,244,246,250,259,261,263,271,273,],[47,-22,47,-46,47,-47,47,101,47,47,47,-31,-32,47,47,-35,-36,-37,-38,-39,-40,47,47,-89,-90,-91,-92,-93,-94,-95,47,47,-115,47,-100,-101,47,47,-98,-23,-99,-102,47,47,47,-96,-97,47,101,47,47,47,47,47,47,47,47,47,-117,47,47,47,-118,47,47,47,47,-152,47,-116,-151,47,]),'ENTERO':([0,28,29,30,31,32,38,40,41,42,44,47,48,49,51,52,53,54,55,56,57,59,60,62,63,64,65,66,67,68,83,90,91,118,140,141,150,152,157,158,159,160,165,166,168,169,170,171,174,175,177,178,179,180,186,194,201,203,204,207,224,232,233,236,244,246,250,259,261,263,271,273,],[48,-22,48,-46,48,-47,48,100,48,48,48,-31,-32,48,48,-35,-36,-37,-38,-39,-40,48,48,-89,-90,-91,-92,-93,-94,-95,48,48,-115,48,-100,-101,48,48,-98,-23,-99,-102,48,48,48,-96,-97,48,100,48,48,48,48,48,48,48,48,48,-117,48,48,48,-118,48,48,48,48,-152,48,-116,-151,48,]),'WHEN':([0,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,105,106,107,108,109,110,111,112,113,114,115,116,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,173,185,193,200,202,213,215,216,217,218,219,225,237,238,244,247,248,262,272,],[49,-24,-25,-27,-22,-87,-103,49,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,49,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-100,-101,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,-79,-29,-49,-121,-120,-64,-59,-60,-61,-62,-63,-140,-135,-136,49,-26,-119,-123,-122,]),'CLASS':([0,244,],[50,50,]),'CADENA':([0,29,30,32,37,40,58,59,123,150,164,165,166,174,177,179,191,224,244,],[27,71,-46,-47,89,99,27,131,27,71,89,197,198,99,131,215,27,131,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,120,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,148,151,153,154,155,156,157,158,159,160,161,162,163,173,185,192,193,200,202,212,213,215,216,217,218,219,225,237,238,239,247,248,252,262,264,266,268,272,281,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-87,-103,-138,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-139,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-51,-52,-100,-101,-111,-112,-34,-107,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,-79,-29,-108,-49,-121,-120,-137,-64,-59,-60,-61,-62,-63,-140,-135,-136,-141,-26,-119,-105,-123,-106,-81,-150,-122,-155,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,120,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,148,151,153,154,155,156,157,158,159,160,161,162,163,167,173,176,182,183,185,192,193,200,202,210,211,212,213,214,215,216,217,218,219,220,225,230,231,235,237,238,239,241,242,243,244,247,248,252,253,255,256,257,260,262,264,266,268,269,272,274,275,276,277,278,279,281,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-87,-103,-138,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-139,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-51,-52,-100,-101,-111,-112,-34,-107,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,200,-79,212,-156,-157,-29,-108,-49,-121,-120,237,238,-137,-64,200,-59,-60,-61,-62,-63,239,-140,200,248,252,-135,-136,-141,-158,-159,-64,-84,-26,-119,-105,264,266,-82,-83,268,-123,-106,-81,-150,272,-122,-160,281,-161,-162,-132,-125,-155,]),'MAS':([2,23,24,26,27,35,46,47,48,77,78,79,106,117,126,127,128,129,130,131,132,154,185,215,216,280,],[-42,52,58,-28,-27,-41,123,-31,-32,-42,-41,-44,-42,-44,52,-42,-30,-28,-28,-27,52,-43,-29,-27,52,-44,]),'MENOS':([2,23,26,35,47,48,77,78,79,106,117,126,127,130,132,154,216,280,],[-42,53,-44,-41,-31,-32,-42,-41,-44,-42,-44,53,-42,-44,53,-43,53,-44,]),'DIVISION':([2,23,26,35,47,48,77,78,79,106,117,126,127,130,132,154,216,280,],[-42,54,-44,-41,-31,-32,-42,-41,-44,-42,-44,54,-42,-44,54,-43,54,-44,]),'MULTIPLICACION':([2,23,26,35,47,48,77,78,79,106,117,126,127,130,132,154,216,280,],[-42,55,-44,-41,-31,-32,-42,-41,-44,-42,-44,55,-42,-44,55,-43,55,-44,]),'EXPONENCIACION':([2,23,26,35,47,48,77,78,79,106,117,126,127,130,132,154,216,280,],[-42,56,-44,-41,-31,-32,-42,-41,-44,-42,-44,56,-42,-44,56,-43,56,-44,]),'MODULO':([2,23,26,35,47,48,77,78,79,106,117,126,127,130,132,154,216,280,],[-42,57,-44,-41,-31,-32,-42,-41,-44,-42,-44,57,-42,-44,57,-43,57,-44,]),'DO':([24,25,27,28,32,36,47,48,61,69,70,71,72,73,74,75,78,79,86,97,104,106,107,108,109,110,111,112,113,114,115,116,121,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,145,151,153,154,155,156,157,158,159,160,161,162,163,173,185,193,200,202,213,215,216,217,218,219,237,238,247,248,262,272,],[-24,-25,-27,-22,-87,-103,-31,-32,144,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,175,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,180,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-100,-101,190,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,-79,-29,-49,-121,-120,-64,-59,-60,-61,-62,-63,-135,-136,-26,-119,-123,-122,]),'IGUAL_DOBLEP':([24,25,26,27,28,32,34,35,36,47,48,69,70,71,72,73,74,75,78,79,86,93,94,97,106,107,108,109,110,111,112,113,114,115,116,117,124,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,173,185,193,200,202,213,215,216,217,218,219,237,238,247,248,262,272,280,],[-24,-25,62,-27,-22,-87,62,62,-103,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,62,62,-80,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,62,186,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-100,-101,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,-79,-29,-49,-121,-120,-64,-59,-60,-61,-62,-63,-135,-136,-26,-119,-123,-122,62,]),'ELSE':([24,25,27,28,32,36,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,167,173,185,193,200,202,213,214,215,216,217,218,219,237,238,247,248,249,262,272,],[-24,-25,-27,-22,-87,-103,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-100,-101,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,201,-79,-29,-49,-121,-120,-64,201,-59,-60,-61,-62,-63,-135,-136,-26,-119,261,-123,-122,]),'ELSEIF':([24,25,27,28,32,36,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,126,127,128,129,130,131,132,133,134,135,136,138,139,140,141,151,153,154,155,156,157,158,159,160,161,162,163,167,173,185,193,200,202,213,214,215,216,217,218,219,237,238,247,248,249,262,272,],[-24,-25,-27,-22,-87,-103,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-143,-80,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-100,-101,-50,-85,-43,-86,-88,-98,-23,-99,-102,-104,-109,-142,203,-79,-29,-49,-121,-120,-64,203,-59,-60,-61,-62,-63,-135,-136,-26,-119,203,-123,-122,]),'NEWLINE':([24,25,27,45,47,48,78,79,86,97,125,126,127,128,129,130,131,132,133,134,135,136,138,139,154,163,173,181,182,183,185,215,216,217,218,219,226,241,242,243,247,278,279,],[-24,-25,-27,122,-31,-32,-41,-44,-143,-80,-153,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-51,-52,-43,-142,-79,221,222,223,-29,-59,-60,-61,-62,-63,-154,-158,-159,-64,-26,222,223,]),'IGUAL':([26,117,119,184,280,],[59,177,179,224,224,]),'PUNTO':([26,36,130,],[61,84,188,]),'NAVE':([26,28,34,35,47,48,93,94,117,280,],[63,-22,63,63,-31,-32,63,63,63,63,]),'DIFERENTE':([26,28,34,35,47,48,93,94,117,280,],[64,-22,64,64,-31,-32,64,64,64,64,]),'MAYOR_QUE':([26,28,34,35,47,48,93,94,117,280,],[65,-22,65,65,-31,-32,65,65,65,65,]),'MENOR_QUE':([26,28,34,35,47,48,93,94,117,125,280,],[66,-22,66,66,-31,-32,66,66,66,187,66,]),'MENOR_IGUAL_QUE':([26,28,34,35,47,48,93,94,117,280,],[67,-22,67,67,-31,-32,67,67,67,67,]),'MAYOR_IGUAL_QUE':([26,28,34,35,47,48,93,94,117,280,],[68,-22,68,68,-31,-32,68,68,68,68,]),'PARENTESIS_DER':([27,28,47,48,76,77,78,79,80,81,126,127,129,140,141,154,157,158,159,160,172,205,206,208,229,251,270,],[-27,-22,-31,-32,153,154,-41,-44,155,156,-45,-42,-28,-100,-101,-43,-98,-23,-99,-102,207,233,-113,236,247,-114,273,]),'Y_SIGNO':([28,47,48,91,140,141,157,158,159,160,233,],[-22,-31,-32,169,-100,-101,-98,-23,-99,-102,169,]),'O_SIGNO':([28,47,48,91,140,141,157,158,159,160,233,],[-22,-31,-32,170,-100,-101,-98,-23,-99,-102,170,]),'VARIABLECLASE':([28,29,30,32,42,44,47,48,49,90,91,122,140,141,150,157,158,159,160,175,178,180,186,194,201,204,207,222,223,232,233,236,246,259,261,263,271,273,],[-22,74,-46,-47,119,119,-31,-32,119,119,-115,119,-100,-101,74,-98,-23,-99,-102,119,119,119,119,119,119,-117,119,119,119,119,-118,119,119,-152,119,-116,-151,119,]),'LLAVE_DER':([37,47,48,85,87,195,196,197,198,199,],[86,-31,-32,163,-148,-149,-144,-145,-147,-146,]),'EXCLAMACION_BAJO':([38,118,152,168,169,170,203,250,],[92,92,92,92,-96,-97,92,92,]),'CORCHETE_DER':([40,96,97,98,99,100,101,102,103,173,209,],[97,173,-80,-73,-74,-75,-76,-77,-78,-79,-72,]),'COMA':([47,48,70,71,72,73,74,75,87,97,98,99,100,101,102,103,173,196,197,198,199,206,245,],[-31,-32,150,-53,-54,-55,-56,-57,164,-80,174,-74,-75,-76,-77,-78,-79,-144,-145,-147,-146,234,258,]),'ID_CLASE':([50,187,],[125,226,]),'TRUE':([59,177,224,],[138,138,138,]),'FALSE':([59,177,224,],[139,139,139,]),'EACH':([61,149,],[145,192,]),'TO_F':([61,],[146,]),'CONCAT':([61,188,],[147,147,]),'SORT':([61,],[148,]),'FOR':([61,],[149,]),'CHOMP':([84,],[162,]),'ASIGNA_HASH':([88,89,],[165,166,]),'BARRA':([144,190,227,245,267,],[189,228,244,259,271,]),'INITIALIZE':([240,],[254,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,244,],[1,256,]),'operacionAritmetica':([0,31,42,44,49,51,59,90,175,177,178,179,180,186,194,201,207,224,232,236,244,246,261,273,],[2,77,106,106,106,127,127,106,106,127,106,127,106,106,106,106,106,127,106,106,2,106,106,106,]),'input_concatenacion':([0,59,177,179,224,244,],[3,136,136,219,136,3,]),'asignacion':([0,42,44,49,90,122,175,178,180,186,194,201,207,222,223,232,236,244,246,261,273,],[4,107,107,107,107,183,107,107,107,107,107,107,107,183,183,107,107,4,107,107,279,]),'impresion':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[5,108,108,108,108,108,108,108,108,108,108,108,108,108,5,108,108,108,]),'impresion_vacia':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[6,109,109,109,109,109,109,109,109,109,109,109,109,109,6,109,109,109,]),'expresiones_booleanas':([0,38,41,42,44,49,90,118,152,168,171,175,178,180,186,194,201,203,207,232,236,244,246,250,261,273,],[7,91,104,110,110,110,110,91,91,91,205,110,110,110,110,110,110,91,110,110,110,7,110,91,110,110,]),'solicitudDatosTeclado':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[8,111,111,111,111,111,111,111,111,111,111,111,111,111,8,111,111,111,]),'hashes':([0,42,44,49,59,90,175,177,178,179,180,186,194,201,207,224,232,236,244,246,261,273,],[9,112,112,112,133,112,112,133,112,217,112,112,112,112,112,133,112,112,9,112,112,112,]),'estructura_ifUnaLinea':([0,42,44,49,70,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[10,116,116,116,151,116,116,116,116,116,116,116,116,116,116,10,116,116,116,]),'estructura_if':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[11,113,113,113,113,113,113,113,113,113,113,113,113,113,11,113,113,113,]),'funciones':([0,244,273,],[12,12,277,]),'funcionesEstructuras':([0,244,],[13,13,]),'array':([0,40,59,174,177,179,224,244,],[14,102,135,102,135,218,135,14,]),'each_array':([0,244,],[15,15,]),'each_hash':([0,244,],[16,16,]),'sentencia_while':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[17,115,115,115,115,210,115,115,115,115,115,115,115,115,17,115,115,115,]),'sentencia_case':([0,244,],[18,18,]),'sentencias_when':([0,43,244,],[19,120,19,]),'sentencia_until':([0,244,],[20,20,]),'definicion_clase':([0,244,],[21,21,]),'entero_a_flotante':([0,244,],[22,22,]),'expresionNumerica':([0,31,42,44,49,51,59,90,175,177,178,179,180,186,194,201,207,224,232,236,244,246,261,273,],[23,23,23,23,23,126,132,23,23,132,23,216,23,23,23,23,23,132,23,23,23,23,23,23,]),'concatenacionSimpleCadena':([0,59,177,179,224,244,],[24,24,24,24,24,24,]),'concatenacion_funcion':([0,59,177,179,224,244,],[25,25,25,25,25,25,]),'valor_print':([0,42,44,49,90,175,178,180,186,194,201,207,232,236,244,246,261,273,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'valorSimbolo':([0,38,41,42,44,49,82,90,118,152,168,171,175,178,180,186,194,201,203,207,232,236,244,246,250,261,273,],[34,34,34,34,34,34,157,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'valorNumerico':([0,29,31,38,41,42,44,49,51,59,60,83,90,118,150,152,165,166,168,171,175,177,178,179,180,186,194,201,203,207,224,232,236,244,246,250,261,273,],[35,72,78,93,93,35,35,35,78,78,141,159,35,93,72,93,196,199,93,93,35,78,35,78,35,35,35,35,93,35,78,35,35,35,35,93,35,35,]),'sentencia_when':([0,43,105,244,],[43,43,176,43,]),'encabezadoClase':([0,244,],[45,45,]),'valorCadena':([0,58,59,123,177,179,191,224,244,],[46,128,46,185,46,46,229,46,46,]),'operadores':([23,126,132,216,],[51,51,51,51,]),'operadoresComparacion':([26,34,35,93,94,117,280,],[60,82,83,83,60,60,60,]),'valores':([29,150,],[69,193,]),'valor':([29,150,],[70,70,]),'elemento_hash':([37,],[85,]),'claveValor':([37,164,],[87,195,]),'condicionIf':([38,118,152,168,203,250,],[90,178,194,204,232,263,]),'elementos_array':([40,174,],[96,209,]),'elemento_array':([40,174,],[98,98,]),'declaracion':([42,44,49,90,175,178,180,186,194,201,207,232,236,246,261,273,],[105,121,124,167,211,214,220,225,230,231,235,249,253,260,269,276,]),'asignacion_clase':([42,44,49,90,122,175,178,180,186,194,201,207,222,223,232,236,246,261,273,],[114,114,114,114,182,114,114,114,114,114,114,114,182,182,114,114,114,114,278,]),'booleanos':([59,177,224,],[137,213,243,]),'funcionesArray':([61,],[142,]),'funcionesNumeros':([61,],[143,]),'funcionesFormatoImpresion':([84,],[161,]),'funcionesComparacion':([91,233,],[168,250,]),'cuerpoVariables':([122,222,223,273,],[181,241,242,274,]),'estructura_secundaria_if':([167,214,249,],[202,202,262,]),'argumentos':([172,234,265,],[208,251,270,]),'each_args_hash':([228,],[246,]),'cuerpo_each':([244,],[255,]),'vacio':([244,],[257,]),'cuerpoClase':([273,],[275,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',41),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',42),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',81),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',82),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',88),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',101),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',102),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',136),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',137),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',156),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',157),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',169),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',174),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',191),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',192),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',193),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',194),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',195),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',196),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',201),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',202),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',203),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',204),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',218),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',257),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',258),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',263),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',264),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',265),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',269),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',270),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',277),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',278),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',279),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',280),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',281),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',300),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',303),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',304),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',305),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',306),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',307),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',308),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',313),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',314),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',315),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',316),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',317),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',318),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',319),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',329),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',330),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',338),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',339),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',340),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',341),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',342),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',350),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',351),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',360),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',364),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',365),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',369),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',375),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',376),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',377),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',378),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',383),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',384),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',385),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',386),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',387),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',388),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',389),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',393),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',394),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',398),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',399),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',400),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',401),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',402),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',466),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',467),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',470),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',471),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',475),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',476),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',480),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',484),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',488),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',489),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',509),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',510),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',515),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',516),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',517),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',518),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',522),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',523),
  ('estructura_ifUnaLinea -> IF condicionIf declaracion END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',527),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',532),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',533),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',537),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',538),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',539),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',540),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',541),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',542),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',543),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',544),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',545),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',546),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',547),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',551),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',552),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',559),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',563),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',564),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',568),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',572),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',577),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',578),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',582),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',583),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',584),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',585),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',589),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',590),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',594),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',598),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',599),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',602),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',603),
  ('definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',11,'p_definicion_clase','sintactico.py',606),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',610),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',611),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',612),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',613),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',617),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',618),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',619),
]
