
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencia_until\n              | definicion_clasevalorNumerico : FLOTANTE \n                     | ENTERO\n                     | VARIABLEsoloEnteros : ENTEROoperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineavalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASEimpresion : valor_print valoresasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL arrayelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                     sentencia_while : WHILE declaracion DO sentencia_while END\n                      | WHILE declaracion DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                 | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER'
    
_lr_action_items = {'VARIABLE':([0,22,23,24,25,28,30,31,32,33,36,37,38,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,64,71,78,79,111,112,120,122,127,128,129,133,134,136,137,138,140,142,143,145,146,148,157,159,160,172,175,176,181,183,184,186,196,197,199,206,],[21,61,-33,69,-34,-20,77,81,83,91,101,101,101,-19,69,-23,-24,-25,-26,-27,-28,69,111,-66,-67,-68,-69,-70,-71,69,128,101,-91,-21,-77,61,81,-74,-21,-75,77,69,81,-72,-73,161,91,101,101,101,171,101,81,-92,185,101,161,101,161,21,101,203,-121,101,-120,]),'PRINT':([0,28,36,37,38,40,78,79,111,112,127,128,129,143,145,146,157,160,175,181,184,186,197,199,206,],[23,-20,23,23,23,-19,23,-91,-21,-77,-74,-21,-75,23,23,23,23,-92,23,23,23,23,-121,23,-120,]),'PUTS':([0,28,36,37,38,40,78,79,111,112,127,128,129,143,145,146,157,160,175,181,184,186,197,199,206,],[25,-20,25,25,25,-19,25,-91,-21,-77,-74,-21,-75,25,25,25,25,-92,25,25,25,25,-121,25,-120,]),'GETS':([0,28,36,37,38,40,78,79,111,112,127,128,129,143,145,146,157,160,175,181,184,186,197,199,206,],[29,-20,29,29,29,-19,29,-91,-21,-77,-74,-21,-75,29,29,29,29,-92,29,29,29,29,-121,29,-120,]),'LLAVE_IZ':([0,28,36,37,38,40,48,78,79,111,112,127,128,129,143,145,146,157,160,175,181,184,186,197,199,206,],[30,-20,30,30,30,-19,30,30,-91,-21,-77,-74,-21,-75,30,30,30,30,-92,30,30,30,30,-121,30,-120,]),'IF':([0,28,36,37,38,40,58,59,60,61,62,78,79,111,112,127,128,129,143,145,146,157,160,175,181,184,186,197,199,206,],[31,-20,31,31,31,-19,122,-38,-39,-21,-41,31,-91,-21,-77,-74,-21,-75,31,31,31,31,-92,31,31,31,31,-121,31,-120,]),'DEF':([0,104,184,],[32,147,32,]),'CORCHETE_IZ':([0,33,48,142,184,],[33,33,33,33,33,]),'COMENTARIO':([0,184,],[34,34,]),'COMENTARIO_MULTI':([0,184,],[35,35,]),'WHILE':([0,143,184,],[36,36,36,]),'CASE':([0,184,],[37,37,]),'UNTIL':([0,184,],[38,38,]),'CLASS':([0,184,],[39,39,]),'PARENTESIS_IZ':([0,23,24,25,28,31,36,37,38,40,41,42,43,44,45,46,47,48,64,78,79,83,111,112,122,127,128,129,136,137,138,143,145,146,157,159,160,170,175,181,184,186,197,199,206,],[24,63,64,70,-20,82,24,24,24,-19,64,-23,-24,-25,-26,-27,-28,64,64,24,-91,140,-21,-77,82,-74,-21,-75,82,-72,-73,24,24,24,24,82,-92,183,24,24,24,24,-121,24,-120,]),'FLOTANTE':([0,22,23,24,25,28,31,33,36,37,38,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,64,71,78,79,111,112,120,122,127,128,129,134,136,137,138,142,143,145,146,157,159,160,175,181,184,186,197,199,206,],[40,40,-33,40,-34,-20,40,89,40,40,40,-19,40,-23,-24,-25,-26,-27,-28,40,40,-66,-67,-68,-69,-70,-71,40,40,40,-91,-21,-77,40,40,-74,-21,-75,40,40,-72,-73,89,40,40,40,40,40,-92,40,40,40,40,-121,40,-120,]),'ENTERO':([0,22,23,24,25,28,31,33,36,37,38,40,41,42,43,44,45,46,47,48,49,51,52,53,54,55,56,64,71,72,78,79,82,111,112,120,122,125,127,128,129,134,136,137,138,142,143,145,146,157,159,160,175,181,184,186,197,199,206,],[28,28,-33,67,-34,-20,28,88,28,28,28,-19,28,-23,-24,-25,-26,-27,-28,28,28,-66,-67,-68,-69,-70,-71,28,28,129,28,-91,139,-21,-77,28,28,139,-74,-21,-75,28,28,-72,-73,88,28,28,28,28,28,-92,28,28,28,28,-121,28,-120,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,25,28,29,34,35,40,57,58,59,60,61,62,68,69,75,79,85,105,106,107,108,109,110,111,112,113,114,117,119,121,123,124,126,127,128,129,130,131,132,141,150,151,152,158,160,167,177,179,180,182,187,190,200,201,202,204,207,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-65,-20,-79,-61,-62,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-32,-30,-43,-44,-45,-46,-21,-77,-87,-88,-83,-86,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,-54,-84,-36,-95,-94,-92,-108,-81,-107,-106,-112,-93,-82,-97,-122,-56,-119,-96,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,25,28,29,34,35,40,57,58,59,60,61,62,68,69,75,79,85,93,94,95,96,97,98,99,100,105,106,107,108,109,110,111,112,113,114,117,119,121,123,124,126,127,128,129,130,131,132,141,144,150,151,152,158,160,162,165,166,167,169,174,177,178,179,180,182,184,187,190,191,193,194,195,198,200,201,202,204,205,207,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-65,-20,-79,-61,-62,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-98,-99,-100,-101,-102,-103,-104,-105,-32,-30,-43,-44,-45,-46,-21,-77,-87,-88,-83,-86,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,-54,167,-84,-36,-95,-94,-92,177,179,180,-108,182,187,-81,190,-107,-106,-112,-59,-93,-82,-111,202,-57,-58,204,-97,-122,-56,-119,207,-96,]),'MAS':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,42,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,42,-30,42,-31,]),'MENOS':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,43,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,43,-30,43,-31,]),'DIVISION':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,44,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,44,-30,44,-31,]),'MULTIPLICACION':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,45,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,45,-30,45,-31,]),'EXPONENCIACION':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,46,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,46,-30,46,-31,]),'MODULO':([2,20,21,26,28,40,65,67,68,69,93,101,105,106,108,124,],[-30,47,-21,-29,-20,-19,-30,-20,-29,-21,-30,-21,47,-30,47,-31,]),'IGUAL':([21,101,],[48,48,]),'PUNTO':([21,29,],[50,73,]),'DOBLE_IGUAL':([21,26,28,40,80,81,101,],[51,51,-20,-19,51,51,51,]),'DIFERENTE':([21,26,28,40,80,81,101,],[52,52,-20,-19,52,52,52,]),'MAYOR_QUE':([21,26,28,40,80,81,101,],[53,53,-20,-19,53,53,53,]),'MENOR_QUE':([21,26,28,40,80,81,101,],[54,54,-20,-19,54,54,54,]),'MENOR_IGUAL_QUE':([21,26,28,40,80,81,101,],[55,55,-20,-19,55,55,55,]),'MAYOR_IGUAL_QUE':([21,26,28,40,80,81,101,],[56,56,-20,-19,56,56,56,]),'CADENA':([22,23,25,33,48,120,134,142,],[59,-33,-34,87,107,59,156,87,]),'VARIABLECLASE':([22,23,25,120,],[62,-33,-34,62,]),'DO':([25,28,29,40,50,57,58,59,60,61,62,68,69,75,79,85,92,93,94,95,96,97,98,99,100,103,105,106,107,108,109,110,111,112,116,121,123,124,126,127,128,129,130,131,132,141,151,152,158,160,187,200,207,],[-65,-20,-79,-19,115,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,143,-98,-99,-100,-101,-102,-103,-104,-105,146,-32,-30,-43,-44,-45,-46,-21,-77,149,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,-54,-36,-95,-94,-92,-93,-97,-96,]),'WHEN':([25,28,29,40,57,58,59,60,61,62,68,69,75,79,85,93,94,95,96,97,98,99,100,102,105,106,107,108,109,110,111,112,121,123,124,126,127,128,129,130,131,132,141,151,152,158,160,187,200,207,],[-65,-20,-79,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-98,-99,-100,-101,-102,-103,-104,-105,145,-32,-30,-43,-44,-45,-46,-21,-77,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,-54,-36,-95,-94,-92,-93,-97,-96,]),'ELSE':([25,28,29,40,57,58,59,60,61,62,68,69,75,79,85,93,94,95,96,97,98,99,100,105,106,107,108,109,110,111,112,121,123,124,126,127,128,129,130,131,132,135,141,151,152,158,160,187,188,200,207,],[-65,-20,-79,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-98,-99,-100,-101,-102,-103,-104,-105,-32,-30,-43,-44,-45,-46,-21,-77,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,157,-54,-36,-95,-94,-92,-93,199,-97,-96,]),'ELSEIF':([25,28,29,40,57,58,59,60,61,62,68,69,75,79,85,93,94,95,96,97,98,99,100,105,106,107,108,109,110,111,112,121,123,124,126,127,128,129,130,131,132,135,141,151,152,158,160,187,188,200,207,],[-65,-20,-79,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-98,-99,-100,-101,-102,-103,-104,-105,-32,-30,-43,-44,-45,-46,-21,-77,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,159,-54,-36,-95,-94,-92,-93,159,-97,-96,]),'IGUAL_DOBLEP':([25,28,29,40,57,58,59,60,61,62,68,69,75,79,85,93,94,95,96,97,98,99,100,105,106,107,108,109,110,111,112,121,123,124,126,127,128,129,130,131,132,141,151,152,158,160,168,187,200,207,],[-65,-20,-79,-19,-42,-35,-38,-39,-21,-41,-29,-21,-114,-91,-55,-98,-99,-100,-101,-102,-103,-104,-105,-32,-30,-43,-44,-45,-46,-21,-77,-37,-63,-31,-64,-74,-21,-75,-80,-85,-113,-54,-36,-95,-94,-92,181,-93,-97,-96,]),'TRIPLE_IGUAL':([27,173,],[72,-60,]),'COMA':([28,40,58,59,60,61,62,69,76,85,86,87,88,89,90,91,141,155,156,161,185,],[-20,-19,120,-38,-39,-21,-41,-21,133,-55,142,-49,-50,-51,-52,-53,-54,-115,-116,176,196,]),'PARENTESIS_DER':([28,40,63,65,68,69,70,105,106,124,139,140,153,161,163,189,192,],[-20,-19,123,124,-29,-21,126,-32,-30,-31,-22,162,173,-89,178,-90,201,]),'AND':([28,40,79,111,112,127,128,129,],[-20,-19,137,-21,-77,-74,-21,-75,]),'OR':([28,40,79,111,112,127,128,129,],[-20,-19,138,-21,-77,-74,-21,-75,]),'LLAVE_DER':([28,30,40,69,74,76,154,155,156,],[-20,75,-19,-21,132,-117,-118,-115,-116,]),'CORCHETE_DER':([33,84,85,86,87,88,89,90,91,141,164,],[85,141,-55,-48,-49,-50,-51,-52,-53,-54,-47,]),'ID_CLASE':([39,],[104,]),'EACH':([50,118,],[116,150,]),'SORT':([50,],[117,]),'FOR':([50,],[118,]),'TO_F':([50,],[119,]),'TRES_PUNTOS':([66,67,139,],[125,-22,-22,]),'CHOMP':([73,],[131,]),'ASIGNA_HASH':([77,],[134,]),'BARRA':([115,149,171,185,203,],[148,172,184,197,206,]),'INITIALIZE':([147,],[170,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,184,],[1,194,]),'operacionAritmetica':([0,24,36,37,38,41,48,64,78,143,145,146,157,175,181,184,186,199,],[2,65,93,93,93,106,106,65,93,93,93,93,93,93,93,2,93,93,]),'asignacion':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[3,94,94,94,94,94,94,94,94,94,94,3,94,94,]),'impresion':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[4,95,95,95,95,95,95,95,95,95,95,4,95,95,]),'impresion_vacia':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[5,96,96,96,96,96,96,96,96,96,96,5,96,96,]),'expresiones_booleanas':([0,31,36,37,38,78,122,136,143,145,146,157,159,175,181,184,186,199,],[6,79,97,97,97,97,79,160,97,97,97,97,79,97,97,6,97,97,]),'solicitudDatosTeclado':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[7,98,98,98,98,98,98,98,98,98,98,7,98,98,]),'hashes':([0,36,37,38,48,78,143,145,146,157,175,181,184,186,199,],[8,99,99,99,109,99,99,99,99,99,99,99,8,99,99,]),'estructura_if':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[9,100,100,100,100,100,100,100,100,100,100,9,100,100,]),'funciones':([0,184,],[10,10,]),'funcionesEstructuras':([0,184,],[11,11,]),'array':([0,33,48,142,184,],[12,90,110,90,12,]),'each_array':([0,184,],[13,13,]),'comentarios':([0,184,],[14,14,]),'each_hash':([0,184,],[15,15,]),'sentencia_while':([0,143,184,],[16,166,16,]),'sentencia_case':([0,184,],[17,17,]),'sentencia_until':([0,184,],[18,18,]),'definicion_clase':([0,184,],[19,19,]),'expresionNumerica':([0,24,36,37,38,41,48,64,78,143,145,146,157,175,181,184,186,199,],[20,20,20,20,20,105,108,20,20,20,20,20,20,20,20,20,20,20,]),'valor_print':([0,36,37,38,78,143,145,146,157,175,181,184,186,199,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'valorNumerico':([0,22,24,31,36,37,38,41,48,49,64,71,78,120,122,134,136,143,145,146,157,159,175,181,184,186,199,],[26,60,68,80,26,26,26,68,68,112,68,127,26,60,80,155,80,26,26,26,26,80,26,26,26,26,26,]),'rangos':([0,31,36,37,38,78,122,136,143,145,146,157,159,175,181,184,186,199,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'operadores':([20,105,108,],[41,41,41,]),'operadoresComparacion':([21,26,80,81,101,],[49,71,71,49,49,]),'valores':([22,120,],[57,151,]),'valor':([22,120,],[58,58,]),'soloEnteros':([24,82,125,],[66,66,153,]),'elemento_hash':([30,],[74,]),'claveValor':([30,133,],[76,154,]),'condicionIf':([31,122,159,],[78,152,175,]),'elementos_array':([33,142,],[84,164,]),'elemento_array':([33,142,],[86,86,]),'declaracion':([36,37,38,78,143,145,146,157,175,181,186,199,],[92,102,103,135,165,168,169,174,188,191,198,205,]),'funcionesArray':([50,],[113,]),'funcionesNumeros':([50,],[114,]),'estructura_ifUnaLinea':([58,],[121,]),'funcionesFormatoImpresion':([73,],[130,]),'funcionesComparacion':([79,],[136,]),'sentencia_when':([102,],[144,]),'estructura_secundaria_if':([135,188,],[158,200,]),'argumentos':([140,176,183,],[163,189,192,]),'each_args_hash':([172,],[186,]),'cuerpo_each':([184,],[193,]),'vacio':([184,],[195,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',35),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',36),
  ('valorNumerico -> VARIABLE','valorNumerico',1,'p_valorNumerico','sintactico.py',37),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',51),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',55),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',56),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',57),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',58),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',59),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',60),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',64),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',65),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',66),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',73),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',93),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',94),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',97),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',98),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',99),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',101),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',102),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',103),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',104),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',107),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',115),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',116),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',117),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',118),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',123),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',124),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',131),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',132),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',133),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',134),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',135),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',142),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',143),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',151),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',153),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',154),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',156),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',161),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',165),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',166),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',169),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',170),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',171),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',175),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',176),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',177),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',178),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',179),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',180),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',183),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',184),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',187),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',188),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',189),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',190),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',191),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',194),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',195),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END','funciones',5,'p_funciones','sintactico.py',199),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END','funciones',6,'p_funciones','sintactico.py',200),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',203),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',204),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',207),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',210),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',213),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',214),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',217),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',218),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',222),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',223),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',226),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',227),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',230),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',233),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',234),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',236),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',237),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',238),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',239),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',240),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',241),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',242),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',243),
  ('sentencia_while -> WHILE declaracion DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',249),
  ('sentencia_while -> WHILE declaracion DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',250),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',253),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',256),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',257),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',260),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',263),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',267),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',268),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',271),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',272),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',275),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',276),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',280),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',283),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',284),
  ('definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER','definicion_clase',7,'p_definicion_clase','sintactico.py',287),
]
