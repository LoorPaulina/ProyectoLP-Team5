
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEWLINE NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanoselementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : IGUAL_DOBLEP\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | rangos TRIPLE_IGUAL ENTERO\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaracion ENDestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,29,30,31,32,33,37,39,40,41,42,45,46,48,51,52,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,79,86,87,95,96,123,127,128,145,146,155,157,162,163,164,165,166,170,174,175,176,178,180,181,183,184,185,186,192,195,197,200,208,210,211,213,228,229,230,234,239,240,242,250,252,263,264,266,269,275,277,],[27,-23,75,-47,84,-48,-33,93,98,100,108,98,122,122,-32,122,84,-36,-37,-38,-39,-40,-41,134,135,145,-92,-93,-94,-95,-96,-97,84,163,165,122,-118,98,190,134,-103,-104,75,98,-100,-24,-101,-105,-102,93,98,-98,-99,212,108,122,135,122,135,122,122,233,134,122,122,98,-119,122,190,190,135,251,122,212,122,27,122,271,-153,122,212,-152,284,]),'PRINT':([0,29,37,46,48,51,52,95,96,145,146,162,163,164,165,166,181,184,186,192,200,208,211,213,239,242,250,252,264,266,275,277,],[31,-23,-33,31,31,-32,31,31,-118,-103,-104,-100,-24,-101,-105,-102,31,31,31,31,31,31,-119,31,31,31,31,31,-153,31,-152,31,]),'PUTS':([0,29,37,46,48,51,52,95,96,145,146,162,163,164,165,166,181,184,186,192,200,208,211,213,239,242,250,252,264,266,275,277,],[33,-23,-33,33,33,-32,33,33,-118,-103,-104,-100,-24,-101,-105,-102,33,33,33,33,33,33,-119,33,33,33,33,33,-153,33,-152,33,]),'GETS':([0,29,37,46,48,51,52,95,96,145,146,162,163,164,165,166,181,184,186,192,200,208,211,213,239,242,250,252,264,266,275,277,],[38,-23,-33,38,38,-32,38,38,-118,-103,-104,-100,-24,-101,-105,-102,38,38,38,38,38,38,-119,38,38,38,38,38,-153,38,-152,38,]),'LLAVE_IZ':([0,29,37,46,48,51,52,62,95,96,145,146,162,163,164,165,166,181,183,184,185,186,192,200,208,211,213,230,239,242,250,252,264,266,275,277,],[39,-23,-33,39,39,-32,39,39,39,-118,-103,-104,-100,-24,-101,-105,-102,39,39,39,39,39,39,39,39,-119,39,39,39,39,39,39,-153,39,-152,39,]),'IF':([0,29,37,46,48,51,52,72,73,74,75,76,77,95,96,145,146,162,163,164,165,166,181,184,186,192,200,208,211,213,239,242,250,252,264,266,275,277,],[40,-23,-33,123,123,-32,123,157,-54,-55,-56,-57,-58,123,-118,-103,-104,-100,-24,-101,-105,-102,123,123,123,123,123,123,-119,123,123,123,40,123,-153,123,-152,123,]),'DEF':([0,227,250,277,],[41,246,41,41,]),'CORCHETE_IZ':([0,42,62,180,183,185,230,250,],[42,42,42,42,42,42,42,42,]),'COMENTARIO':([0,250,],[43,43,]),'COMENTARIO_MULTI':([0,250,],[44,44,]),'WHILE':([0,29,37,46,48,51,52,95,96,145,146,162,163,164,165,166,181,184,186,192,200,208,211,213,239,242,250,252,264,266,275,277,],[45,-23,-33,45,45,-32,45,45,-118,-103,-104,-100,-24,-101,-105,-102,45,45,45,45,45,45,-119,45,45,45,45,45,-153,45,-152,45,]),'CASE':([0,250,],[46,46,]),'UNTIL':([0,250,],[48,48,]),'PARENTESIS_IZ':([0,29,31,32,33,37,40,45,46,48,51,52,54,55,56,57,58,59,60,62,79,95,96,100,123,145,146,152,157,162,163,164,165,166,174,175,176,181,183,184,185,186,192,200,208,210,211,213,230,239,242,250,252,259,264,266,275,277,],[32,-23,78,79,85,-33,99,99,32,32,-32,32,79,-36,-37,-38,-39,-40,-41,79,79,32,-118,178,99,-103,-104,197,99,-100,-24,-101,-105,-102,99,-98,-99,32,79,32,79,32,32,32,32,99,-119,32,79,32,32,32,32,269,-153,32,-152,32,]),'SIMBOLO':([0,29,30,31,33,37,40,45,46,48,51,52,62,65,66,67,68,69,70,86,95,96,123,145,146,155,157,162,163,164,165,166,174,175,176,181,183,184,186,192,200,208,210,211,213,230,239,242,250,252,264,266,275,277,],[29,-23,77,-47,-48,-33,29,29,29,29,-32,29,139,-92,-93,-94,-95,-96,-97,29,29,-118,29,-103,-104,77,29,-100,-24,-101,-105,-102,29,-98,-99,29,139,29,29,29,29,29,29,-119,29,139,29,29,29,29,-153,29,-152,29,]),'FLOTANTE':([0,29,30,31,32,33,37,40,42,45,46,48,51,52,54,55,56,57,58,59,60,62,63,65,66,67,68,69,70,79,87,95,96,123,145,146,155,157,162,163,164,165,166,171,172,174,175,176,180,181,183,184,185,186,192,200,208,210,211,213,230,239,242,250,252,264,266,275,277,],[51,-23,51,-47,51,-48,-33,51,106,51,51,51,-32,51,51,-36,-37,-38,-39,-40,-41,51,51,-92,-93,-94,-95,-96,-97,51,51,51,-118,51,-103,-104,51,51,-100,-24,-101,-105,-102,51,51,51,-98,-99,106,51,51,51,51,51,51,51,51,51,-119,51,51,51,51,51,51,-153,51,-152,51,]),'ENTERO':([0,29,30,31,32,33,37,40,42,45,46,48,51,52,54,55,56,57,58,59,60,62,63,65,66,67,68,69,70,79,87,88,95,96,99,123,145,146,155,157,160,162,163,164,165,166,171,172,174,175,176,180,181,183,184,185,186,192,200,208,210,211,213,230,239,242,250,252,264,266,275,277,],[37,-23,37,-47,82,-48,-33,37,105,37,37,37,-32,37,37,-36,-37,-38,-39,-40,-41,37,37,-92,-93,-94,-95,-96,-97,37,37,166,37,-118,177,37,-103,-104,37,37,177,-100,-24,-101,-105,-102,37,37,37,-98,-99,105,37,37,37,37,37,37,37,37,37,-119,37,37,37,37,37,37,-153,37,-152,37,]),'WHEN':([0,25,26,28,29,33,37,38,47,51,71,72,73,74,75,76,77,83,84,91,102,110,111,112,113,114,115,116,117,118,119,120,121,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,156,158,159,161,162,163,164,165,166,167,168,169,179,191,199,207,209,219,221,222,223,224,225,231,243,244,250,253,254,267,276,],[52,-25,-26,-28,-23,-91,-33,-106,52,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,52,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-103,-104,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,-80,-30,-50,-122,-121,-65,-60,-61,-62,-63,-64,-141,-136,-137,52,-27,-120,-124,-123,]),'CLASS':([0,250,],[53,53,]),'CADENA':([0,30,31,33,39,42,61,62,128,155,170,171,172,180,183,185,197,230,250,],[28,73,-47,-48,94,104,28,136,28,73,94,204,205,104,136,221,28,136,28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,29,33,37,38,43,44,47,51,71,72,73,74,75,76,77,83,84,91,102,111,112,113,114,115,116,117,118,119,120,121,125,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,153,156,158,159,161,162,163,164,165,166,167,168,169,179,191,198,199,207,209,218,219,221,222,223,224,225,231,243,244,245,253,254,257,267,268,270,272,276,285,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-25,-26,-28,-23,-91,-33,-106,-87,-88,-139,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-140,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-72,-52,-53,-103,-104,-114,-115,-35,-110,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,-80,-30,-111,-50,-122,-121,-138,-65,-60,-61,-62,-63,-64,-141,-136,-137,-142,-27,-120,-108,-124,-109,-82,-151,-123,-156,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,29,33,37,38,43,44,47,51,71,72,73,74,75,76,77,83,84,91,102,111,112,113,114,115,116,117,118,119,120,121,125,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,151,153,156,158,159,161,162,163,164,165,166,167,168,169,173,179,182,188,189,191,198,199,207,209,216,217,218,219,220,221,222,223,224,225,226,231,236,238,241,243,244,245,247,248,249,250,253,254,257,258,260,261,262,265,267,268,270,272,273,276,278,279,280,281,282,283,285,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-25,-26,-28,-23,-91,-33,-106,-87,-88,-139,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-140,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-72,-52,-53,-103,-104,-114,-115,-35,-110,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,207,-80,218,-157,-158,-30,-111,-50,-122,-121,243,244,-138,-65,207,-60,-61,-62,-63,-64,245,-141,207,254,257,-136,-137,-142,-159,-160,-65,-85,-27,-120,-108,268,270,-83,-84,272,-124,-109,-82,-151,276,-123,-161,285,-162,-163,-133,-126,-156,]),'MAS':([2,24,25,27,28,35,37,50,51,80,82,83,84,111,122,131,132,133,134,135,136,137,159,191,221,222,284,],[-43,55,61,-29,-28,-42,-33,128,-32,-43,-33,-42,-45,-43,-45,55,-43,-31,-29,-29,-28,55,-44,-30,-28,55,-45,]),'MENOS':([2,24,27,35,37,51,80,82,83,84,111,122,131,132,135,137,159,222,284,],[-43,56,-45,-42,-33,-32,-43,-33,-42,-45,-43,-45,56,-43,-45,56,-44,56,-45,]),'DIVISION':([2,24,27,35,37,51,80,82,83,84,111,122,131,132,135,137,159,222,284,],[-43,57,-45,-42,-33,-32,-43,-33,-42,-45,-43,-45,57,-43,-45,57,-44,57,-45,]),'MULTIPLICACION':([2,24,27,35,37,51,80,82,83,84,111,122,131,132,135,137,159,222,284,],[-43,58,-45,-42,-33,-32,-43,-33,-42,-45,-43,-45,58,-43,-45,58,-44,58,-45,]),'EXPONENCIACION':([2,24,27,35,37,51,80,82,83,84,111,122,131,132,135,137,159,222,284,],[-43,59,-45,-42,-33,-32,-43,-33,-42,-45,-43,-45,59,-43,-45,59,-44,59,-45,]),'MODULO':([2,24,27,35,37,51,80,82,83,84,111,122,131,132,135,137,159,222,284,],[-43,60,-45,-42,-33,-32,-43,-33,-42,-45,-43,-45,60,-43,-45,60,-44,60,-45,]),'DO':([25,26,28,29,33,37,38,51,64,71,72,73,74,75,76,77,83,84,91,102,109,111,112,113,114,115,116,117,118,119,120,121,126,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,150,156,158,159,161,162,163,164,165,166,167,168,169,179,191,199,207,209,219,221,222,223,224,225,243,244,253,254,267,276,],[-25,-26,-28,-23,-91,-33,-106,-32,149,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,181,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,186,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-103,-104,196,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,-80,-30,-50,-122,-121,-65,-60,-61,-62,-63,-64,-136,-137,-27,-120,-124,-123,]),'IGUAL_DOBLEP':([25,26,27,28,29,33,34,35,37,38,51,71,72,73,74,75,76,77,83,84,91,97,98,102,111,112,113,114,115,116,117,118,119,120,121,122,129,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,156,158,159,161,162,163,164,165,166,167,168,169,179,191,199,207,209,219,221,222,223,224,225,243,244,253,254,267,276,284,],[-25,-26,65,-28,-23,-91,65,65,-33,-106,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,65,65,-81,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,65,192,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-103,-104,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,-80,-30,-50,-122,-121,-65,-60,-61,-62,-63,-64,-136,-137,-27,-120,-124,-123,65,]),'ELSE':([25,26,28,29,33,37,38,51,71,72,73,74,75,76,77,83,84,91,102,111,112,113,114,115,116,117,118,119,120,121,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,156,158,159,161,162,163,164,165,166,167,168,169,173,179,191,199,207,209,219,220,221,222,223,224,225,243,244,253,254,255,267,276,],[-25,-26,-28,-23,-91,-33,-106,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-103,-104,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,208,-80,-30,-50,-122,-121,-65,208,-60,-61,-62,-63,-64,-136,-137,-27,-120,266,-124,-123,]),'ELSEIF':([25,26,28,29,33,37,38,51,71,72,73,74,75,76,77,83,84,91,102,111,112,113,114,115,116,117,118,119,120,121,131,132,133,134,135,136,137,138,139,140,141,143,144,145,146,156,158,159,161,162,163,164,165,166,167,168,169,173,179,191,199,207,209,219,220,221,222,223,224,225,243,244,253,254,255,267,276,],[-25,-26,-28,-23,-91,-33,-106,-32,-59,-49,-54,-55,-56,-57,-58,-42,-45,-144,-81,-125,-126,-127,-128,-129,-130,-131,-132,-133,-134,-135,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-103,-104,-51,-89,-44,-90,-100,-24,-101,-105,-102,-107,-112,-143,210,-80,-30,-50,-122,-121,-65,210,-60,-61,-62,-63,-64,-136,-137,-27,-120,210,-124,-123,]),'NEWLINE':([25,26,28,37,49,51,83,84,91,102,130,131,132,133,134,135,136,137,138,139,140,141,143,144,159,169,179,187,188,189,191,221,222,223,224,225,232,247,248,249,253,282,283,],[-25,-26,-28,-33,127,-32,-42,-45,-144,-81,-154,-46,-43,-31,-29,-45,-66,-67,-68,-69,-70,-71,-52,-53,-44,-143,-80,227,228,229,-30,-60,-61,-62,-63,-64,-155,-159,-160,-65,-27,228,229,]),'IGUAL':([27,122,124,190,284,],[62,183,185,230,230,]),'PUNTO':([27,38,135,],[64,89,194,]),'DIFERENTE':([27,29,34,35,37,51,97,98,122,284,],[66,-23,66,66,-33,-32,66,66,66,66,]),'MAYOR_QUE':([27,29,34,35,37,51,97,98,122,284,],[67,-23,67,67,-33,-32,67,67,67,67,]),'MENOR_QUE':([27,29,34,35,37,51,97,98,122,130,284,],[68,-23,68,68,-33,-32,68,68,68,193,68,]),'MENOR_IGUAL_QUE':([27,29,34,35,37,51,97,98,122,284,],[69,-23,69,69,-33,-32,69,69,69,69,]),'MAYOR_IGUAL_QUE':([27,29,34,35,37,51,97,98,122,284,],[70,-23,70,70,-33,-32,70,70,70,70,]),'PARENTESIS_DER':([28,37,51,78,80,83,84,85,131,132,134,159,177,178,201,212,214,235,256,274,],[-28,-33,-32,158,159,-42,-45,161,-46,-43,-29,-44,-34,213,237,-116,242,253,-117,277,]),'AND':([29,37,51,96,145,146,162,163,164,165,166,],[-23,-33,-32,175,-103,-104,-100,-24,-101,-105,-102,]),'OR':([29,37,51,96,145,146,162,163,164,165,166,],[-23,-33,-32,176,-103,-104,-100,-24,-101,-105,-102,]),'VARIABLECLASE':([29,30,31,33,37,46,48,51,52,95,96,127,145,146,155,162,163,164,165,166,181,184,186,192,200,208,211,213,228,229,239,242,252,264,266,275,277,],[-23,76,-47,-48,-33,124,124,-32,124,124,-118,124,-103,-104,76,-100,-24,-101,-105,-102,124,124,124,124,124,124,-119,124,124,124,124,124,124,-153,124,-152,124,]),'TRIPLE_IGUAL':([36,237,],[88,-86,]),'COMA':([37,51,72,73,74,75,76,77,92,102,103,104,105,106,107,108,179,203,204,205,206,212,251,],[-33,-32,155,-54,-55,-56,-57,-58,170,-81,180,-75,-76,-77,-78,-79,-80,-145,-146,-148,-147,240,263,]),'LLAVE_DER':([37,39,51,90,92,202,203,204,205,206,],[-33,91,-32,169,-149,-150,-145,-146,-148,-147,]),'CORCHETE_DER':([42,101,102,103,104,105,106,107,108,179,215,],[102,179,-81,-74,-75,-76,-77,-78,-79,-80,-73,]),'ID_CLASE':([53,193,],[130,232,]),'TRUE':([62,183,230,],[143,143,143,]),'FALSE':([62,183,230,],[144,144,144,]),'EACH':([64,154,],[150,198,]),'TO_F':([64,],[151,]),'CONCAT':([64,194,],[152,152,]),'SORT':([64,],[153,]),'FOR':([64,],[154,]),'TRES_PUNTOS':([81,82,177,],[160,-34,-34,]),'CHOMP':([89,],[168,]),'ASIGNA_HASH':([93,94,],[171,172,]),'BARRA':([149,196,233,251,271,],[195,234,250,264,275,]),'INITIALIZE':([246,],[259,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,250,],[1,261,]),'operacionAritmetica':([0,32,46,48,52,54,62,79,95,181,183,184,185,186,192,200,208,213,230,239,242,250,252,266,277,],[2,80,111,111,111,132,132,80,111,111,132,111,132,111,111,111,111,111,132,111,111,2,111,111,111,]),'input_concatenacion':([0,62,183,185,230,250,],[3,141,141,225,141,3,]),'asignacion':([0,46,48,52,95,127,181,184,186,192,200,208,213,228,229,239,242,250,252,266,277,],[4,112,112,112,112,189,112,112,112,112,112,112,112,189,189,112,112,4,112,112,283,]),'impresion':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[5,113,113,113,113,113,113,113,113,113,113,113,113,113,5,113,113,113,]),'impresion_vacia':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[6,114,114,114,114,114,114,114,114,114,114,114,114,114,6,114,114,114,]),'expresiones_booleanas':([0,40,45,46,48,52,95,123,157,174,181,184,186,192,200,208,210,213,239,242,250,252,266,277,],[7,96,109,115,115,115,115,96,96,211,115,115,115,115,115,115,96,115,115,115,7,115,115,115,]),'solicitudDatosTeclado':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[8,116,116,116,116,116,116,116,116,116,116,116,116,116,8,116,116,116,]),'hashes':([0,46,48,52,62,95,181,183,184,185,186,192,200,208,213,230,239,242,250,252,266,277,],[9,117,117,117,138,117,117,138,117,223,117,117,117,117,117,138,117,117,9,117,117,117,]),'estructura_ifUnaLinea':([0,46,48,52,72,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[10,121,121,121,156,121,121,121,121,121,121,121,121,121,121,10,121,121,121,]),'estructura_if':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[11,118,118,118,118,118,118,118,118,118,118,118,118,118,11,118,118,118,]),'funciones':([0,250,277,],[12,12,281,]),'funcionesEstructuras':([0,250,],[13,13,]),'array':([0,42,62,180,183,185,230,250,],[14,107,140,107,140,224,140,14,]),'each_array':([0,250,],[15,15,]),'comentarios':([0,250,],[16,16,]),'each_hash':([0,250,],[17,17,]),'sentencia_while':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[18,120,120,120,120,216,120,120,120,120,120,120,120,120,18,120,120,120,]),'sentencia_case':([0,250,],[19,19,]),'sentencias_when':([0,47,250,],[20,125,20,]),'sentencia_until':([0,250,],[21,21,]),'definicion_clase':([0,250,],[22,22,]),'entero_a_flotante':([0,250,],[23,23,]),'expresionNumerica':([0,32,46,48,52,54,62,79,95,181,183,184,185,186,192,200,208,213,230,239,242,250,252,266,277,],[24,24,24,24,24,131,137,24,24,24,137,24,222,24,24,24,24,24,137,24,24,24,24,24,24,]),'concatenacionSimpleCadena':([0,62,183,185,230,250,],[25,25,25,25,25,25,]),'concatenacion_funcion':([0,62,183,185,230,250,],[26,26,26,26,26,26,]),'valor_print':([0,46,48,52,95,181,184,186,192,200,208,213,239,242,250,252,266,277,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'valorSimbolo':([0,40,45,46,48,52,86,95,123,157,174,181,184,186,192,200,208,210,213,239,242,250,252,266,277,],[34,34,34,34,34,34,162,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'valorNumerico':([0,30,32,40,45,46,48,52,54,62,63,79,87,95,123,155,157,171,172,174,181,183,184,185,186,192,200,208,210,213,230,239,242,250,252,266,277,],[35,74,83,97,97,35,35,35,83,83,146,83,164,35,97,74,97,203,206,97,35,83,35,83,35,35,35,35,97,35,83,35,35,35,35,35,35,]),'rangos':([0,40,45,46,48,52,95,123,157,174,181,184,186,192,200,208,210,213,239,242,250,252,266,277,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'sentencia_when':([0,47,110,250,],[47,47,182,47,]),'encabezadoClase':([0,250,],[49,49,]),'valorCadena':([0,61,62,128,183,185,197,230,250,],[50,133,50,191,50,50,235,50,50,]),'operadores':([24,131,137,222,],[54,54,54,54,]),'operadoresComparacion':([27,34,35,97,98,122,284,],[63,86,87,87,63,63,63,]),'valores':([30,155,],[71,199,]),'valor':([30,155,],[72,72,]),'soloEnteros':([32,99,160,],[81,81,201,]),'elemento_hash':([39,],[90,]),'claveValor':([39,170,],[92,202,]),'condicionIf':([40,123,157,210,],[95,184,200,239,]),'elementos_array':([42,180,],[101,215,]),'elemento_array':([42,180,],[103,103,]),'declaracion':([46,48,52,95,181,184,186,192,200,208,213,239,242,252,266,277,],[110,126,129,173,217,220,226,231,236,238,241,255,258,265,273,280,]),'asignacion_clase':([46,48,52,95,127,181,184,186,192,200,208,213,228,229,239,242,252,266,277,],[119,119,119,119,188,119,119,119,119,119,119,119,188,188,119,119,119,119,282,]),'booleanos':([62,183,230,],[142,219,249,]),'funcionesArray':([64,],[147,]),'funcionesNumeros':([64,],[148,]),'funcionesFormatoImpresion':([89,],[167,]),'funcionesComparacion':([96,],[174,]),'cuerpoVariables':([127,228,229,277,],[187,247,248,278,]),'estructura_secundaria_if':([173,220,255,],[209,209,267,]),'argumentos':([178,240,269,],[214,256,274,]),'each_args_hash':([234,],[252,]),'cuerpo_each':([250,],[260,]),'vacio':([250,],[262,]),'cuerpoClase':([277,],[279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',40),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',41),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',80),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',81),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',87),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',100),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',101),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',135),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',136),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',155),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',156),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',168),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',173),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',190),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',191),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',192),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',193),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',194),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',195),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',200),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',201),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',202),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',203),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',217),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',256),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',257),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',262),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',263),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',264),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',268),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',269),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',276),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',277),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',278),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',279),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',280),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',299),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',302),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',303),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',304),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',305),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',306),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',307),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',312),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',313),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',314),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',315),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',316),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',317),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',318),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',328),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',329),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',337),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',338),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',339),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',340),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',341),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',349),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',350),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',359),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',363),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',364),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',368),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',374),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',379),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',380),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',384),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',385),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',386),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',391),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',392),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',393),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',394),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',395),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',396),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',400),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',401),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',405),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',406),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',407),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',408),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',409),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',410),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',474),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',475),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',478),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',479),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',483),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',484),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',488),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',492),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',496),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',497),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',517),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',518),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',523),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',524),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',528),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',529),
  ('estructura_ifUnaLinea -> IF condicionIf declaracion END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',533),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',537),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',538),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',542),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',543),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',544),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',545),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',546),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',547),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',548),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',549),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',550),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',551),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',552),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',556),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',557),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',564),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',568),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',569),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',573),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',577),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',582),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',583),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',587),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',588),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',589),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',590),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',594),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',595),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',599),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',603),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',604),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',607),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',608),
  ('definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',11,'p_definicion_clase','sintactico.py',611),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',615),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',616),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',617),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',618),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',622),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',623),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',624),
]
