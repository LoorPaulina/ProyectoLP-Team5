
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS IF IGUAL IGUAL_DOBLEP IN LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructurasvalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROoperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericaimpresion : PRINT PARENTESIS_IZ expresionNumerica PARENTESIS_DER\n                 | PRINT PARENTESIS_IZ VARIABLE PARENTESIS_DER asignacion : VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL hashesrangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END\n                | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER ENDfuncionesArray : SORTfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if hashes : LLAVE_IZ elemento_hash LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValor'
    
_lr_action_items = {'VARIABLE':([0,19,21,22,23,24,33,35,36,37,38,39,40,41,48,53,54,64,65,76,77,78,80,92,93,94,96,103,105,106,112,113,120,],[13,-12,52,56,58,-11,64,-33,-34,-35,-36,-37,-38,72,77,91,-55,-43,-44,-41,-45,-42,52,56,-39,-40,107,91,56,-56,91,107,91,]),'PRINT':([0,19,24,53,54,64,65,76,77,78,103,106,112,120,],[14,-12,-11,14,-55,-43,-44,-41,-45,-42,14,-56,14,14,]),'PUTS':([0,19,24,53,54,64,65,76,77,78,103,106,112,120,],[16,-12,-11,16,-55,-43,-44,-41,-45,-42,16,-56,16,16,]),'GETS':([0,19,24,53,54,64,65,76,77,78,103,106,112,120,],[20,-12,-11,20,-55,-43,-44,-41,-45,-42,20,-56,20,20,]),'LLAVE_IZ':([0,19,24,32,53,54,64,65,76,77,78,103,106,112,120,],[21,-12,-11,21,21,-55,-43,-44,-41,-45,-42,21,-56,21,21,]),'IF':([0,19,24,53,54,64,65,76,77,78,103,106,112,120,],[22,-12,-11,22,-55,-43,-44,-41,-45,-42,22,-56,22,22,]),'DEF':([0,],[23,]),'PARENTESIS_IZ':([0,14,15,16,19,22,24,25,26,27,28,29,30,31,32,41,42,53,54,58,64,65,76,77,78,92,93,94,103,105,106,112,120,],[15,41,42,47,-12,57,-11,42,-14,-15,-16,-17,-18,-19,42,42,42,15,-55,96,-43,-44,-41,-45,-42,57,-39,-40,15,57,-56,15,15,]),'FLOTANTE':([0,15,19,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,48,53,54,64,65,76,77,78,81,92,93,94,103,105,106,112,120,],[24,24,-12,24,-11,24,-14,-15,-16,-17,-18,-19,24,24,-33,-34,-35,-36,-37,-38,24,24,24,24,-55,-43,-44,-41,-45,-42,24,24,-39,-40,24,24,-56,24,24,]),'ENTERO':([0,15,19,22,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,42,48,49,53,54,57,64,65,74,76,77,78,81,92,93,94,103,105,106,112,120,],[19,45,-12,19,-11,19,-14,-15,-16,-17,-18,-19,19,19,-33,-34,-35,-36,-37,-38,19,19,19,78,19,-55,95,-43,-44,95,-41,-45,-42,19,19,-39,-40,19,19,-56,19,19,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,16,19,20,24,46,59,60,61,62,63,64,65,66,67,68,69,71,73,75,76,77,78,79,97,98,104,114,116,119,121,123,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-32,-12,-46,-11,-20,-23,-21,-26,-27,-28,-43,-44,-51,-52,-49,-50,-30,-22,-31,-41,-45,-42,-69,-24,-25,-58,-47,-57,-48,-60,-59,]),'MAS':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,26,-20,-12,-11,-21,-12,-20,26,-21,26,26,-22,-21,]),'MENOS':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,27,-20,-12,-11,-21,-12,-20,27,-21,27,27,-22,-21,]),'DIVISION':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,28,-20,-12,-11,-21,-12,-20,28,-21,28,28,-22,-21,]),'MULTIPLICACION':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,29,-20,-12,-11,-21,-12,-20,29,-21,29,29,-22,-21,]),'EXPONENCIACION':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,30,-20,-12,-11,-21,-12,-20,30,-21,30,30,-22,-21,]),'MODULO':([2,12,17,19,24,43,45,46,59,60,61,70,73,83,],[-21,31,-20,-12,-11,-21,-12,-20,31,-21,31,31,-22,-21,]),'IGUAL':([13,91,],[32,32,]),'PUNTO':([13,],[34,]),'DOBLE_IGUAL':([13,17,19,24,55,56,91,],[35,35,-12,-11,35,35,35,]),'DIFERENTE':([13,17,19,24,55,56,91,],[36,36,-12,-11,36,36,36,]),'MAYOR_QUE':([13,17,19,24,55,56,91,],[37,37,-12,-11,37,37,37,]),'MENOR_QUE':([13,17,19,24,55,56,91,],[38,38,-12,-11,38,38,38,]),'MENOR_IGUAL_QUE':([13,17,19,24,55,56,91,],[39,39,-12,-11,39,39,39,]),'MAYOR_IGUAL_QUE':([13,17,19,24,55,56,91,],[40,40,-12,-11,40,40,40,]),'ELSE':([16,19,20,24,46,59,60,61,62,63,64,65,71,73,75,76,77,78,79,82,83,84,85,86,87,88,89,90,97,98,104,116,117,121,123,],[-32,-12,-46,-11,-20,-23,-21,-26,-27,-28,-43,-44,-30,-22,-31,-41,-45,-42,-69,103,-61,-62,-63,-64,-65,-66,-67,-68,-24,-25,-58,-57,120,-60,-59,]),'ELSEIF':([16,19,20,24,46,59,60,61,62,63,64,65,71,73,75,76,77,78,79,82,83,84,85,86,87,88,89,90,97,98,104,116,117,121,123,],[-32,-12,-46,-11,-20,-23,-21,-26,-27,-28,-43,-44,-30,-22,-31,-41,-45,-42,-69,105,-61,-62,-63,-64,-65,-66,-67,-68,-24,-25,-58,-57,105,-60,-59,]),'END':([16,19,20,24,46,59,60,61,62,63,64,65,71,73,75,76,77,78,79,83,84,85,86,87,88,89,90,97,98,104,108,111,115,116,121,122,123,],[-32,-12,-46,-11,-20,-23,-21,-26,-27,-28,-43,-44,-30,-22,-31,-41,-45,-42,-69,-61,-62,-63,-64,-65,-66,-67,-68,-24,-25,-58,114,116,119,-57,-60,123,-59,]),'TRIPLE_IGUAL':([18,110,],[49,-29,]),'PARENTESIS_DER':([19,24,41,43,46,47,59,60,70,72,73,95,96,99,107,109,118,],[-12,-11,71,73,-20,75,-23,-21,97,98,-22,-13,108,110,-53,115,-54,]),'AND':([19,24,54,64,65,76,77,78,],[-12,-11,93,-43,-44,-41,-45,-42,]),'OR':([19,24,54,64,65,76,77,78,],[-12,-11,94,-43,-44,-41,-45,-42,]),'COMA':([19,24,51,101,102,107,],[-12,-11,80,-70,-71,113,]),'LLAVE_DER':([19,24,50,51,100,101,102,],[-12,-11,79,-72,-73,-70,-71,]),'CADENA':([32,81,],[62,102,]),'SORT':([34,],[68,]),'TO_F':([34,],[69,]),'TRES_PUNTOS':([44,45,95,],[74,-13,-13,]),'ASIGNA_HASH':([52,],[81,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,],[1,]),'operacionAritmetica':([0,15,25,32,41,42,53,103,112,120,],[2,43,60,60,60,43,83,83,83,83,]),'asignacion':([0,53,103,112,120,],[3,84,84,84,84,]),'impresion':([0,53,103,112,120,],[4,85,85,85,85,]),'impresion_vacia':([0,53,103,112,120,],[5,86,86,86,86,]),'expresiones_booleanas':([0,22,53,92,103,105,112,120,],[6,54,87,106,87,54,87,87,]),'solicitudDatosTeclado':([0,53,103,112,120,],[7,88,88,88,88,]),'hashes':([0,32,53,103,112,120,],[8,63,89,89,89,89,]),'estructura_if':([0,53,103,112,120,],[9,90,90,90,90,]),'funciones':([0,],[10,]),'funcionesEstructuras':([0,],[11,]),'expresionNumerica':([0,15,25,32,41,42,53,103,112,120,],[12,12,59,61,70,12,12,12,12,12,]),'valorNumerico':([0,15,22,25,32,33,41,42,48,53,81,92,103,105,112,120,],[17,46,55,46,46,65,46,46,76,17,101,55,17,55,17,17,]),'rangos':([0,22,53,92,103,105,112,120,],[18,18,18,18,18,18,18,18,]),'operadores':([12,59,61,70,],[25,25,25,25,]),'operadoresComparacion':([13,17,55,56,91,],[33,48,48,33,33,]),'soloEnteros':([15,57,74,],[44,44,99,]),'elemento_hash':([21,],[50,]),'claveValor':([21,80,],[51,100,]),'condicionIf':([22,105,],[53,112,]),'funcionesArray':([34,],[66,]),'funcionesNumeros':([34,],[67,]),'declaracion':([53,103,112,120,],[82,111,117,122,]),'funcionesComparacion':([54,],[92,]),'estructura_secundaria_if':([82,117,],[104,121,]),'argumentos':([96,113,],[109,118,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',5),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',6),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',7),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',8),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',9),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',10),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',11),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',12),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',20),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',21),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',25),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',29),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',30),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',31),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',32),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',33),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',34),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',38),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',39),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',40),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',47),
  ('impresion -> PRINT PARENTESIS_IZ expresionNumerica PARENTESIS_DER','impresion',4,'p_impresion','sintactico.py',67),
  ('impresion -> PRINT PARENTESIS_IZ VARIABLE PARENTESIS_DER','impresion',4,'p_impresion','sintactico.py',68),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',76),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',77),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',78),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',86),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',90),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',91),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',92),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',95),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',96),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',97),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',98),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',99),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',100),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',103),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',104),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',107),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',108),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',109),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',110),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',111),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',114),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END','funciones',5,'p_funciones','sintactico.py',118),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END','funciones',6,'p_funciones','sintactico.py',119),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',122),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',125),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',128),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',129),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',132),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',133),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',137),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',138),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',141),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',142),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',145),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',146),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',149),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',150),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',151),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',152),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',153),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',154),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',155),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',156),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',160),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',163),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',164),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',167),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',168),
]
