
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | comparacion_simbolo\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clasevalorSimbolo : SIMBOLO \n                    | VARIABLE comparacion_simbolo : valorSimbolo IGUAL_DOBLEP valorSimbolo \n                            | valorSimbolo DIFERENTE valorSimbolo  input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROoperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineavalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacionelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : IGUAL_DOBLEP\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico\n                             | rangos TRIPLE_IGUAL ENTERO\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                     sentencia_while : WHILE declaracion DO sentencia_while END\n                      | WHILE declaracion DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER'
    
_lr_action_items = {'VARIABLE':([0,30,31,33,36,38,39,40,41,44,45,47,50,51,59,60,61,62,63,65,66,67,68,69,70,85,92,93,120,136,137,146,148,153,154,155,159,162,163,164,166,168,169,171,174,176,178,186,188,189,201,205,206,212,213,215,225,226,228,235,],[27,75,-46,-47,-34,91,95,97,105,115,115,115,-33,115,125,125,128,129,136,-82,-83,-84,-85,-86,-87,154,115,-107,128,-92,-93,75,95,-90,-94,-91,91,95,-88,-89,190,105,115,115,115,200,128,115,95,-108,214,115,190,190,27,115,232,-137,115,-136,]),'PRINT':([0,36,44,45,47,50,51,92,93,136,137,153,154,155,169,171,174,186,189,205,213,215,226,228,235,],[31,-34,31,31,31,-33,31,31,-107,-92,-93,-90,-94,-91,31,31,31,31,-108,31,31,31,-137,31,-136,]),'PUTS':([0,36,44,45,47,50,51,92,93,136,137,153,154,155,169,171,174,186,189,205,213,215,226,228,235,],[33,-34,33,33,33,-33,33,33,-107,-92,-93,-90,-94,-91,33,33,33,33,-108,33,33,33,-137,33,-136,]),'GETS':([0,36,44,45,47,50,51,92,93,136,137,153,154,155,169,171,174,186,189,205,213,215,226,228,235,],[37,-34,37,37,37,-33,37,37,-107,-92,-93,-90,-94,-91,37,37,37,37,-108,37,37,37,-137,37,-136,]),'LLAVE_IZ':([0,36,44,45,47,50,51,62,92,93,136,137,153,154,155,169,171,174,186,189,205,213,215,226,228,235,],[38,-34,38,38,38,-33,38,38,38,-107,-92,-93,-90,-94,-91,38,38,38,38,-108,38,38,38,-137,38,-136,]),'IF':([0,36,44,45,47,50,51,72,73,74,75,76,77,92,93,136,137,153,154,155,169,171,174,186,189,205,213,215,226,228,235,],[39,-34,39,39,39,-33,39,148,-51,-52,-53,-54,-55,39,-107,-92,-93,-90,-94,-91,39,39,39,39,-108,39,39,39,-137,39,-136,]),'DEF':([0,119,213,],[40,172,40,]),'CORCHETE_IZ':([0,41,62,168,213,],[41,41,41,41,41,]),'COMENTARIO':([0,213,],[42,42,]),'COMENTARIO_MULTI':([0,213,],[43,43,]),'WHILE':([0,169,213,],[44,44,44,]),'CASE':([0,213,],[45,45,]),'UNTIL':([0,213,],[47,47,]),'CLASS':([0,213,],[48,48,]),'PARENTESIS_IZ':([0,31,32,33,36,39,44,45,47,50,51,52,53,54,55,56,57,58,62,79,92,93,97,136,137,142,148,153,154,155,162,163,164,169,171,174,186,188,189,198,205,213,215,226,228,235,],[32,78,79,84,-34,96,32,32,32,-33,32,79,-36,-37,-38,-39,-40,-41,79,79,32,-107,166,-92,-93,178,96,-90,-94,-91,96,-88,-89,32,32,32,32,96,-108,212,32,32,32,-137,32,-136,]),'SIMBOLO':([0,30,31,33,59,60,62,146,213,],[29,77,-46,-47,29,29,133,77,29,]),'FLOTANTE':([0,30,31,32,33,36,39,41,44,45,47,50,51,52,53,54,55,56,57,58,62,63,65,66,67,68,69,70,79,85,92,93,136,137,146,148,153,154,155,160,162,163,164,168,169,171,174,186,188,189,205,213,215,226,228,235,],[50,50,-46,50,-47,-34,50,103,50,50,50,-33,50,50,-36,-37,-38,-39,-40,-41,50,50,-82,-83,-84,-85,-86,-87,50,50,50,-107,-92,-93,50,50,-90,-94,-91,50,50,-88,-89,103,50,50,50,50,50,-108,50,50,50,-137,50,-136,]),'ENTERO':([0,30,31,32,33,36,39,41,44,45,47,50,51,52,53,54,55,56,57,58,62,63,65,66,67,68,69,70,79,85,86,92,93,96,136,137,146,148,151,153,154,155,160,162,163,164,168,169,171,174,186,188,189,205,213,215,226,228,235,],[36,36,-46,82,-47,-34,36,102,36,36,36,-33,36,36,-36,-37,-38,-39,-40,-41,36,36,-82,-83,-84,-85,-86,-87,36,36,155,36,-107,165,-92,-93,36,36,165,-90,-94,-91,36,36,-88,-89,102,36,36,36,36,36,-108,36,36,36,-137,36,-136,]),'WHEN':([0,25,26,28,33,36,37,46,50,71,72,73,74,75,76,77,83,89,93,99,107,108,109,110,111,112,113,114,116,122,123,127,128,130,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,167,173,180,181,187,189,199,213,216,217,229,236,],[51,-26,-27,-29,-81,-34,-95,51,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,-114,-115,-116,-117,-118,-119,-120,-121,51,-45,-43,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,-70,-31,-49,-111,-110,-108,-127,51,-28,-109,-113,-112,]),'CADENA':([0,30,31,33,41,61,62,120,146,160,168,178,213,],[28,73,-46,-47,101,28,130,28,73,185,101,28,28,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,28,29,33,36,37,42,43,46,50,71,72,73,74,75,76,77,83,89,93,99,107,108,109,110,111,112,113,114,117,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,143,145,147,149,150,152,153,154,155,156,157,158,167,173,179,180,181,187,189,196,199,207,209,210,211,216,217,220,229,230,231,233,236,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-26,-27,-29,-22,-81,-34,-95,-77,-78,-125,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,-114,-115,-116,-117,-118,-119,-120,-121,-126,-45,-43,-24,-23,-25,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-103,-104,-99,-102,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,-70,-31,-100,-49,-111,-110,-108,-124,-127,-97,-123,-122,-128,-28,-109,-98,-113,-138,-72,-135,-112,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,25,26,28,29,33,36,37,42,43,46,50,71,72,73,74,75,76,77,83,89,93,99,107,108,109,110,111,112,113,114,117,122,123,124,125,126,127,128,130,131,132,133,134,135,136,137,138,139,143,145,147,149,150,152,153,154,155,156,157,158,167,170,173,179,180,181,187,189,191,194,195,196,197,199,204,207,208,209,210,211,213,216,217,220,222,223,224,227,229,230,231,233,234,236,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-26,-27,-29,-22,-81,-34,-95,-77,-78,-125,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,-114,-115,-116,-117,-118,-119,-120,-121,-126,-45,-43,-24,-23,-25,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-103,-104,-99,-102,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,-70,196,-31,-100,-49,-111,-110,-108,207,209,210,-124,211,-127,217,-97,220,-123,-122,-128,-75,-28,-109,-98,231,-73,-74,233,-113,-138,-72,-135,236,-112,]),'MAS':([2,23,25,27,28,34,36,49,50,80,82,83,107,122,123,127,128,129,130,131,150,173,],[-43,53,61,-30,-29,-42,-34,120,-33,-43,-34,-42,-43,53,-43,-32,-30,-30,-29,53,-44,-31,]),'MENOS':([2,23,34,36,50,80,82,83,107,122,123,131,150,],[-43,54,-42,-34,-33,-43,-34,-42,-43,54,-43,54,-44,]),'DIVISION':([2,23,34,36,50,80,82,83,107,122,123,131,150,],[-43,55,-42,-34,-33,-43,-34,-42,-43,55,-43,55,-44,]),'MULTIPLICACION':([2,23,34,36,50,80,82,83,107,122,123,131,150,],[-43,56,-42,-34,-33,-43,-34,-42,-43,56,-43,56,-44,]),'EXPONENCIACION':([2,23,34,36,50,80,82,83,107,122,123,131,150,],[-43,57,-42,-34,-33,-43,-34,-42,-43,57,-43,57,-44,]),'MODULO':([2,23,34,36,50,80,82,83,107,122,123,131,150,],[-43,58,-42,-34,-33,-43,-34,-42,-43,58,-43,58,-44,]),'IGUAL_DOBLEP':([24,25,26,27,28,29,33,34,36,37,50,71,72,73,74,75,76,77,83,89,93,94,95,99,107,108,109,110,111,112,113,114,115,121,122,123,127,128,130,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,167,173,180,181,187,189,216,217,229,236,],[59,-26,-27,65,-29,-22,-81,65,-34,-95,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,65,65,-71,-114,-115,-116,-117,-118,-119,-120,-121,65,174,-45,-43,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,-70,-31,-49,-111,-110,-108,-28,-109,-113,-112,]),'DIFERENTE':([24,27,29,34,36,50,94,95,115,],[60,66,-22,66,-34,-33,66,66,66,]),'DO':([25,26,28,33,36,37,50,64,71,72,73,74,75,76,77,83,89,93,99,106,107,108,109,110,111,112,113,114,118,122,123,127,128,130,131,132,133,134,135,136,137,141,147,149,150,152,153,154,155,156,157,158,167,173,180,181,187,189,216,217,229,236,],[-26,-27,-29,-81,-34,-95,-33,140,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,169,-114,-115,-116,-117,-118,-119,-120,-121,171,-45,-43,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,177,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,-70,-31,-49,-111,-110,-108,-28,-109,-113,-112,]),'ELSE':([25,26,28,33,36,37,50,71,72,73,74,75,76,77,83,89,93,99,107,108,109,110,111,112,113,114,122,123,127,128,130,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,161,167,173,180,181,187,189,216,217,218,229,236,],[-26,-27,-29,-81,-34,-95,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,-114,-115,-116,-117,-118,-119,-120,-121,-45,-43,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,186,-70,-31,-49,-111,-110,-108,-28,-109,228,-113,-112,]),'ELSEIF':([25,26,28,33,36,37,50,71,72,73,74,75,76,77,83,89,93,99,107,108,109,110,111,112,113,114,122,123,127,128,130,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,161,167,173,180,181,187,189,216,217,218,229,236,],[-26,-27,-29,-81,-34,-95,-33,-56,-48,-51,-52,-53,-54,-55,-42,-130,-107,-71,-114,-115,-116,-117,-118,-119,-120,-121,-45,-43,-32,-30,-57,-58,-59,-60,-61,-62,-92,-93,-50,-79,-44,-80,-90,-94,-91,-96,-101,-129,188,-70,-31,-49,-111,-110,-108,-28,-109,188,-113,-112,]),'IGUAL':([27,115,],[62,62,]),'PUNTO':([27,37,129,],[64,87,175,]),'MAYOR_QUE':([27,34,36,50,94,95,115,],[67,67,-34,-33,67,67,67,]),'MENOR_QUE':([27,34,36,50,94,95,115,],[68,68,-34,-33,68,68,68,]),'MENOR_IGUAL_QUE':([27,34,36,50,94,95,115,],[69,69,-34,-33,69,69,69,]),'MAYOR_IGUAL_QUE':([27,34,36,50,94,95,115,],[70,70,-34,-33,70,70,70,]),'PARENTESIS_DER':([28,36,50,78,80,83,84,122,123,128,150,165,166,182,190,192,202,219,221,],[-29,-34,-33,149,150,-42,152,-45,-43,-30,-44,-35,191,203,-105,208,216,-106,230,]),'VARIABLECLASE':([30,31,33,146,],[76,-46,-47,76,]),'TRIPLE_IGUAL':([35,203,],[86,-76,]),'COMA':([36,50,72,73,74,75,76,77,90,99,100,101,102,103,104,105,167,184,185,190,214,],[-34,-33,146,-51,-52,-53,-54,-55,159,-71,168,-65,-66,-67,-68,-69,-70,-131,-132,206,225,]),'AND':([36,50,93,136,137,153,154,155,],[-34,-33,163,-92,-93,-90,-94,-91,]),'OR':([36,50,93,136,137,153,154,155,],[-34,-33,164,-92,-93,-90,-94,-91,]),'LLAVE_DER':([36,38,50,88,90,183,184,185,],[-34,89,-33,158,-133,-134,-131,-132,]),'CORCHETE_DER':([41,98,99,100,101,102,103,104,105,167,193,],[99,167,-71,-64,-65,-66,-67,-68,-69,-70,-63,]),'ID_CLASE':([48,],[119,]),'EACH':([64,144,],[141,179,]),'CONCAT':([64,175,],[142,142,]),'SORT':([64,],[143,]),'FOR':([64,],[144,]),'TO_F':([64,],[145,]),'TRES_PUNTOS':([81,82,165,],[151,-35,-35,]),'CHOMP':([87,],[157,]),'ASIGNA_HASH':([91,],[160,]),'BARRA':([140,177,200,214,232,],[176,201,213,226,235,]),'INITIALIZE':([172,],[198,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,213,],[1,223,]),'operacionAritmetica':([0,32,44,45,47,51,52,62,79,92,169,171,174,186,205,213,215,228,],[2,80,107,107,107,107,123,123,80,107,107,107,107,107,107,2,107,107,]),'comparacion_simbolo':([0,213,],[3,3,]),'input_concatenacion':([0,62,213,],[4,135,4,]),'asignacion':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[5,108,108,108,108,108,108,108,108,108,108,5,108,108,]),'impresion':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[6,109,109,109,109,109,109,109,109,109,109,6,109,109,]),'impresion_vacia':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[7,110,110,110,110,110,110,110,110,110,110,7,110,110,]),'expresiones_booleanas':([0,39,44,45,47,51,92,148,162,169,171,174,186,188,205,213,215,228,],[8,93,111,111,111,111,111,93,189,111,111,111,111,93,111,8,111,111,]),'solicitudDatosTeclado':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[9,112,112,112,112,112,112,112,112,112,112,9,112,112,]),'hashes':([0,44,45,47,51,62,92,169,171,174,186,205,213,215,228,],[10,113,113,113,113,132,113,113,113,113,113,113,10,113,113,]),'estructura_if':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[11,114,114,114,114,114,114,114,114,114,114,11,114,114,]),'funciones':([0,213,],[12,12,]),'funcionesEstructuras':([0,213,],[13,13,]),'array':([0,41,62,168,213,],[14,104,134,104,14,]),'each_array':([0,213,],[15,15,]),'comentarios':([0,213,],[16,16,]),'each_hash':([0,213,],[17,17,]),'sentencia_while':([0,169,213,],[18,195,18,]),'sentencia_case':([0,213,],[19,19,]),'sentencias_when':([0,46,213,],[20,117,20,]),'sentencia_until':([0,213,],[21,21,]),'definicion_clase':([0,213,],[22,22,]),'expresionNumerica':([0,32,44,45,47,51,52,62,79,92,169,171,174,186,205,213,215,228,],[23,23,23,23,23,23,122,131,23,23,23,23,23,23,23,23,23,23,]),'valorSimbolo':([0,59,60,213,],[24,124,126,24,]),'concatenacionSimpleCadena':([0,62,213,],[25,25,25,]),'concatenacion_funcion':([0,62,213,],[26,26,26,]),'valor_print':([0,44,45,47,51,92,169,171,174,186,205,213,215,228,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'valorNumerico':([0,30,32,39,44,45,47,51,52,62,63,79,85,92,146,148,160,162,169,171,174,186,188,205,213,215,228,],[34,74,83,94,34,34,34,34,83,83,137,83,153,34,74,94,184,94,34,34,34,34,94,34,34,34,34,]),'rangos':([0,39,44,45,47,51,92,148,162,169,171,174,186,188,205,213,215,228,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'sentencia_when':([0,46,116,213,],[46,46,170,46,]),'valorCadena':([0,61,62,120,178,213,],[49,127,49,173,202,49,]),'operadores':([23,122,131,],[52,52,52,]),'operadoresComparacion':([27,34,94,95,115,],[63,85,85,63,63,]),'valores':([30,146,],[71,180,]),'valor':([30,146,],[72,72,]),'soloEnteros':([32,96,151,],[81,81,182,]),'elemento_hash':([38,],[88,]),'claveValor':([38,159,],[90,183,]),'condicionIf':([39,148,188,],[92,181,205,]),'elementos_array':([41,168,],[98,193,]),'elemento_array':([41,168,],[100,100,]),'declaracion':([44,45,47,51,92,169,171,174,186,205,215,228,],[106,116,118,121,161,194,197,199,204,218,227,234,]),'funcionesArray':([64,],[138,]),'funcionesNumeros':([64,],[139,]),'estructura_ifUnaLinea':([72,],[147,]),'funcionesFormatoImpresion':([87,],[156,]),'funcionesComparacion':([93,],[162,]),'estructura_secundaria_if':([161,218,],[187,229,]),'argumentos':([166,206,212,],[192,219,221,]),'each_args_hash':([201,],[215,]),'cuerpo_each':([213,],[222,]),'vacio':([213,],[224,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> comparacion_simbolo','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',38),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',39),
  ('comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo','comparacion_simbolo',3,'p_comparacion_simbolo','sintactico.py',65),
  ('comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo','comparacion_simbolo',3,'p_comparacion_simbolo','sintactico.py',66),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',78),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',79),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',84),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',96),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',97),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',129),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',130),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',148),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',149),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',162),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',166),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',167),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',168),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',169),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',170),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',171),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',175),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',176),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',177),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',184),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',205),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',206),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',209),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',210),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',211),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',217),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',218),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',219),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',220),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',221),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',239),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',246),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',247),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',248),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',249),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',250),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',251),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',260),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',261),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',268),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',269),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',270),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',271),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',272),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',279),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',280),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',288),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',290),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',291),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',293),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',298),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',302),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',303),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',306),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',307),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',308),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',312),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',313),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',314),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',315),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',316),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',317),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',320),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',321),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',324),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',325),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',326),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',327),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',328),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',393),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',394),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END','funciones',5,'p_funciones','sintactico.py',398),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END','funciones',6,'p_funciones','sintactico.py',399),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',402),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',403),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',406),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',409),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',412),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',413),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',432),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',433),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',437),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',438),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',441),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',442),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',445),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',448),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',449),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',451),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',452),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',453),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',454),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',455),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',456),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',457),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',458),
  ('sentencia_while -> WHILE declaracion DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',464),
  ('sentencia_while -> WHILE declaracion DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',465),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',468),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',471),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',472),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',475),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',478),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',482),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',483),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',486),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',487),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',490),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',491),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',495),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',498),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',499),
  ('definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER','definicion_clase',7,'p_definicion_clase','sintactico.py',502),
]
