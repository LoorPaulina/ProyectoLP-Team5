
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOinstruccion : cuerpoInstruccion\n        cuerpoInstruccion : cuerpo\n                        | cuerpo cuerpoInstruccion \n      cuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanos\n                  | VARIABLE IGUAL solicitudDatosTeclado\n                  | VARIABLE IGUAL entero_a_flotanteelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE declaraciones ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaraciones ELSE declaraciones END\n                    | IF condicionIf declaraciones estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaraciones ENDestructura_secundaria_if : ELSEIF condicionIf declaraciones ELSE declaraciones END\n                                | ELSEIF condicionIf declaraciones estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineadeclaraciones : declaracion \n                    | declaracion declaracionessentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaraciones sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA elemento_hasheach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase cuerpoVariables\n                | asignacion cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones\n                cuerpoClaseE : cuerpoClase\n                | cuerpoClase cuerpoClaseE'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,49,50,51,54,55,56,57,58,59,60,61,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,86,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,128,130,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,183,184,185,188,189,190,191,193,194,195,196,197,200,202,203,204,205,211,212,213,214,215,218,220,224,225,227,228,229,230,231,232,235,236,237,238,240,244,245,246,248,249,250,252,253,254,256,257,258,260,263,269,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[28,28,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,76,-49,82,-50,-108,91,97,98,106,97,121,-146,121,129,-34,-35,121,82,-38,-39,-40,-41,-42,-43,136,137,149,-94,-95,-96,-97,-98,-99,-100,-61,-51,-56,-57,-58,-59,-60,-44,-47,167,169,-151,121,-121,121,-85,121,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,97,-147,129,129,136,-161,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,76,-53,97,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,91,97,-101,-102,97,217,-84,106,121,137,121,232,121,-166,-167,137,-32,121,239,136,-114,-52,121,-127,121,-126,97,-123,121,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-162,-37,255,121,-124,261,121,-143,-144,-149,261,28,121,-29,-125,97,-110,278,-160,121,-129,-122,-111,288,-86,-158,-168,288,-169,-170,129,129,-159,-128,-163,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,32,-146,32,-34,-35,32,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,32,-121,32,-85,32,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,32,32,32,-166,-167,-32,32,-114,-52,32,-127,32,-126,-123,32,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,32,-124,32,-143,-144,-149,32,32,-29,-125,-110,-160,32,-129,-122,-111,32,-86,-158,-168,32,-169,-170,-138,-131,-159,-128,-163,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[34,34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,34,-146,34,-34,-35,34,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,34,-121,34,-85,34,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,34,34,34,-166,-167,-32,34,-114,-52,34,-127,34,-126,-123,34,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,34,-124,34,-143,-144,-149,34,34,-29,-125,-110,-160,34,-129,-122,-111,34,-86,-158,-168,34,-169,-170,-138,-131,-159,-128,-163,]),'PRINTF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,35,-146,35,-34,-35,35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,35,-121,35,-85,35,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,35,35,35,-166,-167,-32,35,-114,-52,35,-127,35,-126,-123,35,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,35,-124,35,-143,-144,-149,35,35,-29,-125,-110,-160,35,-129,-122,-111,35,-86,-158,-168,35,-169,-170,-138,-131,-159,-128,-163,]),'GETS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,62,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,188,189,191,193,194,195,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[38,38,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,38,-146,38,-34,-35,38,38,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,38,-121,38,-85,38,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,38,38,38,38,-166,-167,38,-32,38,-114,-52,38,-127,38,-126,-123,38,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,38,-124,38,-143,-144,-149,38,38,-29,-125,-110,-160,38,-129,-122,-111,38,-86,-158,-168,38,-169,-170,-138,-131,-159,-128,-163,]),'LLAVE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,62,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,188,189,190,191,193,194,195,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[39,39,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,39,-146,39,-34,-35,39,39,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,39,-121,39,-85,39,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,39,39,39,39,39,-166,-167,39,-32,39,-114,-52,39,-127,39,-126,-123,39,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,39,-124,39,-143,-144,-149,39,39,-29,-125,-110,-160,39,-129,-122,-111,39,-86,-158,-168,39,-169,-170,-138,-131,-159,-128,-163,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[40,40,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,122,-146,122,-34,-35,122,-61,161,-56,-57,-58,-59,-60,-44,-47,-151,122,-121,122,-85,122,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,122,122,122,-166,-167,-32,122,-114,-52,122,-127,122,-126,-123,122,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,122,-124,122,-143,-144,-149,40,122,-29,-125,-110,-160,122,-129,-122,-111,122,-86,-158,-168,122,-169,-170,-138,-131,-159,-128,-163,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,126,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,193,194,196,203,204,211,213,220,224,225,227,228,229,230,231,232,235,236,238,249,250,252,254,257,258,263,273,275,276,277,279,281,283,284,285,286,287,290,291,],[41,41,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,192,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-166,-167,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,-143,-144,-149,41,-29,-125,-110,-129,-111,41,-86,-158,-168,41,-169,-170,-138,-131,-128,-163,]),'CORCHETE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,42,45,49,50,62,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,184,188,190,195,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[42,42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,42,-146,-34,-35,42,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,42,42,42,42,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,42,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,44,45,46,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[43,43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,43,-146,43,-34,-35,43,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,43,-121,43,-85,43,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,43,43,43,-166,-167,-32,43,-114,-52,43,-127,43,-126,-123,43,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,43,-124,43,-143,-144,-149,43,43,-29,-125,-110,-160,43,-129,-122,-111,43,-86,-158,-168,43,-169,-170,-138,-131,-159,-128,-163,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[44,44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,44,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[46,46,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,46,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'PARENTESIS_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,32,33,34,35,38,44,45,46,49,50,51,54,55,56,57,58,59,60,62,72,73,74,75,76,77,78,81,82,89,93,94,95,98,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,156,157,160,162,163,164,165,166,167,168,169,170,171,172,181,183,185,188,189,190,191,193,194,195,196,197,203,204,205,211,212,213,215,218,220,224,225,227,228,229,230,231,232,234,235,236,238,244,245,248,249,250,252,254,256,257,258,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,79,33,83,84,-108,33,-146,33,-34,-35,33,33,-38,-39,-40,-41,-42,-43,33,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,33,-121,180,181,-85,33,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,202,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,33,-84,33,33,33,33,33,-166,-167,33,-32,33,-114,-52,33,-127,33,-126,-123,33,-112,-145,-67,-62,-63,-64,-65,-66,-47,253,-67,-148,-37,33,-124,33,-143,-144,-149,33,33,-29,-125,-110,-160,33,-129,-122,-111,33,-86,-158,-168,33,-169,-170,-138,-131,-159,-128,-163,]),'SIMBOLO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,34,38,40,43,44,45,46,49,50,51,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,177,178,179,180,183,185,188,189,191,193,194,195,196,197,203,204,205,211,212,213,214,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,260,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,78,-49,-50,-108,30,30,30,-146,30,-34,-35,30,141,-94,-95,-96,-97,-98,-99,-100,-61,-51,-56,-57,-58,-59,-60,-44,-47,30,-151,30,-121,30,-85,30,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,30,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,78,-53,30,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,30,-101,-102,30,-84,30,141,30,30,-166,-167,141,-32,30,-114,-52,30,-127,30,-126,30,-123,30,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,30,-124,30,-143,-144,-149,30,30,-29,-125,30,-110,-160,30,-129,-122,-111,30,-86,-158,-168,30,-169,-170,-138,-131,-159,-128,-163,]),'FLOTANTE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,38,40,42,43,44,45,46,49,50,51,54,55,56,57,58,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,86,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,183,184,185,188,189,190,191,193,194,195,196,197,203,204,205,211,212,213,214,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,260,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[49,49,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,49,-49,49,-50,-108,49,104,49,49,-146,49,-34,-35,49,49,-38,-39,-40,-41,-42,-43,49,49,-94,-95,-96,-97,-98,-99,-100,-61,-51,-56,-57,-58,-59,-60,-44,-47,49,-151,49,-121,49,-85,49,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,49,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,49,-53,49,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,49,49,49,-101,-102,49,49,-84,104,49,49,49,49,49,-166,-167,49,-32,49,-114,-52,49,-127,49,-126,49,-123,49,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,49,-124,49,-143,-144,-149,49,49,-29,-125,49,-110,-160,49,-129,-122,-111,49,-86,-158,-168,49,-169,-170,-138,-131,-159,-128,-163,]),'ENTERO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,33,34,38,40,42,43,44,45,46,49,50,51,54,55,56,57,58,59,60,62,63,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,86,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,122,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,177,178,179,180,181,183,184,185,188,189,190,191,193,194,195,196,197,203,204,205,211,212,213,214,215,218,220,224,225,227,228,229,230,231,232,235,236,238,244,245,248,249,250,252,254,256,257,258,260,263,270,272,273,274,275,276,277,279,281,283,284,285,286,287,289,290,291,],[50,50,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,50,-49,50,-50,-108,50,103,50,50,-146,50,-34,-35,50,50,-38,-39,-40,-41,-42,-43,50,50,-94,-95,-96,-97,-98,-99,-100,-61,-51,-56,-57,-58,-59,-60,-44,-47,50,-151,50,-121,50,-85,50,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,50,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,50,-53,50,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,50,50,50,-101,-102,50,50,-84,103,50,50,50,50,50,-166,-167,50,-32,50,-114,-52,50,-127,50,-126,50,-123,50,-112,-145,-67,-62,-63,-64,-65,-66,-47,-67,-148,-37,50,-124,50,-143,-144,-149,50,50,-29,-125,50,-110,-160,50,-129,-122,-111,50,-86,-158,-168,50,-169,-170,-138,-131,-159,-128,-163,]),'WHEN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,108,109,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,187,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[51,51,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,51,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,51,-141,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-142,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,51,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[52,52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,52,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'CADENA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,31,32,34,38,39,42,45,49,50,61,62,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,130,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,159,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,183,184,188,190,195,196,202,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,254,257,258,263,273,275,277,279,290,291,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,74,-49,-50,-108,92,102,-146,-34,-35,29,138,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,29,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,74,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,92,208,209,-84,102,138,227,138,-32,29,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,29,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,53,72,73,74,75,76,77,78,81,82,89,100,110,111,112,113,114,115,116,117,118,119,120,124,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,183,196,203,204,211,213,220,224,225,227,228,229,230,231,232,236,238,249,250,252,257,258,263,273,275,277,279,290,291,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-3,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-114,-52,-127,-126,-112,-145,-67,-62,-63,-64,-65,-66,-47,-148,-37,-143,-144,-149,-29,-125,-110,-129,-111,-86,-158,-128,-163,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,26,27,29,30,34,38,45,49,50,72,73,74,75,76,77,78,81,82,89,100,109,110,111,112,113,114,115,116,117,118,119,120,124,127,128,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,155,157,160,162,163,164,165,166,167,168,169,170,171,172,176,182,183,186,187,193,194,196,203,204,211,213,220,222,223,224,225,226,227,228,229,230,231,232,233,235,236,238,242,243,247,249,250,252,254,257,258,263,264,266,267,268,271,273,275,277,279,280,281,282,283,284,285,286,287,290,291,292,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-27,-28,-30,-25,-92,-108,-146,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-141,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-147,-164,-165,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-74,-75,-76,-54,-55,-105,-106,-117,-118,-37,-113,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,211,220,-84,224,-142,-166,-167,-32,-114,-52,-127,-126,-112,249,250,-145,-67,211,-62,-63,-64,-65,-66,-47,252,-67,-148,-37,211,258,263,-143,-144,-149,-89,-29,-125,-110,275,277,-87,-88,279,-129,-111,-86,-158,290,-168,291,-171,-169,-170,-138,-131,-128,-163,-172,]),'MAS':([4,25,26,28,29,37,48,49,50,80,81,82,110,121,133,134,135,136,137,138,139,163,196,217,227,228,232,288,],[-45,55,61,-31,-30,-44,130,-34,-35,-45,-44,-47,-45,-47,55,-45,-33,-31,-31,-30,55,-46,-32,-47,-30,55,-31,-47,]),'MENOS':([4,25,28,37,49,50,80,81,82,110,121,133,134,137,139,163,217,228,232,288,],[-45,56,-47,-44,-34,-35,-45,-44,-47,-45,-47,56,-45,-47,56,-46,-47,56,-47,-47,]),'DIVISION':([4,25,28,37,49,50,80,81,82,110,121,133,134,137,139,163,217,228,232,288,],[-45,57,-47,-44,-34,-35,-45,-44,-47,-45,-47,57,-45,-47,57,-46,-47,57,-47,-47,]),'MULTIPLICACION':([4,25,28,37,49,50,80,81,82,110,121,133,134,137,139,163,217,228,232,288,],[-45,58,-47,-44,-34,-35,-45,-44,-47,-45,-47,58,-45,-47,58,-46,-47,58,-47,-47,]),'EXPONENCIACION':([4,25,28,37,49,50,80,81,82,110,121,133,134,137,139,163,217,228,232,288,],[-45,59,-47,-44,-34,-35,-45,-44,-47,-45,-47,59,-45,-47,59,-46,-47,59,-47,-47,]),'MODULO':([4,25,28,37,49,50,80,81,82,110,121,133,134,137,139,163,217,228,232,288,],[-45,60,-47,-44,-34,-35,-45,-44,-47,-45,-47,60,-45,-47,60,-46,-47,60,-47,-47,]),'VARIABLECLASE':([26,27,29,30,31,32,34,38,44,46,47,49,50,51,72,73,74,75,76,77,78,81,82,89,93,94,98,100,109,110,111,112,113,114,115,116,117,118,119,120,127,128,132,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,159,160,162,163,164,165,166,167,168,169,170,171,172,183,185,189,191,193,194,196,197,204,205,211,212,213,215,218,220,225,227,228,229,230,231,232,235,237,238,244,245,248,249,250,256,257,258,263,270,272,273,274,275,276,281,283,284,285,286,287,289,290,],[-27,-28,-30,-25,77,-49,-50,-108,123,123,123,-34,-35,123,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,123,-121,123,-85,123,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,123,123,-161,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-75,-76,-54,-55,-105,-106,77,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,123,123,123,-166,-167,-32,123,-52,123,-127,123,-126,-123,123,-112,-67,-62,-63,-64,-65,-66,-47,-67,-162,-37,123,-124,123,-143,-144,123,-29,-125,-110,-160,123,-129,-122,-111,123,-168,123,-169,-170,123,123,-159,-128,]),'DO':([26,27,29,30,34,38,49,50,64,72,73,74,75,76,77,78,81,82,89,100,107,110,111,112,113,114,115,116,117,118,119,120,125,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,154,160,162,163,164,165,166,167,168,169,170,171,172,183,196,204,211,213,225,227,228,229,230,231,232,238,249,250,257,258,273,290,],[-27,-28,-30,-25,-92,-108,-34,-35,153,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,185,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,191,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-75,-76,-54,-55,-105,-106,201,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-52,-127,-126,-67,-62,-63,-64,-65,-66,-47,-37,-143,-144,-29,-125,-129,-128,]),'IGUAL_DOBLEP':([26,27,28,29,30,34,36,37,38,49,50,72,73,74,75,76,77,78,81,82,89,96,97,100,110,111,112,113,114,115,116,117,118,119,120,121,131,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,160,162,163,164,165,166,167,168,169,170,171,172,183,196,204,211,213,225,227,228,229,230,231,232,238,249,250,257,258,273,288,290,],[-27,-28,65,-30,-25,-92,65,65,-108,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,65,65,-85,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,65,197,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-75,-76,-54,-55,-105,-106,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,-84,-32,-52,-127,-126,-67,-62,-63,-64,-65,-66,-47,-37,-143,-144,-29,-125,-129,65,-128,]),'ELSE':([26,27,29,30,34,38,49,50,72,73,74,75,76,77,78,81,82,89,100,109,110,111,112,113,114,115,116,117,118,119,120,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,160,162,163,164,165,166,167,168,169,170,171,172,176,183,187,196,204,211,213,225,226,227,228,229,230,231,232,238,249,250,257,258,259,273,290,],[-27,-28,-30,-25,-92,-108,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-141,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-75,-76,-54,-55,-105,-106,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,212,-84,-142,-32,-52,-127,-126,-67,212,-62,-63,-64,-65,-66,-47,-37,-143,-144,-29,-125,272,-129,-128,]),'ELSEIF':([26,27,29,30,34,38,49,50,72,73,74,75,76,77,78,81,82,89,100,109,110,111,112,113,114,115,116,117,118,119,120,133,134,135,136,137,138,139,140,141,142,143,145,146,147,148,149,150,160,162,163,164,165,166,167,168,169,170,171,172,176,183,187,196,204,211,213,225,226,227,228,229,230,231,232,238,249,250,257,258,259,273,290,],[-27,-28,-30,-25,-92,-108,-34,-35,-61,-51,-56,-57,-58,-59,-60,-44,-47,-151,-85,-141,-130,-131,-132,-133,-134,-135,-136,-137,-138,-139,-140,-48,-45,-33,-31,-47,-68,-69,-70,-71,-72,-73,-75,-76,-54,-55,-105,-106,-53,-90,-46,-91,-93,-103,-26,-104,-107,-109,-115,-150,214,-84,-142,-32,-52,-127,-126,-67,214,-62,-63,-64,-65,-66,-47,-37,-143,-144,-29,-125,214,-129,-128,]),'IGUAL':([28,121,123,129,288,],[62,188,190,195,195,]),'PUNTO':([28,38,137,232,],[64,87,199,251,]),'NAVE':([28,30,36,37,49,50,96,97,121,288,],[66,-25,66,66,-34,-35,66,66,66,66,]),'DIFERENTE':([28,30,36,37,49,50,96,97,121,288,],[67,-25,67,67,-34,-35,67,67,67,67,]),'MAYOR_QUE':([28,30,36,37,49,50,96,97,121,288,],[68,-25,68,68,-34,-35,68,68,68,68,]),'MENOR_QUE':([28,30,36,37,49,50,96,97,121,132,288,],[69,-25,69,69,-34,-35,69,69,69,198,69,]),'MENOR_IGUAL_QUE':([28,30,36,37,49,50,96,97,121,288,],[70,-25,70,70,-34,-35,70,70,70,70,]),'MAYOR_IGUAL_QUE':([28,30,36,37,49,50,96,97,121,288,],[71,-25,71,71,-34,-35,71,71,71,71,]),'PARENTESIS_DER':([29,30,49,50,79,80,81,82,83,84,133,134,136,149,150,163,166,167,168,169,181,216,217,219,241,261,262,265,],[-30,-25,-34,-35,162,163,-44,-47,164,165,-48,-45,-31,-105,-106,-46,-103,-26,-104,-107,218,245,-119,248,257,-119,-120,276,]),'Y_SIGNO':([30,49,50,94,149,150,166,167,168,169,245,],[-25,-34,-35,178,-105,-106,-103,-26,-104,-107,178,]),'O_SIGNO':([30,49,50,94,149,150,166,167,168,169,245,],[-25,-34,-35,179,-105,-106,-103,-26,-104,-107,179,]),'LLAVE_DER':([39,49,50,88,90,206,207,208,209,210,],[89,-34,-35,172,-156,-157,-152,-153,-155,-154,]),'EXCLAMACION_BAJO':([40,122,161,177,178,179,214,260,],[95,95,95,95,-101,-102,95,95,]),'CORCHETE_DER':([42,99,100,101,102,103,104,105,106,183,221,],[100,183,-85,-78,-79,-80,-81,-82,-83,-84,-77,]),'COMA':([49,50,73,74,75,76,77,78,90,100,101,102,103,104,105,106,183,207,208,209,210,217,255,261,],[-34,-35,159,-56,-57,-58,-59,-60,173,-85,184,-79,-80,-81,-82,-83,-84,-152,-153,-155,-154,246,269,246,]),'ID_CLASE':([52,198,],[132,237,]),'TRUE':([62,188,195,],[147,147,147,]),'FALSE':([62,188,195,],[148,148,148,]),'EACH':([64,158,],[154,203,]),'TO_F':([64,199,],[155,238,]),'CONCAT':([64,199,251,],[156,156,156,]),'SORT':([64,],[157,]),'FOR':([64,],[158,]),'CHOMP':([87,],[171,]),'ASIGNA_HASH':([91,92,],[174,175,]),'BARRA':([153,201,239,255,278,],[200,240,254,270,289,]),'INITIALIZE':([192,],[234,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruccion':([0,],[1,]),'cuerpoInstruccion':([0,3,],[2,53,]),'cuerpo':([0,3,254,],[3,3,267,]),'operacionAritmetica':([0,3,33,44,46,51,54,62,93,98,109,181,185,188,189,190,191,195,197,205,212,218,244,248,254,256,272,276,283,],[4,4,80,110,110,110,134,134,110,110,110,80,110,134,110,134,110,134,110,110,110,110,110,110,4,110,110,110,110,]),'input_concatenacion':([0,3,62,188,190,195,254,],[5,5,143,143,231,143,5,]),'asignacion':([0,3,44,46,47,51,93,98,109,127,128,185,189,191,197,205,212,218,244,248,254,256,272,276,283,286,287,],[6,6,111,111,128,111,111,111,111,128,128,111,111,111,111,111,111,111,111,111,6,111,111,287,287,128,128,]),'impresion':([0,3,44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[7,7,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,7,112,112,112,112,]),'impresion_vacia':([0,3,44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[8,8,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,8,113,113,113,113,]),'expresiones_booleanas':([0,3,40,43,44,46,51,93,98,109,122,161,177,180,185,189,191,197,205,212,214,218,244,248,254,256,260,272,276,283,],[9,9,94,107,114,114,114,114,114,114,94,94,94,216,114,114,114,114,114,114,94,114,114,114,9,114,94,114,114,114,]),'solicitudDatosTeclado':([0,3,44,46,51,62,93,98,109,185,188,189,191,195,197,205,212,218,244,248,254,256,272,276,283,],[10,10,115,115,115,145,115,115,115,115,145,115,115,145,115,115,115,115,115,115,10,115,115,115,115,]),'hashes':([0,3,44,46,51,62,93,98,109,185,188,189,190,191,195,197,205,212,218,244,248,254,256,272,276,283,],[11,11,116,116,116,140,116,116,116,116,140,116,229,116,140,116,116,116,116,116,116,11,116,116,116,116,]),'estructura_ifUnaLinea':([0,3,44,46,51,73,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[12,12,120,120,120,160,120,120,120,120,120,120,120,120,120,120,120,120,12,120,120,120,120,]),'estructura_if':([0,3,44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[13,13,117,117,117,117,117,117,117,117,117,117,117,117,117,117,117,13,117,117,117,117,]),'funciones':([0,3,254,276,283,],[14,14,14,285,285,]),'funcionesEstructuras':([0,3,254,],[15,15,15,]),'array':([0,3,42,62,184,188,190,195,254,],[16,16,105,142,105,142,230,142,16,]),'each_array':([0,3,254,],[17,17,17,]),'each_hash':([0,3,254,],[18,18,18,]),'sentencia_while':([0,3,44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[19,19,119,119,119,119,119,119,222,119,119,119,119,119,119,119,119,19,119,119,119,119,]),'sentencia_case':([0,3,254,],[20,20,20,]),'sentencias_when':([0,3,45,254,],[21,21,124,21,]),'sentencia_until':([0,3,254,],[22,22,22,]),'definicion_clase':([0,3,254,],[23,23,23,]),'entero_a_flotante':([0,3,62,188,195,254,],[24,24,146,146,146,24,]),'expresionNumerica':([0,3,33,44,46,51,54,62,93,98,109,181,185,188,189,190,191,195,197,205,212,218,244,248,254,256,272,276,283,],[25,25,25,25,25,25,133,139,25,25,25,25,25,139,25,228,25,139,25,25,25,25,25,25,25,25,25,25,25,]),'concatenacionSimpleCadena':([0,3,62,188,190,195,254,],[26,26,26,26,26,26,26,]),'concatenacion_funcion':([0,3,62,188,190,195,254,],[27,27,27,27,27,27,27,]),'valor_print':([0,3,44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,254,256,272,276,283,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'valorSimbolo':([0,3,40,43,44,46,51,85,93,98,109,122,161,177,180,185,189,191,197,205,212,214,218,244,248,254,256,260,272,276,283,],[36,36,36,36,36,36,36,166,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'valorNumerico':([0,3,31,33,40,43,44,46,51,54,62,63,86,93,98,109,122,159,161,174,175,177,180,181,185,188,189,190,191,195,197,205,212,214,218,244,248,254,256,260,272,276,283,],[37,37,75,81,96,96,37,37,37,81,81,150,168,37,37,37,96,75,96,207,210,96,96,81,37,81,37,81,37,81,37,37,37,96,37,37,37,37,37,96,37,37,37,]),'sentencia_when':([0,3,45,108,254,],[45,45,45,186,45,]),'encabezadoClase':([0,3,254,],[47,47,47,]),'valorCadena':([0,3,61,62,130,188,190,195,202,254,],[48,48,135,48,196,48,48,48,241,48,]),'operadores':([25,133,139,228,],[54,54,54,54,]),'operadoresComparacion':([28,36,37,96,97,121,288,],[63,85,86,86,63,63,63,]),'valores':([31,159,],[72,204,]),'valor':([31,159,],[73,73,]),'elemento_hash':([39,173,],[88,206,]),'claveValor':([39,173,],[90,90,]),'condicionIf':([40,122,161,177,214,260,],[93,189,205,215,244,274,]),'elementos_array':([42,184,],[99,221,]),'elemento_array':([42,184,],[101,101,]),'declaraciones':([44,93,98,109,189,205,212,218,244,248,272,],[108,176,182,187,226,242,243,247,259,264,280,]),'declaracion':([44,46,51,93,98,109,185,189,191,197,205,212,218,244,248,256,272,276,283,],[109,125,131,109,109,109,223,109,233,236,109,109,109,109,109,271,109,284,284,]),'asignacion_clase':([44,46,47,51,93,98,109,127,128,185,189,191,197,205,212,218,244,248,256,272,276,283,286,287,],[118,118,127,118,118,118,118,127,127,118,118,118,118,118,118,118,118,118,118,118,286,286,127,127,]),'cuerpoVariables':([47,127,128,276,283,286,287,],[126,193,194,281,281,193,194,]),'booleanos':([62,188,195,],[144,225,235,]),'funcionesArray':([64,],[151,]),'funcionesNumeros':([64,],[152,]),'funcionesFormatoImpresion':([87,],[170,]),'funcionesComparacion':([94,245,],[177,260,]),'estructura_secundaria_if':([176,226,259,],[213,213,273,]),'argumentos':([181,246,253,],[219,262,265,]),'each_args_hash':([240,],[256,]),'cuerpo_each':([254,],[266,]),'vacio':([254,],[268,]),'cuerpoClaseE':([276,283,],[282,292,]),'cuerpoClase':([276,283,],[283,283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruccion","S'",1,None,None,None),
  ('instruccion -> cuerpoInstruccion','instruccion',1,'p_instruccion','sintactico.py',14),
  ('cuerpoInstruccion -> cuerpo','cuerpoInstruccion',1,'p_cuerpoInstruccion','sintactico.py',18),
  ('cuerpoInstruccion -> cuerpo cuerpoInstruccion','cuerpoInstruccion',2,'p_cuerpoInstruccion','sintactico.py',19),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',41),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',42),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',48),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',49),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',88),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',89),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',95),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',108),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',109),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',143),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',144),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',163),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',164),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',176),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',181),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',198),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',199),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',200),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',201),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',202),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',203),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',208),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',209),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',210),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',211),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',225),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',264),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',265),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',270),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',271),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',272),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',276),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',277),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',284),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',285),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',286),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',287),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',288),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',307),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',310),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',311),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',312),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',313),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',314),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',315),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',320),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',321),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',322),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',323),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',324),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',325),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',326),
  ('asignacion -> VARIABLE IGUAL solicitudDatosTeclado','asignacion',3,'p_asignacion','sintactico.py',327),
  ('asignacion -> VARIABLE IGUAL entero_a_flotante','asignacion',3,'p_asignacion','sintactico.py',328),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',338),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',339),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',347),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',348),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',349),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',350),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',351),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',359),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',360),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',369),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',373),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',374),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',378),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',384),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',385),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',386),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',387),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',392),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',393),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',394),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',395),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',396),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',397),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',398),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',402),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',403),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',407),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',408),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',409),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',410),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',411),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',475),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',476),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END','funciones',6,'p_funciones','sintactico.py',479),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END','funciones',7,'p_funciones','sintactico.py',480),
  ('funciones -> DEF VARIABLE declaraciones END','funciones',4,'p_funciones','sintactico.py',481),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',485),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',486),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',490),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',494),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',498),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',499),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',519),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',520),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',525),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',526),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',527),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',528),
  ('estructura_if -> IF condicionIf declaraciones ELSE declaraciones END','estructura_if',6,'p_estructura_if','sintactico.py',532),
  ('estructura_if -> IF condicionIf declaraciones estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',533),
  ('estructura_ifUnaLinea -> IF condicionIf declaraciones END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',537),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',542),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',543),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',547),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',548),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',549),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',550),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',551),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',552),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',553),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',554),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',555),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',556),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',557),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','sintactico.py',560),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','sintactico.py',561),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',565),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',566),
  ('sentencia_case -> CASE declaraciones sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',573),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',577),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',578),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',582),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',586),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',591),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',592),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',596),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',597),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',598),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',599),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',603),
  ('elemento_hash -> claveValor COMA elemento_hash','elemento_hash',3,'p_elemento_hash','sintactico.py',604),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',608),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',612),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',613),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',616),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',617),
  ('definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END','definicion_clase',9,'p_definicion_clase','sintactico.py',620),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',624),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',625),
  ('cuerpoVariables -> asignacion_clase cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',626),
  ('cuerpoVariables -> asignacion cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',627),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',631),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',632),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',633),
  ('cuerpoClaseE -> cuerpoClase','cuerpoClaseE',1,'p_cuerpoClaseE','sintactico.py',637),
  ('cuerpoClaseE -> cuerpoClase cuerpoClaseE','cuerpoClaseE',2,'p_cuerpoClaseE','sintactico.py',638),
]
