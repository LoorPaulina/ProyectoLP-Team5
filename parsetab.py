
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEWLINE NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_claseinput_concatenacion : concatenacionSimpleCadena\n                           | concatenacion_funcionconcatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DERvalorCadena : CADENA\n                   | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROoperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineavalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacionasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacionelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE declaracion DO sentencia_while END\n                      | WHILE declaracion DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                 | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,27,28,30,33,35,36,37,38,41,42,44,47,48,56,57,58,60,61,62,63,64,65,80,88,89,115,121,133,134,143,145,150,151,152,156,160,161,162,164,166,167,168,169,171,172,174,176,178,188,190,191,193,211,215,216,218,223,224,225,227,240,241,243,251,252,255,],[25,70,-41,-42,-29,86,91,93,101,114,114,114,-28,114,126,127,133,-81,-82,-83,-84,-85,-86,151,114,-106,91,126,-91,-92,70,91,-89,-93,-90,86,91,-87,-88,192,101,114,114,127,114,208,114,210,126,114,91,-107,114,226,114,192,114,208,208,25,114,248,-141,114,192,-140,114,]),'PRINT':([0,33,41,42,44,47,48,88,89,133,134,150,151,152,167,168,171,174,188,191,193,215,218,225,227,241,243,252,255,],[28,-29,28,28,28,-28,28,28,-106,-91,-92,-89,-93,-90,28,28,28,28,28,-107,28,28,28,28,28,-141,28,-140,28,]),'PUTS':([0,33,41,42,44,47,48,88,89,133,134,150,151,152,167,168,171,174,188,191,193,215,218,225,227,241,243,252,255,],[30,-29,30,30,30,-28,30,30,-106,-91,-92,-89,-93,-90,30,30,30,30,30,-107,30,30,30,30,30,-141,30,-140,30,]),'GETS':([0,33,41,42,44,47,48,88,89,133,134,150,151,152,167,168,171,174,188,191,193,215,218,225,227,241,243,252,255,],[34,-29,34,34,34,-28,34,34,-106,-91,-92,-89,-93,-90,34,34,34,34,34,-107,34,34,34,34,34,-141,34,-140,34,]),'LLAVE_IZ':([0,33,41,42,44,47,48,57,88,89,133,134,150,151,152,167,168,169,171,174,188,191,193,215,218,225,227,241,243,252,255,],[35,-29,35,35,35,-28,35,35,35,-106,-91,-92,-89,-93,-90,35,35,35,35,35,35,-107,35,35,35,35,35,-141,35,-140,35,]),'IF':([0,33,41,42,44,47,48,67,68,69,70,71,72,88,89,133,134,150,151,152,167,168,171,174,188,191,193,215,218,225,227,241,243,252,255,],[36,-29,115,115,115,-28,115,145,-46,-47,-48,-49,-50,115,-106,-91,-92,-89,-93,-90,115,115,115,115,115,-107,115,115,115,36,115,-141,115,-140,115,]),'DEF':([0,222,225,255,],[37,234,37,37,]),'CORCHETE_IZ':([0,38,57,166,169,225,],[38,38,38,38,38,38,]),'COMENTARIO':([0,225,],[39,39,]),'COMENTARIO_MULTI':([0,225,],[40,40,]),'WHILE':([0,33,41,42,44,47,48,88,89,133,134,150,151,152,167,168,171,174,188,191,193,215,218,225,227,241,243,252,255,],[41,-29,41,41,41,-28,41,41,-106,-91,-92,-89,-93,-90,41,41,41,41,41,-107,41,41,41,41,41,-141,41,-140,41,]),'CASE':([0,225,],[42,42,]),'UNTIL':([0,225,],[44,44,]),'CLASS':([0,225,],[45,45,]),'PARENTESIS_IZ':([0,28,29,30,33,36,41,42,44,47,48,49,50,51,52,53,54,55,57,74,88,89,93,115,133,134,139,145,150,151,152,160,161,162,167,168,169,171,174,188,190,191,193,215,218,225,227,241,243,246,252,255,],[29,73,74,79,-29,92,29,29,29,-28,29,74,-31,-32,-33,-34,-35,-36,74,74,29,-106,164,92,-91,-92,178,92,-89,-93,-90,92,-87,-88,29,29,74,29,29,29,92,-107,29,29,29,29,29,-141,29,251,-140,29,]),'FLOTANTE':([0,27,28,29,30,33,36,38,41,42,44,47,48,49,50,51,52,53,54,55,57,58,60,61,62,63,64,65,74,80,88,89,115,133,134,143,145,150,151,152,157,158,160,161,162,166,167,168,169,171,174,188,190,191,193,215,218,225,227,241,243,252,255,],[47,47,-41,47,-42,-29,47,99,47,47,47,-28,47,47,-31,-32,-33,-34,-35,-36,47,47,-81,-82,-83,-84,-85,-86,47,47,47,-106,47,-91,-92,47,47,-89,-93,-90,47,47,47,-87,-88,99,47,47,47,47,47,47,47,-107,47,47,47,47,47,-141,47,-140,47,]),'ENTERO':([0,27,28,29,30,33,36,38,41,42,44,47,48,49,50,51,52,53,54,55,57,58,60,61,62,63,64,65,74,80,81,88,89,92,115,133,134,143,145,148,150,151,152,157,158,160,161,162,166,167,168,169,171,174,188,190,191,193,215,218,225,227,241,243,252,255,],[33,33,-41,77,-42,-29,33,98,33,33,33,-28,33,33,-31,-32,-33,-34,-35,-36,33,33,-81,-82,-83,-84,-85,-86,33,33,152,33,-106,163,33,-91,-92,33,33,163,-89,-93,-90,33,33,33,-87,-88,98,33,33,33,33,33,33,33,-107,33,33,33,33,33,-141,33,-140,33,]),'WHEN':([0,23,24,26,30,33,34,43,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,117,123,124,125,126,128,129,130,131,132,133,134,144,146,147,149,150,151,152,153,154,155,165,168,173,180,181,189,191,198,199,200,201,202,209,219,220,225,228,229,244,253,],[48,-21,-22,-24,-80,-29,-94,48,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,48,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,-69,-110,-26,-44,-110,-109,-107,-52,-53,-54,-55,-56,-129,-125,-124,48,-23,-108,-112,-111,]),'CADENA':([0,27,28,30,35,38,56,57,121,143,156,157,158,166,169,178,225,],[26,68,-41,-42,87,97,26,128,26,68,87,185,186,97,198,26,26,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,30,33,34,39,40,43,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,118,123,124,125,126,128,129,130,131,132,133,134,135,136,140,142,144,146,147,149,150,151,152,153,154,155,165,168,173,179,180,181,189,191,198,199,200,201,202,203,209,219,220,221,228,229,232,244,245,247,249,253,262,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-80,-29,-94,-76,-77,-127,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,-128,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-102,-103,-98,-101,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,-69,-110,-26,-99,-44,-110,-109,-107,-52,-53,-54,-55,-56,-126,-129,-125,-124,-130,-23,-108,-96,-112,-97,-71,-139,-111,-142,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,26,30,33,34,39,40,43,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,118,123,124,125,126,128,129,130,131,132,133,134,135,136,140,142,144,146,147,149,150,151,152,153,154,155,165,168,170,173,179,180,181,189,191,196,197,198,199,200,201,202,203,204,206,207,209,214,217,219,220,221,225,228,229,232,233,235,236,237,238,239,242,244,245,247,249,250,253,256,257,258,259,260,261,262,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-24,-80,-29,-94,-76,-77,-127,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,-128,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-102,-103,-98,-101,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,-69,-110,203,-26,-99,-44,-110,-109,-107,219,220,-52,-53,-54,-55,-56,-126,221,-143,-144,-129,229,232,-125,-124,-130,-74,-23,-108,-96,245,-145,-146,247,-72,-73,249,-112,-97,-71,-139,253,-111,-147,262,-148,-149,-121,-114,-142,]),'MAS':([2,22,23,25,26,31,33,46,47,75,77,78,104,123,124,125,126,127,128,129,147,173,198,199,],[-38,50,56,-25,-24,-37,-29,121,-28,-38,-29,-37,-38,50,-38,-27,-25,-25,-24,50,-39,-26,-24,50,]),'MENOS':([2,22,31,33,47,75,77,78,104,123,124,129,147,199,],[-38,51,-37,-29,-28,-38,-29,-37,-38,51,-38,51,-39,51,]),'DIVISION':([2,22,31,33,47,75,77,78,104,123,124,129,147,199,],[-38,52,-37,-29,-28,-38,-29,-37,-38,52,-38,52,-39,52,]),'MULTIPLICACION':([2,22,31,33,47,75,77,78,104,123,124,129,147,199,],[-38,53,-37,-29,-28,-38,-29,-37,-38,53,-38,53,-39,53,]),'EXPONENCIACION':([2,22,31,33,47,75,77,78,104,123,124,129,147,199,],[-38,54,-37,-29,-28,-38,-29,-37,-38,54,-38,54,-39,54,]),'MODULO':([2,22,31,33,47,75,77,78,104,123,124,129,147,199,],[-38,55,-37,-29,-28,-38,-29,-37,-38,55,-38,55,-39,55,]),'DO':([23,24,26,30,33,34,47,59,66,67,68,69,70,71,72,78,84,89,95,102,103,104,105,106,107,108,109,110,111,112,113,119,123,124,125,126,128,129,130,131,132,133,134,138,144,146,147,149,150,151,152,153,154,155,165,168,173,180,181,189,191,198,199,200,201,202,219,220,228,229,244,253,],[-21,-22,-24,-80,-29,-94,-28,137,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,167,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,171,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,177,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,-69,-110,-26,-44,-110,-109,-107,-52,-53,-54,-55,-56,-125,-124,-23,-108,-112,-111,]),'IGUAL_DOBLEP':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,122,123,124,125,126,128,129,130,131,132,133,134,144,146,147,149,150,151,152,153,154,155,165,168,173,180,181,189,191,198,199,200,201,202,219,220,228,229,244,253,],[-21,-22,-24,-80,-29,-94,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,174,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,-69,-110,-26,-44,-110,-109,-107,-52,-53,-54,-55,-56,-125,-124,-23,-108,-112,-111,]),'ELSE':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,123,124,125,126,128,129,130,131,132,133,134,144,146,147,149,150,151,152,153,154,155,159,165,168,173,180,181,189,191,198,199,200,201,202,219,220,228,229,230,244,253,],[-21,-22,-24,-80,-29,-94,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,188,-69,-110,-26,-44,-110,-109,-107,-52,-53,-54,-55,-56,-125,-124,-23,-108,243,-112,-111,]),'ELSEIF':([23,24,26,30,33,34,47,66,67,68,69,70,71,72,78,84,89,95,103,104,105,106,107,108,109,110,111,112,113,123,124,125,126,128,129,130,131,132,133,134,144,146,147,149,150,151,152,153,154,155,159,165,168,173,180,181,189,191,198,199,200,201,202,219,220,228,229,230,244,253,],[-21,-22,-24,-80,-29,-94,-28,-51,-43,-46,-47,-48,-49,-50,-37,-132,-106,-70,-122,-113,-114,-115,-116,-117,-118,-119,-120,-121,-123,-40,-38,-27,-25,-57,-58,-59,-60,-61,-91,-92,-45,-78,-39,-79,-89,-93,-90,-95,-100,-131,190,-69,-110,-26,-44,-110,-109,-107,-52,-53,-54,-55,-56,-125,-124,-23,-108,190,-112,-111,]),'NEWLINE':([23,24,26,33,47,78,84,95,120,123,124,125,126,128,129,130,131,132,147,155,165,173,198,199,200,201,202,205,206,207,228,235,236,260,261,],[-21,-22,-24,-29,-28,-37,-132,-70,172,-40,-38,-27,-25,-57,-58,-59,-60,-61,-39,-131,-69,-26,-52,-53,-54,-55,-56,222,223,224,-23,-145,-146,223,224,]),'IGUAL':([25,114,116,208,],[57,57,169,57,]),'PUNTO':([25,34,127,],[59,82,175,]),'DOBLE_IGUAL':([25,31,33,47,90,91,114,],[60,60,-29,-28,60,60,60,]),'DIFERENTE':([25,31,33,47,90,91,114,],[61,61,-29,-28,61,61,61,]),'MAYOR_QUE':([25,31,33,47,90,91,114,],[62,62,-29,-28,62,62,62,]),'MENOR_QUE':([25,31,33,47,90,91,114,],[63,63,-29,-28,63,63,63,]),'MENOR_IGUAL_QUE':([25,31,33,47,90,91,114,],[64,64,-29,-28,64,64,64,]),'MAYOR_IGUAL_QUE':([25,31,33,47,90,91,114,],[65,65,-29,-28,65,65,65,]),'PARENTESIS_DER':([26,33,47,73,75,78,79,123,124,126,147,163,164,182,192,194,212,231,254,],[-24,-29,-28,146,147,-37,149,-40,-38,-25,-39,-30,193,213,-104,218,228,-105,255,]),'VARIABLECLASE':([27,28,30,33,41,42,44,47,48,88,89,133,134,143,150,151,152,167,168,171,172,174,188,191,193,215,218,223,224,227,241,243,252,255,],[71,-41,-42,-29,116,116,116,-28,116,116,-106,-91,-92,71,-89,-93,-90,116,116,116,116,116,116,-107,116,116,116,116,116,116,-141,116,-140,116,]),'SIMBOLO':([27,28,30,143,],[72,-41,-42,72,]),'TRIPLE_IGUAL':([32,213,],[81,-75,]),'COMA':([33,47,67,68,69,70,71,72,85,95,96,97,98,99,100,101,165,184,185,186,187,192,226,],[-29,-28,143,-46,-47,-48,-49,-50,156,-70,166,-64,-65,-66,-67,-68,-69,-133,-134,-136,-135,216,240,]),'AND':([33,47,89,133,134,150,151,152,],[-29,-28,161,-91,-92,-89,-93,-90,]),'OR':([33,47,89,133,134,150,151,152,],[-29,-28,162,-91,-92,-89,-93,-90,]),'LLAVE_DER':([33,35,47,83,85,183,184,185,186,187,],[-29,84,-28,155,-137,-138,-133,-134,-136,-135,]),'CORCHETE_DER':([38,94,95,96,97,98,99,100,101,165,195,],[95,165,-70,-63,-64,-65,-66,-67,-68,-69,-62,]),'ID_CLASE':([45,],[120,]),'EACH':([59,141,],[138,179,]),'CONCAT':([59,175,],[139,139,]),'SORT':([59,],[140,]),'FOR':([59,],[141,]),'TO_F':([59,],[142,]),'TRES_PUNTOS':([76,77,163,],[148,-30,-30,]),'CHOMP':([82,],[154,]),'ASIGNA_HASH':([86,87,],[157,158,]),'BARRA':([137,177,210,226,248,],[176,211,225,241,252,]),'INITIALIZE':([234,],[246,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,225,],[1,238,]),'operacionAritmetica':([0,29,41,42,44,48,49,57,74,88,167,168,169,171,174,188,193,215,218,225,227,243,255,],[2,75,104,104,104,104,124,124,75,104,104,104,124,104,104,104,104,104,104,2,104,104,104,]),'input_concatenacion':([0,57,169,225,],[3,132,202,3,]),'asignacion':([0,41,42,44,48,88,167,168,171,172,174,188,193,215,218,223,224,225,227,243,255,],[4,105,105,105,105,105,105,105,105,207,105,105,105,105,105,207,207,4,105,105,261,]),'impresion':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[5,106,106,106,106,106,106,106,106,106,106,106,106,106,5,106,106,106,]),'impresion_vacia':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[6,107,107,107,107,107,107,107,107,107,107,107,107,107,6,107,107,107,]),'expresiones_booleanas':([0,36,41,42,44,48,88,115,145,160,167,168,171,174,188,190,193,215,218,225,227,243,255,],[7,89,108,108,108,108,108,89,89,191,108,108,108,108,108,89,108,108,108,7,108,108,108,]),'solicitudDatosTeclado':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[8,109,109,109,109,109,109,109,109,109,109,109,109,109,8,109,109,109,]),'hashes':([0,41,42,44,48,57,88,167,168,169,171,174,188,193,215,218,225,227,243,255,],[9,110,110,110,110,130,110,110,110,200,110,110,110,110,110,110,9,110,110,110,]),'estructura_if':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[10,111,111,111,111,111,111,111,111,111,111,111,111,111,10,111,111,111,]),'funciones':([0,225,255,],[11,11,259,]),'funcionesEstructuras':([0,225,],[12,12,]),'array':([0,38,57,166,169,225,],[13,100,131,100,201,13,]),'each_array':([0,225,],[14,14,]),'comentarios':([0,225,],[15,15,]),'each_hash':([0,225,],[16,16,]),'sentencia_while':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[17,103,103,103,103,103,197,103,103,103,103,103,103,103,17,103,103,103,]),'sentencia_case':([0,225,],[18,18,]),'sentencias_when':([0,43,225,],[19,118,19,]),'sentencia_until':([0,225,],[20,20,]),'definicion_clase':([0,225,],[21,21,]),'expresionNumerica':([0,29,41,42,44,48,49,57,74,88,167,168,169,171,174,188,193,215,218,225,227,243,255,],[22,22,22,22,22,22,123,129,22,22,22,22,199,22,22,22,22,22,22,22,22,22,22,]),'concatenacionSimpleCadena':([0,57,169,225,],[23,23,23,23,]),'concatenacion_funcion':([0,57,169,225,],[24,24,24,24,]),'valor_print':([0,41,42,44,48,88,167,168,171,174,188,193,215,218,225,227,243,255,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'valorNumerico':([0,27,29,36,41,42,44,48,49,57,58,74,80,88,115,143,145,157,158,160,167,168,169,171,174,188,190,193,215,218,225,227,243,255,],[31,69,78,90,31,31,31,31,78,78,134,78,150,31,90,69,90,184,187,90,31,31,78,31,31,31,90,31,31,31,31,31,31,31,]),'rangos':([0,36,41,42,44,48,88,115,145,160,167,168,171,174,188,190,193,215,218,225,227,243,255,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'sentencia_when':([0,43,117,225,],[43,43,170,43,]),'valorCadena':([0,56,57,121,169,178,225,],[46,125,46,173,46,212,46,]),'operadores':([22,123,129,199,],[49,49,49,49,]),'operadoresComparacion':([25,31,90,91,114,],[58,80,80,58,58,]),'valores':([27,143,],[66,180,]),'valor':([27,143,],[67,67,]),'soloEnteros':([29,92,148,],[76,76,182,]),'elemento_hash':([35,],[83,]),'claveValor':([35,156,],[85,183,]),'condicionIf':([36,115,145,190,],[88,168,181,215,]),'elementos_array':([38,166,],[94,195,]),'elemento_array':([38,166,],[96,96,]),'declaracion':([41,42,44,48,88,167,168,171,174,188,193,215,218,227,243,255,],[102,117,119,122,159,196,159,204,209,214,217,230,233,242,250,258,]),'asignacion_clase':([41,42,44,48,88,167,168,171,172,174,188,193,215,218,223,224,227,243,255,],[112,112,112,112,112,112,112,112,206,112,112,112,112,112,206,206,112,112,260,]),'estructura_ifUnaLinea':([41,42,44,48,67,88,167,168,171,174,188,193,215,218,227,243,255,],[113,113,113,113,144,113,113,113,113,113,113,113,113,113,113,113,113,]),'funcionesArray':([59,],[135,]),'funcionesNumeros':([59,],[136,]),'funcionesFormatoImpresion':([82,],[153,]),'funcionesComparacion':([89,],[160,]),'estructura_secundaria_if':([159,230,],[189,244,]),'argumentos':([164,216,251,],[194,231,254,]),'cuerpoVariables':([172,223,224,255,],[205,235,236,256,]),'each_args_hash':([211,],[227,]),'cuerpo_each':([225,],[237,]),'vacio':([225,],[239,]),'cuerpoClase':([255,],[257,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',37),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',38),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',43),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',55),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',56),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',88),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',89),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',107),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',108),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',121),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',125),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',126),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',127),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',128),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',129),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',130),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',134),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',135),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',136),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',143),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',164),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',165),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',168),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',169),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',170),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',176),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',177),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',178),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',179),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',180),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',198),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',206),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',207),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',208),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',209),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',210),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',214),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',215),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',216),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',217),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',218),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',227),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',228),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',235),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',236),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',237),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',238),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',239),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',246),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',247),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',255),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',257),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',258),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',260),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',265),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',269),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',270),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',273),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',274),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',275),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',279),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',280),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',281),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',282),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',283),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',284),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',287),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',288),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',291),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',292),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',293),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',294),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',295),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',360),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',361),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',365),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',366),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',369),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',370),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',373),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',376),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',379),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',380),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',400),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',401),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',405),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',406),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',409),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',410),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',413),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',416),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',417),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',419),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',420),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',421),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',422),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',423),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',424),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',425),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',426),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',427),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',428),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',429),
  ('sentencia_while -> WHILE declaracion DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',434),
  ('sentencia_while -> WHILE declaracion DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',435),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',438),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',441),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',442),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',445),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',448),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',452),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',453),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',456),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',457),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',458),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',459),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',462),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',463),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',467),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',470),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',471),
  ('definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',12,'p_definicion_clase','sintactico.py',474),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',477),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',478),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',479),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',480),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',483),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',484),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',485),
]
