
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEWLINE NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotanteinput_concatenacion : concatenacionSimpleCadena\n                           | concatenacion_funcionconcatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DERvalorCadena : CADENA\n                   | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanoselementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                 | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,28,29,31,34,36,37,38,39,42,43,45,48,49,57,58,59,61,62,63,64,65,66,81,89,90,117,122,137,138,147,149,154,155,156,160,164,165,166,168,170,171,173,174,175,176,177,179,181,183,193,195,196,198,217,221,222,224,229,230,231,232,234,248,249,251,259,260,263,],[26,71,-43,-44,-30,87,92,94,102,92,116,116,-29,116,127,128,137,-87,-88,-89,-90,-91,-92,155,116,-112,92,127,-97,-98,71,92,-95,-99,-96,87,92,-93,-94,197,102,116,128,116,128,116,214,116,216,127,116,92,-113,116,233,116,197,116,214,214,128,26,116,256,-147,116,197,-146,270,]),'PRINT':([0,34,43,45,48,49,89,90,137,138,154,155,156,171,174,176,179,193,196,198,221,224,232,234,249,251,260,263,],[29,-30,29,29,-29,29,29,-112,-97,-98,-95,-99,-96,29,29,29,29,29,-113,29,29,29,29,29,-147,29,-146,29,]),'PUTS':([0,34,43,45,48,49,89,90,137,138,154,155,156,171,174,176,179,193,196,198,221,224,232,234,249,251,260,263,],[31,-30,31,31,-29,31,31,-112,-97,-98,-95,-99,-96,31,31,31,31,31,-113,31,31,31,31,31,-147,31,-146,31,]),'GETS':([0,34,43,45,48,49,89,90,137,138,154,155,156,171,174,176,179,193,196,198,221,224,232,234,249,251,260,263,],[35,-30,35,35,-29,35,35,-112,-97,-98,-95,-99,-96,35,35,35,35,35,-113,35,35,35,35,35,-147,35,-146,35,]),'LLAVE_IZ':([0,34,43,45,48,49,58,89,90,137,138,154,155,156,171,173,174,175,176,179,193,196,198,221,224,231,232,234,249,251,260,263,],[36,-30,36,36,-29,36,36,36,-112,-97,-98,-95,-99,-96,36,36,36,36,36,36,36,-113,36,36,36,36,36,36,-147,36,-146,36,]),'IF':([0,34,43,45,48,49,68,69,70,71,72,73,89,90,137,138,154,155,156,171,174,176,179,193,196,198,221,224,232,234,249,251,260,263,],[37,-30,117,117,-29,117,149,-50,-51,-52,-53,-54,117,-112,-97,-98,-95,-99,-96,117,117,117,117,117,-113,117,117,117,37,117,-147,117,-146,117,]),'DEF':([0,228,232,263,],[38,241,38,38,]),'CORCHETE_IZ':([0,39,58,170,173,175,231,232,],[39,39,39,39,39,39,39,39,]),'COMENTARIO':([0,232,],[40,40,]),'COMENTARIO_MULTI':([0,232,],[41,41,]),'WHILE':([0,34,43,45,48,49,89,90,137,138,154,155,156,171,174,176,179,193,196,198,221,224,232,234,249,251,260,263,],[42,-30,42,42,-29,42,42,-112,-97,-98,-95,-99,-96,42,42,42,42,42,-113,42,42,42,42,42,-147,42,-146,42,]),'CASE':([0,232,],[43,43,]),'UNTIL':([0,232,],[45,45,]),'CLASS':([0,232,],[46,46,]),'PARENTESIS_IZ':([0,29,30,31,34,37,42,43,45,48,49,50,51,52,53,54,55,56,58,75,89,90,94,117,137,138,144,149,154,155,156,164,165,166,171,173,174,175,176,179,193,195,196,198,221,224,231,232,234,249,251,254,260,263,],[30,74,75,80,-30,93,93,30,30,-29,30,75,-33,-34,-35,-36,-37,-38,75,75,30,-112,168,93,-97,-98,183,93,-95,-99,-96,93,-93,-94,30,75,30,75,30,30,30,93,-113,30,30,30,75,30,30,-147,30,259,-146,30,]),'FLOTANTE':([0,28,29,30,31,34,37,39,42,43,45,48,49,50,51,52,53,54,55,56,58,59,61,62,63,64,65,66,75,81,89,90,117,137,138,147,149,154,155,156,161,162,164,165,166,170,171,173,174,175,176,179,193,195,196,198,221,224,231,232,234,249,251,260,263,],[48,48,-43,48,-44,-30,48,100,48,48,48,-29,48,48,-33,-34,-35,-36,-37,-38,48,48,-87,-88,-89,-90,-91,-92,48,48,48,-112,48,-97,-98,48,48,-95,-99,-96,48,48,48,-93,-94,100,48,48,48,48,48,48,48,48,-113,48,48,48,48,48,48,-147,48,-146,48,]),'ENTERO':([0,28,29,30,31,34,37,39,42,43,45,48,49,50,51,52,53,54,55,56,58,59,61,62,63,64,65,66,75,81,82,89,90,93,117,137,138,147,149,152,154,155,156,161,162,164,165,166,170,171,173,174,175,176,179,193,195,196,198,221,224,231,232,234,249,251,260,263,],[34,34,-43,78,-44,-30,34,99,34,34,34,-29,34,34,-33,-34,-35,-36,-37,-38,34,34,-87,-88,-89,-90,-91,-92,34,34,156,34,-112,167,34,-97,-98,34,34,167,-95,-99,-96,34,34,34,-93,-94,99,34,34,34,34,34,34,34,34,-113,34,34,34,34,34,34,-147,34,-146,34,]),'WHEN':([0,24,25,27,31,34,35,44,48,67,68,69,70,71,72,73,79,85,90,96,104,105,106,107,108,109,110,111,112,113,114,115,124,125,126,127,129,130,131,132,133,135,136,137,138,148,150,151,153,154,155,156,157,158,159,169,174,178,185,186,194,196,204,205,206,207,208,209,215,225,226,232,235,236,252,261,],[49,-22,-23,-25,-86,-30,-100,49,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,49,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-97,-98,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,-75,-116,-27,-46,-116,-115,-113,-61,-56,-57,-58,-59,-60,-135,-130,-131,49,-24,-114,-118,-117,]),'CADENA':([0,28,29,31,36,39,57,58,122,147,160,161,162,170,173,175,183,231,232,],[27,69,-43,-44,88,98,27,129,27,69,88,190,191,98,129,205,27,129,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,31,34,35,40,41,44,48,67,68,69,70,71,72,73,79,85,90,96,105,106,107,108,109,110,111,112,113,114,115,119,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,143,145,148,150,151,153,154,155,156,157,158,159,169,174,178,184,185,186,194,196,203,204,205,206,207,208,209,215,225,226,227,235,236,239,252,253,255,257,261,271,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-86,-30,-100,-82,-83,-133,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-134,-42,-40,-28,-26,-62,-63,-64,-65,-66,-67,-48,-49,-97,-98,-108,-109,-32,-104,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,-75,-116,-27,-105,-46,-116,-115,-113,-132,-61,-56,-57,-58,-59,-60,-135,-130,-131,-136,-24,-114,-102,-118,-103,-77,-145,-117,-148,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,31,34,35,40,41,44,48,67,68,69,70,71,72,73,79,85,90,96,105,106,107,108,109,110,111,112,113,114,115,119,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,143,145,148,150,151,153,154,155,156,157,158,159,169,172,174,178,184,185,186,194,196,201,202,203,204,205,206,207,208,209,210,212,213,215,220,223,225,226,227,232,235,236,239,240,242,243,244,245,246,247,250,252,253,255,257,258,261,264,265,266,267,268,269,271,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-86,-30,-100,-82,-83,-133,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-134,-42,-40,-28,-26,-62,-63,-64,-65,-66,-67,-48,-49,-97,-98,-108,-109,-32,-104,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,-75,203,-116,-27,-105,-46,-116,-115,-113,225,226,-132,-61,-56,-57,-58,-59,-60,227,-149,-150,-135,236,239,-130,-131,-136,-80,-24,-114,-102,253,-151,-152,-61,255,-78,-79,257,-118,-103,-77,-145,261,-117,-153,271,-154,-155,-127,-120,-148,]),'MAS':([2,23,24,26,27,32,34,47,48,76,78,79,105,124,125,126,127,128,129,130,151,178,205,206,],[-40,51,57,-26,-25,-39,-30,122,-29,-40,-30,-39,-40,51,-40,-28,-26,-26,-25,51,-41,-27,-25,51,]),'MENOS':([2,23,32,34,48,76,78,79,105,124,125,130,151,206,],[-40,52,-39,-30,-29,-40,-30,-39,-40,52,-40,52,-41,52,]),'DIVISION':([2,23,32,34,48,76,78,79,105,124,125,130,151,206,],[-40,53,-39,-30,-29,-40,-30,-39,-40,53,-40,53,-41,53,]),'MULTIPLICACION':([2,23,32,34,48,76,78,79,105,124,125,130,151,206,],[-40,54,-39,-30,-29,-40,-30,-39,-40,54,-40,54,-41,54,]),'EXPONENCIACION':([2,23,32,34,48,76,78,79,105,124,125,130,151,206,],[-40,55,-39,-30,-29,-40,-30,-39,-40,55,-40,55,-41,55,]),'MODULO':([2,23,32,34,48,76,78,79,105,124,125,130,151,206,],[-40,56,-39,-30,-29,-40,-30,-39,-40,56,-40,56,-41,56,]),'DO':([24,25,27,31,34,35,48,60,67,68,69,70,71,72,73,79,85,90,96,103,105,106,107,108,109,110,111,112,113,114,115,120,124,125,126,127,129,130,131,132,133,135,136,137,138,142,148,150,151,153,154,155,156,157,158,159,169,174,178,185,186,194,196,204,205,206,207,208,209,225,226,235,236,252,261,],[-22,-23,-25,-86,-30,-100,-29,141,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,171,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,176,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-97,-98,182,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,-75,-116,-27,-46,-116,-115,-113,-61,-56,-57,-58,-59,-60,-130,-131,-24,-114,-118,-117,]),'IGUAL_DOBLEP':([24,25,27,31,34,35,48,67,68,69,70,71,72,73,79,85,90,96,105,106,107,108,109,110,111,112,113,114,115,123,124,125,126,127,129,130,131,132,133,135,136,137,138,148,150,151,153,154,155,156,157,158,159,169,174,178,185,186,194,196,204,205,206,207,208,209,225,226,235,236,252,261,],[-22,-23,-25,-86,-30,-100,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,179,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-97,-98,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,-75,-116,-27,-46,-116,-115,-113,-61,-56,-57,-58,-59,-60,-130,-131,-24,-114,-118,-117,]),'ELSE':([24,25,27,31,34,35,48,67,68,69,70,71,72,73,79,85,90,96,105,106,107,108,109,110,111,112,113,114,115,124,125,126,127,129,130,131,132,133,135,136,137,138,148,150,151,153,154,155,156,157,158,159,163,169,174,178,185,186,194,196,204,205,206,207,208,209,225,226,235,236,237,252,261,],[-22,-23,-25,-86,-30,-100,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-97,-98,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,193,-75,-116,-27,-46,-116,-115,-113,-61,-56,-57,-58,-59,-60,-130,-131,-24,-114,251,-118,-117,]),'ELSEIF':([24,25,27,31,34,35,48,67,68,69,70,71,72,73,79,85,90,96,105,106,107,108,109,110,111,112,113,114,115,124,125,126,127,129,130,131,132,133,135,136,137,138,148,150,151,153,154,155,156,157,158,159,163,169,174,178,185,186,194,196,204,205,206,207,208,209,225,226,235,236,237,252,261,],[-22,-23,-25,-86,-30,-100,-29,-55,-45,-50,-51,-52,-53,-54,-39,-138,-112,-76,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-97,-98,-47,-84,-41,-85,-95,-99,-96,-101,-106,-137,195,-75,-116,-27,-46,-116,-115,-113,-61,-56,-57,-58,-59,-60,-130,-131,-24,-114,195,-118,-117,]),'NEWLINE':([24,25,27,34,48,79,85,96,121,124,125,126,127,129,130,131,132,133,135,136,151,159,169,178,205,206,207,208,209,211,212,213,235,242,243,244,268,269,],[-22,-23,-25,-30,-29,-39,-138,-76,177,-42,-40,-28,-26,-62,-63,-64,-65,-66,-48,-49,-41,-137,-75,-27,-56,-57,-58,-59,-60,228,229,230,-24,-151,-152,-61,229,230,]),'IGUAL':([26,116,118,214,270,],[58,173,175,231,231,]),'PUNTO':([26,35,128,],[60,83,180,]),'DOBLE_IGUAL':([26,32,34,48,91,92,116,270,],[61,61,-30,-29,61,61,61,61,]),'DIFERENTE':([26,32,34,48,91,92,116,270,],[62,62,-30,-29,62,62,62,62,]),'MAYOR_QUE':([26,32,34,48,91,92,116,270,],[63,63,-30,-29,63,63,63,63,]),'MENOR_QUE':([26,32,34,48,91,92,116,270,],[64,64,-30,-29,64,64,64,64,]),'MENOR_IGUAL_QUE':([26,32,34,48,91,92,116,270,],[65,65,-30,-29,65,65,65,65,]),'MAYOR_IGUAL_QUE':([26,32,34,48,91,92,116,270,],[66,66,-30,-29,66,66,66,66,]),'PARENTESIS_DER':([27,34,48,74,76,79,80,124,125,127,151,167,168,187,197,199,218,238,262,],[-25,-30,-29,150,151,-39,153,-42,-40,-26,-41,-31,198,219,-110,224,235,-111,263,]),'VARIABLECLASE':([28,29,31,34,43,45,48,49,89,90,137,138,147,154,155,156,171,174,176,177,179,193,196,198,221,224,229,230,234,249,251,260,263,],[72,-43,-44,-30,118,118,-29,118,118,-112,-97,-98,72,-95,-99,-96,118,118,118,118,118,118,-113,118,118,118,118,118,118,-147,118,-146,118,]),'SIMBOLO':([28,29,31,147,],[73,-43,-44,73,]),'TRIPLE_IGUAL':([33,219,],[82,-81,]),'COMA':([34,48,68,69,70,71,72,73,86,96,97,98,99,100,101,102,169,189,190,191,192,197,233,],[-30,-29,147,-50,-51,-52,-53,-54,160,-76,170,-70,-71,-72,-73,-74,-75,-139,-140,-142,-141,222,248,]),'AND':([34,48,90,137,138,154,155,156,],[-30,-29,165,-97,-98,-95,-99,-96,]),'OR':([34,48,90,137,138,154,155,156,],[-30,-29,166,-97,-98,-95,-99,-96,]),'LLAVE_DER':([34,36,48,84,86,188,189,190,191,192,],[-30,85,-29,159,-143,-144,-139,-140,-142,-141,]),'CORCHETE_DER':([39,95,96,97,98,99,100,101,102,169,200,],[96,169,-76,-69,-70,-71,-72,-73,-74,-75,-68,]),'ID_CLASE':([46,],[121,]),'TRUE':([58,173,231,],[135,135,135,]),'FALSE':([58,173,231,],[136,136,136,]),'EACH':([60,146,],[142,184,]),'TO_F':([60,],[143,]),'CONCAT':([60,180,],[144,144,]),'SORT':([60,],[145,]),'FOR':([60,],[146,]),'TRES_PUNTOS':([77,78,167,],[152,-31,-31,]),'CHOMP':([83,],[158,]),'ASIGNA_HASH':([87,88,],[161,162,]),'BARRA':([141,182,216,233,256,],[181,217,232,249,260,]),'INITIALIZE':([241,],[254,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,232,],[1,246,]),'operacionAritmetica':([0,30,43,45,49,50,58,75,89,171,173,174,175,176,179,193,198,221,224,231,232,234,251,263,],[2,76,105,105,105,125,125,76,105,105,125,105,125,105,105,105,105,105,105,125,2,105,105,105,]),'input_concatenacion':([0,58,173,175,231,232,],[3,133,133,209,133,3,]),'asignacion':([0,43,45,49,89,171,174,176,177,179,193,198,221,224,229,230,232,234,251,263,],[4,106,106,106,106,106,106,106,213,106,106,106,106,106,213,213,4,106,106,269,]),'impresion':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[5,107,107,107,107,107,107,107,107,107,107,107,107,5,107,107,107,]),'impresion_vacia':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[6,108,108,108,108,108,108,108,108,108,108,108,108,6,108,108,108,]),'expresiones_booleanas':([0,37,42,43,45,49,89,117,149,164,171,174,176,179,193,195,198,221,224,232,234,251,263,],[7,90,103,109,109,109,109,90,90,196,109,109,109,109,109,90,109,109,109,7,109,109,109,]),'solicitudDatosTeclado':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[8,110,110,110,110,110,110,110,110,110,110,110,110,8,110,110,110,]),'hashes':([0,43,45,49,58,89,171,173,174,175,176,179,193,198,221,224,231,232,234,251,263,],[9,111,111,111,131,111,111,131,111,207,111,111,111,111,111,111,131,9,111,111,111,]),'estructura_if':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[10,112,112,112,112,112,112,112,112,112,112,112,112,10,112,112,112,]),'funciones':([0,232,263,],[11,11,267,]),'funcionesEstructuras':([0,232,],[12,12,]),'array':([0,39,58,170,173,175,231,232,],[13,101,132,101,132,208,132,13,]),'each_array':([0,232,],[14,14,]),'comentarios':([0,232,],[15,15,]),'each_hash':([0,232,],[16,16,]),'sentencia_while':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[17,114,114,114,114,201,114,114,114,114,114,114,114,17,114,114,114,]),'sentencia_case':([0,232,],[18,18,]),'sentencias_when':([0,44,232,],[19,119,19,]),'sentencia_until':([0,232,],[20,20,]),'definicion_clase':([0,232,],[21,21,]),'entero_a_flotante':([0,232,],[22,22,]),'expresionNumerica':([0,30,43,45,49,50,58,75,89,171,173,174,175,176,179,193,198,221,224,231,232,234,251,263,],[23,23,23,23,23,124,130,23,23,23,130,23,206,23,23,23,23,23,23,130,23,23,23,23,]),'concatenacionSimpleCadena':([0,58,173,175,231,232,],[24,24,24,24,24,24,]),'concatenacion_funcion':([0,58,173,175,231,232,],[25,25,25,25,25,25,]),'valor_print':([0,43,45,49,89,171,174,176,179,193,198,221,224,232,234,251,263,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'valorNumerico':([0,28,30,37,42,43,45,49,50,58,59,75,81,89,117,147,149,161,162,164,171,173,174,175,176,179,193,195,198,221,224,231,232,234,251,263,],[32,70,79,91,91,32,32,32,79,79,138,79,154,32,91,70,91,189,192,91,32,79,32,79,32,32,32,91,32,32,32,79,32,32,32,32,]),'rangos':([0,37,42,43,45,49,89,117,149,164,171,174,176,179,193,195,198,221,224,232,234,251,263,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'sentencia_when':([0,44,104,232,],[44,44,172,44,]),'valorCadena':([0,57,58,122,173,175,183,231,232,],[47,126,47,178,47,47,218,47,47,]),'operadores':([23,124,130,206,],[50,50,50,50,]),'operadoresComparacion':([26,32,91,92,116,270,],[59,81,81,59,59,59,]),'valores':([28,147,],[67,185,]),'valor':([28,147,],[68,68,]),'soloEnteros':([30,93,152,],[77,77,187,]),'elemento_hash':([36,],[84,]),'claveValor':([36,160,],[86,188,]),'condicionIf':([37,117,149,195,],[89,174,186,221,]),'elementos_array':([39,170,],[95,200,]),'elemento_array':([39,170,],[97,97,]),'declaracion':([43,45,49,89,171,174,176,179,193,198,221,224,234,251,263,],[104,120,123,163,202,163,210,215,220,223,237,240,250,258,266,]),'asignacion_clase':([43,45,49,89,171,174,176,177,179,193,198,221,224,229,230,234,251,263,],[113,113,113,113,113,113,113,212,113,113,113,113,113,212,212,113,113,268,]),'estructura_ifUnaLinea':([43,45,49,68,89,171,174,176,179,193,198,221,224,234,251,263,],[115,115,115,148,115,115,115,115,115,115,115,115,115,115,115,115,]),'booleanos':([58,173,231,],[134,204,244,]),'funcionesArray':([60,],[139,]),'funcionesNumeros':([60,],[140,]),'funcionesFormatoImpresion':([83,],[157,]),'funcionesComparacion':([90,],[164,]),'estructura_secundaria_if':([163,237,],[194,252,]),'argumentos':([168,222,259,],[199,238,262,]),'cuerpoVariables':([177,229,230,263,],[211,242,243,264,]),'each_args_hash':([217,],[234,]),'cuerpo_each':([232,],[245,]),'vacio':([232,],[247,]),'cuerpoClase':([263,],[265,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',39),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',40),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',46),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',59),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',60),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',92),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',93),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',112),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',113),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',125),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',130),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',145),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',146),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',147),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',148),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',149),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',150),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',155),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',156),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',157),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',164),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',186),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',187),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',192),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',193),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',194),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',201),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',202),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',209),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',210),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',211),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',212),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',213),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',232),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',241),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',242),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',243),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',244),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',245),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',246),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',251),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',252),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',253),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',254),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',255),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',256),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',266),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',267),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',275),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',276),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',277),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',278),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',279),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',287),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',288),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',297),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',301),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',302),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',306),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',312),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',317),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',318),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',322),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',323),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',324),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',329),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',330),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',331),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',332),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',333),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',334),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',338),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',339),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',343),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',344),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',345),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',346),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',347),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',414),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',415),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',420),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',421),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',425),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',426),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',430),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',434),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',438),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',439),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',459),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',460),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',465),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',466),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',470),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',471),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',475),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',479),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',480),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',484),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',485),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',486),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',487),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',488),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',489),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',490),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',491),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',492),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',493),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',494),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',498),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',499),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',503),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',507),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',508),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',512),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',516),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',521),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',522),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',526),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',527),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',528),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',529),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',533),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',534),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',538),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',542),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',543),
  ('definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',12,'p_definicion_clase','sintactico.py',547),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',551),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',552),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',553),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',554),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',558),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',559),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',560),
]
