
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanos\n                  | VARIABLE IGUAL solicitudDatosTeclado\n                  | VARIABLE IGUAL entero_a_flotanteelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE declaraciones ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaraciones ELSE declaraciones END\n                    | IF condicionIf declaraciones estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaraciones ENDestructura_secundaria_if : ELSEIF condicionIf declaraciones ELSE declaraciones END\n                                | ELSEIF condicionIf declaraciones estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineadeclaraciones : declaracion \n                    | declaracion declaracionessentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaraciones sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA elemento_hasheach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase cuerpoVariables\n                | asignacion cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones\n                cuerpoClaseE : cuerpoClase\n                | cuerpoClase cuerpoClaseE'
    
_lr_action_items = {'VARIABLE':([0,24,25,27,28,29,30,31,32,36,37,38,39,40,41,42,44,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,82,83,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,119,124,125,127,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,174,175,176,177,178,180,181,182,185,186,187,188,190,191,192,193,194,197,199,201,202,208,209,210,211,212,215,217,222,224,225,226,227,228,229,232,234,235,237,241,242,243,245,246,247,250,251,253,254,255,257,260,266,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[26,-24,-25,-27,-22,73,-46,79,-47,-105,88,94,95,103,94,118,118,126,-31,-32,118,79,-35,-36,-37,-38,-39,-40,133,134,146,-91,-92,-93,-94,-95,-96,-97,-58,-48,-53,-54,-55,-56,-57,-41,-44,164,166,-148,118,-118,118,-82,118,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,94,126,126,133,-158,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,73,-50,94,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,88,94,-98,-99,94,214,-81,103,118,134,118,229,118,-163,-164,134,-29,118,236,133,-49,118,-124,118,-123,94,-120,118,-109,-64,-59,-60,-61,-62,-63,-44,-64,-159,-34,252,118,-121,258,118,-140,-141,258,26,118,-26,-122,94,-107,275,-157,118,-126,-119,-108,285,-165,285,-166,-167,126,126,-156,-125,]),'PRINT':([0,24,25,27,28,32,36,42,44,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[30,-24,-25,-27,-22,-89,-105,30,30,-31,-32,30,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,30,-118,30,-82,30,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,30,30,30,-163,-164,-29,30,-49,30,-124,30,-123,-120,30,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,30,-121,30,-140,-141,30,30,-26,-122,-107,-157,30,-126,-119,-108,30,-165,30,-166,-167,-135,-128,-156,-125,]),'PUTS':([0,24,25,27,28,32,36,42,44,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[32,-24,-25,-27,-22,-89,-105,32,32,-31,-32,32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,32,-118,32,-82,32,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,32,32,32,-163,-164,-29,32,-49,32,-124,32,-123,-120,32,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,32,-121,32,-140,-141,32,32,-26,-122,-107,-157,32,-126,-119,-108,32,-165,32,-166,-167,-135,-128,-156,-125,]),'PRINTF':([0,24,25,27,28,32,36,42,44,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[33,-24,-25,-27,-22,-89,-105,33,33,-31,-32,33,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,33,-118,33,-82,33,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,33,33,33,-163,-164,-29,33,-49,33,-124,33,-123,-120,33,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,33,-121,33,-140,-141,33,33,-26,-122,-107,-157,33,-126,-119,-108,33,-165,33,-166,-167,-135,-128,-156,-125,]),'GETS':([0,24,25,27,28,32,36,42,44,47,48,49,59,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,185,186,188,190,191,192,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[36,-24,-25,-27,-22,-89,-105,36,36,-31,-32,36,36,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,36,-118,36,-82,36,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,36,36,36,36,-163,-164,36,-29,36,-49,36,-124,36,-123,-120,36,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,36,-121,36,-140,-141,36,36,-26,-122,-107,-157,36,-126,-119,-108,36,-165,36,-166,-167,-135,-128,-156,-125,]),'LLAVE_IZ':([0,24,25,27,28,32,36,42,44,47,48,49,59,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,185,186,187,188,190,191,192,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[37,-24,-25,-27,-22,-89,-105,37,37,-31,-32,37,37,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,37,-118,37,-82,37,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,37,37,37,37,37,-163,-164,37,-29,37,-49,37,-124,37,-123,-120,37,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,37,-121,37,-140,-141,37,37,-26,-122,-107,-157,37,-126,-119,-108,37,-165,37,-166,-167,-135,-128,-156,-125,]),'IF':([0,24,25,27,28,32,36,42,44,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[38,-24,-25,-27,-22,-89,-105,119,119,-31,-32,119,-58,158,-53,-54,-55,-56,-57,-41,-44,-148,119,-118,119,-82,119,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,119,119,119,-163,-164,-29,119,-49,119,-124,119,-123,-120,119,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,119,-121,119,-140,-141,38,119,-26,-122,-107,-157,119,-126,-119,-108,119,-165,119,-166,-167,-135,-128,-156,-125,]),'DEF':([0,24,25,27,28,32,36,47,48,69,70,71,72,73,74,75,78,79,86,97,107,109,110,111,112,113,114,116,117,123,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,190,191,193,201,208,210,217,224,225,226,227,228,229,232,235,246,247,251,254,255,260,270,272,273,278,280,281,282,283,284,287,],[39,-24,-25,-27,-22,-89,-105,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,-127,-129,-130,-131,-132,-133,-134,-136,-137,189,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,-163,-164,-29,-49,-124,-123,-109,-59,-60,-61,-62,-63,-44,-64,-34,-140,-141,39,-26,-122,-107,-126,-108,39,-165,39,-166,-167,-135,-128,-125,]),'CORCHETE_IZ':([0,40,59,181,185,187,192,251,],[40,40,40,40,40,40,40,40,]),'WHILE':([0,24,25,27,28,32,36,42,44,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[41,-24,-25,-27,-22,-89,-105,41,41,-31,-32,41,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,41,-118,41,-82,41,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,41,41,41,-163,-164,-29,41,-49,41,-124,41,-123,-120,41,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,41,-121,41,-140,-141,41,41,-26,-122,-107,-157,41,-126,-119,-108,41,-165,41,-166,-167,-135,-128,-156,-125,]),'CASE':([0,251,],[42,42,]),'UNTIL':([0,251,],[44,44,]),'PARENTESIS_IZ':([0,24,25,27,28,30,31,32,33,36,42,44,47,48,49,51,52,53,54,55,56,57,59,69,70,71,72,73,74,75,78,79,86,90,91,92,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,153,157,159,160,161,162,163,164,165,166,167,168,169,178,180,182,185,186,187,188,190,191,192,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,231,232,235,241,242,245,246,247,251,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[31,-24,-25,-27,-22,76,31,80,81,-105,31,31,-31,-32,31,31,-35,-36,-37,-38,-39,-40,31,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,31,-118,177,178,-82,31,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,199,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,31,-81,31,31,31,31,31,-163,-164,31,-29,31,-49,31,-124,31,-123,-120,31,-109,-64,-59,-60,-61,-62,-63,-44,250,-64,-34,31,-121,31,-140,-141,31,31,-26,-122,-107,-157,31,-126,-119,-108,31,-165,31,-166,-167,-135,-128,-156,-125,]),'SIMBOLO':([0,24,25,27,28,29,30,32,36,38,41,42,44,47,48,49,59,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,82,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,119,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,174,175,176,177,180,182,185,186,188,190,191,192,193,194,201,202,208,209,210,211,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,257,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[28,-24,-25,-27,-22,75,-46,-47,-105,28,28,28,28,-31,-32,28,138,-91,-92,-93,-94,-95,-96,-97,-58,-48,-53,-54,-55,-56,-57,-41,-44,28,-148,28,-118,28,-82,28,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,28,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,75,-50,28,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,28,-98,-99,28,-81,28,138,28,28,-163,-164,138,-29,28,-49,28,-124,28,-123,28,-120,28,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,28,-121,28,-140,-141,28,28,-26,-122,28,-107,-157,28,-126,-119,-108,28,-165,28,-166,-167,-135,-128,-156,-125,]),'FLOTANTE':([0,24,25,27,28,29,30,31,32,36,38,40,41,42,44,47,48,49,51,52,53,54,55,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,83,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,119,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,177,178,180,181,182,185,186,187,188,190,191,192,193,194,201,202,208,209,210,211,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,257,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[47,-24,-25,-27,-22,47,-46,47,-47,-105,47,101,47,47,47,-31,-32,47,47,-35,-36,-37,-38,-39,-40,47,47,-91,-92,-93,-94,-95,-96,-97,-58,-48,-53,-54,-55,-56,-57,-41,-44,47,-148,47,-118,47,-82,47,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,47,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,47,-50,47,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,47,47,47,-98,-99,47,47,-81,101,47,47,47,47,47,-163,-164,47,-29,47,-49,47,-124,47,-123,47,-120,47,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,47,-121,47,-140,-141,47,47,-26,-122,47,-107,-157,47,-126,-119,-108,47,-165,47,-166,-167,-135,-128,-156,-125,]),'ENTERO':([0,24,25,27,28,29,30,31,32,36,38,40,41,42,44,47,48,49,51,52,53,54,55,56,57,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,78,79,83,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,119,124,125,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,156,157,158,159,160,161,162,163,164,165,166,167,168,169,171,172,174,175,176,177,178,180,181,182,185,186,187,188,190,191,192,193,194,201,202,208,209,210,211,212,215,217,222,224,225,226,227,228,229,232,235,241,242,245,246,247,251,253,254,255,257,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[48,-24,-25,-27,-22,48,-46,48,-47,-105,48,100,48,48,48,-31,-32,48,48,-35,-36,-37,-38,-39,-40,48,48,-91,-92,-93,-94,-95,-96,-97,-58,-48,-53,-54,-55,-56,-57,-41,-44,48,-148,48,-118,48,-82,48,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,48,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,48,-50,48,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,48,48,48,-98,-99,48,48,-81,100,48,48,48,48,48,-163,-164,48,-29,48,-49,48,-124,48,-123,48,-120,48,-109,-64,-59,-60,-61,-62,-63,-44,-64,-34,48,-121,48,-140,-141,48,48,-26,-122,48,-107,-157,48,-126,-119,-108,48,-165,48,-166,-167,-135,-128,-156,-125,]),'WHEN':([0,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,105,106,107,108,109,110,111,112,113,114,115,116,117,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,184,193,201,208,210,222,224,225,226,227,228,229,233,235,246,247,251,254,255,270,287,],[49,-24,-25,-27,-22,-89,-105,49,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,49,-138,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,-139,-29,-49,-124,-123,-64,-59,-60,-61,-62,-63,-44,-145,-34,-140,-141,49,-26,-122,-126,-125,]),'CLASS':([0,251,],[50,50,]),'CADENA':([0,29,30,32,37,40,58,59,127,156,170,171,172,181,185,187,192,199,251,],[27,71,-46,-47,89,99,27,135,27,71,89,205,206,99,135,224,135,27,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,107,108,109,110,111,112,113,114,115,116,117,121,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,154,157,159,160,161,162,163,164,165,166,167,168,169,180,193,200,201,208,210,217,221,222,224,225,226,227,228,229,233,235,246,247,249,254,255,260,270,272,274,276,287,288,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-89,-105,-143,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-144,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-72,-73,-51,-52,-102,-103,-114,-115,-34,-110,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,-29,-111,-49,-124,-123,-109,-142,-64,-59,-60,-61,-62,-63,-44,-145,-34,-140,-141,-146,-26,-122,-107,-126,-108,-83,-155,-125,-160,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,43,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,117,121,124,125,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,152,154,157,159,160,161,162,163,164,165,166,167,168,169,173,179,180,183,184,190,191,193,200,201,208,210,217,219,220,221,222,223,224,225,226,227,228,229,230,232,233,235,239,240,244,246,247,249,251,254,255,260,261,263,264,265,268,270,272,274,276,277,278,279,280,281,282,283,284,287,288,289,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-89,-105,-143,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,-138,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-144,-161,-162,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-71,-72,-73,-51,-52,-102,-103,-114,-115,-34,-110,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,208,217,-81,221,-139,-163,-164,-29,-111,-49,-124,-123,-109,246,247,-142,-64,208,-59,-60,-61,-62,-63,-44,249,-64,-145,-34,208,255,260,-140,-141,-146,-86,-26,-122,-107,272,274,-84,-85,276,-126,-108,-83,-155,287,-165,288,-168,-166,-167,-135,-128,-125,-160,-169,]),'MAS':([2,23,24,26,27,35,46,47,48,77,78,79,107,118,130,131,132,133,134,135,136,160,193,214,224,225,229,285,],[-42,52,58,-28,-27,-41,127,-31,-32,-42,-41,-44,-42,-44,52,-42,-30,-28,-28,-27,52,-43,-29,-44,-27,52,-28,-44,]),'MENOS':([2,23,26,35,47,48,77,78,79,107,118,130,131,134,136,160,214,225,229,285,],[-42,53,-44,-41,-31,-32,-42,-41,-44,-42,-44,53,-42,-44,53,-43,-44,53,-44,-44,]),'DIVISION':([2,23,26,35,47,48,77,78,79,107,118,130,131,134,136,160,214,225,229,285,],[-42,54,-44,-41,-31,-32,-42,-41,-44,-42,-44,54,-42,-44,54,-43,-44,54,-44,-44,]),'MULTIPLICACION':([2,23,26,35,47,48,77,78,79,107,118,130,131,134,136,160,214,225,229,285,],[-42,55,-44,-41,-31,-32,-42,-41,-44,-42,-44,55,-42,-44,55,-43,-44,55,-44,-44,]),'EXPONENCIACION':([2,23,26,35,47,48,77,78,79,107,118,130,131,134,136,160,214,225,229,285,],[-42,56,-44,-41,-31,-32,-42,-41,-44,-42,-44,56,-42,-44,56,-43,-44,56,-44,-44,]),'MODULO':([2,23,26,35,47,48,77,78,79,107,118,130,131,134,136,160,214,225,229,285,],[-42,57,-44,-41,-31,-32,-42,-41,-44,-42,-44,57,-42,-44,57,-43,-44,57,-44,-44,]),'VARIABLECLASE':([24,25,27,28,29,30,32,36,42,44,45,47,48,49,69,70,71,72,73,74,75,78,79,86,90,91,95,97,106,107,108,109,110,111,112,113,114,115,116,117,124,125,129,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,156,157,159,160,161,162,163,164,165,166,167,168,169,180,182,186,188,190,191,193,194,201,202,208,209,210,212,215,217,222,224,225,226,227,228,229,232,234,235,241,242,245,246,247,253,254,255,260,267,269,270,271,272,273,278,280,281,282,283,284,286,287,],[-24,-25,-27,-22,74,-46,-47,-105,120,120,120,-31,-32,120,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,120,-118,120,-82,120,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,120,120,-158,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,74,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,120,120,120,-163,-164,-29,120,-49,120,-124,120,-123,-120,120,-109,-64,-59,-60,-61,-62,-63,-44,-64,-159,-34,120,-121,120,-140,-141,120,-26,-122,-107,-157,120,-126,-119,-108,120,-165,120,-166,-167,120,120,-156,-125,]),'DO':([24,25,27,28,32,36,47,48,61,69,70,71,72,73,74,75,78,79,86,97,104,107,108,109,110,111,112,113,114,115,116,117,122,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,151,157,159,160,161,162,163,164,165,166,167,168,169,180,193,201,208,210,222,224,225,226,227,228,229,235,246,247,254,255,270,287,],[-24,-25,-27,-22,-89,-105,-31,-32,150,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,182,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,188,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,198,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,-29,-49,-124,-123,-64,-59,-60,-61,-62,-63,-44,-34,-140,-141,-26,-122,-126,-125,]),'IGUAL_DOBLEP':([24,25,26,27,28,32,34,35,36,47,48,69,70,71,72,73,74,75,78,79,86,93,94,97,107,108,109,110,111,112,113,114,115,116,117,118,128,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,180,193,201,208,210,222,224,225,226,227,228,229,235,246,247,254,255,270,285,287,],[-24,-25,62,-27,-22,-89,62,62,-105,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,62,62,-82,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,62,194,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,-81,-29,-49,-124,-123,-64,-59,-60,-61,-62,-63,-44,-34,-140,-141,-26,-122,-126,62,-125,]),'ELSE':([24,25,27,28,32,36,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,117,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,173,180,184,193,201,208,210,222,223,224,225,226,227,228,229,235,246,247,254,255,256,270,287,],[-24,-25,-27,-22,-89,-105,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,-138,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,209,-81,-139,-29,-49,-124,-123,-64,209,-59,-60,-61,-62,-63,-44,-34,-140,-141,-26,-122,269,-126,-125,]),'ELSEIF':([24,25,27,28,32,36,47,48,69,70,71,72,73,74,75,78,79,86,97,106,107,108,109,110,111,112,113,114,115,116,117,130,131,132,133,134,135,136,137,138,139,140,142,143,144,145,146,147,157,159,160,161,162,163,164,165,166,167,168,169,173,180,184,193,201,208,210,222,223,224,225,226,227,228,229,235,246,247,254,255,256,270,287,],[-24,-25,-27,-22,-89,-105,-31,-32,-58,-48,-53,-54,-55,-56,-57,-41,-44,-148,-82,-138,-127,-128,-129,-130,-131,-132,-133,-134,-135,-136,-137,-45,-42,-30,-28,-44,-65,-66,-67,-68,-69,-70,-72,-73,-51,-52,-102,-103,-50,-87,-43,-88,-90,-100,-23,-101,-104,-106,-112,-147,211,-81,-139,-29,-49,-124,-123,-64,211,-59,-60,-61,-62,-63,-44,-34,-140,-141,-26,-122,211,-126,-125,]),'IGUAL':([26,118,120,126,285,],[59,185,187,192,192,]),'PUNTO':([26,36,134,229,],[61,84,196,248,]),'NAVE':([26,28,34,35,47,48,93,94,118,285,],[63,-22,63,63,-31,-32,63,63,63,63,]),'DIFERENTE':([26,28,34,35,47,48,93,94,118,285,],[64,-22,64,64,-31,-32,64,64,64,64,]),'MAYOR_QUE':([26,28,34,35,47,48,93,94,118,285,],[65,-22,65,65,-31,-32,65,65,65,65,]),'MENOR_QUE':([26,28,34,35,47,48,93,94,118,129,285,],[66,-22,66,66,-31,-32,66,66,66,195,66,]),'MENOR_IGUAL_QUE':([26,28,34,35,47,48,93,94,118,285,],[67,-22,67,67,-31,-32,67,67,67,67,]),'MAYOR_IGUAL_QUE':([26,28,34,35,47,48,93,94,118,285,],[68,-22,68,68,-31,-32,68,68,68,68,]),'PARENTESIS_DER':([27,28,47,48,76,77,78,79,80,81,130,131,133,146,147,160,163,164,165,166,178,213,214,216,238,258,259,262,],[-27,-22,-31,-32,159,160,-41,-44,161,162,-45,-42,-28,-102,-103,-43,-100,-23,-101,-104,215,242,-116,245,254,-116,-117,273,]),'Y_SIGNO':([28,47,48,91,146,147,163,164,165,166,242,],[-22,-31,-32,175,-102,-103,-100,-23,-101,-104,175,]),'O_SIGNO':([28,47,48,91,146,147,163,164,165,166,242,],[-22,-31,-32,176,-102,-103,-100,-23,-101,-104,176,]),'LLAVE_DER':([37,47,48,85,87,203,204,205,206,207,],[86,-31,-32,169,-153,-154,-149,-150,-152,-151,]),'EXCLAMACION_BAJO':([38,119,158,174,175,176,211,257,],[92,92,92,92,-98,-99,92,92,]),'CORCHETE_DER':([40,96,97,98,99,100,101,102,103,180,218,],[97,180,-82,-75,-76,-77,-78,-79,-80,-81,-74,]),'COMA':([47,48,70,71,72,73,74,75,87,97,98,99,100,101,102,103,180,204,205,206,207,214,252,258,],[-31,-32,156,-53,-54,-55,-56,-57,170,-82,181,-76,-77,-78,-79,-80,-81,-149,-150,-152,-151,243,266,243,]),'ID_CLASE':([50,195,],[129,234,]),'TRUE':([59,185,192,],[144,144,144,]),'FALSE':([59,185,192,],[145,145,145,]),'EACH':([61,155,],[151,200,]),'TO_F':([61,196,],[152,235,]),'CONCAT':([61,196,248,],[153,153,153,]),'SORT':([61,],[154,]),'FOR':([61,],[155,]),'CHOMP':([84,],[168,]),'ASIGNA_HASH':([88,89,],[171,172,]),'BARRA':([150,198,236,252,275,],[197,237,251,267,286,]),'INITIALIZE':([189,],[231,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,251,],[1,264,]),'operacionAritmetica':([0,31,42,44,49,51,59,90,95,106,178,182,185,186,187,188,192,194,202,209,215,241,245,251,253,269,273,280,],[2,77,107,107,107,131,131,107,107,107,77,107,131,107,131,107,131,107,107,107,107,107,107,2,107,107,107,107,]),'input_concatenacion':([0,59,185,187,192,251,],[3,140,140,228,140,3,]),'asignacion':([0,42,44,45,49,90,95,106,124,125,182,186,188,194,202,209,215,241,245,251,253,269,273,280,283,284,],[4,108,108,125,108,108,108,108,125,125,108,108,108,108,108,108,108,108,108,4,108,108,284,284,125,125,]),'impresion':([0,42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[5,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,5,109,109,109,109,]),'impresion_vacia':([0,42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[6,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,6,110,110,110,110,]),'expresiones_booleanas':([0,38,41,42,44,49,90,95,106,119,158,174,177,182,186,188,194,202,209,211,215,241,245,251,253,257,269,273,280,],[7,91,104,111,111,111,111,111,111,91,91,91,213,111,111,111,111,111,111,91,111,111,111,7,111,91,111,111,111,]),'solicitudDatosTeclado':([0,42,44,49,59,90,95,106,182,185,186,188,192,194,202,209,215,241,245,251,253,269,273,280,],[8,112,112,112,142,112,112,112,112,142,112,112,142,112,112,112,112,112,112,8,112,112,112,112,]),'hashes':([0,42,44,49,59,90,95,106,182,185,186,187,188,192,194,202,209,215,241,245,251,253,269,273,280,],[9,113,113,113,137,113,113,113,113,137,113,226,113,137,113,113,113,113,113,113,9,113,113,113,113,]),'estructura_ifUnaLinea':([0,42,44,49,70,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[10,117,117,117,157,117,117,117,117,117,117,117,117,117,117,117,117,10,117,117,117,117,]),'estructura_if':([0,42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[11,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,11,114,114,114,114,]),'funciones':([0,251,273,280,],[12,12,282,282,]),'funcionesEstructuras':([0,251,],[13,13,]),'array':([0,40,59,181,185,187,192,251,],[14,102,139,102,139,227,139,14,]),'each_array':([0,251,],[15,15,]),'each_hash':([0,251,],[16,16,]),'sentencia_while':([0,42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[17,116,116,116,116,116,116,219,116,116,116,116,116,116,116,116,17,116,116,116,116,]),'sentencia_case':([0,251,],[18,18,]),'sentencias_when':([0,43,251,],[19,121,19,]),'sentencia_until':([0,251,],[20,20,]),'definicion_clase':([0,251,],[21,21,]),'entero_a_flotante':([0,59,185,192,251,],[22,143,143,143,22,]),'expresionNumerica':([0,31,42,44,49,51,59,90,95,106,178,182,185,186,187,188,192,194,202,209,215,241,245,251,253,269,273,280,],[23,23,23,23,23,130,136,23,23,23,23,23,136,23,225,23,136,23,23,23,23,23,23,23,23,23,23,23,]),'concatenacionSimpleCadena':([0,59,185,187,192,251,],[24,24,24,24,24,24,]),'concatenacion_funcion':([0,59,185,187,192,251,],[25,25,25,25,25,25,]),'valor_print':([0,42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,251,253,269,273,280,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'valorSimbolo':([0,38,41,42,44,49,82,90,95,106,119,158,174,177,182,186,188,194,202,209,211,215,241,245,251,253,257,269,273,280,],[34,34,34,34,34,34,163,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'valorNumerico':([0,29,31,38,41,42,44,49,51,59,60,83,90,95,106,119,156,158,171,172,174,177,178,182,185,186,187,188,192,194,202,209,211,215,241,245,251,253,257,269,273,280,],[35,72,78,93,93,35,35,35,78,78,147,165,35,35,35,93,72,93,204,207,93,93,78,35,78,35,78,35,78,35,35,35,93,35,35,35,35,35,93,35,35,35,]),'sentencia_when':([0,43,105,251,],[43,43,183,43,]),'encabezadoClase':([0,251,],[45,45,]),'valorCadena':([0,58,59,127,185,187,192,199,251,],[46,132,46,193,46,46,46,238,46,]),'operadores':([23,130,136,225,],[51,51,51,51,]),'operadoresComparacion':([26,34,35,93,94,118,285,],[60,82,83,83,60,60,60,]),'valores':([29,156,],[69,201,]),'valor':([29,156,],[70,70,]),'elemento_hash':([37,170,],[85,203,]),'claveValor':([37,170,],[87,87,]),'condicionIf':([38,119,158,174,211,257,],[90,186,202,212,241,271,]),'elementos_array':([40,181,],[96,218,]),'elemento_array':([40,181,],[98,98,]),'declaraciones':([42,90,95,106,186,202,209,215,241,245,269,],[105,173,179,184,223,239,240,244,256,261,277,]),'declaracion':([42,44,49,90,95,106,182,186,188,194,202,209,215,241,245,253,269,273,280,],[106,122,128,106,106,106,220,106,230,233,106,106,106,106,106,268,106,281,281,]),'asignacion_clase':([42,44,45,49,90,95,106,124,125,182,186,188,194,202,209,215,241,245,253,269,273,280,283,284,],[115,115,124,115,115,115,115,124,124,115,115,115,115,115,115,115,115,115,115,115,283,283,124,124,]),'cuerpoVariables':([45,124,125,273,280,283,284,],[123,190,191,278,278,190,191,]),'booleanos':([59,185,192,],[141,222,232,]),'funcionesArray':([61,],[148,]),'funcionesNumeros':([61,],[149,]),'funcionesFormatoImpresion':([84,],[167,]),'funcionesComparacion':([91,242,],[174,257,]),'estructura_secundaria_if':([173,223,256,],[210,210,270,]),'argumentos':([178,243,250,],[216,259,262,]),'each_args_hash':([237,],[253,]),'cuerpo_each':([251,],[263,]),'vacio':([251,],[265,]),'cuerpoClaseE':([273,280,],[279,289,]),'cuerpoClase':([273,280,],[280,280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',41),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',42),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',81),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',82),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',88),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',101),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',102),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',136),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',137),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',156),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',157),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',169),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',174),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',191),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',192),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',193),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',194),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',195),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',196),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',201),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',202),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',203),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',204),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',218),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',257),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',258),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',263),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',264),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',265),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',269),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',270),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',277),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',278),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',279),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',280),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',281),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',300),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',303),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',304),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',305),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',306),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',307),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',308),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',313),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',314),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',315),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',316),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',317),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',318),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',319),
  ('asignacion -> VARIABLE IGUAL solicitudDatosTeclado','asignacion',3,'p_asignacion','sintactico.py',320),
  ('asignacion -> VARIABLE IGUAL entero_a_flotante','asignacion',3,'p_asignacion','sintactico.py',321),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',331),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',332),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',340),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',341),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',342),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',343),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',344),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',352),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',353),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',362),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',366),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',367),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',371),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',377),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',378),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',379),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',380),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',385),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',386),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',387),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',388),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',389),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',390),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',391),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',395),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',396),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',400),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',401),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',402),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',403),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',404),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',468),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',469),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END','funciones',6,'p_funciones','sintactico.py',472),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END','funciones',7,'p_funciones','sintactico.py',473),
  ('funciones -> DEF VARIABLE declaraciones END','funciones',4,'p_funciones','sintactico.py',474),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',478),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',479),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',483),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',487),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',491),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',492),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',512),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',513),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',518),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',519),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',520),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',521),
  ('estructura_if -> IF condicionIf declaraciones ELSE declaraciones END','estructura_if',6,'p_estructura_if','sintactico.py',525),
  ('estructura_if -> IF condicionIf declaraciones estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',526),
  ('estructura_ifUnaLinea -> IF condicionIf declaraciones END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',530),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',535),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',536),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',540),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',541),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',542),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',543),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',544),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',545),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',546),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',547),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',548),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',549),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',550),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','sintactico.py',553),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','sintactico.py',554),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',558),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',559),
  ('sentencia_case -> CASE declaraciones sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',566),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',570),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',571),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',575),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',579),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',584),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',585),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',589),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',590),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',591),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',592),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',596),
  ('elemento_hash -> claveValor COMA elemento_hash','elemento_hash',3,'p_elemento_hash','sintactico.py',597),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',601),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',605),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',606),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',609),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',610),
  ('definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END','definicion_clase',9,'p_definicion_clase','sintactico.py',613),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',617),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',618),
  ('cuerpoVariables -> asignacion_clase cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',619),
  ('cuerpoVariables -> asignacion cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',620),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',624),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',625),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',626),
  ('cuerpoClaseE -> cuerpoClase','cuerpoClaseE',1,'p_cuerpoClaseE','sintactico.py',630),
  ('cuerpoClaseE -> cuerpoClase cuerpoClaseE','cuerpoClaseE',2,'p_cuerpoClaseE','sintactico.py',631),
]
