
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOinstruccion : cuerpoInstruccion\n        cuerpoInstruccion : cuerpo\n                        | cuerpo cuerpoInstruccion \n      cuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_while_bool\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotante\n              | declaracion\n              | condicionIfvalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLinea\n               | valor sentencia_while_boolbooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanos\n                  | VARIABLE IGUAL solicitudDatosTeclado\n                  | VARIABLE IGUAL entero_a_flotanteelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE declaraciones ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaraciones ELSE declaraciones END\n                    | IF condicionIf declaraciones estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaraciones ENDestructura_secundaria_if : ELSEIF condicionIf declaraciones ELSE declaraciones END\n                                | ELSEIF condicionIf declaraciones estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | estructura_ifUnaLinea\n                    | sentencia_while\n                    | sentencia_while_booldeclaraciones : declaracion \n                    | declaracion declaracionessentencia_while_bool : WHILE declaracion declaraciones END\n                            | WHILE VARIABLE declaraciones END sentencia_while : WHILE expresiones_booleanas sentencia_while END\n                      | WHILE expresiones_booleanas declaracion END sentencia_case : CASE VARIABLE sentencia_when ENDsentencia_when : WHEN declaracion declaracionsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA elemento_hasheach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase declaraciones ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase cuerpoVariables\n                | asignacion cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones\n                cuerpoClaseE : cuerpoClase\n                | cuerpoClase cuerpoClaseE'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,36,37,41,42,43,44,45,46,47,48,49,50,51,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,94,95,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,132,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,188,190,191,196,198,199,202,203,205,206,207,208,209,210,212,214,215,216,217,218,224,225,226,227,229,231,233,234,235,236,238,240,241,243,245,249,250,252,253,254,255,257,258,259,263,265,269,270,272,273,274,275,277,279,280,],[31,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,85,-52,91,-53,-112,100,105,106,114,118,129,-154,133,133,-142,-37,-38,133,105,-105,-106,91,-41,-42,-43,-44,-45,-46,145,146,158,-98,-99,-100,-101,-102,-103,-104,-65,-54,-60,-61,-62,-63,-64,-47,-50,178,180,-158,133,-125,133,-89,133,-144,133,133,-134,-135,-136,-137,-139,-140,-141,-143,-145,105,-155,-138,133,105,145,133,-168,210,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,85,-56,-57,105,218,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,100,228,-88,114,133,133,-170,-35,-153,-66,-67,-68,-69,-70,-50,244,145,-118,-55,133,133,-131,133,-130,105,133,-116,-150,-151,-148,-149,-152,-128,-169,-40,256,133,261,133,-156,105,31,133,-32,-129,-114,-126,276,-167,133,-133,-115,-90,-165,-166,-132,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,35,-154,35,35,-142,-37,-38,35,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,35,-125,35,-89,35,-144,35,35,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,35,35,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,35,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,35,35,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,35,35,-131,35,-130,35,-116,-150,-151,-148,-149,-152,-128,-169,-40,35,35,-156,35,35,-32,-129,-114,-126,-167,35,-133,-115,-90,-165,-166,-132,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[37,37,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,37,-154,37,37,-142,-37,-38,37,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,37,-125,37,-89,37,-144,37,37,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,37,37,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,37,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,37,37,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,37,37,-131,37,-130,37,-116,-150,-151,-148,-149,-152,-128,-169,-40,37,37,-156,37,37,-32,-129,-114,-126,-167,37,-133,-115,-90,-165,-166,-132,]),'PRINTF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[38,38,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,38,-154,38,38,-142,-37,-38,38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,38,-125,38,-89,38,-144,38,38,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,38,38,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,38,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,38,38,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,38,38,-131,38,-130,38,-116,-150,-151,-148,-149,-152,-128,-169,-40,38,38,-156,38,38,-32,-129,-114,-126,-167,38,-133,-115,-90,-165,-166,-132,]),'GETS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,71,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[41,41,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,41,-154,41,41,-142,-37,-38,41,41,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,41,-125,41,-89,41,-144,41,41,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,41,41,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,41,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,41,41,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,41,41,-131,41,-130,41,-116,-150,-151,-148,-149,-152,-128,-169,-40,41,41,-156,41,41,-32,-129,-114,-126,-167,41,-133,-115,-90,-165,-166,-132,]),'LLAVE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,71,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[42,42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,42,-154,42,42,-142,-37,-38,42,42,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,42,-125,42,-89,42,-144,42,42,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,42,42,-168,42,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,42,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,42,42,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,42,42,-131,42,-130,42,-116,-150,-151,-148,-149,-152,-128,-169,-40,42,42,-156,42,42,-32,-129,-114,-126,-167,42,-133,-115,-90,-165,-166,-132,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[43,43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,128,-154,128,128,-142,-37,-38,128,-65,171,-60,-61,-62,-63,-64,-47,-50,-158,128,-125,128,-89,128,-144,128,128,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,128,128,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,128,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,128,128,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,128,128,-131,128,-130,128,-116,-150,-151,-148,-149,-152,-128,-169,-40,128,128,-156,43,128,-32,-129,-114,-126,-167,128,-133,-115,-90,-165,-166,-132,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[44,44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,44,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'CORCHETE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,45,48,51,54,55,71,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,191,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[45,45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,45,-154,-142,-37,-38,45,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,45,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,45,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,45,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[46,46,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,46,-154,46,46,-142,-37,-38,46,-65,172,-60,-61,-62,-63,-64,-47,-50,-158,46,-125,46,-89,46,-144,46,46,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,46,46,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,46,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,46,46,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,46,46,-131,46,-130,46,-116,-150,-151,-148,-149,-152,-128,-169,-40,46,46,-156,46,46,-32,-129,-114,-126,-167,46,-133,-115,-90,-165,-166,-132,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[47,47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,47,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[49,49,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,49,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'EXCLAMACION_BAJO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,43,48,51,54,55,60,61,62,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,128,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,171,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,227,231,233,234,235,236,238,240,243,253,254,255,258,259,263,265,273,274,275,277,280,],[52,52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,52,-154,-142,-37,-38,52,-105,-106,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,52,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,52,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,52,-116,-150,-151,-148,-149,-152,-128,-40,-156,52,52,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'PARENTESIS_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,35,36,37,38,41,46,48,49,50,51,52,54,55,56,63,64,65,66,67,68,69,71,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,165,166,169,170,172,173,174,175,176,177,178,179,180,181,182,183,188,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[36,36,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,88,36,92,93,-112,36,-154,36,36,-142,136,-37,-38,36,36,-41,-42,-43,-44,-45,-46,36,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,36,-125,188,-89,36,-144,36,36,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,36,36,-168,36,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,214,-117,-56,-57,36,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,36,-88,36,36,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,36,36,-131,36,-130,36,-116,-150,-151,-148,-149,-152,-128,-169,-40,36,36,-156,36,36,-32,-129,-114,-126,-167,36,-133,-115,-90,-165,-166,-132,]),'SIMBOLO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,37,41,43,46,48,49,50,51,54,55,56,60,61,62,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,94,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,132,135,136,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,227,229,231,233,234,235,236,238,240,241,243,249,252,253,254,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,87,-52,-53,-112,33,33,-154,33,33,-142,-37,-38,33,33,-105,-106,150,-98,-99,-100,-101,-102,-103,-104,-65,-54,-60,-61,-62,-63,-64,-47,-50,33,-158,33,-125,33,-89,33,-144,33,33,-134,-135,-136,-137,-139,-140,-141,-143,-145,33,-155,-138,33,33,33,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,87,-56,-57,33,33,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,33,33,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,33,33,-131,33,-130,33,33,-116,-150,-151,-148,-149,-152,-128,-169,-40,33,33,-156,33,33,33,-32,-129,-114,-126,-167,33,-133,-115,-90,-165,-166,-132,]),'FLOTANTE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,36,37,41,43,45,46,48,49,50,51,54,55,56,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,132,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,188,190,191,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,227,229,231,233,234,235,236,238,240,241,243,249,252,253,254,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[54,54,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,54,-52,54,-53,-112,54,112,54,-154,54,54,-142,-37,-38,54,54,-105,-106,54,-41,-42,-43,-44,-45,-46,54,54,-98,-99,-100,-101,-102,-103,-104,-65,-54,-60,-61,-62,-63,-64,-47,-50,54,-158,54,-125,54,-89,54,-144,54,54,-134,-135,-136,-137,-139,-140,-141,-143,-145,54,-155,-138,54,54,54,-168,54,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,54,-56,-57,54,54,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,54,54,54,-88,112,54,54,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,54,54,-131,54,-130,54,54,-116,-150,-151,-148,-149,-152,-128,-169,-40,54,54,-156,54,54,54,-32,-129,-114,-126,-167,54,-133,-115,-90,-165,-166,-132,]),'ENTERO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,36,37,41,43,45,46,48,49,50,51,54,55,56,60,61,62,63,64,65,66,67,68,69,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,90,91,95,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,128,130,132,135,136,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,185,186,188,190,191,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,227,229,231,233,234,235,236,238,240,241,243,249,252,253,254,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[55,55,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,55,-52,55,-53,-112,55,111,55,-154,55,55,-142,-37,-38,55,55,-105,-106,55,-41,-42,-43,-44,-45,-46,55,55,-98,-99,-100,-101,-102,-103,-104,-65,-54,-60,-61,-62,-63,-64,-47,-50,55,-158,55,-125,55,-89,55,-144,55,55,-134,-135,-136,-137,-139,-140,-141,-143,-145,55,-155,-138,55,55,55,-168,55,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,55,-56,-57,55,55,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,55,55,55,-88,111,55,55,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,55,55,-131,55,-130,55,55,-116,-150,-151,-148,-149,-152,-128,-169,-40,55,55,-156,55,55,55,-32,-129,-114,-126,-167,55,-133,-115,-90,-165,-166,-132,]),'WHEN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,129,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[56,56,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,56,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,56,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,56,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[57,57,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,57,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'VARIABLECLASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,37,41,46,48,49,50,51,54,55,56,81,82,83,84,85,86,87,90,91,98,102,103,106,108,115,116,117,118,119,120,121,122,123,124,125,126,127,130,132,135,138,139,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,172,173,174,175,176,177,178,179,180,181,182,183,190,196,198,199,202,203,205,206,207,208,209,210,215,216,217,218,224,225,226,229,231,233,234,235,236,238,240,241,243,249,252,253,255,257,258,259,263,265,270,272,273,274,275,277,279,280,],[58,58,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,86,-52,-53,-112,58,-154,58,58,-142,-37,-38,58,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,58,-125,58,-89,58,-144,58,58,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,58,58,-168,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,86,-56,-57,58,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,58,58,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,58,58,-131,58,-130,58,-116,-150,-151,-148,-149,-152,-128,-169,-40,58,58,-156,58,58,-32,-129,-114,-126,-167,58,-133,-115,-90,-165,-166,-132,]),'CADENA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,34,35,37,41,42,45,48,51,54,55,70,71,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,137,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,190,191,199,202,203,205,206,207,208,209,210,214,215,216,224,226,231,233,234,235,236,238,240,243,253,255,258,259,263,265,273,274,275,277,280,],[32,32,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,83,-52,-53,-112,101,110,-154,-142,-37,-38,32,147,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,32,205,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,83,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,101,221,222,-88,110,-170,-35,-153,-66,-67,-68,-69,-70,-50,32,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,32,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,59,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,190,199,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,238,240,243,253,258,259,263,265,273,274,275,277,280,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-3,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-170,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,-152,-128,-40,-156,-32,-129,-114,-126,-133,-115,-90,-165,-132,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,33,37,41,48,51,54,55,81,82,83,84,85,86,87,90,91,98,103,108,116,119,120,121,122,123,124,125,126,127,130,132,134,135,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,164,166,169,170,173,174,175,176,177,178,179,180,181,182,183,187,189,190,192,193,194,195,197,199,200,202,203,205,206,207,208,209,210,215,216,224,226,231,233,234,235,236,237,238,239,240,243,247,248,251,253,255,258,259,263,264,265,266,267,268,271,273,274,275,277,278,280,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-30,-31,-33,-28,-96,-112,-154,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-125,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-155,-138,199,-146,-127,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-121,-122,-40,-117,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,224,231,-88,233,234,235,236,238,-170,-147,-35,-153,-66,-67,-68,-69,-70,-50,-118,-55,-131,-130,-116,-150,-151,-148,-149,224,-152,253,-128,-40,224,259,263,-156,-93,-32,-129,-114,274,-126,275,-91,-92,277,-133,-115,-90,-165,280,-132,]),'MAS':([4,28,29,31,32,40,53,54,55,89,90,91,118,119,133,142,143,144,145,146,147,148,174,202,205,206,210,218,228,],[-48,64,70,-34,-33,-47,137,-37,-38,-48,-47,-50,-50,-48,-50,64,-48,-36,-34,-34,-33,64,-49,-35,-33,64,-34,-50,-50,]),'MENOS':([4,28,31,40,54,55,89,90,91,118,119,133,142,143,146,148,174,206,210,218,228,],[-48,65,-50,-47,-37,-38,-48,-47,-50,-50,-48,-50,65,-48,-50,65,-49,65,-50,-50,-50,]),'DIVISION':([4,28,31,40,54,55,89,90,91,118,119,133,142,143,146,148,174,206,210,218,228,],[-48,66,-50,-47,-37,-38,-48,-47,-50,-50,-48,-50,66,-48,-50,66,-49,66,-50,-50,-50,]),'MULTIPLICACION':([4,28,31,40,54,55,89,90,91,118,119,133,142,143,146,148,174,206,210,218,228,],[-48,67,-50,-47,-37,-38,-48,-47,-50,-50,-48,-50,67,-48,-50,67,-49,67,-50,-50,-50,]),'EXPONENCIACION':([4,28,31,40,54,55,89,90,91,118,119,133,142,143,146,148,174,206,210,218,228,],[-48,68,-50,-47,-37,-38,-48,-47,-50,-50,-48,-50,68,-48,-50,68,-49,68,-50,-50,-50,]),'MODULO':([4,28,31,40,54,55,89,90,91,118,119,133,142,143,146,148,174,206,210,218,228,],[-48,69,-50,-47,-37,-38,-48,-47,-50,-50,-48,-50,69,-48,-50,69,-49,69,-50,-50,-50,]),'Y_SIGNO':([9,33,54,55,103,158,159,177,178,179,180,240,],[61,-28,-37,-38,61,-109,-110,-107,-29,-108,-111,61,]),'O_SIGNO':([9,33,54,55,103,158,159,177,178,179,180,240,],[62,-28,-37,-38,62,-109,-110,-107,-29,-108,-111,62,]),'DO':([29,30,32,33,37,41,51,54,55,73,81,82,83,84,85,86,87,90,91,98,108,116,119,120,121,122,123,124,125,126,127,131,132,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,163,169,170,173,174,175,176,177,178,179,180,181,182,183,190,202,205,206,207,208,209,210,216,224,226,233,234,235,236,243,258,259,273,280,],[-30,-31,-33,-28,-96,-112,-142,-37,-38,162,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,198,-138,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,213,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,-88,-35,-66,-67,-68,-69,-70,-50,-55,-131,-130,-150,-151,-148,-149,-40,-32,-129,-133,-132,]),'ELSE':([29,30,32,33,37,41,51,54,55,81,82,83,84,85,86,87,90,91,98,108,116,119,120,121,122,123,124,125,126,127,132,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,169,170,173,174,175,176,177,178,179,180,181,182,183,187,190,200,202,205,206,207,208,209,210,216,224,226,233,234,235,236,237,243,258,259,260,273,280,],[-30,-31,-33,-28,-96,-112,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-138,-146,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,225,-88,-147,-35,-66,-67,-68,-69,-70,-50,-55,-131,-130,-150,-151,-148,-149,225,-40,-32,-129,272,-133,-132,]),'ELSEIF':([29,30,32,33,37,41,51,54,55,81,82,83,84,85,86,87,90,91,98,108,116,119,120,121,122,123,124,125,126,127,132,135,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,169,170,173,174,175,176,177,178,179,180,181,182,183,187,190,200,202,205,206,207,208,209,210,216,224,226,233,234,235,236,237,243,258,259,260,273,280,],[-30,-31,-33,-28,-96,-112,-142,-37,-38,-65,-54,-60,-61,-62,-63,-64,-47,-50,-158,-89,-144,-134,-135,-136,-137,-139,-140,-141,-143,-145,-138,-146,-51,-48,-36,-34,-50,-72,-73,-74,-75,-76,-77,-71,-79,-80,-58,-59,-109,-110,-56,-57,-94,-49,-95,-97,-107,-29,-108,-111,-113,-119,-157,227,-88,-147,-35,-66,-67,-68,-69,-70,-50,-55,-131,-130,-150,-151,-148,-149,227,-40,-32,-129,227,-133,-132,]),'IGUAL':([31,58,118,133,218,],[71,140,71,71,71,]),'PUNTO':([31,41,146,210,],[73,96,211,242,]),'IGUAL_DOBLEP':([31,33,39,40,54,55,104,105,118,133,218,],[74,-28,74,74,-37,-38,74,74,74,74,74,]),'NAVE':([31,33,39,40,54,55,104,105,118,133,218,],[75,-28,75,75,-37,-38,75,75,75,75,75,]),'DIFERENTE':([31,33,39,40,54,55,104,105,118,133,218,],[76,-28,76,76,-37,-38,76,76,76,76,76,]),'MAYOR_QUE':([31,33,39,40,54,55,104,105,118,133,218,],[77,-28,77,77,-37,-38,77,77,77,77,77,]),'MENOR_QUE':([31,33,39,40,54,55,104,105,118,133,139,218,],[78,-28,78,78,-37,-38,78,78,78,78,204,78,]),'MENOR_IGUAL_QUE':([31,33,39,40,54,55,104,105,118,133,218,],[79,-28,79,79,-37,-38,79,79,79,79,79,]),'MAYOR_IGUAL_QUE':([31,33,39,40,54,55,104,105,118,133,218,],[80,-28,80,80,-37,-38,80,80,80,80,80,]),'PARENTESIS_DER':([32,33,54,55,88,89,90,91,92,93,142,143,145,158,159,174,177,178,179,180,188,201,228,230,246,261,262,],[-33,-28,-37,-38,173,174,-47,-50,175,176,-51,-48,-34,-109,-110,-49,-107,-29,-108,-111,229,240,-123,252,258,-123,-124,]),'LLAVE_DER':([42,54,55,97,99,219,220,221,222,223,],[98,-37,-38,183,-163,-164,-159,-160,-162,-161,]),'CORCHETE_DER':([45,107,108,109,110,111,112,113,114,190,232,],[108,190,-89,-82,-83,-84,-85,-86,-87,-88,-81,]),'COMA':([54,55,82,83,84,85,86,87,99,108,109,110,111,112,113,114,190,220,221,222,223,228,256,261,],[-37,-38,168,-60,-61,-62,-63,-64,184,-89,191,-83,-84,-85,-86,-87,-88,-159,-160,-162,-161,250,269,250,]),'ID_CLASE':([57,204,],[139,241,]),'TRUE':([71,],[156,]),'FALSE':([71,],[157,]),'EACH':([73,167,],[163,215,]),'TO_F':([73,211,],[164,243,]),'CONCAT':([73,211,242,],[165,165,165,]),'SORT':([73,],[166,]),'FOR':([73,],[167,]),'CHOMP':([96,],[182,]),'ASIGNA_HASH':([100,101,],[185,186,]),'BARRA':([162,213,244,256,276,],[212,245,255,270,279,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruccion':([0,],[1,]),'cuerpoInstruccion':([0,3,],[2,59,]),'cuerpo':([0,3,255,],[3,3,267,]),'operacionAritmetica':([0,3,36,46,49,50,56,63,71,102,106,115,117,118,135,138,140,172,188,196,198,217,218,225,229,249,252,255,257,272,],[4,4,89,119,119,119,119,143,143,119,119,119,119,119,119,119,143,119,89,119,119,119,119,119,119,119,119,4,119,119,]),'input_concatenacion':([0,3,71,140,255,],[5,5,152,209,5,]),'asignacion':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[6,6,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,6,120,120,]),'impresion':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[7,7,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,7,121,121,]),'impresion_vacia':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[8,8,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,122,8,122,122,]),'expresiones_booleanas':([0,3,43,46,49,50,56,60,102,106,115,117,118,128,135,136,138,171,172,196,198,217,218,225,227,229,249,252,254,255,257,272,],[9,9,103,115,132,132,132,103,132,132,132,132,132,103,132,201,132,103,132,132,132,132,132,132,103,132,132,132,103,9,132,132,]),'solicitudDatosTeclado':([0,3,46,49,50,56,71,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[10,10,123,123,123,123,154,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,123,10,123,123,]),'hashes':([0,3,46,49,50,56,71,102,106,115,117,118,135,138,140,172,196,198,217,218,225,229,249,252,255,257,272,],[11,11,124,124,124,124,149,124,124,124,124,124,124,124,207,124,124,124,124,124,124,124,124,124,11,124,124,]),'estructura_ifUnaLinea':([0,3,46,49,50,56,82,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[12,12,126,126,126,126,169,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,12,126,126,]),'estructura_if':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[13,13,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,13,125,125,]),'funciones':([0,3,255,],[14,14,14,]),'funcionesEstructuras':([0,3,255,],[15,15,15,]),'array':([0,3,45,71,140,191,255,],[16,16,113,151,208,113,16,]),'each_array':([0,3,255,],[17,17,17,]),'each_hash':([0,3,255,],[18,18,18,]),'sentencia_while':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[19,19,116,116,116,116,116,116,192,116,116,116,116,116,116,116,116,116,116,116,116,116,19,116,116,]),'sentencia_while_bool':([0,3,46,49,50,56,82,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[20,20,127,127,127,127,170,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,20,127,127,]),'sentencia_case':([0,3,255,],[21,21,21,]),'sentencias_when':([0,3,48,255,],[22,22,130,22,]),'sentencia_until':([0,3,255,],[23,23,23,]),'definicion_clase':([0,3,255,],[24,24,24,]),'entero_a_flotante':([0,3,71,255,],[25,25,155,25,]),'declaracion':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[26,26,117,131,135,138,135,135,193,135,135,135,203,117,135,239,135,135,135,135,135,135,26,271,135,]),'condicionIf':([0,3,43,60,128,171,227,254,255,],[27,27,102,141,196,217,249,265,27,]),'expresionNumerica':([0,3,36,46,49,50,56,63,71,102,106,115,117,118,135,138,140,172,188,196,198,217,218,225,229,249,252,255,257,272,],[28,28,28,28,28,28,28,142,148,28,28,28,28,28,28,28,206,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'concatenacionSimpleCadena':([0,3,71,140,255,],[29,29,29,29,29,]),'concatenacion_funcion':([0,3,71,140,255,],[30,30,30,30,30,]),'valor_print':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'valorSimbolo':([0,3,43,46,49,50,56,60,94,102,106,115,117,118,128,135,136,138,171,172,196,198,217,218,225,227,229,249,252,254,255,257,272,],[39,39,39,39,39,39,39,39,177,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'valorNumerico':([0,3,34,36,43,46,49,50,56,60,63,71,72,95,102,106,115,117,118,128,135,136,138,140,168,171,172,185,186,188,196,198,217,218,225,227,229,249,252,254,255,257,272,],[40,40,84,90,104,40,40,40,40,104,90,90,159,179,40,40,40,40,40,104,40,104,40,90,84,104,40,220,223,90,40,40,40,40,40,104,40,40,40,104,40,40,40,]),'sentencia_when':([0,3,48,129,255,],[48,48,48,197,48,]),'encabezadoClase':([0,3,255,],[50,50,50,]),'asignacion_clase':([0,3,46,49,50,56,102,106,115,117,118,135,138,172,196,198,217,218,225,229,249,252,255,257,272,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'valorCadena':([0,3,70,71,137,140,214,255,],[53,53,144,53,202,53,246,53,]),'funcionesComparacion':([9,103,240,],[60,60,254,]),'operadores':([28,142,148,206,],[63,63,63,63,]),'operadoresComparacion':([31,39,40,104,105,118,133,218,],[72,94,95,95,72,72,72,72,]),'valores':([34,168,],[81,216,]),'valor':([34,168,],[82,82,]),'elemento_hash':([42,184,],[97,219,]),'claveValor':([42,184,],[99,99,]),'elementos_array':([45,191,],[107,232,]),'elemento_array':([45,191,],[109,109,]),'declaraciones':([50,102,106,117,118,135,196,217,218,225,229,249,252,272,],[134,187,189,194,195,200,237,247,195,248,251,260,264,278,]),'booleanos':([71,],[153,]),'funcionesArray':([73,],[160,]),'funcionesNumeros':([73,],[161,]),'funcionesFormatoImpresion':([96,],[181,]),'estructura_secundaria_if':([187,237,260,],[226,226,273,]),'argumentos':([188,250,],[230,262,]),'each_args_hash':([245,],[257,]),'cuerpo_each':([255,],[266,]),'vacio':([255,],[268,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruccion","S'",1,None,None,None),
  ('instruccion -> cuerpoInstruccion','instruccion',1,'p_instruccion','sintactico.py',14),
  ('cuerpoInstruccion -> cuerpo','cuerpoInstruccion',1,'p_cuerpoInstruccion','sintactico.py',18),
  ('cuerpoInstruccion -> cuerpo cuerpoInstruccion','cuerpoInstruccion',2,'p_cuerpoInstruccion','sintactico.py',19),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> sentencia_while_bool','cuerpo',1,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',41),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',42),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',43),
  ('cuerpo -> declaracion','cuerpo',1,'p_cuerpo','sintactico.py',44),
  ('cuerpo -> condicionIf','cuerpo',1,'p_cuerpo','sintactico.py',45),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',51),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',52),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',91),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',92),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',98),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',111),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',112),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',146),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',147),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',166),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',167),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',179),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',184),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',201),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',202),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',203),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',204),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',205),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',206),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',211),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',212),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',213),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',214),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',228),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',267),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',268),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',273),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',274),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',275),
  ('valores -> valor sentencia_while_bool','valores',2,'p_valores','sintactico.py',276),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',280),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',281),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',288),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',289),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',290),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',291),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',292),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',311),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',314),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',315),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',316),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',317),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',318),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',319),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',324),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',325),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',326),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',327),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',328),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',329),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',330),
  ('asignacion -> VARIABLE IGUAL solicitudDatosTeclado','asignacion',3,'p_asignacion','sintactico.py',331),
  ('asignacion -> VARIABLE IGUAL entero_a_flotante','asignacion',3,'p_asignacion','sintactico.py',332),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',342),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',343),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',351),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',352),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',353),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',354),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',355),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',363),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',364),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',373),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',377),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',378),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',382),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',388),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',389),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',390),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',391),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',396),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',397),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',398),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',399),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',400),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',401),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',402),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',406),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',407),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',411),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',412),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',413),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',414),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',415),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',479),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',480),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END','funciones',6,'p_funciones','sintactico.py',483),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END','funciones',7,'p_funciones','sintactico.py',484),
  ('funciones -> DEF VARIABLE declaraciones END','funciones',4,'p_funciones','sintactico.py',485),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',489),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',490),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',494),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',498),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',502),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',503),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',523),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',524),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',529),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',530),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',531),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',532),
  ('estructura_if -> IF condicionIf declaraciones ELSE declaraciones END','estructura_if',6,'p_estructura_if','sintactico.py',536),
  ('estructura_if -> IF condicionIf declaraciones estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',537),
  ('estructura_ifUnaLinea -> IF condicionIf declaraciones END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',541),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',546),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',547),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',551),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',552),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',553),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',554),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',555),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',556),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',557),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',558),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',559),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',560),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',561),
  ('declaracion -> sentencia_while_bool','declaracion',1,'p_declaracion','sintactico.py',562),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','sintactico.py',565),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','sintactico.py',566),
  ('sentencia_while_bool -> WHILE declaracion declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','sintactico.py',569),
  ('sentencia_while_bool -> WHILE VARIABLE declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','sintactico.py',570),
  ('sentencia_while -> WHILE expresiones_booleanas sentencia_while END','sentencia_while',4,'p_sentencia_while','sintactico.py',577),
  ('sentencia_while -> WHILE expresiones_booleanas declaracion END','sentencia_while',4,'p_sentencia_while','sintactico.py',578),
  ('sentencia_case -> CASE VARIABLE sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',588),
  ('sentencia_when -> WHEN declaracion declaracion','sentencia_when',3,'p_sentencia_when','sintactico.py',593),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',596),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',597),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',601),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',606),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',607),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',611),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',612),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',613),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',614),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',618),
  ('elemento_hash -> claveValor COMA elemento_hash','elemento_hash',3,'p_elemento_hash','sintactico.py',619),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',623),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',627),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',628),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',631),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',632),
  ('definicion_clase -> encabezadoClase declaraciones END','definicion_clase',3,'p_definicion_clase','sintactico.py',635),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',638),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',639),
  ('cuerpoVariables -> asignacion_clase cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',640),
  ('cuerpoVariables -> asignacion cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',641),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',645),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',646),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',647),
  ('cuerpoClaseE -> cuerpoClase','cuerpoClaseE',1,'p_cuerpoClaseE','sintactico.py',651),
  ('cuerpoClaseE -> cuerpoClase cuerpoClaseE','cuerpoClaseE',2,'p_cuerpoClaseE','sintactico.py',652),
]
