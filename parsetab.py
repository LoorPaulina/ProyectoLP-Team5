
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEWLINE NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineabooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanoselementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : IGUAL_DOBLEP\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | rangos TRIPLE_IGUAL ENTERO\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,28,29,30,32,36,38,39,40,41,44,45,47,50,51,60,61,62,64,65,66,67,68,69,84,85,93,94,121,125,126,143,144,153,155,160,161,162,163,164,168,172,173,174,176,178,179,181,182,183,184,190,193,195,205,207,208,210,224,225,226,230,234,235,237,245,247,258,259,261,264,270,272,],[26,-22,74,-45,-46,-32,91,96,98,106,96,120,120,-31,120,132,133,143,-90,-91,-92,-93,-94,-95,161,163,120,-116,96,188,132,-101,-102,74,96,-98,-23,-99,-103,-100,91,96,-96,-97,209,106,120,133,120,133,120,120,229,132,120,96,-117,120,188,188,133,246,120,209,120,26,120,266,-151,120,209,-150,279,]),'PRINT':([0,28,36,45,47,50,51,93,94,143,144,160,161,162,163,164,179,182,184,190,205,208,210,234,237,245,247,259,261,270,272,],[30,-22,-32,30,30,-31,30,30,-116,-101,-102,-98,-23,-99,-103,-100,30,30,30,30,30,-117,30,30,30,30,30,-151,30,-150,30,]),'PUTS':([0,28,36,45,47,50,51,93,94,143,144,160,161,162,163,164,179,182,184,190,205,208,210,234,237,245,247,259,261,270,272,],[32,-22,-32,32,32,-31,32,32,-116,-101,-102,-98,-23,-99,-103,-100,32,32,32,32,32,-117,32,32,32,32,32,-151,32,-150,32,]),'GETS':([0,28,36,45,47,50,51,93,94,143,144,160,161,162,163,164,179,182,184,190,205,208,210,234,237,245,247,259,261,270,272,],[37,-22,-32,37,37,-31,37,37,-116,-101,-102,-98,-23,-99,-103,-100,37,37,37,37,37,-117,37,37,37,37,37,-151,37,-150,37,]),'LLAVE_IZ':([0,28,36,45,47,50,51,61,93,94,143,144,160,161,162,163,164,179,181,182,183,184,190,205,208,210,226,234,237,245,247,259,261,270,272,],[38,-22,-32,38,38,-31,38,38,38,-116,-101,-102,-98,-23,-99,-103,-100,38,38,38,38,38,38,38,-117,38,38,38,38,38,38,-151,38,-150,38,]),'IF':([0,28,36,45,47,50,51,71,72,73,74,75,76,93,94,143,144,160,161,162,163,164,179,182,184,190,205,208,210,234,237,245,247,259,261,270,272,],[39,-22,-32,121,121,-31,121,155,-52,-53,-54,-55,-56,121,-116,-101,-102,-98,-23,-99,-103,-100,121,121,121,121,121,-117,121,121,121,39,121,-151,121,-150,121,]),'DEF':([0,223,245,272,],[40,241,40,40,]),'CORCHETE_IZ':([0,41,61,178,181,183,226,245,],[41,41,41,41,41,41,41,41,]),'COMENTARIO':([0,245,],[42,42,]),'COMENTARIO_MULTI':([0,245,],[43,43,]),'WHILE':([0,28,36,45,47,50,51,93,94,143,144,160,161,162,163,164,179,182,184,190,205,208,210,234,237,245,247,259,261,270,272,],[44,-22,-32,44,44,-31,44,44,-116,-101,-102,-98,-23,-99,-103,-100,44,44,44,44,44,-117,44,44,44,44,44,-151,44,-150,44,]),'CASE':([0,245,],[45,45,]),'UNTIL':([0,245,],[47,47,]),'PARENTESIS_IZ':([0,28,30,31,32,36,39,44,45,47,50,51,53,54,55,56,57,58,59,61,78,93,94,98,121,143,144,150,155,160,161,162,163,164,172,173,174,179,181,182,183,184,190,205,207,208,210,226,234,237,245,247,254,259,261,270,272,],[31,-22,77,78,83,-32,97,97,31,31,-31,31,78,-35,-36,-37,-38,-39,-40,78,78,31,-116,176,97,-101,-102,195,97,-98,-23,-99,-103,-100,97,-96,-97,31,78,31,78,31,31,31,97,-117,31,78,31,31,31,31,264,-151,31,-150,31,]),'SIMBOLO':([0,28,29,30,32,36,39,44,45,47,50,51,61,64,65,66,67,68,69,84,93,94,121,143,144,153,155,160,161,162,163,164,172,173,174,179,181,182,184,190,205,207,208,210,226,234,237,245,247,259,261,270,272,],[28,-22,76,-45,-46,-32,28,28,28,28,-31,28,137,-90,-91,-92,-93,-94,-95,28,28,-116,28,-101,-102,76,28,-98,-23,-99,-103,-100,28,-96,-97,28,137,28,28,28,28,28,-117,28,137,28,28,28,28,-151,28,-150,28,]),'FLOTANTE':([0,28,29,30,31,32,36,39,41,44,45,47,50,51,53,54,55,56,57,58,59,61,62,64,65,66,67,68,69,78,85,93,94,121,143,144,153,155,160,161,162,163,164,169,170,172,173,174,178,179,181,182,183,184,190,205,207,208,210,226,234,237,245,247,259,261,270,272,],[50,-22,50,-45,50,-46,-32,50,104,50,50,50,-31,50,50,-35,-36,-37,-38,-39,-40,50,50,-90,-91,-92,-93,-94,-95,50,50,50,-116,50,-101,-102,50,50,-98,-23,-99,-103,-100,50,50,50,-96,-97,104,50,50,50,50,50,50,50,50,-117,50,50,50,50,50,50,-151,50,-150,50,]),'ENTERO':([0,28,29,30,31,32,36,39,41,44,45,47,50,51,53,54,55,56,57,58,59,61,62,64,65,66,67,68,69,78,85,86,93,94,97,121,143,144,153,155,158,160,161,162,163,164,169,170,172,173,174,178,179,181,182,183,184,190,205,207,208,210,226,234,237,245,247,259,261,270,272,],[36,-22,36,-45,81,-46,-32,36,103,36,36,36,-31,36,36,-35,-36,-37,-38,-39,-40,36,36,-90,-91,-92,-93,-94,-95,36,36,164,36,-116,175,36,-101,-102,36,36,175,-98,-23,-99,-103,-100,36,36,36,-96,-97,103,36,36,36,36,36,36,36,36,-117,36,36,36,36,36,36,-151,36,-150,36,]),'WHEN':([0,24,25,27,28,32,36,37,46,50,70,71,72,73,74,75,76,82,89,94,100,108,109,110,111,112,113,114,115,116,117,118,119,129,130,131,132,134,135,136,137,138,139,141,142,143,144,154,156,157,159,160,161,162,163,164,165,166,167,177,182,189,197,198,206,208,216,217,218,219,220,221,227,238,239,245,248,249,262,271,],[51,-24,-25,-27,-22,-89,-32,-104,51,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,51,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-101,-102,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,-78,-120,-29,-48,-120,-119,-117,-63,-58,-59,-60,-61,-62,-139,-134,-135,51,-26,-118,-122,-121,]),'CLASS':([0,245,],[52,52,]),'CADENA':([0,29,30,32,38,41,60,61,126,153,168,169,170,178,181,183,195,226,245,],[27,72,-45,-46,92,102,27,134,27,72,92,202,203,102,134,217,27,134,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,37,42,43,46,50,70,71,72,73,74,75,76,82,89,94,100,109,110,111,112,113,114,115,116,117,118,119,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,156,157,159,160,161,162,163,164,165,166,167,177,182,189,196,197,198,206,208,215,216,217,218,219,220,221,227,238,239,240,248,249,252,262,263,265,267,271,280,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-89,-32,-104,-85,-86,-137,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-138,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-70,-50,-51,-101,-102,-112,-113,-34,-108,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,-78,-120,-29,-109,-48,-120,-119,-117,-136,-63,-58,-59,-60,-61,-62,-139,-134,-135,-140,-26,-118,-106,-122,-107,-80,-149,-121,-154,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,28,32,36,37,42,43,46,50,70,71,72,73,74,75,76,82,89,94,100,109,110,111,112,113,114,115,116,117,118,119,123,129,130,131,132,134,135,136,137,138,139,140,141,142,143,144,145,146,149,151,154,156,157,159,160,161,162,163,164,165,166,167,177,180,182,186,187,189,196,197,198,206,208,213,214,215,216,217,218,219,220,221,222,227,233,236,238,239,240,242,243,244,245,248,249,252,253,255,256,257,260,262,263,265,267,268,271,273,274,275,276,277,278,280,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-24,-25,-27,-22,-89,-32,-104,-85,-86,-137,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-138,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-70,-50,-51,-101,-102,-112,-113,-34,-108,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,-78,215,-120,-155,-156,-29,-109,-48,-120,-119,-117,238,239,-136,-63,-58,-59,-60,-61,-62,240,-139,249,252,-134,-135,-140,-157,-158,-63,-83,-26,-118,-106,263,265,-81,-82,267,-122,-107,-80,-149,271,-121,-159,280,-160,-161,-131,-124,-154,]),'MAS':([2,23,24,26,27,34,36,49,50,79,81,82,109,129,130,131,132,133,134,135,157,189,217,218,],[-42,54,60,-28,-27,-41,-32,126,-31,-42,-32,-41,-42,54,-42,-30,-28,-28,-27,54,-43,-29,-27,54,]),'MENOS':([2,23,34,36,50,79,81,82,109,129,130,135,157,218,],[-42,55,-41,-32,-31,-42,-32,-41,-42,55,-42,55,-43,55,]),'DIVISION':([2,23,34,36,50,79,81,82,109,129,130,135,157,218,],[-42,56,-41,-32,-31,-42,-32,-41,-42,56,-42,56,-43,56,]),'MULTIPLICACION':([2,23,34,36,50,79,81,82,109,129,130,135,157,218,],[-42,57,-41,-32,-31,-42,-32,-41,-42,57,-42,57,-43,57,]),'EXPONENCIACION':([2,23,34,36,50,79,81,82,109,129,130,135,157,218,],[-42,58,-41,-32,-31,-42,-32,-41,-42,58,-42,58,-43,58,]),'MODULO':([2,23,34,36,50,79,81,82,109,129,130,135,157,218,],[-42,59,-41,-32,-31,-42,-32,-41,-42,59,-42,59,-43,59,]),'DO':([24,25,27,28,32,36,37,50,63,70,71,72,73,74,75,76,82,89,94,100,107,109,110,111,112,113,114,115,116,117,118,119,124,129,130,131,132,134,135,136,137,138,139,141,142,143,144,148,154,156,157,159,160,161,162,163,164,165,166,167,177,182,189,197,198,206,208,216,217,218,219,220,221,238,239,248,249,262,271,],[-24,-25,-27,-22,-89,-32,-104,-31,147,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,179,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,184,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-101,-102,194,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,-78,-120,-29,-48,-120,-119,-117,-63,-58,-59,-60,-61,-62,-134,-135,-26,-118,-122,-121,]),'IGUAL_DOBLEP':([24,25,26,27,28,32,33,34,36,37,50,70,71,72,73,74,75,76,82,89,94,95,96,100,109,110,111,112,113,114,115,116,117,118,119,120,127,129,130,131,132,134,135,136,137,138,139,141,142,143,144,154,156,157,159,160,161,162,163,164,165,166,167,177,182,189,197,198,206,208,216,217,218,219,220,221,238,239,248,249,262,271,279,],[-24,-25,64,-27,-22,-89,64,64,-32,-104,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,64,64,-79,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,64,190,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-101,-102,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,-78,-120,-29,-48,-120,-119,-117,-63,-58,-59,-60,-61,-62,-134,-135,-26,-118,-122,-121,64,]),'ELSE':([24,25,27,28,32,36,37,50,70,71,72,73,74,75,76,82,89,94,100,109,110,111,112,113,114,115,116,117,118,119,129,130,131,132,134,135,136,137,138,139,141,142,143,144,154,156,157,159,160,161,162,163,164,165,166,167,171,177,182,189,197,198,206,208,216,217,218,219,220,221,238,239,248,249,250,262,271,],[-24,-25,-27,-22,-89,-32,-104,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-101,-102,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,205,-78,-120,-29,-48,-120,-119,-117,-63,-58,-59,-60,-61,-62,-134,-135,-26,-118,261,-122,-121,]),'ELSEIF':([24,25,27,28,32,36,37,50,70,71,72,73,74,75,76,82,89,94,100,109,110,111,112,113,114,115,116,117,118,119,129,130,131,132,134,135,136,137,138,139,141,142,143,144,154,156,157,159,160,161,162,163,164,165,166,167,171,177,182,189,197,198,206,208,216,217,218,219,220,221,238,239,248,249,250,262,271,],[-24,-25,-27,-22,-89,-32,-104,-31,-57,-47,-52,-53,-54,-55,-56,-41,-142,-116,-79,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-101,-102,-49,-87,-43,-88,-98,-23,-99,-103,-100,-105,-110,-141,207,-78,-120,-29,-48,-120,-119,-117,-63,-58,-59,-60,-61,-62,-134,-135,-26,-118,207,-122,-121,]),'NEWLINE':([24,25,27,36,48,50,82,89,100,128,129,130,131,132,134,135,136,137,138,139,141,142,157,167,177,185,186,187,189,217,218,219,220,221,228,242,243,244,248,277,278,],[-24,-25,-27,-32,125,-31,-41,-142,-79,-152,-44,-42,-30,-28,-64,-65,-66,-67,-68,-69,-50,-51,-43,-141,-78,223,224,225,-29,-58,-59,-60,-61,-62,-153,-157,-158,-63,-26,224,225,]),'IGUAL':([26,120,122,188,279,],[61,181,183,226,226,]),'PUNTO':([26,37,133,],[63,87,192,]),'DIFERENTE':([26,28,33,34,36,50,95,96,120,279,],[65,-22,65,65,-32,-31,65,65,65,65,]),'MAYOR_QUE':([26,28,33,34,36,50,95,96,120,279,],[66,-22,66,66,-32,-31,66,66,66,66,]),'MENOR_QUE':([26,28,33,34,36,50,95,96,120,128,279,],[67,-22,67,67,-32,-31,67,67,67,191,67,]),'MENOR_IGUAL_QUE':([26,28,33,34,36,50,95,96,120,279,],[68,-22,68,68,-32,-31,68,68,68,68,]),'MAYOR_IGUAL_QUE':([26,28,33,34,36,50,95,96,120,279,],[69,-22,69,69,-32,-31,69,69,69,69,]),'PARENTESIS_DER':([27,36,50,77,79,82,83,129,130,132,157,175,176,199,209,211,231,251,269,],[-27,-32,-31,156,157,-41,159,-44,-42,-28,-43,-33,210,232,-114,237,248,-115,272,]),'AND':([28,36,50,94,143,144,160,161,162,163,164,],[-22,-32,-31,173,-101,-102,-98,-23,-99,-103,-100,]),'OR':([28,36,50,94,143,144,160,161,162,163,164,],[-22,-32,-31,174,-101,-102,-98,-23,-99,-103,-100,]),'VARIABLECLASE':([28,29,30,32,36,45,47,50,51,93,94,125,143,144,153,160,161,162,163,164,179,182,184,190,205,208,210,224,225,234,237,247,259,261,270,272,],[-22,75,-45,-46,-32,122,122,-31,122,122,-116,122,-101,-102,75,-98,-23,-99,-103,-100,122,122,122,122,122,-117,122,122,122,122,122,122,-151,122,-150,122,]),'TRIPLE_IGUAL':([35,232,],[86,-84,]),'COMA':([36,50,71,72,73,74,75,76,90,100,101,102,103,104,105,106,177,201,202,203,204,209,246,],[-32,-31,153,-52,-53,-54,-55,-56,168,-79,178,-73,-74,-75,-76,-77,-78,-143,-144,-146,-145,235,258,]),'LLAVE_DER':([36,38,50,88,90,200,201,202,203,204,],[-32,89,-31,167,-147,-148,-143,-144,-146,-145,]),'CORCHETE_DER':([41,99,100,101,102,103,104,105,106,177,212,],[100,177,-79,-72,-73,-74,-75,-76,-77,-78,-71,]),'ID_CLASE':([52,191,],[128,228,]),'TRUE':([61,181,226,],[141,141,141,]),'FALSE':([61,181,226,],[142,142,142,]),'EACH':([63,152,],[148,196,]),'TO_F':([63,],[149,]),'CONCAT':([63,192,],[150,150,]),'SORT':([63,],[151,]),'FOR':([63,],[152,]),'TRES_PUNTOS':([80,81,175,],[158,-33,-33,]),'CHOMP':([87,],[166,]),'ASIGNA_HASH':([91,92,],[169,170,]),'BARRA':([147,194,229,246,266,],[193,230,245,259,270,]),'INITIALIZE':([241,],[254,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,245,],[1,256,]),'operacionAritmetica':([0,31,45,47,51,53,61,78,93,179,181,182,183,184,190,205,210,226,234,237,245,247,261,272,],[2,79,109,109,109,130,130,79,109,109,130,109,130,109,109,109,109,130,109,109,2,109,109,109,]),'input_concatenacion':([0,61,181,183,226,245,],[3,139,139,221,139,3,]),'asignacion':([0,45,47,51,93,125,179,182,184,190,205,210,224,225,234,237,245,247,261,272,],[4,110,110,110,110,187,110,110,110,110,110,110,187,187,110,110,4,110,110,278,]),'impresion':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[5,111,111,111,111,111,111,111,111,111,111,111,111,5,111,111,111,]),'impresion_vacia':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[6,112,112,112,112,112,112,112,112,112,112,112,112,6,112,112,112,]),'expresiones_booleanas':([0,39,44,45,47,51,93,121,155,172,179,182,184,190,205,207,210,234,237,245,247,261,272,],[7,94,107,113,113,113,113,94,94,208,113,113,113,113,113,94,113,113,113,7,113,113,113,]),'solicitudDatosTeclado':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[8,114,114,114,114,114,114,114,114,114,114,114,114,8,114,114,114,]),'hashes':([0,45,47,51,61,93,179,181,182,183,184,190,205,210,226,234,237,245,247,261,272,],[9,115,115,115,136,115,115,136,115,219,115,115,115,115,136,115,115,9,115,115,115,]),'estructura_if':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[10,116,116,116,116,116,116,116,116,116,116,116,116,10,116,116,116,]),'funciones':([0,245,272,],[11,11,276,]),'funcionesEstructuras':([0,245,],[12,12,]),'array':([0,41,61,178,181,183,226,245,],[13,105,138,105,138,220,138,13,]),'each_array':([0,245,],[14,14,]),'comentarios':([0,245,],[15,15,]),'each_hash':([0,245,],[16,16,]),'sentencia_while':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[17,118,118,118,118,213,118,118,118,118,118,118,118,17,118,118,118,]),'sentencia_case':([0,245,],[18,18,]),'sentencias_when':([0,46,245,],[19,123,19,]),'sentencia_until':([0,245,],[20,20,]),'definicion_clase':([0,245,],[21,21,]),'entero_a_flotante':([0,245,],[22,22,]),'expresionNumerica':([0,31,45,47,51,53,61,78,93,179,181,182,183,184,190,205,210,226,234,237,245,247,261,272,],[23,23,23,23,23,129,135,23,23,23,135,23,218,23,23,23,23,135,23,23,23,23,23,23,]),'concatenacionSimpleCadena':([0,61,181,183,226,245,],[24,24,24,24,24,24,]),'concatenacion_funcion':([0,61,181,183,226,245,],[25,25,25,25,25,25,]),'valor_print':([0,45,47,51,93,179,182,184,190,205,210,234,237,245,247,261,272,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'valorSimbolo':([0,39,44,45,47,51,84,93,121,155,172,179,182,184,190,205,207,210,234,237,245,247,261,272,],[33,33,33,33,33,33,160,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'valorNumerico':([0,29,31,39,44,45,47,51,53,61,62,78,85,93,121,153,155,169,170,172,179,181,182,183,184,190,205,207,210,226,234,237,245,247,261,272,],[34,73,82,95,95,34,34,34,82,82,144,82,162,34,95,73,95,201,204,95,34,82,34,82,34,34,34,95,34,82,34,34,34,34,34,34,]),'rangos':([0,39,44,45,47,51,93,121,155,172,179,182,184,190,205,207,210,234,237,245,247,261,272,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'sentencia_when':([0,46,108,245,],[46,46,180,46,]),'encabezadoClase':([0,245,],[48,48,]),'valorCadena':([0,60,61,126,181,183,195,226,245,],[49,131,49,189,49,49,231,49,49,]),'operadores':([23,129,135,218,],[53,53,53,53,]),'operadoresComparacion':([26,33,34,95,96,120,279,],[62,84,85,85,62,62,62,]),'valores':([29,153,],[70,197,]),'valor':([29,153,],[71,71,]),'soloEnteros':([31,97,158,],[80,80,199,]),'elemento_hash':([38,],[88,]),'claveValor':([38,168,],[90,200,]),'condicionIf':([39,121,155,207,],[93,182,198,234,]),'elementos_array':([41,178,],[99,212,]),'elemento_array':([41,178,],[101,101,]),'declaracion':([45,47,51,93,179,182,184,190,205,210,234,237,247,261,272,],[108,124,127,171,214,171,222,227,233,236,250,253,260,268,275,]),'asignacion_clase':([45,47,51,93,125,179,182,184,190,205,210,224,225,234,237,247,261,272,],[117,117,117,117,186,117,117,117,117,117,117,186,186,117,117,117,117,277,]),'estructura_ifUnaLinea':([45,47,51,71,93,179,182,184,190,205,210,234,237,247,261,272,],[119,119,119,154,119,119,119,119,119,119,119,119,119,119,119,119,]),'booleanos':([61,181,226,],[140,216,244,]),'funcionesArray':([63,],[145,]),'funcionesNumeros':([63,],[146,]),'funcionesFormatoImpresion':([87,],[165,]),'funcionesComparacion':([94,],[172,]),'cuerpoVariables':([125,224,225,272,],[185,242,243,273,]),'estructura_secundaria_if':([171,250,],[206,262,]),'argumentos':([176,235,264,],[211,251,269,]),'each_args_hash':([230,],[247,]),'cuerpo_each':([245,],[255,]),'vacio':([245,],[257,]),'cuerpoClase':([272,],[274,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',39),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',40),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',79),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',80),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',86),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',99),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',100),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',132),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',133),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',152),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',153),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',165),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',170),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',187),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',188),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',189),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',190),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',191),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',192),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',197),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',198),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',199),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',206),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',228),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',229),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',234),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',235),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',236),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',239),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',240),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',247),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',248),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',249),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',250),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',251),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',270),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',273),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',274),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',275),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',276),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',277),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',278),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',283),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',284),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',285),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',286),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',287),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',288),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',289),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',299),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',300),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',308),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',309),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',310),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',311),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',312),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',320),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',321),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',330),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',334),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',335),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',339),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',345),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',350),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',351),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',355),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',356),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',357),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',362),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',363),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',364),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',365),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',366),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',367),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',371),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',372),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',376),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',377),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',378),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',379),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',380),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',381),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',492),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',493),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',496),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',497),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',501),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',502),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',506),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',510),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',514),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',515),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',535),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',536),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',541),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',542),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',546),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',547),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',551),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',555),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',556),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',560),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',561),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',562),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',563),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',564),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',565),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',566),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',567),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',568),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',569),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',570),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',574),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',575),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',579),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',583),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',584),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',588),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',592),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',597),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',598),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',602),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',603),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',604),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',605),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',609),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',610),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',614),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',618),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',619),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',622),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',623),
  ('definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',11,'p_definicion_clase','sintactico.py',626),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',630),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',631),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',632),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',633),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',637),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',638),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',639),
]
