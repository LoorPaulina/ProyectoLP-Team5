
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGNA_HASH BARRA BEGIN BREAK CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DEFINED_QUESTION DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENSURE ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NEWLINE NEXT NIL NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RAISE REDO RESCUE RETRY RETURN SELF SIMBOLO SORT SUPER TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE YIELD Y_SIGNOcuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | comentarios\n              | each_hash\n              | sentencia_while\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotanteinput_concatenacion : concatenacionSimpleCadena\n                           | concatenacion_funcionconcatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DERvalorCadena : CADENA\n                   | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DERoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLineavalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacionasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacionelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  rangos : PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DERcomentarios : COMENTARIO \n                    | COMENTARIO_MULTIimpresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTSoperadoresComparacion : DOBLE_IGUAL\n                            | DIFERENTE\n                            | MAYOR_QUE\n                            | MENOR_QUE\n                            | MENOR_IGUAL_QUE\n                            | MAYOR_IGUAL_QUEfuncionesComparacion : AND\n                            | ORexpresiones_booleanas : valorNumerico operadoresComparacion valorNumerico  \n                            | rangos TRIPLE_IGUAL ENTERO\n                            | VARIABLE operadoresComparacion VARIABLE\n                            | VARIABLE operadoresComparacion valorNumerico\n                            | valorNumerico operadoresComparacion VARIABLE\n                            | TRUE\n                            | FALSEsolicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | expresiones_booleanas funcionesComparacion expresiones_booleanasestructura_if : IF condicionIf declaracion ELSE declaracion END\n                    | IF condicionIf declaracion estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIfestructura_secundaria_if : ELSEIF condicionIf declaracion ELSE declaracion END\n                                | ELSEIF condicionIf declaracion estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | sentencia_while\n                    | estructura_ifUnaLineasentencia_while : WHILE expresiones_booleanas DO sentencia_while END\n                      | WHILE expresiones_booleanas DO declaracion END sentencia_case : CASE declaracion sentencia_when ENDsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_when : WHEN declaracion IGUAL_DOBLEP declaracionsentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                    | claveValor COMA claveValoreach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                 | VARIABLE BARRAdefinicion_clase : CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase NEWLINE cuerpoVariables\n                | asignacion NEWLINE cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones'
    
_lr_action_items = {'VARIABLE':([0,28,29,31,34,35,36,38,39,40,41,44,45,47,50,51,59,60,61,63,64,65,66,67,68,83,91,92,119,124,136,137,146,148,153,154,155,159,163,164,165,167,169,170,172,173,174,175,177,179,181,191,193,194,196,214,218,219,221,226,227,228,230,243,244,246,254,255,258,],[26,73,-43,-44,-30,-96,-97,89,94,96,104,94,118,118,-29,118,129,130,136,-83,-84,-85,-86,-87,-88,154,118,-110,94,129,-93,-94,73,94,-91,-95,-92,89,94,-89,-90,195,104,118,118,130,118,211,118,213,129,118,94,-111,118,229,118,195,118,211,211,26,118,251,-145,118,195,-144,118,]),'PRINT':([0,34,35,36,45,47,50,51,91,92,136,137,153,154,155,170,172,174,177,191,194,196,218,221,228,230,244,246,255,258,],[29,-30,-96,-97,29,29,-29,29,29,-110,-93,-94,-91,-95,-92,29,29,29,29,29,-111,29,29,29,29,29,-145,29,-144,29,]),'PUTS':([0,34,35,36,45,47,50,51,91,92,136,137,153,154,155,170,172,174,177,191,194,196,218,221,228,230,244,246,255,258,],[31,-30,-96,-97,31,31,-29,31,31,-110,-93,-94,-91,-95,-92,31,31,31,31,31,-111,31,31,31,31,31,-145,31,-144,31,]),'TRUE':([0,34,35,36,39,44,45,47,50,51,91,92,119,136,137,148,153,154,155,163,164,165,170,172,174,177,191,193,194,196,218,221,228,230,244,246,255,258,],[35,-30,-96,-97,35,35,35,35,-29,35,35,-110,35,-93,-94,35,-91,-95,-92,35,-89,-90,35,35,35,35,35,35,-111,35,35,35,35,35,-145,35,-144,35,]),'FALSE':([0,34,35,36,39,44,45,47,50,51,91,92,119,136,137,148,153,154,155,163,164,165,170,172,174,177,191,193,194,196,218,221,228,230,244,246,255,258,],[36,-30,-96,-97,36,36,36,36,-29,36,36,-110,36,-93,-94,36,-91,-95,-92,36,-89,-90,36,36,36,36,36,36,-111,36,36,36,36,36,-145,36,-144,36,]),'GETS':([0,34,35,36,45,47,50,51,91,92,136,137,153,154,155,170,172,174,177,191,194,196,218,221,228,230,244,246,255,258,],[37,-30,-96,-97,37,37,-29,37,37,-110,-93,-94,-91,-95,-92,37,37,37,37,37,-111,37,37,37,37,37,-145,37,-144,37,]),'LLAVE_IZ':([0,34,35,36,45,47,50,51,60,91,92,136,137,153,154,155,170,172,173,174,177,191,194,196,218,221,228,230,244,246,255,258,],[38,-30,-96,-97,38,38,-29,38,38,38,-110,-93,-94,-91,-95,-92,38,38,38,38,38,38,-111,38,38,38,38,38,-145,38,-144,38,]),'IF':([0,34,35,36,45,47,50,51,70,71,72,73,74,75,91,92,136,137,153,154,155,170,172,174,177,191,194,196,218,221,228,230,244,246,255,258,],[39,-30,-96,-97,119,119,-29,119,148,-48,-49,-50,-51,-52,119,-110,-93,-94,-91,-95,-92,119,119,119,119,119,-111,119,119,119,39,119,-145,119,-144,119,]),'DEF':([0,225,228,258,],[40,237,40,40,]),'CORCHETE_IZ':([0,41,60,169,173,228,],[41,41,41,41,41,41,]),'COMENTARIO':([0,228,],[42,42,]),'COMENTARIO_MULTI':([0,228,],[43,43,]),'WHILE':([0,34,35,36,45,47,50,51,91,92,136,137,153,154,155,170,172,174,177,191,194,196,218,221,228,230,244,246,255,258,],[44,-30,-96,-97,44,44,-29,44,44,-110,-93,-94,-91,-95,-92,44,44,44,44,44,-111,44,44,44,44,44,-145,44,-144,44,]),'CASE':([0,228,],[45,45,]),'UNTIL':([0,228,],[47,47,]),'CLASS':([0,228,],[48,48,]),'PARENTESIS_IZ':([0,29,30,31,34,35,36,39,44,45,47,50,51,52,53,54,55,56,57,58,60,77,91,92,96,119,136,137,143,148,153,154,155,163,164,165,170,172,173,174,177,191,193,194,196,218,221,228,230,244,246,249,255,258,],[30,76,77,82,-30,-96,-97,95,95,30,30,-29,30,77,-33,-34,-35,-36,-37,-38,77,77,30,-110,167,95,-93,-94,181,95,-91,-95,-92,95,-89,-90,30,30,77,30,30,30,95,-111,30,30,30,30,30,-145,30,254,-144,30,]),'FLOTANTE':([0,28,29,30,31,34,35,36,39,41,44,45,47,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,67,68,77,83,91,92,119,136,137,146,148,153,154,155,160,161,163,164,165,169,170,172,173,174,177,191,193,194,196,218,221,228,230,244,246,255,258,],[50,50,-43,50,-44,-30,-96,-97,50,102,50,50,50,-29,50,50,-33,-34,-35,-36,-37,-38,50,50,-83,-84,-85,-86,-87,-88,50,50,50,-110,50,-93,-94,50,50,-91,-95,-92,50,50,50,-89,-90,102,50,50,50,50,50,50,50,-111,50,50,50,50,50,-145,50,-144,50,]),'ENTERO':([0,28,29,30,31,34,35,36,39,41,44,45,47,50,51,52,53,54,55,56,57,58,60,61,63,64,65,66,67,68,77,83,84,91,92,95,119,136,137,146,148,151,153,154,155,160,161,163,164,165,169,170,172,173,174,177,191,193,194,196,218,221,228,230,244,246,255,258,],[34,34,-43,80,-44,-30,-96,-97,34,101,34,34,34,-29,34,34,-33,-34,-35,-36,-37,-38,34,34,-83,-84,-85,-86,-87,-88,34,34,155,34,-110,166,34,-93,-94,34,34,166,-91,-95,-92,34,34,34,-89,-90,101,34,34,34,34,34,34,34,-111,34,34,34,34,34,-145,34,-144,34,]),'WHEN':([0,24,25,27,31,34,35,36,37,46,50,69,70,71,72,73,74,75,81,87,92,98,106,107,108,109,110,111,112,113,114,115,116,117,126,127,128,129,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,168,172,176,183,184,192,194,202,203,204,205,206,212,222,223,228,231,232,247,256,],[51,-22,-23,-25,-82,-30,-96,-97,-98,51,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,51,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,-71,-114,-27,-46,-114,-113,-111,-54,-55,-56,-57,-58,-133,-128,-129,51,-24,-112,-116,-115,]),'CADENA':([0,28,29,31,38,41,59,60,124,146,159,160,161,169,173,181,228,],[27,71,-43,-44,90,100,27,131,27,71,90,188,189,100,202,27,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,31,34,35,36,37,42,43,46,50,69,70,71,72,73,74,75,81,87,92,98,107,108,109,110,111,112,113,114,115,116,117,121,126,127,128,129,131,132,133,134,135,136,137,138,139,142,144,147,149,150,152,153,154,155,156,157,158,168,172,176,182,183,184,192,194,201,202,203,204,205,206,212,222,223,224,231,232,235,247,248,250,252,256,265,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-82,-30,-96,-97,-98,-78,-79,-131,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-132,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-106,-107,-32,-102,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,-71,-114,-27,-103,-46,-114,-113,-111,-130,-54,-55,-56,-57,-58,-133,-128,-129,-134,-24,-112,-100,-116,-101,-73,-143,-115,-146,]),'END':([2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,27,31,34,35,36,37,42,43,46,50,69,70,71,72,73,74,75,81,87,92,98,107,108,109,110,111,112,113,114,115,116,117,121,126,127,128,129,131,132,133,134,135,136,137,138,139,142,144,147,149,150,152,153,154,155,156,157,158,168,171,172,176,182,183,184,192,194,199,200,201,202,203,204,205,206,207,209,210,212,217,220,222,223,224,228,231,232,235,236,238,239,240,241,242,245,247,248,250,252,253,256,259,260,261,262,263,264,265,],[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-25,-82,-30,-96,-97,-98,-78,-79,-131,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-132,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-106,-107,-32,-102,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,-71,201,-114,-27,-103,-46,-114,-113,-111,222,223,-130,-54,-55,-56,-57,-58,224,-147,-148,-133,232,235,-128,-129,-134,-76,-24,-112,-100,248,-149,-150,250,-74,-75,252,-116,-101,-73,-143,256,-115,-151,265,-152,-153,-125,-118,-146,]),'MAS':([2,23,24,26,27,32,34,49,50,78,80,81,107,126,127,128,129,130,131,132,150,176,202,203,],[-40,53,59,-26,-25,-39,-30,124,-29,-40,-30,-39,-40,53,-40,-28,-26,-26,-25,53,-41,-27,-25,53,]),'MENOS':([2,23,32,34,50,78,80,81,107,126,127,132,150,203,],[-40,54,-39,-30,-29,-40,-30,-39,-40,54,-40,54,-41,54,]),'DIVISION':([2,23,32,34,50,78,80,81,107,126,127,132,150,203,],[-40,55,-39,-30,-29,-40,-30,-39,-40,55,-40,55,-41,55,]),'MULTIPLICACION':([2,23,32,34,50,78,80,81,107,126,127,132,150,203,],[-40,56,-39,-30,-29,-40,-30,-39,-40,56,-40,56,-41,56,]),'EXPONENCIACION':([2,23,32,34,50,78,80,81,107,126,127,132,150,203,],[-40,57,-39,-30,-29,-40,-30,-39,-40,57,-40,57,-41,57,]),'MODULO':([2,23,32,34,50,78,80,81,107,126,127,132,150,203,],[-40,58,-39,-30,-29,-40,-30,-39,-40,58,-40,58,-41,58,]),'DO':([24,25,27,31,34,35,36,37,50,62,69,70,71,72,73,74,75,81,87,92,98,105,107,108,109,110,111,112,113,114,115,116,117,122,126,127,128,129,131,132,133,134,135,136,137,141,147,149,150,152,153,154,155,156,157,158,168,172,176,183,184,192,194,202,203,204,205,206,222,223,231,232,247,256,],[-22,-23,-25,-82,-30,-96,-97,-98,-29,140,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,170,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,174,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,180,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,-71,-114,-27,-46,-114,-113,-111,-54,-55,-56,-57,-58,-128,-129,-24,-112,-116,-115,]),'IGUAL_DOBLEP':([24,25,27,31,34,35,36,37,50,69,70,71,72,73,74,75,81,87,92,98,107,108,109,110,111,112,113,114,115,116,117,125,126,127,128,129,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,168,172,176,183,184,192,194,202,203,204,205,206,222,223,231,232,247,256,],[-22,-23,-25,-82,-30,-96,-97,-98,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,177,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,-71,-114,-27,-46,-114,-113,-111,-54,-55,-56,-57,-58,-128,-129,-24,-112,-116,-115,]),'ELSE':([24,25,27,31,34,35,36,37,50,69,70,71,72,73,74,75,81,87,92,98,107,108,109,110,111,112,113,114,115,116,117,126,127,128,129,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,162,168,172,176,183,184,192,194,202,203,204,205,206,222,223,231,232,233,247,256,],[-22,-23,-25,-82,-30,-96,-97,-98,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,191,-71,-114,-27,-46,-114,-113,-111,-54,-55,-56,-57,-58,-128,-129,-24,-112,246,-116,-115,]),'ELSEIF':([24,25,27,31,34,35,36,37,50,69,70,71,72,73,74,75,81,87,92,98,107,108,109,110,111,112,113,114,115,116,117,126,127,128,129,131,132,133,134,135,136,137,147,149,150,152,153,154,155,156,157,158,162,168,172,176,183,184,192,194,202,203,204,205,206,222,223,231,232,233,247,256,],[-22,-23,-25,-82,-30,-96,-97,-98,-29,-53,-45,-48,-49,-50,-51,-52,-39,-136,-110,-72,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-42,-40,-28,-26,-59,-60,-61,-62,-63,-93,-94,-47,-80,-41,-81,-91,-95,-92,-99,-104,-135,193,-71,-114,-27,-46,-114,-113,-111,-54,-55,-56,-57,-58,-128,-129,-24,-112,193,-116,-115,]),'NEWLINE':([24,25,27,34,50,81,87,98,123,126,127,128,129,131,132,133,134,135,150,158,168,176,202,203,204,205,206,208,209,210,231,238,239,263,264,],[-22,-23,-25,-30,-29,-39,-136,-72,175,-42,-40,-28,-26,-59,-60,-61,-62,-63,-41,-135,-71,-27,-54,-55,-56,-57,-58,225,226,227,-24,-149,-150,226,227,]),'IGUAL':([26,118,120,211,],[60,60,173,60,]),'PUNTO':([26,37,130,],[62,85,178,]),'DOBLE_IGUAL':([26,32,34,50,93,94,118,],[63,63,-30,-29,63,63,63,]),'DIFERENTE':([26,32,34,50,93,94,118,],[64,64,-30,-29,64,64,64,]),'MAYOR_QUE':([26,32,34,50,93,94,118,],[65,65,-30,-29,65,65,65,]),'MENOR_QUE':([26,32,34,50,93,94,118,],[66,66,-30,-29,66,66,66,]),'MENOR_IGUAL_QUE':([26,32,34,50,93,94,118,],[67,67,-30,-29,67,67,67,]),'MAYOR_IGUAL_QUE':([26,32,34,50,93,94,118,],[68,68,-30,-29,68,68,68,]),'PARENTESIS_DER':([27,34,50,76,78,81,82,126,127,129,150,166,167,185,195,197,215,234,257,],[-25,-30,-29,149,150,-39,152,-42,-40,-26,-41,-31,196,216,-108,221,231,-109,258,]),'VARIABLECLASE':([28,29,31,34,35,36,45,47,50,51,91,92,136,137,146,153,154,155,170,172,174,175,177,191,194,196,218,221,226,227,230,244,246,255,258,],[74,-43,-44,-30,-96,-97,120,120,-29,120,120,-110,-93,-94,74,-91,-95,-92,120,120,120,120,120,120,-111,120,120,120,120,120,120,-145,120,-144,120,]),'SIMBOLO':([28,29,31,146,],[75,-43,-44,75,]),'TRIPLE_IGUAL':([33,216,],[84,-77,]),'COMA':([34,50,70,71,72,73,74,75,88,98,99,100,101,102,103,104,168,187,188,189,190,195,229,],[-30,-29,146,-48,-49,-50,-51,-52,159,-72,169,-66,-67,-68,-69,-70,-71,-137,-138,-140,-139,219,243,]),'AND':([34,35,36,50,92,136,137,153,154,155,],[-30,-96,-97,-29,164,-93,-94,-91,-95,-92,]),'OR':([34,35,36,50,92,136,137,153,154,155,],[-30,-96,-97,-29,165,-93,-94,-91,-95,-92,]),'LLAVE_DER':([34,38,50,86,88,186,187,188,189,190,],[-30,87,-29,158,-141,-142,-137,-138,-140,-139,]),'CORCHETE_DER':([41,97,98,99,100,101,102,103,104,168,198,],[98,168,-72,-65,-66,-67,-68,-69,-70,-71,-64,]),'ID_CLASE':([48,],[123,]),'EACH':([62,145,],[141,182,]),'TO_F':([62,],[142,]),'CONCAT':([62,178,],[143,143,]),'SORT':([62,],[144,]),'FOR':([62,],[145,]),'TRES_PUNTOS':([79,80,166,],[151,-31,-31,]),'CHOMP':([85,],[157,]),'ASIGNA_HASH':([89,90,],[160,161,]),'BARRA':([140,180,213,229,251,],[179,214,228,244,255,]),'INITIALIZE':([237,],[249,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuerpo':([0,228,],[1,241,]),'operacionAritmetica':([0,30,45,47,51,52,60,77,91,170,172,173,174,177,191,196,218,221,228,230,246,258,],[2,78,107,107,107,127,127,78,107,107,107,127,107,107,107,107,107,107,2,107,107,107,]),'input_concatenacion':([0,60,173,228,],[3,135,206,3,]),'asignacion':([0,45,47,51,91,170,172,174,175,177,191,196,218,221,226,227,228,230,246,258,],[4,108,108,108,108,108,108,108,210,108,108,108,108,108,210,210,4,108,108,264,]),'impresion':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[5,109,109,109,109,109,109,109,109,109,109,109,109,5,109,109,109,]),'impresion_vacia':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[6,110,110,110,110,110,110,110,110,110,110,110,110,6,110,110,110,]),'expresiones_booleanas':([0,39,44,45,47,51,91,119,148,163,170,172,174,177,191,193,196,218,221,228,230,246,258,],[7,92,105,111,111,111,111,92,92,194,111,111,111,111,111,92,111,111,111,7,111,111,111,]),'solicitudDatosTeclado':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[8,112,112,112,112,112,112,112,112,112,112,112,112,8,112,112,112,]),'hashes':([0,45,47,51,60,91,170,172,173,174,177,191,196,218,221,228,230,246,258,],[9,113,113,113,133,113,113,113,204,113,113,113,113,113,113,9,113,113,113,]),'estructura_if':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[10,114,114,114,114,114,114,114,114,114,114,114,114,10,114,114,114,]),'funciones':([0,228,258,],[11,11,262,]),'funcionesEstructuras':([0,228,],[12,12,]),'array':([0,41,60,169,173,228,],[13,103,134,103,205,13,]),'each_array':([0,228,],[14,14,]),'comentarios':([0,228,],[15,15,]),'each_hash':([0,228,],[16,16,]),'sentencia_while':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[17,116,116,116,116,199,116,116,116,116,116,116,116,17,116,116,116,]),'sentencia_case':([0,228,],[18,18,]),'sentencias_when':([0,46,228,],[19,121,19,]),'sentencia_until':([0,228,],[20,20,]),'definicion_clase':([0,228,],[21,21,]),'entero_a_flotante':([0,228,],[22,22,]),'expresionNumerica':([0,30,45,47,51,52,60,77,91,170,172,173,174,177,191,196,218,221,228,230,246,258,],[23,23,23,23,23,126,132,23,23,23,23,203,23,23,23,23,23,23,23,23,23,23,]),'concatenacionSimpleCadena':([0,60,173,228,],[24,24,24,24,]),'concatenacion_funcion':([0,60,173,228,],[25,25,25,25,]),'valor_print':([0,45,47,51,91,170,172,174,177,191,196,218,221,228,230,246,258,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'valorNumerico':([0,28,30,39,44,45,47,51,52,60,61,77,83,91,119,146,148,160,161,163,170,172,173,174,177,191,193,196,218,221,228,230,246,258,],[32,72,81,93,93,32,32,32,81,81,137,81,153,32,93,72,93,187,190,93,32,32,81,32,32,32,93,32,32,32,32,32,32,32,]),'rangos':([0,39,44,45,47,51,91,119,148,163,170,172,174,177,191,193,196,218,221,228,230,246,258,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'sentencia_when':([0,46,106,228,],[46,46,171,46,]),'valorCadena':([0,59,60,124,173,181,228,],[49,128,49,176,49,215,49,]),'operadores':([23,126,132,203,],[52,52,52,52,]),'operadoresComparacion':([26,32,93,94,118,],[61,83,83,61,61,]),'valores':([28,146,],[69,183,]),'valor':([28,146,],[70,70,]),'soloEnteros':([30,95,151,],[79,79,185,]),'elemento_hash':([38,],[86,]),'claveValor':([38,159,],[88,186,]),'condicionIf':([39,119,148,193,],[91,172,184,218,]),'elementos_array':([41,169,],[97,198,]),'elemento_array':([41,169,],[99,99,]),'declaracion':([45,47,51,91,170,172,174,177,191,196,218,221,230,246,258,],[106,122,125,162,200,162,207,212,217,220,233,236,245,253,261,]),'asignacion_clase':([45,47,51,91,170,172,174,175,177,191,196,218,221,226,227,230,246,258,],[115,115,115,115,115,115,115,209,115,115,115,115,115,209,209,115,115,263,]),'estructura_ifUnaLinea':([45,47,51,70,91,170,172,174,177,191,196,218,221,230,246,258,],[117,117,117,147,117,117,117,117,117,117,117,117,117,117,117,117,]),'funcionesArray':([62,],[138,]),'funcionesNumeros':([62,],[139,]),'funcionesFormatoImpresion':([85,],[156,]),'funcionesComparacion':([92,],[163,]),'estructura_secundaria_if':([162,233,],[192,247,]),'argumentos':([167,219,254,],[197,234,257,]),'cuerpoVariables':([175,226,227,258,],[208,238,239,259,]),'each_args_hash':([214,],[230,]),'cuerpo_each':([228,],[240,]),'vacio':([228,],[242,]),'cuerpoClase':([258,],[260,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> cuerpo","S'",1,None,None,None),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',13),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',14),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',15),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',16),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',17),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',18),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',19),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',20),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',21),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> comentarios','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',39),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',40),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',46),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',59),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',60),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',92),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',93),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',112),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',113),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',125),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',130),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',145),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',146),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',147),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',148),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',149),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',150),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',155),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',156),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',157),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',164),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',186),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',187),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',192),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',193),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',194),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',202),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',203),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',204),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',205),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',206),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',225),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',234),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',235),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',236),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',237),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',238),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',243),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',244),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',245),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',246),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',247),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',257),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',258),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',266),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',267),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',268),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',269),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',270),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',278),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',279),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',288),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',292),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',293),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',297),
  ('rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER','rangos',5,'p_rangos','sintactico.py',303),
  ('comentarios -> COMENTARIO','comentarios',1,'p_comentarios','sintactico.py',308),
  ('comentarios -> COMENTARIO_MULTI','comentarios',1,'p_comentarios','sintactico.py',309),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',313),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',314),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',315),
  ('operadoresComparacion -> DOBLE_IGUAL','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',320),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',321),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',322),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',323),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',324),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',325),
  ('funcionesComparacion -> AND','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',329),
  ('funcionesComparacion -> OR','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',330),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',334),
  ('expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',335),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',336),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',337),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',338),
  ('expresiones_booleanas -> TRUE','expresiones_booleanas',1,'p_expresiones_booleanas','sintactico.py',339),
  ('expresiones_booleanas -> FALSE','expresiones_booleanas',1,'p_expresiones_booleanas','sintactico.py',340),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',407),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',408),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END','funciones',6,'p_funciones','sintactico.py',413),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END','funciones',7,'p_funciones','sintactico.py',414),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',418),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',419),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',423),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',427),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',431),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',432),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',452),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',453),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',458),
  ('condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas','condicionIf',3,'p_condicionIf','sintactico.py',459),
  ('estructura_if -> IF condicionIf declaracion ELSE declaracion END','estructura_if',6,'p_estructura_if','sintactico.py',463),
  ('estructura_if -> IF condicionIf declaracion estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',464),
  ('estructura_ifUnaLinea -> IF condicionIf','estructura_ifUnaLinea',2,'p_estructura_ifUnaLinea','sintactico.py',468),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',472),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',473),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',477),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',478),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',479),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',480),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',481),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',482),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',483),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',484),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',485),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',486),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',487),
  ('sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END','sentencia_while',5,'p_sentencia_while','sintactico.py',491),
  ('sentencia_while -> WHILE expresiones_booleanas DO declaracion END','sentencia_while',5,'p_sentencia_while','sintactico.py',492),
  ('sentencia_case -> CASE declaracion sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',496),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',500),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',501),
  ('sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion','sentencia_when',4,'p_sentencia_when','sintactico.py',505),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',509),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',514),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',515),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',519),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',520),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',521),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',522),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',526),
  ('elemento_hash -> claveValor COMA claveValor','elemento_hash',3,'p_elemento_hash','sintactico.py',527),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',531),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',535),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',536),
  ('definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END','definicion_clase',12,'p_definicion_clase','sintactico.py',540),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',544),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',545),
  ('cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',546),
  ('cuerpoVariables -> asignacion NEWLINE cuerpoVariables','cuerpoVariables',3,'p_cuerpoVariables','sintactico.py',547),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',551),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',552),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',553),
]
