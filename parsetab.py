
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGNA_HASH BARRA BEGIN CADENA CASE CHOMP CLASS COMA COMENTARIO COMENTARIO_MULTI COMILLA_D COMILLA_S CONCAT CORCHETE_DER CORCHETE_IZ DEF DIFERENTE DIVISION DO DOBLE_IGUAL EACH ELSE ELSEIF END ENTERO EXCLAMACION_ALTO EXCLAMACION_BAJO EXPONENCIACION FALSE FLOTANTE FOR GETS ID_CLASE IF IGUAL IGUAL_DOBLEP IN INITIALIZE LLAVE_DER LLAVE_IZ MAS MAYOR_IGUAL_QUE MAYOR_QUE MENOR_IGUAL_QUE MENOR_QUE MENOS MODULE MODULO MULTIPLICACION NAVE NOT OR O_SIGNO PARENTESIS_DER PARENTESIS_IZ PORCENTAJE PREGUNTA PRINT PRINTF PUNTO PUTS RETURN SELF SIMBOLO SORT TO_F TRES_PUNTOS TRIPLE_IGUAL TRUE UNTIL VARIABLE VARIABLECLASE WHEN WHILE Y_SIGNOinstruccion : cuerpoInstruccion\n        cuerpoInstruccion : cuerpo\n                        | cuerpo cuerpoInstruccion \n      cuerpo : operacionAritmetica\n              | input_concatenacion\n              | asignacion\n              | impresion\n              | impresion_vacia\n              | expresiones_booleanas\n              | solicitudDatosTeclado\n              | hashes\n              | estructura_ifUnaLinea\n              | estructura_if\n              | funciones\n              | funcionesEstructuras\n              | array\n              | each_array\n              | each_hash\n              | sentencia_while\n              | sentencia_while_bool\n              | sentencia_case\n              | sentencias_when\n              | sentencia_until\n              | definicion_clase\n              | entero_a_flotantevalorSimbolo : SIMBOLO \n                    | VARIABLE input_concatenacion : concatenacionSimpleCadena\n                            | concatenacion_funcion  concatenacion_funcion : VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER  valorCadena : CADENA\n                    | VARIABLE concatenacionSimpleCadena : valorCadena MAS valorCadena\n                                 | concatenacionSimpleCadena MAS valorCadenavalorNumerico : FLOTANTE \n                     | ENTEROsoloEnteros : ENTEROentero_a_flotante : VARIABLE PUNTO TO_Foperadores : MAS \n                  | MENOS\n                  | DIVISION\n                  | MULTIPLICACION\n                  | EXPONENCIACION \n                  | MODULOexpresionNumerica : valorNumerico\n                         | operacionAritmetica\n                         | PARENTESIS_IZ operacionAritmetica PARENTESIS_DER\n                         | VARIABLEoperacionAritmetica : expresionNumerica operadores expresionNumericavalor_print : PRINT\n                   | PUTS valores : valor\n               | valor COMA valores\n               | valor estructura_ifUnaLinea\n               | valor sentencia_while_boolbooleanos : TRUE\n                | FALSEvalor : CADENA\n             | valorNumerico\n             | VARIABLE\n             | VARIABLECLASE\n             | SIMBOLOimpresion : valor_print valoresasignacion_clase : VARIABLECLASE IGUAL CADENA\n                  | VARIABLECLASE IGUAL expresionNumerica\n                  | VARIABLECLASE IGUAL hashes\n                  | VARIABLECLASE IGUAL array\n                  | VARIABLECLASE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanosasignacion : VARIABLE IGUAL CADENA\n                  | VARIABLE IGUAL expresionNumerica\n                  | VARIABLE IGUAL hashes\n                  | VARIABLE IGUAL SIMBOLO\n                  | VARIABLE IGUAL array\n                  | VARIABLE IGUAL input_concatenacion\n                  | VARIABLE IGUAL booleanos\n                  | VARIABLE IGUAL solicitudDatosTeclado\n                  | VARIABLE IGUAL entero_a_flotanteelementos_array : elemento_array COMA elementos_array\n                       | elemento_array elemento_array : CADENA\n                      | ENTERO\n                      | FLOTANTE\n                      | array\n                      | VARIABLEarray : CORCHETE_IZ elementos_array CORCHETE_DER\n             | CORCHETE_IZ CORCHETE_DEReach_array : VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each ENDcuerpo_each : cuerpo\n                   | vaciovacio :  impresion_vacia : PRINT PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS PARENTESIS_IZ PARENTESIS_DER\n                        | PUTS\n                        | PRINTF PARENTESIS_IZ PARENTESIS_DERoperadoresComparacion : IGUAL_DOBLEP\n                             | NAVE\n                             | DIFERENTE\n                             | MAYOR_QUE\n                             | MENOR_QUE\n                             | MENOR_IGUAL_QUE\n                             | MAYOR_IGUAL_QUEfuncionesComparacion : Y_SIGNO\n                            | O_SIGNOexpresiones_booleanas : valorSimbolo operadoresComparacion valorSimbolo \n                             | valorNumerico operadoresComparacion valorNumerico\n                             | VARIABLE operadoresComparacion VARIABLE\n                             | VARIABLE operadoresComparacion valorNumerico\n                             | valorNumerico operadoresComparacion VARIABLE  solicitudDatosTeclado : GETS \n                            | GETS PUNTO funcionesFormatoImpresion funciones : DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END\n                 | DEF VARIABLE declaraciones ENDfuncionesArray : SORT\n                      | FOR EACHfuncionesFormatoImpresion : CHOMPfuncionesNumeros : TO_FfuncionesEstructuras : VARIABLE PUNTO funcionesArray\n                            | VARIABLE PUNTO funcionesNumerosargumentos : VARIABLE\n                    | VARIABLE COMA argumentoscondicionIf : expresiones_booleanas\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf\n                | expresiones_booleanas funcionesComparacion condicionIf\n                | EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DERestructura_if : IF condicionIf declaraciones ELSE declaraciones END\n                    | IF condicionIf declaraciones estructura_secundaria_ifestructura_ifUnaLinea : IF condicionIf declaraciones ENDestructura_secundaria_if : ELSEIF condicionIf declaraciones ELSE declaraciones END\n                                | ELSEIF condicionIf declaraciones estructura_secundaria_ifdeclaracion : operacionAritmetica\n                    | asignacion\n                    | impresion\n                    | impresion_vacia\n                    | expresiones_booleanas\n                    | solicitudDatosTeclado\n                    | hashes\n                    | estructura_if\n                    | asignacion_clase\n                    | estructura_ifUnaLinea\n                    | sentencia_while\n                    | sentencia_while_booldeclaraciones : declaracion \n                    | declaracion declaracionessentencia_while_bool : WHILE declaracion declaraciones END\n                            | WHILE VARIABLE declaraciones END sentencia_while : WHILE expresiones_booleanas sentencia_while END\n                      | WHILE expresiones_booleanas declaracion END sentencia_case : CASE VARIABLE sentencia_when ENDsentencia_when : WHEN declaracion declaracionsentencias_when : sentencia_when\n                    | sentencia_when sentencias_whensentencia_until : UNTIL declaracion DO declaracion ENDhashes : LLAVE_IZ elemento_hash LLAVE_DER\n              | LLAVE_IZ LLAVE_DERclaveValor : VARIABLE ASIGNA_HASH valorNumerico\n                  | VARIABLE ASIGNA_HASH CADENA\n                  | CADENA ASIGNA_HASH valorNumerico\n                  | CADENA ASIGNA_HASH CADENAelemento_hash : claveValor\n                     | claveValor COMA elemento_hasheach_hash : VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion ENDeach_args_hash : VARIABLE COMA VARIABLE BARRA\n                      | VARIABLE BARRAencabezadoClase : CLASS ID_CLASE\n                    | CLASS ID_CLASE MENOR_QUE ID_CLASEdefinicion_clase : encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE ENDcuerpoVariables : asignacion_clase                \n                | asignacion\n                | asignacion_clase cuerpoVariables\n                | asignacion cuerpoVariablescuerpoClase : cuerpoVariables\n                | declaracion\n                | funciones\n                cuerpoClaseE : cuerpoClase\n                | cuerpoClase cuerpoClaseE'
    
_lr_action_items = {'VARIABLE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,39,40,41,42,43,44,45,46,47,48,50,51,52,55,56,57,58,59,60,61,62,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,182,183,184,185,186,187,189,190,195,196,197,199,201,202,203,204,205,208,210,211,212,213,214,220,221,222,223,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,248,249,251,255,256,257,259,261,262,263,265,266,267,269,272,278,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[29,29,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,77,-50,83,-51,-110,92,98,99,107,111,124,-152,128,132,-35,-36,128,83,-39,-40,-41,-42,-43,-44,139,140,152,-96,-97,-98,-99,-100,-101,-102,-63,-52,-58,-59,-60,-61,-62,-45,-48,172,174,-156,128,-123,128,-87,128,-142,128,128,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,98,-153,-136,132,132,139,128,-166,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,77,-54,-55,98,214,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,92,128,98,-103,-104,98,227,-86,107,140,128,243,128,-171,-172,140,-33,-151,250,139,-116,-53,128,128,-129,128,-128,98,-125,128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-167,-38,264,128,-126,270,128,-154,270,29,128,-30,-127,98,-112,287,-165,128,-131,-124,-113,297,-88,-163,-173,297,-174,-175,132,132,-164,-130,-168,]),'PRINT':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[33,33,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,33,-152,33,-35,-36,33,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,33,-123,33,-87,33,-142,33,33,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,33,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,33,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,33,-86,33,33,-171,-172,-33,-151,-116,-53,33,33,-129,33,-128,-125,33,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,33,-126,33,-154,33,33,-30,-127,-112,-165,33,-131,-124,-113,33,-88,-163,-173,33,-174,-175,-140,-133,-164,-130,-168,]),'PUTS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[35,35,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,35,-152,35,-35,-36,35,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,35,-123,35,-87,35,-142,35,35,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,35,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,35,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,35,-86,35,35,-171,-172,-33,-151,-116,-53,35,35,-129,35,-128,-125,35,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,35,-126,35,-154,35,35,-30,-127,-112,-165,35,-131,-124,-113,35,-88,-163,-173,35,-174,-175,-140,-133,-164,-130,-168,]),'PRINTF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[36,36,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,36,-152,36,-35,-36,36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,36,-123,36,-87,36,-142,36,36,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,36,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,36,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,36,-86,36,36,-171,-172,-33,-151,-116,-53,36,36,-129,36,-128,-125,36,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,36,-126,36,-154,36,36,-30,-127,-112,-165,36,-131,-124,-113,36,-88,-163,-173,36,-174,-175,-140,-133,-164,-130,-168,]),'GETS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,63,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,195,196,199,201,202,203,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[39,39,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,39,-152,39,-35,-36,39,39,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,39,-123,39,-87,39,-142,39,39,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,39,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,39,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,39,-86,39,39,39,-171,-172,39,-33,-151,-116,-53,39,39,-129,39,-128,-125,39,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,39,-126,39,-154,39,39,-30,-127,-112,-165,39,-131,-124,-113,39,-88,-163,-173,39,-174,-175,-140,-133,-164,-130,-168,]),'LLAVE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,63,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,195,196,197,199,201,202,203,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[40,40,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,40,-152,40,-35,-36,40,40,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,40,-123,40,-87,40,-142,40,40,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,40,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,40,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,40,-86,40,40,40,40,-171,-172,40,-33,-151,-116,-53,40,40,-129,40,-128,-125,40,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,40,-126,40,-154,40,40,-30,-127,-112,-165,40,-131,-124,-113,40,-88,-163,-173,40,-174,-175,-140,-133,-164,-130,-168,]),'IF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[41,41,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,122,-152,122,-35,-36,122,-63,165,-58,-59,-60,-61,-62,-45,-48,-156,122,-123,122,-87,122,-142,122,122,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,122,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,122,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,122,-86,122,122,-171,-172,-33,-151,-116,-53,122,122,-129,122,-128,-125,122,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,122,-126,122,-154,41,122,-30,-127,-112,-165,122,-131,-124,-113,122,-88,-163,-173,122,-174,-175,-140,-133,-164,-130,-168,]),'DEF':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,129,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,201,202,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,261,263,266,267,272,282,284,285,286,288,290,292,293,294,295,296,299,300,],[42,42,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,200,-169,-170,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-171,-172,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,-154,42,-30,-127,-112,-131,-113,42,-88,-163,-173,42,-174,-175,-140,-133,-130,-168,]),'CORCHETE_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,43,46,50,51,63,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,190,195,197,203,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[43,43,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,43,-152,-35,-36,43,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,43,43,43,43,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,43,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'WHILE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,44,46,47,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[44,44,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,44,-152,44,-35,-36,44,-63,166,-58,-59,-60,-61,-62,-45,-48,-156,44,-123,44,-87,44,-142,44,44,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,44,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,44,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,44,-86,44,44,-171,-172,-33,-151,-116,-53,44,44,-129,44,-128,-125,44,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,44,-126,44,-154,44,44,-30,-127,-112,-165,44,-131,-124,-113,44,-88,-163,-173,44,-174,-175,-140,-133,-164,-130,-168,]),'CASE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[45,45,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,45,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'UNTIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[47,47,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,47,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'PARENTESIS_IZ':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,33,34,35,36,39,44,46,47,50,51,52,55,56,57,58,59,60,61,63,73,74,75,76,77,78,79,82,83,90,94,95,96,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,159,160,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,187,189,195,196,197,199,201,202,203,204,205,211,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,246,247,249,255,256,259,261,263,265,266,267,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[34,34,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,80,34,84,85,-110,34,-152,34,-35,-36,34,34,-39,-40,-41,-42,-43,-44,34,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,34,-123,186,187,-87,34,-142,34,34,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,34,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,210,-115,-54,-55,34,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,34,34,-86,34,34,34,34,-171,-172,34,-33,-151,-116,-53,34,34,-129,34,-128,-125,34,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,262,-69,-38,34,-126,34,-154,34,34,-30,-127,-112,-165,34,-131,-124,-113,34,-88,-163,-173,34,-174,-175,-140,-133,-164,-130,-168,]),'SIMBOLO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,35,39,41,44,46,47,50,51,52,63,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,182,183,184,185,186,189,195,196,199,201,202,203,204,205,211,212,213,214,220,221,222,223,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,269,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[31,31,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,79,-50,-51,-110,31,31,-152,31,-35,-36,31,144,-96,-97,-98,-99,-100,-101,-102,-63,-52,-58,-59,-60,-61,-62,-45,-48,31,-156,31,-123,31,-87,31,-142,31,31,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,31,-153,-136,-169,-170,31,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,79,-54,-55,31,31,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,31,31,-103,-104,31,-86,144,31,31,-171,-172,144,-33,-151,-116,-53,31,31,-129,31,-128,31,-125,31,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,31,-126,31,-154,31,31,-30,-127,31,-112,-165,31,-131,-124,-113,31,-88,-163,-173,31,-174,-175,-140,-133,-164,-130,-168,]),'FLOTANTE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,39,41,43,44,46,47,50,51,52,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,87,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,183,184,185,186,187,189,190,195,196,197,199,201,202,203,204,205,211,212,213,214,220,221,222,223,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,269,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[50,50,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,50,-50,50,-51,-110,50,105,50,-152,50,-35,-36,50,50,-39,-40,-41,-42,-43,-44,50,50,-96,-97,-98,-99,-100,-101,-102,-63,-52,-58,-59,-60,-61,-62,-45,-48,50,-156,50,-123,50,-87,50,-142,50,50,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,50,-153,-136,-169,-170,50,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,50,-54,-55,50,50,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,50,50,50,50,-103,-104,50,50,-86,105,50,50,50,50,-171,-172,50,-33,-151,-116,-53,50,50,-129,50,-128,50,-125,50,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,50,-126,50,-154,50,50,-30,-127,50,-112,-165,50,-131,-124,-113,50,-88,-163,-173,50,-174,-175,-140,-133,-164,-130,-168,]),'ENTERO':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,34,35,39,41,43,44,46,47,50,51,52,55,56,57,58,59,60,61,63,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,87,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,125,127,130,131,134,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,182,183,184,185,186,187,189,190,195,196,197,199,201,202,203,204,205,211,212,213,214,220,221,222,223,225,228,230,232,233,234,235,236,238,239,240,241,242,243,244,247,249,255,256,259,261,263,265,266,267,269,272,279,281,282,283,284,285,286,288,290,292,293,294,295,296,298,299,300,],[51,51,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,51,-50,51,-51,-110,51,104,51,-152,51,-35,-36,51,51,-39,-40,-41,-42,-43,-44,51,51,-96,-97,-98,-99,-100,-101,-102,-63,-52,-58,-59,-60,-61,-62,-45,-48,51,-156,51,-123,51,-87,51,-142,51,51,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,51,-153,-136,-169,-170,51,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,51,-54,-55,51,51,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,51,51,51,51,-103,-104,51,51,-86,104,51,51,51,51,-171,-172,51,-33,-151,-116,-53,51,51,-129,51,-128,51,-125,51,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-69,-38,51,-126,51,-154,51,51,-30,-127,51,-112,-165,51,-131,-124,-113,51,-88,-163,-173,51,-174,-175,-140,-133,-164,-130,-168,]),'WHEN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,124,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[52,52,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,52,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,52,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,52,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'CLASS':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[53,53,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,53,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'CADENA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,32,33,35,39,40,43,46,50,51,62,63,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,133,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,162,163,164,167,168,169,170,171,172,173,174,175,176,177,178,179,180,189,190,195,197,203,204,205,210,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,263,266,267,272,282,284,286,288,299,300,],[30,30,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,75,-50,-51,-110,93,103,-152,-35,-36,30,141,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,30,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,75,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,93,217,218,-86,103,141,238,141,-33,-151,30,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,30,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,54,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,205,211,212,220,222,230,232,233,234,235,236,238,239,240,241,242,243,244,249,261,266,267,272,282,284,286,288,299,300,],[0,-1,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-3,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-151,-116,-53,-129,-128,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-150,-38,-154,-30,-127,-112,-131,-113,-88,-163,-130,-168,]),'END':([4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,27,28,30,31,35,39,46,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,125,127,130,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,158,160,163,164,167,168,169,170,171,172,173,174,175,176,177,181,182,188,189,191,192,193,194,198,201,202,204,205,211,212,220,222,224,230,232,233,234,235,236,237,238,239,240,241,242,243,244,245,247,249,253,254,258,261,263,266,267,272,273,275,276,277,280,282,284,286,288,289,290,291,292,293,294,295,296,299,300,301,],[-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-28,-29,-31,-26,-94,-110,-152,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-153,-136,-169,-170,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-76,-77,-78,-56,-57,-107,-108,-119,-120,-38,-115,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,220,-144,230,-86,232,233,234,235,244,-171,-172,-33,-151,-116,-53,-129,-128,-145,-114,-148,-149,-146,-147,-69,220,-64,-65,-66,-67,-68,-48,-150,261,-69,-38,220,267,272,-154,-91,-30,-127,-112,284,286,-89,-90,288,-131,-113,-88,-163,299,-173,300,-176,-174,-175,-140,-133,-130,-168,-177,]),'MAS':([4,26,27,29,30,38,49,50,51,81,82,83,111,112,128,136,137,138,139,140,141,142,168,204,214,227,238,239,243,297,],[-46,56,62,-32,-31,-45,133,-35,-36,-46,-45,-48,-48,-46,-48,56,-46,-34,-32,-32,-31,56,-47,-33,-48,-48,-31,56,-32,-48,]),'MENOS':([4,26,29,38,50,51,81,82,83,111,112,128,136,137,140,142,168,214,227,239,243,297,],[-46,57,-48,-45,-35,-36,-46,-45,-48,-48,-46,-48,57,-46,-48,57,-47,-48,-48,57,-48,-48,]),'DIVISION':([4,26,29,38,50,51,81,82,83,111,112,128,136,137,140,142,168,214,227,239,243,297,],[-46,58,-48,-45,-35,-36,-46,-45,-48,-48,-46,-48,58,-46,-48,58,-47,-48,-48,58,-48,-48,]),'MULTIPLICACION':([4,26,29,38,50,51,81,82,83,111,112,128,136,137,140,142,168,214,227,239,243,297,],[-46,59,-48,-45,-35,-36,-46,-45,-48,-48,-46,-48,59,-46,-48,59,-47,-48,-48,59,-48,-48,]),'EXPONENCIACION':([4,26,29,38,50,51,81,82,83,111,112,128,136,137,140,142,168,214,227,239,243,297,],[-46,60,-48,-45,-35,-36,-46,-45,-48,-48,-46,-48,60,-46,-48,60,-47,-48,-48,60,-48,-48,]),'MODULO':([4,26,29,38,50,51,81,82,83,111,112,128,136,137,140,142,168,214,227,239,243,297,],[-46,61,-48,-45,-35,-36,-46,-45,-48,-48,-46,-48,61,-46,-48,61,-47,-48,-48,61,-48,-48,]),'VARIABLECLASE':([27,28,30,31,32,33,35,39,44,47,48,50,51,52,73,74,75,76,77,78,79,82,83,90,94,95,99,101,108,109,110,111,112,113,114,115,116,117,118,119,120,121,127,130,131,134,135,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,162,163,164,166,167,168,169,170,171,172,173,174,175,176,177,182,189,196,199,201,202,204,212,213,214,220,221,222,225,228,230,232,233,234,235,236,238,239,240,241,242,243,247,248,249,255,256,259,265,266,267,272,279,281,282,283,284,285,290,292,293,294,295,296,298,299,],[-28,-29,-31,-26,78,-50,-51,-110,123,123,123,-35,-36,123,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,123,-123,123,-87,123,-142,123,123,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-136,123,123,123,-166,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-77,-78,-56,-57,-107,-108,78,-54,-55,123,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,123,-86,123,123,-171,-172,-33,-53,123,123,-129,123,-128,-125,123,-114,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-69,-167,-38,123,-126,123,123,-30,-127,-112,-165,123,-131,-124,-113,123,-173,123,-174,-175,123,123,-164,-130,]),'DO':([27,28,30,31,35,39,50,51,65,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,126,127,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,157,163,164,167,168,169,170,171,172,173,174,175,176,177,189,204,212,220,222,232,233,234,235,236,238,239,240,241,242,243,249,266,267,282,299,],[-28,-29,-31,-26,-94,-110,-35,-36,156,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,199,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-77,-78,-56,-57,-107,-108,209,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,-86,-33,-53,-129,-128,-148,-149,-146,-147,-69,-64,-65,-66,-67,-68,-48,-38,-30,-127,-131,-130,]),'ELSE':([27,28,30,31,35,39,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,127,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,163,164,167,168,169,170,171,172,173,174,175,176,177,181,182,189,204,212,220,222,224,232,233,234,235,236,237,238,239,240,241,242,243,249,266,267,268,282,299,],[-28,-29,-31,-26,-94,-110,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-77,-78,-56,-57,-107,-108,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,221,-144,-86,-33,-53,-129,-128,-145,-148,-149,-146,-147,-69,221,-64,-65,-66,-67,-68,-48,-38,-30,-127,281,-131,-130,]),'ELSEIF':([27,28,30,31,35,39,50,51,73,74,75,76,77,78,79,82,83,90,101,109,112,113,114,115,116,117,118,119,120,121,127,136,137,138,139,140,141,142,143,144,145,146,148,149,150,151,152,153,163,164,167,168,169,170,171,172,173,174,175,176,177,181,182,189,204,212,220,222,224,232,233,234,235,236,237,238,239,240,241,242,243,249,266,267,268,282,299,],[-28,-29,-31,-26,-94,-110,-35,-36,-63,-52,-58,-59,-60,-61,-62,-45,-48,-156,-87,-142,-132,-133,-134,-135,-137,-138,-139,-140,-141,-143,-136,-49,-46,-34,-32,-48,-70,-71,-72,-73,-74,-75,-77,-78,-56,-57,-107,-108,-54,-55,-92,-47,-93,-95,-105,-27,-106,-109,-111,-117,-155,223,-144,-86,-33,-53,-129,-128,-145,-148,-149,-146,-147,-69,223,-64,-65,-66,-67,-68,-48,-38,-30,-127,223,-131,-130,]),'IGUAL':([29,111,123,128,132,214,297,],[63,195,197,195,203,195,203,]),'PUNTO':([29,39,140,243,],[65,88,207,260,]),'IGUAL_DOBLEP':([29,31,37,38,50,51,97,98,111,128,214,297,],[66,-26,66,66,-35,-36,66,66,66,66,66,66,]),'NAVE':([29,31,37,38,50,51,97,98,111,128,214,297,],[67,-26,67,67,-35,-36,67,67,67,67,67,67,]),'DIFERENTE':([29,31,37,38,50,51,97,98,111,128,214,297,],[68,-26,68,68,-35,-36,68,68,68,68,68,68,]),'MAYOR_QUE':([29,31,37,38,50,51,97,98,111,128,214,297,],[69,-26,69,69,-35,-36,69,69,69,69,69,69,]),'MENOR_QUE':([29,31,37,38,50,51,97,98,111,128,135,214,297,],[70,-26,70,70,-35,-36,70,70,70,70,206,70,70,]),'MENOR_IGUAL_QUE':([29,31,37,38,50,51,97,98,111,128,214,297,],[71,-26,71,71,-35,-36,71,71,71,71,71,71,]),'MAYOR_IGUAL_QUE':([29,31,37,38,50,51,97,98,111,128,214,297,],[72,-26,72,72,-35,-36,72,72,72,72,72,72,]),'PARENTESIS_DER':([30,31,50,51,80,81,82,83,84,85,136,137,139,152,153,168,171,172,173,174,187,226,227,229,252,270,271,274,],[-31,-26,-35,-36,167,168,-45,-48,169,170,-49,-46,-32,-107,-108,-47,-105,-27,-106,-109,228,256,-121,259,266,-121,-122,285,]),'Y_SIGNO':([31,50,51,95,152,153,171,172,173,174,256,],[-26,-35,-36,184,-107,-108,-105,-27,-106,-109,184,]),'O_SIGNO':([31,50,51,95,152,153,171,172,173,174,256,],[-26,-35,-36,185,-107,-108,-105,-27,-106,-109,185,]),'LLAVE_DER':([40,50,51,89,91,215,216,217,218,219,],[90,-35,-36,177,-161,-162,-157,-158,-160,-159,]),'EXCLAMACION_BAJO':([41,122,165,183,184,185,223,269,],[96,96,96,96,-103,-104,96,96,]),'CORCHETE_DER':([43,100,101,102,103,104,105,106,107,189,231,],[101,189,-87,-80,-81,-82,-83,-84,-85,-86,-79,]),'COMA':([50,51,74,75,76,77,78,79,91,101,102,103,104,105,106,107,189,216,217,218,219,227,264,270,],[-35,-36,162,-58,-59,-60,-61,-62,178,-87,190,-81,-82,-83,-84,-85,-86,-157,-158,-160,-159,257,278,257,]),'ID_CLASE':([53,206,],[135,248,]),'TRUE':([63,195,203,],[150,150,150,]),'FALSE':([63,195,203,],[151,151,151,]),'EACH':([65,161,],[157,211,]),'TO_F':([65,207,],[158,249,]),'CONCAT':([65,207,260,],[159,159,159,]),'SORT':([65,],[160,]),'FOR':([65,],[161,]),'CHOMP':([88,],[176,]),'ASIGNA_HASH':([92,93,],[179,180,]),'BARRA':([156,209,250,264,287,],[208,251,263,279,298,]),'INITIALIZE':([200,],[246,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruccion':([0,],[1,]),'cuerpoInstruccion':([0,3,],[2,54,]),'cuerpo':([0,3,263,],[3,3,276,]),'operacionAritmetica':([0,3,34,44,47,52,55,63,94,99,108,110,111,134,166,182,187,195,196,197,199,203,213,214,221,228,255,259,263,265,281,285,292,],[4,4,81,112,112,112,137,137,112,112,112,112,112,112,112,112,81,137,112,137,112,137,112,112,112,112,112,112,4,112,112,112,112,]),'input_concatenacion':([0,3,63,195,197,203,263,],[5,5,146,146,242,146,5,]),'asignacion':([0,3,44,47,48,52,94,99,108,110,111,130,131,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,295,296,],[6,6,113,113,131,113,113,113,113,113,113,131,131,113,113,113,113,113,113,113,113,113,113,113,6,113,113,296,296,131,131,]),'impresion':([0,3,44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[7,7,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,7,114,114,114,114,]),'impresion_vacia':([0,3,44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[8,8,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,8,115,115,115,115,]),'expresiones_booleanas':([0,3,41,44,47,52,94,99,108,110,111,122,134,165,166,182,183,186,196,199,213,214,221,223,228,255,259,263,265,269,281,285,292,],[9,9,95,108,127,127,127,127,127,127,127,95,127,95,127,127,95,226,127,127,127,127,127,95,127,127,127,9,127,95,127,127,127,]),'solicitudDatosTeclado':([0,3,44,47,52,63,94,99,108,110,111,134,166,182,195,196,199,203,213,214,221,228,255,259,263,265,281,285,292,],[10,10,116,116,116,148,116,116,116,116,116,116,116,116,148,116,116,148,116,116,116,116,116,116,10,116,116,116,116,]),'hashes':([0,3,44,47,52,63,94,99,108,110,111,134,166,182,195,196,197,199,203,213,214,221,228,255,259,263,265,281,285,292,],[11,11,117,117,117,143,117,117,117,117,117,117,117,117,143,117,240,117,143,117,117,117,117,117,117,11,117,117,117,117,]),'estructura_ifUnaLinea':([0,3,44,47,52,74,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[12,12,120,120,120,163,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,12,120,120,120,120,]),'estructura_if':([0,3,44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[13,13,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,13,118,118,118,118,]),'funciones':([0,3,263,285,292,],[14,14,14,294,294,]),'funcionesEstructuras':([0,3,263,],[15,15,15,]),'array':([0,3,43,63,190,195,197,203,263,],[16,16,106,145,106,145,241,145,16,]),'each_array':([0,3,263,],[17,17,17,]),'each_hash':([0,3,263,],[18,18,18,]),'sentencia_while':([0,3,44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[19,19,109,109,109,109,109,191,109,109,109,109,109,109,109,109,109,109,109,109,109,19,109,109,109,109,]),'sentencia_while_bool':([0,3,44,47,52,74,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[20,20,121,121,121,164,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,121,20,121,121,121,121,]),'sentencia_case':([0,3,263,],[21,21,21,]),'sentencias_when':([0,3,46,263,],[22,22,125,22,]),'sentencia_until':([0,3,263,],[23,23,23,]),'definicion_clase':([0,3,263,],[24,24,24,]),'entero_a_flotante':([0,3,63,195,203,263,],[25,25,149,149,149,25,]),'expresionNumerica':([0,3,34,44,47,52,55,63,94,99,108,110,111,134,166,182,187,195,196,197,199,203,213,214,221,228,255,259,263,265,281,285,292,],[26,26,26,26,26,26,136,142,26,26,26,26,26,26,26,26,26,142,26,239,26,142,26,26,26,26,26,26,26,26,26,26,26,]),'concatenacionSimpleCadena':([0,3,63,195,197,203,263,],[27,27,27,27,27,27,27,]),'concatenacion_funcion':([0,3,63,195,197,203,263,],[28,28,28,28,28,28,28,]),'valor_print':([0,3,44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,263,265,281,285,292,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'valorSimbolo':([0,3,41,44,47,52,86,94,99,108,110,111,122,134,165,166,182,183,186,196,199,213,214,221,223,228,255,259,263,265,269,281,285,292,],[37,37,37,37,37,37,171,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'valorNumerico':([0,3,32,34,41,44,47,52,55,63,64,87,94,99,108,110,111,122,134,162,165,166,179,180,182,183,186,187,195,196,197,199,203,213,214,221,223,228,255,259,263,265,269,281,285,292,],[38,38,76,82,97,38,38,38,82,82,153,173,38,38,38,38,38,97,38,76,97,38,216,219,38,97,97,82,82,38,82,38,82,38,38,38,97,38,38,38,38,38,97,38,38,38,]),'sentencia_when':([0,3,46,124,263,],[46,46,46,198,46,]),'encabezadoClase':([0,3,263,],[48,48,48,]),'valorCadena':([0,3,62,63,133,195,197,203,210,263,],[49,49,138,49,204,49,49,49,252,49,]),'operadores':([26,136,142,239,],[55,55,55,55,]),'operadoresComparacion':([29,37,38,97,98,111,128,214,297,],[64,86,87,87,64,64,64,64,64,]),'valores':([32,162,],[73,212,]),'valor':([32,162,],[74,74,]),'elemento_hash':([40,178,],[89,215,]),'claveValor':([40,178,],[91,91,]),'condicionIf':([41,122,165,183,223,269,],[94,196,213,225,255,283,]),'elementos_array':([43,190,],[100,231,]),'elemento_array':([43,190,],[102,102,]),'declaracion':([44,47,52,94,99,108,110,111,134,166,182,196,199,213,214,221,228,255,259,265,281,285,292,],[110,126,134,182,182,192,182,182,205,110,182,182,245,182,182,182,182,182,182,280,182,293,293,]),'asignacion_clase':([44,47,48,52,94,99,108,110,111,130,131,134,166,182,196,199,213,214,221,228,255,259,265,281,285,292,295,296,],[119,119,130,119,119,119,119,119,119,130,130,119,119,119,119,119,119,119,119,119,119,119,119,119,295,295,130,130,]),'cuerpoVariables':([48,130,131,285,292,295,296,],[129,201,202,290,290,201,202,]),'booleanos':([63,195,203,],[147,236,247,]),'funcionesArray':([65,],[154,]),'funcionesNumeros':([65,],[155,]),'funcionesFormatoImpresion':([88,],[175,]),'declaraciones':([94,99,110,111,182,196,213,214,221,228,255,259,281,],[181,188,193,194,224,237,253,194,254,258,268,273,289,]),'funcionesComparacion':([95,256,],[183,269,]),'estructura_secundaria_if':([181,237,268,],[222,222,282,]),'argumentos':([187,257,262,],[229,271,274,]),'each_args_hash':([251,],[265,]),'cuerpo_each':([263,],[275,]),'vacio':([263,],[277,]),'cuerpoClaseE':([285,292,],[291,301,]),'cuerpoClase':([285,292,],[292,292,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruccion","S'",1,None,None,None),
  ('instruccion -> cuerpoInstruccion','instruccion',1,'p_instruccion','sintactico.py',14),
  ('cuerpoInstruccion -> cuerpo','cuerpoInstruccion',1,'p_cuerpoInstruccion','sintactico.py',18),
  ('cuerpoInstruccion -> cuerpo cuerpoInstruccion','cuerpoInstruccion',2,'p_cuerpoInstruccion','sintactico.py',19),
  ('cuerpo -> operacionAritmetica','cuerpo',1,'p_cuerpo','sintactico.py',22),
  ('cuerpo -> input_concatenacion','cuerpo',1,'p_cuerpo','sintactico.py',23),
  ('cuerpo -> asignacion','cuerpo',1,'p_cuerpo','sintactico.py',24),
  ('cuerpo -> impresion','cuerpo',1,'p_cuerpo','sintactico.py',25),
  ('cuerpo -> impresion_vacia','cuerpo',1,'p_cuerpo','sintactico.py',26),
  ('cuerpo -> expresiones_booleanas','cuerpo',1,'p_cuerpo','sintactico.py',27),
  ('cuerpo -> solicitudDatosTeclado','cuerpo',1,'p_cuerpo','sintactico.py',28),
  ('cuerpo -> hashes','cuerpo',1,'p_cuerpo','sintactico.py',29),
  ('cuerpo -> estructura_ifUnaLinea','cuerpo',1,'p_cuerpo','sintactico.py',30),
  ('cuerpo -> estructura_if','cuerpo',1,'p_cuerpo','sintactico.py',31),
  ('cuerpo -> funciones','cuerpo',1,'p_cuerpo','sintactico.py',32),
  ('cuerpo -> funcionesEstructuras','cuerpo',1,'p_cuerpo','sintactico.py',33),
  ('cuerpo -> array','cuerpo',1,'p_cuerpo','sintactico.py',34),
  ('cuerpo -> each_array','cuerpo',1,'p_cuerpo','sintactico.py',35),
  ('cuerpo -> each_hash','cuerpo',1,'p_cuerpo','sintactico.py',36),
  ('cuerpo -> sentencia_while','cuerpo',1,'p_cuerpo','sintactico.py',37),
  ('cuerpo -> sentencia_while_bool','cuerpo',1,'p_cuerpo','sintactico.py',38),
  ('cuerpo -> sentencia_case','cuerpo',1,'p_cuerpo','sintactico.py',39),
  ('cuerpo -> sentencias_when','cuerpo',1,'p_cuerpo','sintactico.py',40),
  ('cuerpo -> sentencia_until','cuerpo',1,'p_cuerpo','sintactico.py',41),
  ('cuerpo -> definicion_clase','cuerpo',1,'p_cuerpo','sintactico.py',42),
  ('cuerpo -> entero_a_flotante','cuerpo',1,'p_cuerpo','sintactico.py',43),
  ('valorSimbolo -> SIMBOLO','valorSimbolo',1,'p_valorSimbolo','sintactico.py',49),
  ('valorSimbolo -> VARIABLE','valorSimbolo',1,'p_valorSimbolo','sintactico.py',50),
  ('input_concatenacion -> concatenacionSimpleCadena','input_concatenacion',1,'p_input_concatenacion','sintactico.py',89),
  ('input_concatenacion -> concatenacion_funcion','input_concatenacion',1,'p_input_concatenacion','sintactico.py',90),
  ('concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER','concatenacion_funcion',6,'p_concatenacion_funcion','sintactico.py',96),
  ('valorCadena -> CADENA','valorCadena',1,'p_valorCadena','sintactico.py',109),
  ('valorCadena -> VARIABLE','valorCadena',1,'p_valorCadena','sintactico.py',110),
  ('concatenacionSimpleCadena -> valorCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',144),
  ('concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena','concatenacionSimpleCadena',3,'p_concatenacionSimpleCadena','sintactico.py',145),
  ('valorNumerico -> FLOTANTE','valorNumerico',1,'p_valorNumerico','sintactico.py',164),
  ('valorNumerico -> ENTERO','valorNumerico',1,'p_valorNumerico','sintactico.py',165),
  ('soloEnteros -> ENTERO','soloEnteros',1,'p_soloEnteros','sintactico.py',177),
  ('entero_a_flotante -> VARIABLE PUNTO TO_F','entero_a_flotante',3,'p_entero_a_flotante','sintactico.py',182),
  ('operadores -> MAS','operadores',1,'p_operadores','sintactico.py',199),
  ('operadores -> MENOS','operadores',1,'p_operadores','sintactico.py',200),
  ('operadores -> DIVISION','operadores',1,'p_operadores','sintactico.py',201),
  ('operadores -> MULTIPLICACION','operadores',1,'p_operadores','sintactico.py',202),
  ('operadores -> EXPONENCIACION','operadores',1,'p_operadores','sintactico.py',203),
  ('operadores -> MODULO','operadores',1,'p_operadores','sintactico.py',204),
  ('expresionNumerica -> valorNumerico','expresionNumerica',1,'p_expresionNumerica','sintactico.py',209),
  ('expresionNumerica -> operacionAritmetica','expresionNumerica',1,'p_expresionNumerica','sintactico.py',210),
  ('expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER','expresionNumerica',3,'p_expresionNumerica','sintactico.py',211),
  ('expresionNumerica -> VARIABLE','expresionNumerica',1,'p_expresionNumerica','sintactico.py',212),
  ('operacionAritmetica -> expresionNumerica operadores expresionNumerica','operacionAritmetica',3,'p_operacionAritmetica','sintactico.py',226),
  ('valor_print -> PRINT','valor_print',1,'p_valor_print','sintactico.py',265),
  ('valor_print -> PUTS','valor_print',1,'p_valor_print','sintactico.py',266),
  ('valores -> valor','valores',1,'p_valores','sintactico.py',271),
  ('valores -> valor COMA valores','valores',3,'p_valores','sintactico.py',272),
  ('valores -> valor estructura_ifUnaLinea','valores',2,'p_valores','sintactico.py',273),
  ('valores -> valor sentencia_while_bool','valores',2,'p_valores','sintactico.py',274),
  ('booleanos -> TRUE','booleanos',1,'p_booleanos','sintactico.py',278),
  ('booleanos -> FALSE','booleanos',1,'p_booleanos','sintactico.py',279),
  ('valor -> CADENA','valor',1,'p_valor','sintactico.py',286),
  ('valor -> valorNumerico','valor',1,'p_valor','sintactico.py',287),
  ('valor -> VARIABLE','valor',1,'p_valor','sintactico.py',288),
  ('valor -> VARIABLECLASE','valor',1,'p_valor','sintactico.py',289),
  ('valor -> SIMBOLO','valor',1,'p_valor','sintactico.py',290),
  ('impresion -> valor_print valores','impresion',2,'p_impresion','sintactico.py',309),
  ('asignacion_clase -> VARIABLECLASE IGUAL CADENA','asignacion_clase',3,'p_asignacion_clase','sintactico.py',312),
  ('asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica','asignacion_clase',3,'p_asignacion_clase','sintactico.py',313),
  ('asignacion_clase -> VARIABLECLASE IGUAL hashes','asignacion_clase',3,'p_asignacion_clase','sintactico.py',314),
  ('asignacion_clase -> VARIABLECLASE IGUAL array','asignacion_clase',3,'p_asignacion_clase','sintactico.py',315),
  ('asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion','asignacion_clase',3,'p_asignacion_clase','sintactico.py',316),
  ('asignacion_clase -> VARIABLE IGUAL booleanos','asignacion_clase',3,'p_asignacion_clase','sintactico.py',317),
  ('asignacion -> VARIABLE IGUAL CADENA','asignacion',3,'p_asignacion','sintactico.py',322),
  ('asignacion -> VARIABLE IGUAL expresionNumerica','asignacion',3,'p_asignacion','sintactico.py',323),
  ('asignacion -> VARIABLE IGUAL hashes','asignacion',3,'p_asignacion','sintactico.py',324),
  ('asignacion -> VARIABLE IGUAL SIMBOLO','asignacion',3,'p_asignacion','sintactico.py',325),
  ('asignacion -> VARIABLE IGUAL array','asignacion',3,'p_asignacion','sintactico.py',326),
  ('asignacion -> VARIABLE IGUAL input_concatenacion','asignacion',3,'p_asignacion','sintactico.py',327),
  ('asignacion -> VARIABLE IGUAL booleanos','asignacion',3,'p_asignacion','sintactico.py',328),
  ('asignacion -> VARIABLE IGUAL solicitudDatosTeclado','asignacion',3,'p_asignacion','sintactico.py',329),
  ('asignacion -> VARIABLE IGUAL entero_a_flotante','asignacion',3,'p_asignacion','sintactico.py',330),
  ('elementos_array -> elemento_array COMA elementos_array','elementos_array',3,'p_elementos_array','sintactico.py',340),
  ('elementos_array -> elemento_array','elementos_array',1,'p_elementos_array','sintactico.py',341),
  ('elemento_array -> CADENA','elemento_array',1,'p_elemento_array','sintactico.py',349),
  ('elemento_array -> ENTERO','elemento_array',1,'p_elemento_array','sintactico.py',350),
  ('elemento_array -> FLOTANTE','elemento_array',1,'p_elemento_array','sintactico.py',351),
  ('elemento_array -> array','elemento_array',1,'p_elemento_array','sintactico.py',352),
  ('elemento_array -> VARIABLE','elemento_array',1,'p_elemento_array','sintactico.py',353),
  ('array -> CORCHETE_IZ elementos_array CORCHETE_DER','array',3,'p_array','sintactico.py',361),
  ('array -> CORCHETE_IZ CORCHETE_DER','array',2,'p_array','sintactico.py',362),
  ('each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END','each_array',8,'p_each_array','sintactico.py',371),
  ('cuerpo_each -> cuerpo','cuerpo_each',1,'p_cuerpo_each','sintactico.py',375),
  ('cuerpo_each -> vacio','cuerpo_each',1,'p_cuerpo_each','sintactico.py',376),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',380),
  ('impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',386),
  ('impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',387),
  ('impresion_vacia -> PUTS','impresion_vacia',1,'p_impresion_vacia','sintactico.py',388),
  ('impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER','impresion_vacia',3,'p_impresion_vacia','sintactico.py',389),
  ('operadoresComparacion -> IGUAL_DOBLEP','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',394),
  ('operadoresComparacion -> NAVE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',395),
  ('operadoresComparacion -> DIFERENTE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',396),
  ('operadoresComparacion -> MAYOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',397),
  ('operadoresComparacion -> MENOR_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',398),
  ('operadoresComparacion -> MENOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',399),
  ('operadoresComparacion -> MAYOR_IGUAL_QUE','operadoresComparacion',1,'p_operadoresComparacion','sintactico.py',400),
  ('funcionesComparacion -> Y_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',404),
  ('funcionesComparacion -> O_SIGNO','funcionesComparacion',1,'p_funcionesComparacion','sintactico.py',405),
  ('expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',409),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',410),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',411),
  ('expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',412),
  ('expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE','expresiones_booleanas',3,'p_expresiones_booleanas','sintactico.py',413),
  ('solicitudDatosTeclado -> GETS','solicitudDatosTeclado',1,'p_solicitudDatosTeclado','sintactico.py',477),
  ('solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion','solicitudDatosTeclado',3,'p_solicitudDatosTeclado','sintactico.py',478),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END','funciones',6,'p_funciones','sintactico.py',481),
  ('funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END','funciones',7,'p_funciones','sintactico.py',482),
  ('funciones -> DEF VARIABLE declaraciones END','funciones',4,'p_funciones','sintactico.py',483),
  ('funcionesArray -> SORT','funcionesArray',1,'p_funcionesArray','sintactico.py',487),
  ('funcionesArray -> FOR EACH','funcionesArray',2,'p_funcionesArray','sintactico.py',488),
  ('funcionesFormatoImpresion -> CHOMP','funcionesFormatoImpresion',1,'p_funcionesFormatoImpresion','sintactico.py',492),
  ('funcionesNumeros -> TO_F','funcionesNumeros',1,'p_funcionesNumeros','sintactico.py',496),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesArray','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',500),
  ('funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros','funcionesEstructuras',3,'p_funcionesEstructuras','sintactico.py',501),
  ('argumentos -> VARIABLE','argumentos',1,'p_argumentos','sintactico.py',521),
  ('argumentos -> VARIABLE COMA argumentos','argumentos',3,'p_argumentos','sintactico.py',522),
  ('condicionIf -> expresiones_booleanas','condicionIf',1,'p_condicionIf','sintactico.py',527),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf','condicionIf',6,'p_condicionIf','sintactico.py',528),
  ('condicionIf -> expresiones_booleanas funcionesComparacion condicionIf','condicionIf',3,'p_condicionIf','sintactico.py',529),
  ('condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER','condicionIf',4,'p_condicionIf','sintactico.py',530),
  ('estructura_if -> IF condicionIf declaraciones ELSE declaraciones END','estructura_if',6,'p_estructura_if','sintactico.py',534),
  ('estructura_if -> IF condicionIf declaraciones estructura_secundaria_if','estructura_if',4,'p_estructura_if','sintactico.py',535),
  ('estructura_ifUnaLinea -> IF condicionIf declaraciones END','estructura_ifUnaLinea',4,'p_estructura_ifUnaLinea','sintactico.py',539),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END','estructura_secundaria_if',6,'p_estructura_secundaria_if','sintactico.py',544),
  ('estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if','estructura_secundaria_if',4,'p_estructura_secundaria_if','sintactico.py',545),
  ('declaracion -> operacionAritmetica','declaracion',1,'p_declaracion','sintactico.py',549),
  ('declaracion -> asignacion','declaracion',1,'p_declaracion','sintactico.py',550),
  ('declaracion -> impresion','declaracion',1,'p_declaracion','sintactico.py',551),
  ('declaracion -> impresion_vacia','declaracion',1,'p_declaracion','sintactico.py',552),
  ('declaracion -> expresiones_booleanas','declaracion',1,'p_declaracion','sintactico.py',553),
  ('declaracion -> solicitudDatosTeclado','declaracion',1,'p_declaracion','sintactico.py',554),
  ('declaracion -> hashes','declaracion',1,'p_declaracion','sintactico.py',555),
  ('declaracion -> estructura_if','declaracion',1,'p_declaracion','sintactico.py',556),
  ('declaracion -> asignacion_clase','declaracion',1,'p_declaracion','sintactico.py',557),
  ('declaracion -> estructura_ifUnaLinea','declaracion',1,'p_declaracion','sintactico.py',558),
  ('declaracion -> sentencia_while','declaracion',1,'p_declaracion','sintactico.py',559),
  ('declaracion -> sentencia_while_bool','declaracion',1,'p_declaracion','sintactico.py',560),
  ('declaraciones -> declaracion','declaraciones',1,'p_declaraciones','sintactico.py',563),
  ('declaraciones -> declaracion declaraciones','declaraciones',2,'p_declaraciones','sintactico.py',564),
  ('sentencia_while_bool -> WHILE declaracion declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','sintactico.py',567),
  ('sentencia_while_bool -> WHILE VARIABLE declaraciones END','sentencia_while_bool',4,'p_sentencia_while_bool','sintactico.py',568),
  ('sentencia_while -> WHILE expresiones_booleanas sentencia_while END','sentencia_while',4,'p_sentencia_while','sintactico.py',575),
  ('sentencia_while -> WHILE expresiones_booleanas declaracion END','sentencia_while',4,'p_sentencia_while','sintactico.py',576),
  ('sentencia_case -> CASE VARIABLE sentencia_when END','sentencia_case',4,'p_sentencia_case','sintactico.py',586),
  ('sentencia_when -> WHEN declaracion declaracion','sentencia_when',3,'p_sentencia_when','sintactico.py',591),
  ('sentencias_when -> sentencia_when','sentencias_when',1,'p_sentencias_when','sintactico.py',594),
  ('sentencias_when -> sentencia_when sentencias_when','sentencias_when',2,'p_sentencias_when','sintactico.py',595),
  ('sentencia_until -> UNTIL declaracion DO declaracion END','sentencia_until',5,'p_sentencia_until','sintactico.py',599),
  ('hashes -> LLAVE_IZ elemento_hash LLAVE_DER','hashes',3,'p_hashes','sintactico.py',604),
  ('hashes -> LLAVE_IZ LLAVE_DER','hashes',2,'p_hashes','sintactico.py',605),
  ('claveValor -> VARIABLE ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',609),
  ('claveValor -> VARIABLE ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',610),
  ('claveValor -> CADENA ASIGNA_HASH valorNumerico','claveValor',3,'p_claveValor','sintactico.py',611),
  ('claveValor -> CADENA ASIGNA_HASH CADENA','claveValor',3,'p_claveValor','sintactico.py',612),
  ('elemento_hash -> claveValor','elemento_hash',1,'p_elemento_hash','sintactico.py',616),
  ('elemento_hash -> claveValor COMA elemento_hash','elemento_hash',3,'p_elemento_hash','sintactico.py',617),
  ('each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END','each_hash',8,'p_each_hash','sintactico.py',621),
  ('each_args_hash -> VARIABLE COMA VARIABLE BARRA','each_args_hash',4,'p_each_args_hash','sintactico.py',625),
  ('each_args_hash -> VARIABLE BARRA','each_args_hash',2,'p_each_args_hash','sintactico.py',626),
  ('encabezadoClase -> CLASS ID_CLASE','encabezadoClase',2,'p_encabezadoClase','sintactico.py',629),
  ('encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE','encabezadoClase',4,'p_encabezadoClase','sintactico.py',630),
  ('definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END','definicion_clase',9,'p_definicion_clase','sintactico.py',633),
  ('cuerpoVariables -> asignacion_clase','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',637),
  ('cuerpoVariables -> asignacion','cuerpoVariables',1,'p_cuerpoVariables','sintactico.py',638),
  ('cuerpoVariables -> asignacion_clase cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',639),
  ('cuerpoVariables -> asignacion cuerpoVariables','cuerpoVariables',2,'p_cuerpoVariables','sintactico.py',640),
  ('cuerpoClase -> cuerpoVariables','cuerpoClase',1,'p_cuerpoClase','sintactico.py',644),
  ('cuerpoClase -> declaracion','cuerpoClase',1,'p_cuerpoClase','sintactico.py',645),
  ('cuerpoClase -> funciones','cuerpoClase',1,'p_cuerpoClase','sintactico.py',646),
  ('cuerpoClaseE -> cuerpoClase','cuerpoClaseE',1,'p_cuerpoClaseE','sintactico.py',650),
  ('cuerpoClaseE -> cuerpoClase cuerpoClaseE','cuerpoClaseE',2,'p_cuerpoClaseE','sintactico.py',651),
]
