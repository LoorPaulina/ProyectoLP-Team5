Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    CONCAT
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SIMBOLO
    SUPER
    TRUE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> impresion
Rule 4     cuerpo -> impresion_vacia
Rule 5     cuerpo -> expresiones_booleanas
Rule 6     cuerpo -> solicitudDatosTeclado
Rule 7     cuerpo -> hashes
Rule 8     cuerpo -> estructura_if
Rule 9     cuerpo -> funciones
Rule 10    cuerpo -> funcionesEstructuras
Rule 11    cuerpo -> array
Rule 12    cuerpo -> each_array
Rule 13    cuerpo -> comentarios
Rule 14    cuerpo -> each_hash
Rule 15    cuerpo -> sentencia_while
Rule 16    cuerpo -> sentencia_case
Rule 17    cuerpo -> sentencia_until
Rule 18    cuerpo -> definicion_clase
Rule 19    valorNumerico -> FLOTANTE
Rule 20    valorNumerico -> ENTERO
Rule 21    valorNumerico -> VARIABLE
Rule 22    soloEnteros -> ENTERO
Rule 23    operadores -> MAS
Rule 24    operadores -> MENOS
Rule 25    operadores -> DIVISION
Rule 26    operadores -> MULTIPLICACION
Rule 27    operadores -> EXPONENCIACION
Rule 28    operadores -> MODULO
Rule 29    expresionNumerica -> valorNumerico
Rule 30    expresionNumerica -> operacionAritmetica
Rule 31    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 32    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 33    valor_print -> PRINT
Rule 34    valor_print -> PUTS
Rule 35    valores -> valor
Rule 36    valores -> valor COMA valores
Rule 37    valores -> valor estructura_ifUnaLinea
Rule 38    valor -> CADENA
Rule 39    valor -> valorNumerico
Rule 40    valor -> VARIABLE
Rule 41    valor -> VARIABLECLASE
Rule 42    impresion -> valor_print valores
Rule 43    asignacion -> VARIABLE IGUAL CADENA
Rule 44    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 45    asignacion -> VARIABLE IGUAL hashes
Rule 46    asignacion -> VARIABLE IGUAL array
Rule 47    elementos_array -> elemento_array COMA elementos_array
Rule 48    elementos_array -> elemento_array
Rule 49    elemento_array -> CADENA
Rule 50    elemento_array -> ENTERO
Rule 51    elemento_array -> FLOTANTE
Rule 52    elemento_array -> array
Rule 53    elemento_array -> VARIABLE
Rule 54    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 55    array -> CORCHETE_IZ CORCHETE_DER
Rule 56    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 57    cuerpo_each -> cuerpo
Rule 58    cuerpo_each -> vacio
Rule 59    vacio -> <empty>
Rule 60    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 61    comentarios -> COMENTARIO
Rule 62    comentarios -> COMENTARIO_MULTI
Rule 63    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 64    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 65    impresion_vacia -> PUTS
Rule 66    operadoresComparacion -> DOBLE_IGUAL
Rule 67    operadoresComparacion -> DIFERENTE
Rule 68    operadoresComparacion -> MAYOR_QUE
Rule 69    operadoresComparacion -> MENOR_QUE
Rule 70    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 71    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 72    funcionesComparacion -> AND
Rule 73    funcionesComparacion -> OR
Rule 74    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 75    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 76    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 77    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 78    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 79    solicitudDatosTeclado -> GETS
Rule 80    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 81    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
Rule 82    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
Rule 83    funcionesArray -> SORT
Rule 84    funcionesArray -> FOR EACH
Rule 85    funcionesFormatoImpresion -> CHOMP
Rule 86    funcionesNumeros -> TO_F
Rule 87    funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 88    funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 89    argumentos -> VARIABLE
Rule 90    argumentos -> VARIABLE COMA argumentos
Rule 91    condicionIf -> expresiones_booleanas
Rule 92    condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 93    estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 94    estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 95    estructura_ifUnaLinea -> IF condicionIf
Rule 96    estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 97    estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 98    declaracion -> operacionAritmetica
Rule 99    declaracion -> asignacion
Rule 100   declaracion -> impresion
Rule 101   declaracion -> impresion_vacia
Rule 102   declaracion -> expresiones_booleanas
Rule 103   declaracion -> solicitudDatosTeclado
Rule 104   declaracion -> hashes
Rule 105   declaracion -> estructura_if
Rule 106   sentencia_while -> WHILE declaracion DO sentencia_while END
Rule 107   sentencia_while -> WHILE declaracion DO declaracion END
Rule 108   sentencia_case -> CASE declaracion sentencia_when END
Rule 109   sentencias_when -> sentencia_when
Rule 110   sentencias_when -> sentencia_when sentencias_when
Rule 111   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 112   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 113   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 114   hashes -> LLAVE_IZ LLAVE_DER
Rule 115   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 116   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 117   elemento_hash -> claveValor
Rule 118   elemento_hash -> claveValor COMA claveValor
Rule 119   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 120   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 121   each_args_hash -> VARIABLE BARRA
Rule 122   definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 72
ASIGNA_HASH          : 115 116
BARRA                : 56 56 119 120 121
BEGIN                : 
BREAK                : 
CADENA               : 38 43 49 116
CASE                 : 108
CHOMP                : 85
CLASS                : 122
COMA                 : 36 47 90 118 120
COMENTARIO           : 61
COMENTARIO_MULTI     : 62
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 
CORCHETE_DER         : 54 55
CORCHETE_IZ          : 54 55
DEF                  : 81 82 122
DEFINED_QUESTION     : 
DIFERENTE            : 67
DIVISION             : 25
DO                   : 56 106 107 112 119
DOBLE_IGUAL          : 66
EACH                 : 84 119
ELSE                 : 93 96
ELSEIF               : 96 97
END                  : 56 81 82 93 96 106 107 108 112 119
ENSURE               : 
ENTERO               : 20 22 50 75
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 27
FALSE                : 
FLOTANTE             : 19 51
FOR                  : 84
GETS                 : 79 80
ID_CLASE             : 122
IF                   : 93 94 95
IGUAL                : 43 44 45 46
IGUAL_DOBLEP         : 111
IN                   : 
INITIALIZE           : 122
LLAVE_DER            : 113 114
LLAVE_IZ             : 113 114
MAS                  : 23
MAYOR_IGUAL_QUE      : 71
MAYOR_QUE            : 68
MENOR_IGUAL_QUE      : 70
MENOR_QUE            : 69
MENOS                : 24
MODULE               : 
MODULO               : 28
MULTIPLICACION       : 26
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 73
O_SIGNO              : 
PARENTESIS_DER       : 31 60 63 64 81 82 122
PARENTESIS_IZ        : 31 60 63 64 81 82 122
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 33 63
PRINTF               : 
PUNTO                : 56 80 87 88 119
PUTS                 : 34 64 65
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 
SORT                 : 83
SUPER                : 
TO_F                 : 86
TRES_PUNTOS          : 60
TRIPLE_IGUAL         : 75
TRUE                 : 
UNTIL                : 112
VARIABLE             : 21 40 43 44 45 46 53 56 56 76 76 77 78 81 82 87 88 89 90 115 116 119 120 120 121
VARIABLECLASE        : 41
WHEN                 : 111
WHILE                : 106 107
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 82 90 122
array                : 11 46 52
asignacion           : 2 99
claveValor           : 117 118 118
comentarios          : 13
condicionIf          : 93 94 95 96 97
cuerpo               : 57 0
cuerpo_each          : 56
declaracion          : 93 93 94 96 96 97 106 107 107 108 111 111 112 112 119
definicion_clase     : 18
each_args_hash       : 119
each_array           : 12
each_hash            : 14
elemento_array       : 47 48
elemento_hash        : 113
elementos_array      : 47 54
estructura_if        : 8 105
estructura_ifUnaLinea : 37
estructura_secundaria_if : 94 97
expresionNumerica    : 32 32 44
expresiones_booleanas : 5 91 92 92 102
funciones            : 9
funcionesArray       : 87
funcionesComparacion : 92
funcionesEstructuras : 10
funcionesFormatoImpresion : 80
funcionesNumeros     : 88
hashes               : 7 45 104
impresion            : 3 100
impresion_vacia      : 4 101
operacionAritmetica  : 1 30 31 98
operadores           : 32
operadoresComparacion : 74 76 77 78
rangos               : 75
sentencia_case       : 16
sentencia_until      : 17
sentencia_when       : 108 109 110
sentencia_while      : 15 106
sentencias_when      : 110
solicitudDatosTeclado : 6 103
soloEnteros          : 60 60
vacio                : 58
valor                : 35 36 37
valorNumerico        : 29 39 74 74 77 78 115
valor_print          : 42
valores              : 36 42

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . impresion
    (4) cuerpo -> . impresion_vacia
    (5) cuerpo -> . expresiones_booleanas
    (6) cuerpo -> . solicitudDatosTeclado
    (7) cuerpo -> . hashes
    (8) cuerpo -> . estructura_if
    (9) cuerpo -> . funciones
    (10) cuerpo -> . funcionesEstructuras
    (11) cuerpo -> . array
    (12) cuerpo -> . each_array
    (13) cuerpo -> . comentarios
    (14) cuerpo -> . each_hash
    (15) cuerpo -> . sentencia_while
    (16) cuerpo -> . sentencia_case
    (17) cuerpo -> . sentencia_until
    (18) cuerpo -> . definicion_clase
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (81) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (82) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (87) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (88) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (54) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (55) array -> . CORCHETE_IZ CORCHETE_DER
    (56) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (61) comentarios -> . COMENTARIO
    (62) comentarios -> . COMENTARIO_MULTI
    (119) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (106) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (107) sentencia_while -> . WHILE declaracion DO declaracion END
    (108) sentencia_case -> . CASE declaracion sentencia_when END
    (112) sentencia_until -> . UNTIL declaracion DO declaracion END
    (122) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 21
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    DEF             shift and go to state 32
    CORCHETE_IZ     shift and go to state 33
    COMENTARIO      shift and go to state 34
    COMENTARIO_MULTI shift and go to state 35
    WHILE           shift and go to state 36
    CASE            shift and go to state 37
    UNTIL           shift and go to state 38
    CLASS           shift and go to state 39
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    impresion_vacia                shift and go to state 5
    expresiones_booleanas          shift and go to state 6
    solicitudDatosTeclado          shift and go to state 7
    hashes                         shift and go to state 8
    estructura_if                  shift and go to state 9
    funciones                      shift and go to state 10
    funcionesEstructuras           shift and go to state 11
    array                          shift and go to state 12
    each_array                     shift and go to state 13
    comentarios                    shift and go to state 14
    each_hash                      shift and go to state 15
    sentencia_while                shift and go to state 16
    sentencia_case                 shift and go to state 17
    sentencia_until                shift and go to state 18
    definicion_clase               shift and go to state 19
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (30) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 30 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    END             reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> impresion .

    $end            reduce using rule 3 (cuerpo -> impresion .)
    END             reduce using rule 3 (cuerpo -> impresion .)


state 5

    (4) cuerpo -> impresion_vacia .

    $end            reduce using rule 4 (cuerpo -> impresion_vacia .)
    END             reduce using rule 4 (cuerpo -> impresion_vacia .)


state 6

    (5) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 5 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 5 (cuerpo -> expresiones_booleanas .)


state 7

    (6) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 6 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 6 (cuerpo -> solicitudDatosTeclado .)


state 8

    (7) cuerpo -> hashes .

    $end            reduce using rule 7 (cuerpo -> hashes .)
    END             reduce using rule 7 (cuerpo -> hashes .)


state 9

    (8) cuerpo -> estructura_if .

    $end            reduce using rule 8 (cuerpo -> estructura_if .)
    END             reduce using rule 8 (cuerpo -> estructura_if .)


state 10

    (9) cuerpo -> funciones .

    $end            reduce using rule 9 (cuerpo -> funciones .)
    END             reduce using rule 9 (cuerpo -> funciones .)


state 11

    (10) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 10 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 10 (cuerpo -> funcionesEstructuras .)


state 12

    (11) cuerpo -> array .

    $end            reduce using rule 11 (cuerpo -> array .)
    END             reduce using rule 11 (cuerpo -> array .)


state 13

    (12) cuerpo -> each_array .

    $end            reduce using rule 12 (cuerpo -> each_array .)
    END             reduce using rule 12 (cuerpo -> each_array .)


state 14

    (13) cuerpo -> comentarios .

    $end            reduce using rule 13 (cuerpo -> comentarios .)
    END             reduce using rule 13 (cuerpo -> comentarios .)


state 15

    (14) cuerpo -> each_hash .

    $end            reduce using rule 14 (cuerpo -> each_hash .)
    END             reduce using rule 14 (cuerpo -> each_hash .)


state 16

    (15) cuerpo -> sentencia_while .

    $end            reduce using rule 15 (cuerpo -> sentencia_while .)
    END             reduce using rule 15 (cuerpo -> sentencia_while .)


state 17

    (16) cuerpo -> sentencia_case .

    $end            reduce using rule 16 (cuerpo -> sentencia_case .)
    END             reduce using rule 16 (cuerpo -> sentencia_case .)


state 18

    (17) cuerpo -> sentencia_until .

    $end            reduce using rule 17 (cuerpo -> sentencia_until .)
    END             reduce using rule 17 (cuerpo -> sentencia_until .)


state 19

    (18) cuerpo -> definicion_clase .

    $end            reduce using rule 18 (cuerpo -> definicion_clase .)
    END             reduce using rule 18 (cuerpo -> definicion_clase .)


state 20

    (32) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (23) operadores -> . MAS
    (24) operadores -> . MENOS
    (25) operadores -> . DIVISION
    (26) operadores -> . MULTIPLICACION
    (27) operadores -> . EXPONENCIACION
    (28) operadores -> . MODULO

    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    DIVISION        shift and go to state 44
    MULTIPLICACION  shift and go to state 45
    EXPONENCIACION  shift and go to state 46
    MODULO          shift and go to state 47

    operadores                     shift and go to state 41

state 21

    (43) asignacion -> VARIABLE . IGUAL CADENA
    (44) asignacion -> VARIABLE . IGUAL expresionNumerica
    (45) asignacion -> VARIABLE . IGUAL hashes
    (46) asignacion -> VARIABLE . IGUAL array
    (76) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (87) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (88) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (56) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (119) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (21) valorNumerico -> VARIABLE .
    (66) operadoresComparacion -> . DOBLE_IGUAL
    (67) operadoresComparacion -> . DIFERENTE
    (68) operadoresComparacion -> . MAYOR_QUE
    (69) operadoresComparacion -> . MENOR_QUE
    (70) operadoresComparacion -> . MENOR_IGUAL_QUE
    (71) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 48
    PUNTO           shift and go to state 50
    MAS             reduce using rule 21 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 21 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 21 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 21 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 51
    DIFERENTE       shift and go to state 52
    MAYOR_QUE       shift and go to state 53
    MENOR_QUE       shift and go to state 54
    MENOR_IGUAL_QUE shift and go to state 55
    MAYOR_IGUAL_QUE shift and go to state 56

  ! DOBLE_IGUAL     [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 49

state 22

    (42) impresion -> valor_print . valores
    (35) valores -> . valor
    (36) valores -> . valor COMA valores
    (37) valores -> . valor estructura_ifUnaLinea
    (38) valor -> . CADENA
    (39) valor -> . valorNumerico
    (40) valor -> . VARIABLE
    (41) valor -> . VARIABLECLASE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 59
    VARIABLE        shift and go to state 61
    VARIABLECLASE   shift and go to state 62
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    valores                        shift and go to state 57
    valor                          shift and go to state 58
    valorNumerico                  shift and go to state 60

state 23

    (63) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (33) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 63
    CADENA          reduce using rule 33 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 33 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 33 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 33 (valor_print -> PRINT .)
    ENTERO          reduce using rule 33 (valor_print -> PRINT .)


state 24

    (31) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (60) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (22) soloEnteros -> . ENTERO
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    ENTERO          shift and go to state 67
    PARENTESIS_IZ   shift and go to state 64
    FLOTANTE        shift and go to state 40
    VARIABLE        shift and go to state 69

    operacionAritmetica            shift and go to state 65
    soloEnteros                    shift and go to state 66
    expresionNumerica              shift and go to state 20
    valorNumerico                  shift and go to state 68

state 25

    (64) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> PUTS .
    (34) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 70
    $end            reduce using rule 65 (impresion_vacia -> PUTS .)
    DO              reduce using rule 65 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 65 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 65 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 65 (impresion_vacia -> PUTS .)
    END             reduce using rule 65 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 65 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 34 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 34 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 34 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 34 (valor_print -> PUTS .)
    ENTERO          reduce using rule 34 (valor_print -> PUTS .)


state 26

    (74) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (29) expresionNumerica -> valorNumerico .
    (66) operadoresComparacion -> . DOBLE_IGUAL
    (67) operadoresComparacion -> . DIFERENTE
    (68) operadoresComparacion -> . MAYOR_QUE
    (69) operadoresComparacion -> . MENOR_QUE
    (70) operadoresComparacion -> . MENOR_IGUAL_QUE
    (71) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 29 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 29 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 29 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 51
    DIFERENTE       shift and go to state 52
    MAYOR_QUE       shift and go to state 53
    MENOR_QUE       shift and go to state 54
    MENOR_IGUAL_QUE shift and go to state 55
    MAYOR_IGUAL_QUE shift and go to state 56

    operadoresComparacion          shift and go to state 71

state 27

    (75) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 72


state 28

    (20) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 20 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 20 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 20 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 20 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 20 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 20 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 20 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 20 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 20 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 20 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 20 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 20 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 20 (valorNumerico -> ENTERO .)
    IF              reduce using rule 20 (valorNumerico -> ENTERO .)
    $end            reduce using rule 20 (valorNumerico -> ENTERO .)
    DO              reduce using rule 20 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 20 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 20 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 20 (valorNumerico -> ENTERO .)
    END             reduce using rule 20 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 20 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 20 (valorNumerico -> ENTERO .)
    AND             reduce using rule 20 (valorNumerico -> ENTERO .)
    OR              reduce using rule 20 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 20 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 20 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 20 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 20 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 20 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 20 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 20 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 20 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 20 (valorNumerico -> ENTERO .)


state 29

    (79) solicitudDatosTeclado -> GETS .
    (80) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 79 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 73


state 30

    (113) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (114) hashes -> LLAVE_IZ . LLAVE_DER
    (117) elemento_hash -> . claveValor
    (118) elemento_hash -> . claveValor COMA claveValor
    (115) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (116) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 75
    VARIABLE        shift and go to state 77

    elemento_hash                  shift and go to state 74
    claveValor                     shift and go to state 76

state 31

    (93) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (91) condicionIf -> . expresiones_booleanas
    (92) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 81
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    PARENTESIS_IZ   shift and go to state 82

    condicionIf                    shift and go to state 78
    expresiones_booleanas          shift and go to state 79
    valorNumerico                  shift and go to state 80
    rangos                         shift and go to state 27

state 32

    (81) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (82) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END

    VARIABLE        shift and go to state 83


state 33

    (54) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (55) array -> CORCHETE_IZ . CORCHETE_DER
    (47) elementos_array -> . elemento_array COMA elementos_array
    (48) elementos_array -> . elemento_array
    (49) elemento_array -> . CADENA
    (50) elemento_array -> . ENTERO
    (51) elemento_array -> . FLOTANTE
    (52) elemento_array -> . array
    (53) elemento_array -> . VARIABLE
    (54) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (55) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 85
    CADENA          shift and go to state 87
    ENTERO          shift and go to state 88
    FLOTANTE        shift and go to state 89
    VARIABLE        shift and go to state 91
    CORCHETE_IZ     shift and go to state 33

    elementos_array                shift and go to state 84
    elemento_array                 shift and go to state 86
    array                          shift and go to state 90

state 34

    (61) comentarios -> COMENTARIO .

    $end            reduce using rule 61 (comentarios -> COMENTARIO .)
    END             reduce using rule 61 (comentarios -> COMENTARIO .)


state 35

    (62) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 62 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 62 (comentarios -> COMENTARIO_MULTI .)


state 36

    (106) sentencia_while -> WHILE . declaracion DO sentencia_while END
    (107) sentencia_while -> WHILE . declaracion DO declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 92
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 37

    (108) sentencia_case -> CASE . declaracion sentencia_when END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 102
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 38

    (112) sentencia_until -> UNTIL . declaracion DO declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 103
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 39

    (122) definicion_clase -> CLASS . ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    ID_CLASE        shift and go to state 104


state 40

    (19) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 19 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 19 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 19 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 19 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 19 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 19 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 19 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 19 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 19 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 19 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 19 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 19 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 19 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 19 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 19 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 19 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 19 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 19 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 19 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 19 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 19 (valorNumerico -> FLOTANTE .)


state 41

    (32) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 64
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    VARIABLE        shift and go to state 69

    expresionNumerica              shift and go to state 105
    valorNumerico                  shift and go to state 68
    operacionAritmetica            shift and go to state 106

state 42

    (23) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 23 (operadores -> MAS .)
    FLOTANTE        reduce using rule 23 (operadores -> MAS .)
    ENTERO          reduce using rule 23 (operadores -> MAS .)
    VARIABLE        reduce using rule 23 (operadores -> MAS .)


state 43

    (24) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 24 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 24 (operadores -> MENOS .)
    ENTERO          reduce using rule 24 (operadores -> MENOS .)
    VARIABLE        reduce using rule 24 (operadores -> MENOS .)


state 44

    (25) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 25 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 25 (operadores -> DIVISION .)
    ENTERO          reduce using rule 25 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 25 (operadores -> DIVISION .)


state 45

    (26) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 26 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 26 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 26 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 26 (operadores -> MULTIPLICACION .)


state 46

    (27) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 27 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 27 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 27 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 27 (operadores -> EXPONENCIACION .)


state 47

    (28) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 28 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 28 (operadores -> MODULO .)
    ENTERO          reduce using rule 28 (operadores -> MODULO .)
    VARIABLE        reduce using rule 28 (operadores -> MODULO .)


state 48

    (43) asignacion -> VARIABLE IGUAL . CADENA
    (44) asignacion -> VARIABLE IGUAL . expresionNumerica
    (45) asignacion -> VARIABLE IGUAL . hashes
    (46) asignacion -> VARIABLE IGUAL . array
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (54) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (55) array -> . CORCHETE_IZ CORCHETE_DER
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    CADENA          shift and go to state 107
    PARENTESIS_IZ   shift and go to state 64
    LLAVE_IZ        shift and go to state 30
    CORCHETE_IZ     shift and go to state 33
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    VARIABLE        shift and go to state 69

    expresionNumerica              shift and go to state 108
    hashes                         shift and go to state 109
    array                          shift and go to state 110
    valorNumerico                  shift and go to state 68
    operacionAritmetica            shift and go to state 106

state 49

    (76) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (77) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 111
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    valorNumerico                  shift and go to state 112

state 50

    (87) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (88) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (56) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (119) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (83) funcionesArray -> . SORT
    (84) funcionesArray -> . FOR EACH
    (86) funcionesNumeros -> . TO_F

    DO              shift and go to state 115
    EACH            shift and go to state 116
    SORT            shift and go to state 117
    FOR             shift and go to state 118
    TO_F            shift and go to state 119

    funcionesArray                 shift and go to state 113
    funcionesNumeros               shift and go to state 114

state 51

    (66) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 66 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 66 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 66 (operadoresComparacion -> DOBLE_IGUAL .)


state 52

    (67) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 67 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 67 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 67 (operadoresComparacion -> DIFERENTE .)


state 53

    (68) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 68 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 68 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 68 (operadoresComparacion -> MAYOR_QUE .)


state 54

    (69) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 69 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 69 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 69 (operadoresComparacion -> MENOR_QUE .)


state 55

    (70) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 70 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 70 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 70 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 56

    (71) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 71 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 71 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 71 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 57

    (42) impresion -> valor_print valores .

    $end            reduce using rule 42 (impresion -> valor_print valores .)
    DO              reduce using rule 42 (impresion -> valor_print valores .)
    WHEN            reduce using rule 42 (impresion -> valor_print valores .)
    ELSE            reduce using rule 42 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 42 (impresion -> valor_print valores .)
    END             reduce using rule 42 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 42 (impresion -> valor_print valores .)


state 58

    (35) valores -> valor .
    (36) valores -> valor . COMA valores
    (37) valores -> valor . estructura_ifUnaLinea
    (95) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 35 (valores -> valor .)
    DO              reduce using rule 35 (valores -> valor .)
    WHEN            reduce using rule 35 (valores -> valor .)
    ELSE            reduce using rule 35 (valores -> valor .)
    ELSEIF          reduce using rule 35 (valores -> valor .)
    END             reduce using rule 35 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 35 (valores -> valor .)
    COMA            shift and go to state 120
    IF              shift and go to state 122

    estructura_ifUnaLinea          shift and go to state 121

state 59

    (38) valor -> CADENA .

    COMA            reduce using rule 38 (valor -> CADENA .)
    IF              reduce using rule 38 (valor -> CADENA .)
    $end            reduce using rule 38 (valor -> CADENA .)
    DO              reduce using rule 38 (valor -> CADENA .)
    WHEN            reduce using rule 38 (valor -> CADENA .)
    ELSE            reduce using rule 38 (valor -> CADENA .)
    ELSEIF          reduce using rule 38 (valor -> CADENA .)
    END             reduce using rule 38 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 38 (valor -> CADENA .)


state 60

    (39) valor -> valorNumerico .

    COMA            reduce using rule 39 (valor -> valorNumerico .)
    IF              reduce using rule 39 (valor -> valorNumerico .)
    $end            reduce using rule 39 (valor -> valorNumerico .)
    DO              reduce using rule 39 (valor -> valorNumerico .)
    WHEN            reduce using rule 39 (valor -> valorNumerico .)
    ELSE            reduce using rule 39 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 39 (valor -> valorNumerico .)
    END             reduce using rule 39 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 39 (valor -> valorNumerico .)


state 61

    (40) valor -> VARIABLE .
    (21) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for COMA resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 21 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 21 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 21 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 21 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 21 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 21 (valorNumerico -> VARIABLE .)
    END             reduce using rule 21 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 21 (valorNumerico -> VARIABLE .)

  ! COMA            [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! IF              [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! DO              [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! WHEN            [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! END             [ reduce using rule 40 (valor -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 40 (valor -> VARIABLE .) ]


state 62

    (41) valor -> VARIABLECLASE .

    COMA            reduce using rule 41 (valor -> VARIABLECLASE .)
    IF              reduce using rule 41 (valor -> VARIABLECLASE .)
    $end            reduce using rule 41 (valor -> VARIABLECLASE .)
    DO              reduce using rule 41 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 41 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 41 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 41 (valor -> VARIABLECLASE .)
    END             reduce using rule 41 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 41 (valor -> VARIABLECLASE .)


state 63

    (63) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 123


state 64

    (31) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    PARENTESIS_IZ   shift and go to state 64
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    VARIABLE        shift and go to state 69

    operacionAritmetica            shift and go to state 65
    expresionNumerica              shift and go to state 20
    valorNumerico                  shift and go to state 68

state 65

    (31) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (30) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 124
    MAS             reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 30 (expresionNumerica -> operacionAritmetica .)


state 66

    (60) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 125


state 67

    (22) soloEnteros -> ENTERO .
    (20) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 22 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 20 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 20 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 20 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 20 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 20 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 20 (valorNumerico -> ENTERO .)


state 68

    (29) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 29 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 29 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 29 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 29 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 29 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 29 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 29 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 29 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 29 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 29 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 29 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 29 (expresionNumerica -> valorNumerico .)


state 69

    (21) valorNumerico -> VARIABLE .

    MAS             reduce using rule 21 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 21 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 21 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 21 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 21 (valorNumerico -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 21 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 21 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 21 (valorNumerico -> VARIABLE .)
    END             reduce using rule 21 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 21 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 21 (valorNumerico -> VARIABLE .)
    LLAVE_DER       reduce using rule 21 (valorNumerico -> VARIABLE .)


state 70

    (64) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 126


state 71

    (74) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (78) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 128
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    valorNumerico                  shift and go to state 127

state 72

    (75) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 129


state 73

    (80) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (85) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 131

    funcionesFormatoImpresion      shift and go to state 130

state 74

    (113) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 132


state 75

    (114) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 114 (hashes -> LLAVE_IZ LLAVE_DER .)


state 76

    (117) elemento_hash -> claveValor .
    (118) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 117 (elemento_hash -> claveValor .)
    COMA            shift and go to state 133


state 77

    (115) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (116) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 134


state 78

    (93) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (94) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 135
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 79

    (91) condicionIf -> expresiones_booleanas .
    (92) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (72) funcionesComparacion -> . AND
    (73) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 91 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 137
    OR              shift and go to state 138

    funcionesComparacion           shift and go to state 136

state 80

    (74) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (66) operadoresComparacion -> . DOBLE_IGUAL
    (67) operadoresComparacion -> . DIFERENTE
    (68) operadoresComparacion -> . MAYOR_QUE
    (69) operadoresComparacion -> . MENOR_QUE
    (70) operadoresComparacion -> . MENOR_IGUAL_QUE
    (71) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 51
    DIFERENTE       shift and go to state 52
    MAYOR_QUE       shift and go to state 53
    MENOR_QUE       shift and go to state 54
    MENOR_IGUAL_QUE shift and go to state 55
    MAYOR_IGUAL_QUE shift and go to state 56

    operadoresComparacion          shift and go to state 71

state 81

    (76) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (21) valorNumerico -> VARIABLE .
    (66) operadoresComparacion -> . DOBLE_IGUAL
    (67) operadoresComparacion -> . DIFERENTE
    (68) operadoresComparacion -> . MAYOR_QUE
    (69) operadoresComparacion -> . MENOR_QUE
    (70) operadoresComparacion -> . MENOR_IGUAL_QUE
    (71) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    DOBLE_IGUAL     shift and go to state 51
    DIFERENTE       shift and go to state 52
    MAYOR_QUE       shift and go to state 53
    MENOR_QUE       shift and go to state 54
    MENOR_IGUAL_QUE shift and go to state 55
    MAYOR_IGUAL_QUE shift and go to state 56

  ! DOBLE_IGUAL     [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 49

state 82

    (60) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (22) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 139

    soloEnteros                    shift and go to state 66

state 83

    (81) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER END
    (82) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER END

    PARENTESIS_IZ   shift and go to state 140


state 84

    (54) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 141


state 85

    (55) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 55 (array -> CORCHETE_IZ CORCHETE_DER .)


state 86

    (47) elementos_array -> elemento_array . COMA elementos_array
    (48) elementos_array -> elemento_array .

    COMA            shift and go to state 142
    CORCHETE_DER    reduce using rule 48 (elementos_array -> elemento_array .)


state 87

    (49) elemento_array -> CADENA .

    COMA            reduce using rule 49 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 49 (elemento_array -> CADENA .)


state 88

    (50) elemento_array -> ENTERO .

    COMA            reduce using rule 50 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 50 (elemento_array -> ENTERO .)


state 89

    (51) elemento_array -> FLOTANTE .

    COMA            reduce using rule 51 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 51 (elemento_array -> FLOTANTE .)


state 90

    (52) elemento_array -> array .

    COMA            reduce using rule 52 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 52 (elemento_array -> array .)


state 91

    (53) elemento_array -> VARIABLE .

    COMA            reduce using rule 53 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 53 (elemento_array -> VARIABLE .)


state 92

    (106) sentencia_while -> WHILE declaracion . DO sentencia_while END
    (107) sentencia_while -> WHILE declaracion . DO declaracion END

    DO              shift and go to state 143


state 93

    (98) declaracion -> operacionAritmetica .
    (30) expresionNumerica -> operacionAritmetica .

    DO              reduce using rule 98 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 98 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 98 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 98 (declaracion -> operacionAritmetica .)
    END             reduce using rule 98 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 98 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 30 (expresionNumerica -> operacionAritmetica .)


state 94

    (99) declaracion -> asignacion .

    DO              reduce using rule 99 (declaracion -> asignacion .)
    WHEN            reduce using rule 99 (declaracion -> asignacion .)
    ELSE            reduce using rule 99 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 99 (declaracion -> asignacion .)
    END             reduce using rule 99 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 99 (declaracion -> asignacion .)


state 95

    (100) declaracion -> impresion .

    DO              reduce using rule 100 (declaracion -> impresion .)
    WHEN            reduce using rule 100 (declaracion -> impresion .)
    ELSE            reduce using rule 100 (declaracion -> impresion .)
    ELSEIF          reduce using rule 100 (declaracion -> impresion .)
    END             reduce using rule 100 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 100 (declaracion -> impresion .)


state 96

    (101) declaracion -> impresion_vacia .

    DO              reduce using rule 101 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 101 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 101 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 101 (declaracion -> impresion_vacia .)
    END             reduce using rule 101 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 101 (declaracion -> impresion_vacia .)


state 97

    (102) declaracion -> expresiones_booleanas .

    DO              reduce using rule 102 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 102 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 102 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 102 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 102 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 102 (declaracion -> expresiones_booleanas .)


state 98

    (103) declaracion -> solicitudDatosTeclado .

    DO              reduce using rule 103 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 103 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 103 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 103 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 103 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 103 (declaracion -> solicitudDatosTeclado .)


state 99

    (104) declaracion -> hashes .

    DO              reduce using rule 104 (declaracion -> hashes .)
    WHEN            reduce using rule 104 (declaracion -> hashes .)
    ELSE            reduce using rule 104 (declaracion -> hashes .)
    ELSEIF          reduce using rule 104 (declaracion -> hashes .)
    END             reduce using rule 104 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 104 (declaracion -> hashes .)


state 100

    (105) declaracion -> estructura_if .

    DO              reduce using rule 105 (declaracion -> estructura_if .)
    WHEN            reduce using rule 105 (declaracion -> estructura_if .)
    ELSE            reduce using rule 105 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 105 (declaracion -> estructura_if .)
    END             reduce using rule 105 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 105 (declaracion -> estructura_if .)


state 101

    (43) asignacion -> VARIABLE . IGUAL CADENA
    (44) asignacion -> VARIABLE . IGUAL expresionNumerica
    (45) asignacion -> VARIABLE . IGUAL hashes
    (46) asignacion -> VARIABLE . IGUAL array
    (76) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (21) valorNumerico -> VARIABLE .
    (66) operadoresComparacion -> . DOBLE_IGUAL
    (67) operadoresComparacion -> . DIFERENTE
    (68) operadoresComparacion -> . MAYOR_QUE
    (69) operadoresComparacion -> . MENOR_QUE
    (70) operadoresComparacion -> . MENOR_IGUAL_QUE
    (71) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 48
    MAS             reduce using rule 21 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 21 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 21 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 21 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 21 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 51
    DIFERENTE       shift and go to state 52
    MAYOR_QUE       shift and go to state 53
    MENOR_QUE       shift and go to state 54
    MENOR_IGUAL_QUE shift and go to state 55
    MAYOR_IGUAL_QUE shift and go to state 56

  ! DOBLE_IGUAL     [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 21 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 49

state 102

    (108) sentencia_case -> CASE declaracion . sentencia_when END
    (111) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 145

    sentencia_when                 shift and go to state 144

state 103

    (112) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 146


state 104

    (122) definicion_clase -> CLASS ID_CLASE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    DEF             shift and go to state 147


state 105

    (32) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (32) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (23) operadores -> . MAS
    (24) operadores -> . MENOS
    (25) operadores -> . DIVISION
    (26) operadores -> . MULTIPLICACION
    (27) operadores -> . EXPONENCIACION
    (28) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    DIVISION        shift and go to state 44
    MULTIPLICACION  shift and go to state 45
    EXPONENCIACION  shift and go to state 46
    MODULO          shift and go to state 47

  ! MAS             [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 32 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 41

state 106

    (30) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 30 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 30 (expresionNumerica -> operacionAritmetica .)


state 107

    (43) asignacion -> VARIABLE IGUAL CADENA .

    $end            reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 43 (asignacion -> VARIABLE IGUAL CADENA .)


state 108

    (44) asignacion -> VARIABLE IGUAL expresionNumerica .
    (32) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (23) operadores -> . MAS
    (24) operadores -> . MENOS
    (25) operadores -> . DIVISION
    (26) operadores -> . MULTIPLICACION
    (27) operadores -> . EXPONENCIACION
    (28) operadores -> . MODULO

    $end            reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 44 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 42
    MENOS           shift and go to state 43
    DIVISION        shift and go to state 44
    MULTIPLICACION  shift and go to state 45
    EXPONENCIACION  shift and go to state 46
    MODULO          shift and go to state 47

    operadores                     shift and go to state 41

state 109

    (45) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 45 (asignacion -> VARIABLE IGUAL hashes .)


state 110

    (46) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 46 (asignacion -> VARIABLE IGUAL array .)


state 111

    (76) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .
    (21) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 21 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 21 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 21 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 21 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 21 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 21 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 21 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 21 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 21 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 21 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 21 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 21 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 21 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 21 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 21 (valorNumerico -> VARIABLE .)
    END             reduce using rule 21 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 21 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 76 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]


state 112

    (77) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 77 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 113

    (87) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 87 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 87 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 114

    (88) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 88 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 88 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 115

    (56) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 148


state 116

    (119) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 149


state 117

    (83) funcionesArray -> SORT .

    $end            reduce using rule 83 (funcionesArray -> SORT .)
    END             reduce using rule 83 (funcionesArray -> SORT .)


state 118

    (84) funcionesArray -> FOR . EACH

    EACH            shift and go to state 150


state 119

    (86) funcionesNumeros -> TO_F .

    $end            reduce using rule 86 (funcionesNumeros -> TO_F .)
    END             reduce using rule 86 (funcionesNumeros -> TO_F .)


state 120

    (36) valores -> valor COMA . valores
    (35) valores -> . valor
    (36) valores -> . valor COMA valores
    (37) valores -> . valor estructura_ifUnaLinea
    (38) valor -> . CADENA
    (39) valor -> . valorNumerico
    (40) valor -> . VARIABLE
    (41) valor -> . VARIABLECLASE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 59
    VARIABLE        shift and go to state 61
    VARIABLECLASE   shift and go to state 62
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    valor                          shift and go to state 58
    valores                        shift and go to state 151
    valorNumerico                  shift and go to state 60

state 121

    (37) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 37 (valores -> valor estructura_ifUnaLinea .)


state 122

    (95) estructura_ifUnaLinea -> IF . condicionIf
    (91) condicionIf -> . expresiones_booleanas
    (92) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 81
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    PARENTESIS_IZ   shift and go to state 82

    condicionIf                    shift and go to state 152
    expresiones_booleanas          shift and go to state 79
    valorNumerico                  shift and go to state 80
    rangos                         shift and go to state 27

state 123

    (63) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 63 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 124

    (31) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 31 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 125

    (60) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (22) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 139

    soloEnteros                    shift and go to state 153

state 126

    (64) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 64 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 127

    (74) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 74 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 128

    (78) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .
    (21) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 21 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 21 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 21 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 21 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 21 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 21 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 21 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 21 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 21 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 21 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 21 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 21 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 21 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 21 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 21 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 21 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 21 (valorNumerico -> VARIABLE .)
    END             reduce using rule 21 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 21 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 78 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]


state 129

    (75) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 75 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 130

    (80) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 80 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 131

    (85) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 85 (funcionesFormatoImpresion -> CHOMP .)


state 132

    (113) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 113 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 133

    (118) elemento_hash -> claveValor COMA . claveValor
    (115) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (116) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 77

    claveValor                     shift and go to state 154

state 134

    (115) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (116) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 156
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    VARIABLE        shift and go to state 69

    valorNumerico                  shift and go to state 155

state 135

    (93) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (94) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (96) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (97) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 157
    ELSEIF          shift and go to state 159

    estructura_secundaria_if       shift and go to state 158

state 136

    (92) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 81
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    PARENTESIS_IZ   shift and go to state 82

    expresiones_booleanas          shift and go to state 160
    valorNumerico                  shift and go to state 80
    rangos                         shift and go to state 27

state 137

    (72) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 72 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 72 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 72 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 72 (funcionesComparacion -> AND .)


state 138

    (73) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 73 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 73 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 73 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 73 (funcionesComparacion -> OR .)


state 139

    (22) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 22 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 22 (soloEnteros -> ENTERO .)


state 140

    (81) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER END
    (82) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER END
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 162
    VARIABLE        shift and go to state 161

    argumentos                     shift and go to state 163

state 141

    (54) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 54 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 142

    (47) elementos_array -> elemento_array COMA . elementos_array
    (47) elementos_array -> . elemento_array COMA elementos_array
    (48) elementos_array -> . elemento_array
    (49) elemento_array -> . CADENA
    (50) elemento_array -> . ENTERO
    (51) elemento_array -> . FLOTANTE
    (52) elemento_array -> . array
    (53) elemento_array -> . VARIABLE
    (54) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (55) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 87
    ENTERO          shift and go to state 88
    FLOTANTE        shift and go to state 89
    VARIABLE        shift and go to state 91
    CORCHETE_IZ     shift and go to state 33

    elemento_array                 shift and go to state 86
    elementos_array                shift and go to state 164
    array                          shift and go to state 90

state 143

    (106) sentencia_while -> WHILE declaracion DO . sentencia_while END
    (107) sentencia_while -> WHILE declaracion DO . declaracion END
    (106) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (107) sentencia_while -> . WHILE declaracion DO declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 36
    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 165
    sentencia_while                shift and go to state 166
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 144

    (108) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 167


state 145

    (111) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 168
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 146

    (112) sentencia_until -> UNTIL declaracion DO . declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 169
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 147

    (122) definicion_clase -> CLASS ID_CLASE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    INITIALIZE      shift and go to state 170


state 148

    (56) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 171


state 149

    (119) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 172


state 150

    (84) funcionesArray -> FOR EACH .

    $end            reduce using rule 84 (funcionesArray -> FOR EACH .)
    END             reduce using rule 84 (funcionesArray -> FOR EACH .)


state 151

    (36) valores -> valor COMA valores .

    $end            reduce using rule 36 (valores -> valor COMA valores .)
    DO              reduce using rule 36 (valores -> valor COMA valores .)
    WHEN            reduce using rule 36 (valores -> valor COMA valores .)
    ELSE            reduce using rule 36 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 36 (valores -> valor COMA valores .)
    END             reduce using rule 36 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 36 (valores -> valor COMA valores .)


state 152

    (95) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 95 (estructura_ifUnaLinea -> IF condicionIf .)


state 153

    (60) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 173


state 154

    (118) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 118 (elemento_hash -> claveValor COMA claveValor .)


state 155

    (115) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 115 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 115 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 156

    (116) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 116 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 116 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 157

    (93) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 174
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 158

    (94) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 94 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 159

    (96) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (97) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (91) condicionIf -> . expresiones_booleanas
    (92) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 81
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28
    PARENTESIS_IZ   shift and go to state 82

    condicionIf                    shift and go to state 175
    expresiones_booleanas          shift and go to state 79
    valorNumerico                  shift and go to state 80
    rangos                         shift and go to state 27

state 160

    (92) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 92 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 161

    (89) argumentos -> VARIABLE .
    (90) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 89 (argumentos -> VARIABLE .)
    COMA            shift and go to state 176


state 162

    (81) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . END

    END             shift and go to state 177


state 163

    (82) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER END

    PARENTESIS_DER  shift and go to state 178


state 164

    (47) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 47 (elementos_array -> elemento_array COMA elementos_array .)


state 165

    (107) sentencia_while -> WHILE declaracion DO declaracion . END

    END             shift and go to state 179


state 166

    (106) sentencia_while -> WHILE declaracion DO sentencia_while . END

    END             shift and go to state 180


state 167

    (108) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 108 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 108 (sentencia_case -> CASE declaracion sentencia_when END .)


state 168

    (111) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 181


state 169

    (112) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 182


state 170

    (122) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 183


state 171

    (56) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 184


state 172

    (119) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (120) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (121) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 185

    each_args_hash                 shift and go to state 186

state 173

    (60) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 60 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 174

    (93) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 187


state 175

    (96) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (97) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 188
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 176

    (90) argumentos -> VARIABLE COMA . argumentos
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 161

    argumentos                     shift and go to state 189

state 177

    (81) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .

    $end            reduce using rule 81 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)
    END             reduce using rule 81 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)


state 178

    (82) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . END

    END             shift and go to state 190


state 179

    (107) sentencia_while -> WHILE declaracion DO declaracion END .

    $end            reduce using rule 107 (sentencia_while -> WHILE declaracion DO declaracion END .)
    END             reduce using rule 107 (sentencia_while -> WHILE declaracion DO declaracion END .)


state 180

    (106) sentencia_while -> WHILE declaracion DO sentencia_while END .

    $end            reduce using rule 106 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    END             reduce using rule 106 (sentencia_while -> WHILE declaracion DO sentencia_while END .)


state 181

    (111) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 191
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 182

    (112) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 112 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 112 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 183

    (122) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER
    (89) argumentos -> . VARIABLE
    (90) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 161

    argumentos                     shift and go to state 192

state 184

    (56) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (57) cuerpo_each -> . cuerpo
    (58) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . impresion
    (4) cuerpo -> . impresion_vacia
    (5) cuerpo -> . expresiones_booleanas
    (6) cuerpo -> . solicitudDatosTeclado
    (7) cuerpo -> . hashes
    (8) cuerpo -> . estructura_if
    (9) cuerpo -> . funciones
    (10) cuerpo -> . funcionesEstructuras
    (11) cuerpo -> . array
    (12) cuerpo -> . each_array
    (13) cuerpo -> . comentarios
    (14) cuerpo -> . each_hash
    (15) cuerpo -> . sentencia_while
    (16) cuerpo -> . sentencia_case
    (17) cuerpo -> . sentencia_until
    (18) cuerpo -> . definicion_clase
    (59) vacio -> .
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (81) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (82) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (87) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (88) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (54) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (55) array -> . CORCHETE_IZ CORCHETE_DER
    (56) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (61) comentarios -> . COMENTARIO
    (62) comentarios -> . COMENTARIO_MULTI
    (119) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (106) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (107) sentencia_while -> . WHILE declaracion DO declaracion END
    (108) sentencia_case -> . CASE declaracion sentencia_when END
    (112) sentencia_until -> . UNTIL declaracion DO declaracion END
    (122) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    END             reduce using rule 59 (vacio -> .)
    VARIABLE        shift and go to state 21
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    DEF             shift and go to state 32
    CORCHETE_IZ     shift and go to state 33
    COMENTARIO      shift and go to state 34
    COMENTARIO_MULTI shift and go to state 35
    WHILE           shift and go to state 36
    CASE            shift and go to state 37
    UNTIL           shift and go to state 38
    CLASS           shift and go to state 39
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    cuerpo_each                    shift and go to state 193
    cuerpo                         shift and go to state 194
    vacio                          shift and go to state 195
    operacionAritmetica            shift and go to state 2
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    impresion_vacia                shift and go to state 5
    expresiones_booleanas          shift and go to state 6
    solicitudDatosTeclado          shift and go to state 7
    hashes                         shift and go to state 8
    estructura_if                  shift and go to state 9
    funciones                      shift and go to state 10
    funcionesEstructuras           shift and go to state 11
    array                          shift and go to state 12
    each_array                     shift and go to state 13
    comentarios                    shift and go to state 14
    each_hash                      shift and go to state 15
    sentencia_while                shift and go to state 16
    sentencia_case                 shift and go to state 17
    sentencia_until                shift and go to state 18
    definicion_clase               shift and go to state 19
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 185

    (120) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (121) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 196
    BARRA           shift and go to state 197


state 186

    (119) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 198
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 187

    (93) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 93 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 188

    (96) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (97) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (96) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (97) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 199
    ELSEIF          shift and go to state 159

    estructura_secundaria_if       shift and go to state 200

state 189

    (90) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 90 (argumentos -> VARIABLE COMA argumentos .)


state 190

    (82) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .

    $end            reduce using rule 82 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)
    END             reduce using rule 82 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)


state 191

    (111) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    END             reduce using rule 111 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 192

    (122) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 201


state 193

    (56) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 202


state 194

    (57) cuerpo_each -> cuerpo .

    END             reduce using rule 57 (cuerpo_each -> cuerpo .)


state 195

    (58) cuerpo_each -> vacio .

    END             reduce using rule 58 (cuerpo_each -> vacio .)


state 196

    (120) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 203


state 197

    (121) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 121 (each_args_hash -> VARIABLE BARRA .)


state 198

    (119) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 204


state 199

    (96) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (98) declaracion -> . operacionAritmetica
    (99) declaracion -> . asignacion
    (100) declaracion -> . impresion
    (101) declaracion -> . impresion_vacia
    (102) declaracion -> . expresiones_booleanas
    (103) declaracion -> . solicitudDatosTeclado
    (104) declaracion -> . hashes
    (105) declaracion -> . estructura_if
    (32) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (43) asignacion -> . VARIABLE IGUAL CADENA
    (44) asignacion -> . VARIABLE IGUAL expresionNumerica
    (45) asignacion -> . VARIABLE IGUAL hashes
    (46) asignacion -> . VARIABLE IGUAL array
    (42) impresion -> . valor_print valores
    (63) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (64) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (65) impresion_vacia -> . PUTS
    (74) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (75) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (76) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (77) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (78) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (79) solicitudDatosTeclado -> . GETS
    (80) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (113) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (114) hashes -> . LLAVE_IZ LLAVE_DER
    (93) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (94) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (29) expresionNumerica -> . valorNumerico
    (30) expresionNumerica -> . operacionAritmetica
    (31) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valor_print -> . PRINT
    (34) valor_print -> . PUTS
    (19) valorNumerico -> . FLOTANTE
    (20) valorNumerico -> . ENTERO
    (21) valorNumerico -> . VARIABLE
    (60) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 101
    PRINT           shift and go to state 23
    PUTS            shift and go to state 25
    GETS            shift and go to state 29
    LLAVE_IZ        shift and go to state 30
    IF              shift and go to state 31
    PARENTESIS_IZ   shift and go to state 24
    FLOTANTE        shift and go to state 40
    ENTERO          shift and go to state 28

    declaracion                    shift and go to state 205
    operacionAritmetica            shift and go to state 93
    asignacion                     shift and go to state 94
    impresion                      shift and go to state 95
    impresion_vacia                shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    solicitudDatosTeclado          shift and go to state 98
    hashes                         shift and go to state 99
    estructura_if                  shift and go to state 100
    expresionNumerica              shift and go to state 20
    valor_print                    shift and go to state 22
    valorNumerico                  shift and go to state 26
    rangos                         shift and go to state 27

state 200

    (97) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 97 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 201

    (122) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .

    $end            reduce using rule 122 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)
    END             reduce using rule 122 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)


state 202

    (56) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 56 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 56 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 203

    (120) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 206


state 204

    (119) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 119 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 119 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 205

    (96) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 207


state 206

    (120) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 120 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 207

    (96) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 96 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 21 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 21 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 81 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 81 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 81 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 81 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 101 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 101 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 101 resolved as shift
WARNING: shift/reduce conflict for MAS in state 105 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 105 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 105 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 105 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 105 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 105 resolved as shift
WARNING: reduce/reduce conflict in state 61 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 61
WARNING: reduce/reduce conflict in state 111 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) in state 111
WARNING: reduce/reduce conflict in state 128 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) in state 128
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) is never reduced
