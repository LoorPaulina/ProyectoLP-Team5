Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    AND
    ASIGNA_HASH
    BARRA
    BEGIN
    BREAK
    CADENA
    CASE
    CHOMP
    CLASS
    COMA
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    CONCAT
    CORCHETE_DER
    CORCHETE_IZ
    DEF
    DEFINED_QUESTION
    DIFERENTE
    EACH
    ELSE
    ELSEIF
    END
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    FOR
    GETS
    IF
    IGUAL
    IGUAL_DOBLEP
    IN
    LLAVE_DER
    LLAVE_IZ
    MAYOR_IGUAL_QUE
    MAYOR_QUE
    MENOR_IGUAL_QUE
    MENOR_QUE
    MODULE
    NEXT
    NIL
    NOT
    OR
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINT
    PRINTF
    PUTS
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SIMBOLO
    SORT
    SUPER
    TO_F
    TRIPLE_IGUAL
    TRUE
    UNTIL
    VARIABLE
    VARIABLECLASE
    WHILE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     valorNumerico -> FLOTANTE
Rule 3     valorNumerico -> ENTERO
Rule 4     operadores -> MAS
Rule 5     operadores -> MENOS
Rule 6     operadores -> DIVISION
Rule 7     operadores -> MULTIPLICACION
Rule 8     operadores -> EXPONENCIACION
Rule 9     expresionNumerica -> valorNumerico
Rule 10    expresionNumerica -> operacionAritmetica
Rule 11    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 12    operacionAritmetica -> expresionNumerica operadores expresionNumerica

Terminals, with rules where they appear

ALIAS                : 
AND                  : 
ASIGNA_HASH          : 
BARRA                : 
BEGIN                : 
BREAK                : 
CADENA               : 
CASE                 : 
CHOMP                : 
CLASS                : 
COMA                 : 
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 
CORCHETE_DER         : 
CORCHETE_IZ          : 
DEF                  : 
DEFINED_QUESTION     : 
DIFERENTE            : 
DIVISION             : 6
EACH                 : 
ELSE                 : 
ELSEIF               : 
END                  : 
ENSURE               : 
ENTERO               : 3
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 8
FALSE                : 
FLOTANTE             : 2
FOR                  : 
GETS                 : 
IF                   : 
IGUAL                : 
IGUAL_DOBLEP         : 
IN                   : 
LLAVE_DER            : 
LLAVE_IZ             : 
MAS                  : 4
MAYOR_IGUAL_QUE      : 
MAYOR_QUE            : 
MENOR_IGUAL_QUE      : 
MENOR_QUE            : 
MENOS                : 5
MODULE               : 
MULTIPLICACION       : 7
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 
O_SIGNO              : 
PARENTESIS_DER       : 11
PARENTESIS_IZ        : 11
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 
PRINTF               : 
PUTS                 : 
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 
SORT                 : 
SUPER                : 
TO_F                 : 
TRIPLE_IGUAL         : 
TRUE                 : 
UNTIL                : 
VARIABLE             : 
VARIABLECLASE        : 
WHILE                : 
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

cuerpo               : 0
expresionNumerica    : 12 12
operacionAritmetica  : 1 10 11
operadores           : 12
valorNumerico        : 9

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (12) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (9) expresionNumerica -> . valorNumerico
    (10) expresionNumerica -> . operacionAritmetica
    (11) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (2) valorNumerico -> . FLOTANTE
    (3) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 5
    FLOTANTE        shift and go to state 6
    ENTERO          shift and go to state 7

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    expresionNumerica              shift and go to state 3
    valorNumerico                  shift and go to state 4

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (10) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)


state 3

    (12) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (4) operadores -> . MAS
    (5) operadores -> . MENOS
    (6) operadores -> . DIVISION
    (7) operadores -> . MULTIPLICACION
    (8) operadores -> . EXPONENCIACION

    MAS             shift and go to state 9
    MENOS           shift and go to state 10
    DIVISION        shift and go to state 11
    MULTIPLICACION  shift and go to state 12
    EXPONENCIACION  shift and go to state 13

    operadores                     shift and go to state 8

state 4

    (9) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 9 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 9 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 9 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 9 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 9 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 9 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 9 (expresionNumerica -> valorNumerico .)


state 5

    (11) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (12) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (9) expresionNumerica -> . valorNumerico
    (10) expresionNumerica -> . operacionAritmetica
    (11) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (2) valorNumerico -> . FLOTANTE
    (3) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 5
    FLOTANTE        shift and go to state 6
    ENTERO          shift and go to state 7

    operacionAritmetica            shift and go to state 14
    expresionNumerica              shift and go to state 3
    valorNumerico                  shift and go to state 4

state 6

    (2) valorNumerico -> FLOTANTE .

    MAS             reduce using rule 2 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 2 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 2 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 2 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 2 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 2 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 2 (valorNumerico -> FLOTANTE .)


state 7

    (3) valorNumerico -> ENTERO .

    MAS             reduce using rule 3 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 3 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 3 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 3 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 3 (valorNumerico -> ENTERO .)
    $end            reduce using rule 3 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 3 (valorNumerico -> ENTERO .)


state 8

    (12) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (9) expresionNumerica -> . valorNumerico
    (10) expresionNumerica -> . operacionAritmetica
    (11) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (2) valorNumerico -> . FLOTANTE
    (3) valorNumerico -> . ENTERO
    (12) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 5
    FLOTANTE        shift and go to state 6
    ENTERO          shift and go to state 7

    expresionNumerica              shift and go to state 15
    valorNumerico                  shift and go to state 4
    operacionAritmetica            shift and go to state 16

state 9

    (4) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 4 (operadores -> MAS .)
    FLOTANTE        reduce using rule 4 (operadores -> MAS .)
    ENTERO          reduce using rule 4 (operadores -> MAS .)


state 10

    (5) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 5 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 5 (operadores -> MENOS .)
    ENTERO          reduce using rule 5 (operadores -> MENOS .)


state 11

    (6) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 6 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 6 (operadores -> DIVISION .)
    ENTERO          reduce using rule 6 (operadores -> DIVISION .)


state 12

    (7) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 7 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 7 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 7 (operadores -> MULTIPLICACION .)


state 13

    (8) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 8 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 8 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 8 (operadores -> EXPONENCIACION .)


state 14

    (11) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (10) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 17
    MAS             reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)


state 15

    (12) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (12) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (4) operadores -> . MAS
    (5) operadores -> . MENOS
    (6) operadores -> . DIVISION
    (7) operadores -> . MULTIPLICACION
    (8) operadores -> . EXPONENCIACION

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
    $end            reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 9
    MENOS           shift and go to state 10
    DIVISION        shift and go to state 11
    MULTIPLICACION  shift and go to state 12
    EXPONENCIACION  shift and go to state 13

  ! MAS             [ reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 12 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 8

state 16

    (10) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 10 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 10 (expresionNumerica -> operacionAritmetica .)


state 17

    (11) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 11 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 15 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 15 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 15 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 15 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 15 resolved as shift
