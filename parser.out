Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    input_concatenacion -> concatenacionSimpleCadena
Rule 23    input_concatenacion -> concatenacion_funcion
Rule 24    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 25    valorCadena -> CADENA
Rule 26    valorCadena -> VARIABLE
Rule 27    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 28    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 29    valorNumerico -> FLOTANTE
Rule 30    valorNumerico -> ENTERO
Rule 31    soloEnteros -> ENTERO
Rule 32    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 33    operadores -> MAS
Rule 34    operadores -> MENOS
Rule 35    operadores -> DIVISION
Rule 36    operadores -> MULTIPLICACION
Rule 37    operadores -> EXPONENCIACION
Rule 38    operadores -> MODULO
Rule 39    expresionNumerica -> valorNumerico
Rule 40    expresionNumerica -> operacionAritmetica
Rule 41    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 42    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 43    valor_print -> PRINT
Rule 44    valor_print -> PUTS
Rule 45    valores -> valor
Rule 46    valores -> valor COMA valores
Rule 47    valores -> valor estructura_ifUnaLinea
Rule 48    booleanos -> TRUE
Rule 49    booleanos -> FALSE
Rule 50    valor -> CADENA
Rule 51    valor -> valorNumerico
Rule 52    valor -> VARIABLE
Rule 53    valor -> VARIABLECLASE
Rule 54    valor -> SIMBOLO
Rule 55    impresion -> valor_print valores
Rule 56    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 57    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 58    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 59    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 60    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 61    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 62    asignacion -> VARIABLE IGUAL CADENA
Rule 63    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 64    asignacion -> VARIABLE IGUAL hashes
Rule 65    asignacion -> VARIABLE IGUAL array
Rule 66    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 67    asignacion -> VARIABLE IGUAL booleanos
Rule 68    elementos_array -> elemento_array COMA elementos_array
Rule 69    elementos_array -> elemento_array
Rule 70    elemento_array -> CADENA
Rule 71    elemento_array -> ENTERO
Rule 72    elemento_array -> FLOTANTE
Rule 73    elemento_array -> array
Rule 74    elemento_array -> VARIABLE
Rule 75    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 76    array -> CORCHETE_IZ CORCHETE_DER
Rule 77    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 78    cuerpo_each -> cuerpo
Rule 79    cuerpo_each -> vacio
Rule 80    vacio -> <empty>
Rule 81    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 82    comentarios -> COMENTARIO
Rule 83    comentarios -> COMENTARIO_MULTI
Rule 84    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 85    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 86    impresion_vacia -> PUTS
Rule 87    operadoresComparacion -> DOBLE_IGUAL
Rule 88    operadoresComparacion -> DIFERENTE
Rule 89    operadoresComparacion -> MAYOR_QUE
Rule 90    operadoresComparacion -> MENOR_QUE
Rule 91    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 92    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 93    funcionesComparacion -> AND
Rule 94    funcionesComparacion -> OR
Rule 95    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 96    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 97    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 98    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 99    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 100   solicitudDatosTeclado -> GETS
Rule 101   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 102   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 103   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 104   funcionesArray -> SORT
Rule 105   funcionesArray -> FOR EACH
Rule 106   funcionesFormatoImpresion -> CHOMP
Rule 107   funcionesNumeros -> TO_F
Rule 108   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 109   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 110   argumentos -> VARIABLE
Rule 111   argumentos -> VARIABLE COMA argumentos
Rule 112   condicionIf -> expresiones_booleanas
Rule 113   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 114   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 115   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 116   estructura_ifUnaLinea -> IF condicionIf
Rule 117   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 118   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 119   declaracion -> operacionAritmetica
Rule 120   declaracion -> asignacion
Rule 121   declaracion -> impresion
Rule 122   declaracion -> impresion_vacia
Rule 123   declaracion -> expresiones_booleanas
Rule 124   declaracion -> solicitudDatosTeclado
Rule 125   declaracion -> hashes
Rule 126   declaracion -> estructura_if
Rule 127   declaracion -> asignacion_clase
Rule 128   declaracion -> sentencia_while
Rule 129   declaracion -> estructura_ifUnaLinea
Rule 130   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 131   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 132   sentencia_case -> CASE declaracion sentencia_when END
Rule 133   sentencias_when -> sentencia_when
Rule 134   sentencias_when -> sentencia_when sentencias_when
Rule 135   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 136   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 137   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 138   hashes -> LLAVE_IZ LLAVE_DER
Rule 139   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 140   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 141   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 142   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 143   elemento_hash -> claveValor
Rule 144   elemento_hash -> claveValor COMA claveValor
Rule 145   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 146   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 147   each_args_hash -> VARIABLE BARRA
Rule 148   definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 149   cuerpoVariables -> asignacion_clase
Rule 150   cuerpoVariables -> asignacion
Rule 151   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 152   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 153   cuerpoClase -> cuerpoVariables
Rule 154   cuerpoClase -> declaracion
Rule 155   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 93
ASIGNA_HASH          : 139 140 141 142
BARRA                : 77 77 145 146 147
BEGIN                : 
BREAK                : 
CADENA               : 25 50 56 62 70 140 141 142 142
CASE                 : 132
CHOMP                : 106
CLASS                : 148
COMA                 : 46 68 111 144 146
COMENTARIO           : 82
COMENTARIO_MULTI     : 83
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 24
CORCHETE_DER         : 75 76
CORCHETE_IZ          : 75 76
DEF                  : 102 103 148
DEFINED_QUESTION     : 
DIFERENTE            : 88
DIVISION             : 35
DO                   : 77 130 131 136 145
DOBLE_IGUAL          : 87
EACH                 : 105 145
ELSE                 : 114 117
ELSEIF               : 117 118
END                  : 77 102 103 114 117 130 131 132 136 145 148
ENSURE               : 
ENTERO               : 30 31 71 96
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 37
FALSE                : 49
FLOTANTE             : 29 72
FOR                  : 105
GETS                 : 100 101
ID_CLASE             : 148
IF                   : 114 115 116
IGUAL                : 56 57 58 59 60 61 62 63 64 65 66 67
IGUAL_DOBLEP         : 135
IN                   : 
INITIALIZE           : 148
LLAVE_DER            : 137 138
LLAVE_IZ             : 137 138
MAS                  : 27 28 33
MAYOR_IGUAL_QUE      : 92
MAYOR_QUE            : 89
MENOR_IGUAL_QUE      : 91
MENOR_QUE            : 90
MENOS                : 34
MODULE               : 
MODULO               : 38
MULTIPLICACION       : 36
NEWLINE              : 148 148 151 152
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 94
O_SIGNO              : 
PARENTESIS_DER       : 24 41 81 84 85 102 103 148
PARENTESIS_IZ        : 24 41 81 84 85 102 103 148
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 43 84
PRINTF               : 
PUNTO                : 24 32 77 101 108 109 145
PUTS                 : 44 85 86
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 54
SORT                 : 104
SUPER                : 
TO_F                 : 32 107
TRES_PUNTOS          : 81
TRIPLE_IGUAL         : 96
TRUE                 : 48
UNTIL                : 136
VARIABLE             : 24 26 32 52 61 62 63 64 65 66 67 74 77 77 97 97 98 99 102 103 108 109 110 111 139 140 145 146 146 147
VARIABLECLASE        : 53 56 57 58 59 60
WHEN                 : 135
WHILE                : 130 131
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 103 111 148
array                : 12 59 65 73
asignacion           : 3 120 150 152
asignacion_clase     : 127 149 151
booleanos            : 61 67
claveValor           : 143 144 144
comentarios          : 14
concatenacionSimpleCadena : 22 28
concatenacion_funcion : 23
condicionIf          : 114 115 116 117 118
cuerpo               : 78 0
cuerpoClase          : 148
cuerpoVariables      : 148 151 152 153
cuerpo_each          : 77
declaracion          : 102 103 114 114 115 117 117 118 131 132 135 135 136 136 145 154
definicion_clase     : 20
each_args_hash       : 145
each_array           : 13
each_hash            : 15
elemento_array       : 68 69
elemento_hash        : 137
elementos_array      : 68 75
entero_a_flotante    : 21
estructura_if        : 9 126
estructura_ifUnaLinea : 47 129
estructura_secundaria_if : 115 118
expresionNumerica    : 42 42 57 63
expresiones_booleanas : 6 112 113 113 123 130 131
funciones            : 10 155
funcionesArray       : 108
funcionesComparacion : 113
funcionesEstructuras : 11
funcionesFormatoImpresion : 101
funcionesNumeros     : 109
hashes               : 8 58 64 125
impresion            : 4 121
impresion_vacia      : 5 122
input_concatenacion  : 2 60 66
operacionAritmetica  : 1 40 41 119
operadores           : 42
operadoresComparacion : 95 97 98 99
rangos               : 96
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 132 133 134
sentencia_while      : 16 128 130
sentencias_when      : 18 134
solicitudDatosTeclado : 7 124
soloEnteros          : 81 81
vacio                : 79
valor                : 45 46 47
valorCadena          : 24 27 27 28
valorNumerico        : 39 51 95 95 98 99 139 141
valor_print          : 55
valores              : 46 55

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (102) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (103) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (108) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (109) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (77) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (82) comentarios -> . COMENTARIO
    (83) comentarios -> . COMENTARIO_MULTI
    (145) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (132) sentencia_case -> . CASE declaracion sentencia_when END
    (133) sentencias_when -> . sentencia_when
    (134) sentencias_when -> . sentencia_when sentencias_when
    (136) sentencia_until -> . UNTIL declaracion DO declaracion END
    (148) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (32) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (135) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 37
    DEF             shift and go to state 38
    CORCHETE_IZ     shift and go to state 39
    COMENTARIO      shift and go to state 40
    COMENTARIO_MULTI shift and go to state 41
    WHILE           shift and go to state 42
    CASE            shift and go to state 43
    UNTIL           shift and go to state 45
    CLASS           shift and go to state 46
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    WHEN            shift and go to state 49
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33
    sentencia_when                 shift and go to state 44
    valorCadena                    shift and go to state 47

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (40) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 24

    (22) input_concatenacion -> concatenacionSimpleCadena .
    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 57


state 25

    (23) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)


state 26

    (62) asignacion -> VARIABLE . IGUAL CADENA
    (63) asignacion -> VARIABLE . IGUAL expresionNumerica
    (64) asignacion -> VARIABLE . IGUAL hashes
    (65) asignacion -> VARIABLE . IGUAL array
    (66) asignacion -> VARIABLE . IGUAL input_concatenacion
    (67) asignacion -> VARIABLE . IGUAL booleanos
    (97) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (108) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (109) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (77) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (145) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (32) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (24) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (26) valorCadena -> VARIABLE .
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 58
    PUNTO           shift and go to state 60
    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 59

state 27

    (25) valorCadena -> CADENA .

    MAS             reduce using rule 25 (valorCadena -> CADENA .)
    $end            reduce using rule 25 (valorCadena -> CADENA .)
    END             reduce using rule 25 (valorCadena -> CADENA .)
    WHEN            reduce using rule 25 (valorCadena -> CADENA .)
    DO              reduce using rule 25 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 25 (valorCadena -> CADENA .)
    ELSE            reduce using rule 25 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 25 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 25 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 25 (valorCadena -> CADENA .)


state 28

    (55) impresion -> valor_print . valores
    (45) valores -> . valor
    (46) valores -> . valor COMA valores
    (47) valores -> . valor estructura_ifUnaLinea
    (50) valor -> . CADENA
    (51) valor -> . valorNumerico
    (52) valor -> . VARIABLE
    (53) valor -> . VARIABLECLASE
    (54) valor -> . SIMBOLO
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 69
    VARIABLE        shift and go to state 71
    VARIABLECLASE   shift and go to state 72
    SIMBOLO         shift and go to state 73
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valores                        shift and go to state 67
    valor                          shift and go to state 68
    valorNumerico                  shift and go to state 70

state 29

    (84) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (43) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 74
    CADENA          reduce using rule 43 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 43 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 43 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 43 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 43 (valor_print -> PRINT .)
    ENTERO          reduce using rule 43 (valor_print -> PRINT .)


state 30

    (41) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (81) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (31) soloEnteros -> . ENTERO
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 78
    PARENTESIS_IZ   shift and go to state 75
    FLOTANTE        shift and go to state 48

    operacionAritmetica            shift and go to state 76
    soloEnteros                    shift and go to state 77
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 79

state 31

    (85) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> PUTS .
    (44) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 80
    $end            reduce using rule 86 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 86 (impresion_vacia -> PUTS .)
    DO              reduce using rule 86 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 86 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 86 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 86 (impresion_vacia -> PUTS .)
    END             reduce using rule 86 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 44 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 44 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 44 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 44 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 44 (valor_print -> PUTS .)
    ENTERO          reduce using rule 44 (valor_print -> PUTS .)


state 32

    (95) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (39) expresionNumerica -> valorNumerico .
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 81

state 33

    (96) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 82


state 34

    (30) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 30 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 30 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 30 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 30 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 30 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 30 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 30 (valorNumerico -> ENTERO .)
    IF              reduce using rule 30 (valorNumerico -> ENTERO .)
    $end            reduce using rule 30 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 30 (valorNumerico -> ENTERO .)
    DO              reduce using rule 30 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 30 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 30 (valorNumerico -> ENTERO .)
    END             reduce using rule 30 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 30 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 30 (valorNumerico -> ENTERO .)
    AND             reduce using rule 30 (valorNumerico -> ENTERO .)
    OR              reduce using rule 30 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 30 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 30 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 30 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 30 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 30 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 30 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 30 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 30 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 30 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 30 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 30 (valorNumerico -> ENTERO .)


state 35

    (100) solicitudDatosTeclado -> GETS .
    (101) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 100 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 83


state 36

    (137) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (138) hashes -> LLAVE_IZ . LLAVE_DER
    (143) elemento_hash -> . claveValor
    (144) elemento_hash -> . claveValor COMA claveValor
    (139) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (140) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (141) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (142) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 85
    VARIABLE        shift and go to state 87
    CADENA          shift and go to state 88

    elemento_hash                  shift and go to state 84
    claveValor                     shift and go to state 86

state 37

    (114) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (112) condicionIf -> . expresiones_booleanas
    (113) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    condicionIf                    shift and go to state 89
    expresiones_booleanas          shift and go to state 90
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 38

    (102) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (103) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 94


state 39

    (75) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (76) array -> CORCHETE_IZ . CORCHETE_DER
    (68) elementos_array -> . elemento_array COMA elementos_array
    (69) elementos_array -> . elemento_array
    (70) elemento_array -> . CADENA
    (71) elemento_array -> . ENTERO
    (72) elemento_array -> . FLOTANTE
    (73) elemento_array -> . array
    (74) elemento_array -> . VARIABLE
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 96
    CADENA          shift and go to state 98
    ENTERO          shift and go to state 99
    FLOTANTE        shift and go to state 100
    VARIABLE        shift and go to state 102
    CORCHETE_IZ     shift and go to state 39

    elementos_array                shift and go to state 95
    elemento_array                 shift and go to state 97
    array                          shift and go to state 101

state 40

    (82) comentarios -> COMENTARIO .

    $end            reduce using rule 82 (comentarios -> COMENTARIO .)
    END             reduce using rule 82 (comentarios -> COMENTARIO .)


state 41

    (83) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 83 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 83 (comentarios -> COMENTARIO_MULTI .)


state 42

    (130) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    expresiones_booleanas          shift and go to state 103
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 43

    (132) sentencia_case -> CASE . declaracion sentencia_when END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 104
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 44

    (133) sentencias_when -> sentencia_when .
    (134) sentencias_when -> sentencia_when . sentencias_when
    (133) sentencias_when -> . sentencia_when
    (134) sentencias_when -> . sentencia_when sentencias_when
    (135) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 133 (sentencias_when -> sentencia_when .)
    END             reduce using rule 133 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 49

    sentencia_when                 shift and go to state 44
    sentencias_when                shift and go to state 119

state 45

    (136) sentencia_until -> UNTIL . declaracion DO declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 120
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 46

    (148) definicion_clase -> CLASS . ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    ID_CLASE        shift and go to state 121


state 47

    (27) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 122


state 48

    (29) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 29 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 29 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 29 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 29 (valorNumerico -> FLOTANTE .)


state 49

    (135) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 123
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 50

    (42) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 75
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    expresionNumerica              shift and go to state 124
    valorNumerico                  shift and go to state 79
    operacionAritmetica            shift and go to state 125

state 51

    (33) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 33 (operadores -> MAS .)
    FLOTANTE        reduce using rule 33 (operadores -> MAS .)
    ENTERO          reduce using rule 33 (operadores -> MAS .)


state 52

    (34) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 34 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 34 (operadores -> MENOS .)
    ENTERO          reduce using rule 34 (operadores -> MENOS .)


state 53

    (35) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 35 (operadores -> DIVISION .)
    ENTERO          reduce using rule 35 (operadores -> DIVISION .)


state 54

    (36) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 36 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 36 (operadores -> MULTIPLICACION .)


state 55

    (37) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 37 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 37 (operadores -> EXPONENCIACION .)


state 56

    (38) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 38 (operadores -> MODULO .)
    ENTERO          reduce using rule 38 (operadores -> MODULO .)


state 57

    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 126

state 58

    (62) asignacion -> VARIABLE IGUAL . CADENA
    (63) asignacion -> VARIABLE IGUAL . expresionNumerica
    (64) asignacion -> VARIABLE IGUAL . hashes
    (65) asignacion -> VARIABLE IGUAL . array
    (66) asignacion -> VARIABLE IGUAL . input_concatenacion
    (67) asignacion -> VARIABLE IGUAL . booleanos
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (48) booleanos -> . TRUE
    (49) booleanos -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    PARENTESIS_IZ   shift and go to state 75
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    TRUE            shift and go to state 135
    FALSE           shift and go to state 136
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 128

    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 132
    input_concatenacion            shift and go to state 133
    booleanos                      shift and go to state 134
    valorNumerico                  shift and go to state 79
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 47

state 59

    (97) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (98) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 137
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 138

state 60

    (108) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (109) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (77) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (145) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (32) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (24) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (104) funcionesArray -> . SORT
    (105) funcionesArray -> . FOR EACH
    (107) funcionesNumeros -> . TO_F

    DO              shift and go to state 141
    EACH            shift and go to state 142
    TO_F            shift and go to state 143
    CONCAT          shift and go to state 144
    SORT            shift and go to state 145
    FOR             shift and go to state 146

    funcionesArray                 shift and go to state 139
    funcionesNumeros               shift and go to state 140

state 61

    (87) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 87 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 87 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 87 (operadoresComparacion -> DOBLE_IGUAL .)


state 62

    (88) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 88 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 88 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 88 (operadoresComparacion -> DIFERENTE .)


state 63

    (89) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 89 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 89 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 89 (operadoresComparacion -> MAYOR_QUE .)


state 64

    (90) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 90 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 90 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 90 (operadoresComparacion -> MENOR_QUE .)


state 65

    (91) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 91 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 91 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 91 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 66

    (92) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 92 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 92 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 92 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 67

    (55) impresion -> valor_print valores .

    $end            reduce using rule 55 (impresion -> valor_print valores .)
    WHEN            reduce using rule 55 (impresion -> valor_print valores .)
    DO              reduce using rule 55 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 55 (impresion -> valor_print valores .)
    ELSE            reduce using rule 55 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 55 (impresion -> valor_print valores .)
    END             reduce using rule 55 (impresion -> valor_print valores .)


state 68

    (45) valores -> valor .
    (46) valores -> valor . COMA valores
    (47) valores -> valor . estructura_ifUnaLinea
    (116) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 45 (valores -> valor .)
    WHEN            reduce using rule 45 (valores -> valor .)
    DO              reduce using rule 45 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 45 (valores -> valor .)
    ELSE            reduce using rule 45 (valores -> valor .)
    ELSEIF          reduce using rule 45 (valores -> valor .)
    END             reduce using rule 45 (valores -> valor .)
    COMA            shift and go to state 147
    IF              shift and go to state 149

    estructura_ifUnaLinea          shift and go to state 148

state 69

    (50) valor -> CADENA .

    COMA            reduce using rule 50 (valor -> CADENA .)
    IF              reduce using rule 50 (valor -> CADENA .)
    $end            reduce using rule 50 (valor -> CADENA .)
    WHEN            reduce using rule 50 (valor -> CADENA .)
    DO              reduce using rule 50 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 50 (valor -> CADENA .)
    ELSE            reduce using rule 50 (valor -> CADENA .)
    ELSEIF          reduce using rule 50 (valor -> CADENA .)
    END             reduce using rule 50 (valor -> CADENA .)


state 70

    (51) valor -> valorNumerico .

    COMA            reduce using rule 51 (valor -> valorNumerico .)
    IF              reduce using rule 51 (valor -> valorNumerico .)
    $end            reduce using rule 51 (valor -> valorNumerico .)
    WHEN            reduce using rule 51 (valor -> valorNumerico .)
    DO              reduce using rule 51 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 51 (valor -> valorNumerico .)
    ELSE            reduce using rule 51 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 51 (valor -> valorNumerico .)
    END             reduce using rule 51 (valor -> valorNumerico .)


state 71

    (52) valor -> VARIABLE .

    COMA            reduce using rule 52 (valor -> VARIABLE .)
    IF              reduce using rule 52 (valor -> VARIABLE .)
    $end            reduce using rule 52 (valor -> VARIABLE .)
    WHEN            reduce using rule 52 (valor -> VARIABLE .)
    DO              reduce using rule 52 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 52 (valor -> VARIABLE .)
    ELSE            reduce using rule 52 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 52 (valor -> VARIABLE .)
    END             reduce using rule 52 (valor -> VARIABLE .)


state 72

    (53) valor -> VARIABLECLASE .

    COMA            reduce using rule 53 (valor -> VARIABLECLASE .)
    IF              reduce using rule 53 (valor -> VARIABLECLASE .)
    $end            reduce using rule 53 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 53 (valor -> VARIABLECLASE .)
    DO              reduce using rule 53 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 53 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 53 (valor -> VARIABLECLASE .)
    END             reduce using rule 53 (valor -> VARIABLECLASE .)


state 73

    (54) valor -> SIMBOLO .

    COMA            reduce using rule 54 (valor -> SIMBOLO .)
    IF              reduce using rule 54 (valor -> SIMBOLO .)
    $end            reduce using rule 54 (valor -> SIMBOLO .)
    WHEN            reduce using rule 54 (valor -> SIMBOLO .)
    DO              reduce using rule 54 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> SIMBOLO .)
    ELSE            reduce using rule 54 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 54 (valor -> SIMBOLO .)
    END             reduce using rule 54 (valor -> SIMBOLO .)


state 74

    (84) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 150


state 75

    (41) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 75
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    operacionAritmetica            shift and go to state 76
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 79

state 76

    (41) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (40) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 151
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 77

    (81) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 152


state 78

    (31) soloEnteros -> ENTERO .
    (30) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 30 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 30 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 30 (valorNumerico -> ENTERO .)


state 79

    (39) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 39 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 39 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 39 (expresionNumerica -> valorNumerico .)


state 80

    (85) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 153


state 81

    (95) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (99) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 155
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 154

state 82

    (96) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 156


state 83

    (101) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (106) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 158

    funcionesFormatoImpresion      shift and go to state 157

state 84

    (137) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 159


state 85

    (138) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 138 (hashes -> LLAVE_IZ LLAVE_DER .)


state 86

    (143) elemento_hash -> claveValor .
    (144) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 143 (elemento_hash -> claveValor .)
    COMA            shift and go to state 160


state 87

    (139) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (140) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 161


state 88

    (141) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (142) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 162


state 89

    (114) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (115) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 163
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 90

    (112) condicionIf -> expresiones_booleanas .
    (113) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (93) funcionesComparacion -> . AND
    (94) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 112 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 165
    OR              shift and go to state 166

    funcionesComparacion           shift and go to state 164

state 91

    (95) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 81

state 92

    (97) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 59

state 93

    (81) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 167

    soloEnteros                    shift and go to state 77

state 94

    (102) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (103) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 168


state 95

    (75) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 169


state 96

    (76) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 76 (array -> CORCHETE_IZ CORCHETE_DER .)


state 97

    (68) elementos_array -> elemento_array . COMA elementos_array
    (69) elementos_array -> elemento_array .

    COMA            shift and go to state 170
    CORCHETE_DER    reduce using rule 69 (elementos_array -> elemento_array .)


state 98

    (70) elemento_array -> CADENA .

    COMA            reduce using rule 70 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 70 (elemento_array -> CADENA .)


state 99

    (71) elemento_array -> ENTERO .

    COMA            reduce using rule 71 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 71 (elemento_array -> ENTERO .)


state 100

    (72) elemento_array -> FLOTANTE .

    COMA            reduce using rule 72 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 72 (elemento_array -> FLOTANTE .)


state 101

    (73) elemento_array -> array .

    COMA            reduce using rule 73 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 73 (elemento_array -> array .)


state 102

    (74) elemento_array -> VARIABLE .

    COMA            reduce using rule 74 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 74 (elemento_array -> VARIABLE .)


state 103

    (130) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (131) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 171


state 104

    (132) sentencia_case -> CASE declaracion . sentencia_when END
    (135) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 49

    sentencia_when                 shift and go to state 172

state 105

    (119) declaracion -> operacionAritmetica .
    (40) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 119 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 119 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 119 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 119 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 119 (declaracion -> operacionAritmetica .)
    END             reduce using rule 119 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 119 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 106

    (120) declaracion -> asignacion .

    WHEN            reduce using rule 120 (declaracion -> asignacion .)
    DO              reduce using rule 120 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 120 (declaracion -> asignacion .)
    ELSE            reduce using rule 120 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 120 (declaracion -> asignacion .)
    END             reduce using rule 120 (declaracion -> asignacion .)
    $end            reduce using rule 120 (declaracion -> asignacion .)


state 107

    (121) declaracion -> impresion .

    WHEN            reduce using rule 121 (declaracion -> impresion .)
    DO              reduce using rule 121 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 121 (declaracion -> impresion .)
    ELSE            reduce using rule 121 (declaracion -> impresion .)
    ELSEIF          reduce using rule 121 (declaracion -> impresion .)
    END             reduce using rule 121 (declaracion -> impresion .)
    $end            reduce using rule 121 (declaracion -> impresion .)


state 108

    (122) declaracion -> impresion_vacia .

    WHEN            reduce using rule 122 (declaracion -> impresion_vacia .)
    DO              reduce using rule 122 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 122 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 122 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 122 (declaracion -> impresion_vacia .)
    END             reduce using rule 122 (declaracion -> impresion_vacia .)
    $end            reduce using rule 122 (declaracion -> impresion_vacia .)


state 109

    (123) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 123 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 123 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 123 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 123 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 123 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 123 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 123 (declaracion -> expresiones_booleanas .)


state 110

    (124) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 124 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 124 (declaracion -> solicitudDatosTeclado .)


state 111

    (125) declaracion -> hashes .

    WHEN            reduce using rule 125 (declaracion -> hashes .)
    DO              reduce using rule 125 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> hashes .)
    ELSE            reduce using rule 125 (declaracion -> hashes .)
    ELSEIF          reduce using rule 125 (declaracion -> hashes .)
    END             reduce using rule 125 (declaracion -> hashes .)
    $end            reduce using rule 125 (declaracion -> hashes .)


state 112

    (126) declaracion -> estructura_if .

    WHEN            reduce using rule 126 (declaracion -> estructura_if .)
    DO              reduce using rule 126 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> estructura_if .)
    ELSE            reduce using rule 126 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 126 (declaracion -> estructura_if .)
    END             reduce using rule 126 (declaracion -> estructura_if .)
    $end            reduce using rule 126 (declaracion -> estructura_if .)


state 113

    (127) declaracion -> asignacion_clase .

    WHEN            reduce using rule 127 (declaracion -> asignacion_clase .)
    DO              reduce using rule 127 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 127 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 127 (declaracion -> asignacion_clase .)
    END             reduce using rule 127 (declaracion -> asignacion_clase .)
    $end            reduce using rule 127 (declaracion -> asignacion_clase .)


state 114

    (128) declaracion -> sentencia_while .

    WHEN            reduce using rule 128 (declaracion -> sentencia_while .)
    DO              reduce using rule 128 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 128 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 128 (declaracion -> sentencia_while .)
    END             reduce using rule 128 (declaracion -> sentencia_while .)
    $end            reduce using rule 128 (declaracion -> sentencia_while .)


state 115

    (129) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 129 (declaracion -> estructura_ifUnaLinea .)


state 116

    (62) asignacion -> VARIABLE . IGUAL CADENA
    (63) asignacion -> VARIABLE . IGUAL expresionNumerica
    (64) asignacion -> VARIABLE . IGUAL hashes
    (65) asignacion -> VARIABLE . IGUAL array
    (66) asignacion -> VARIABLE . IGUAL input_concatenacion
    (67) asignacion -> VARIABLE . IGUAL booleanos
    (97) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (61) asignacion_clase -> VARIABLE . IGUAL booleanos
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 173
    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 59

state 117

    (114) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (116) estructura_ifUnaLinea -> IF . condicionIf
    (112) condicionIf -> . expresiones_booleanas
    (113) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    condicionIf                    shift and go to state 174
    expresiones_booleanas          shift and go to state 90
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 118

    (56) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (57) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (58) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (59) asignacion_clase -> VARIABLECLASE . IGUAL array
    (60) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 175


state 119

    (134) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 134 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 134 (sentencias_when -> sentencia_when sentencias_when .)


state 120

    (136) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 176


state 121

    (148) definicion_clase -> CLASS ID_CLASE . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 177


state 122

    (27) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 178

state 123

    (135) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 179


state 124

    (42) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 50

state 125

    (40) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 126

    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 127

    (26) valorCadena -> VARIABLE .

    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)
    $end            reduce using rule 26 (valorCadena -> VARIABLE .)
    END             reduce using rule 26 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 26 (valorCadena -> VARIABLE .)
    DO              reduce using rule 26 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 26 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 26 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 26 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 26 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 26 (valorCadena -> VARIABLE .)


state 128

    (24) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (26) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 180
    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)


state 129

    (62) asignacion -> VARIABLE IGUAL CADENA .
    (25) valorCadena -> CADENA .

    $end            reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 62 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 25 (valorCadena -> CADENA .)


state 130

    (63) asignacion -> VARIABLE IGUAL expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    $end            reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 63 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 131

    (64) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 64 (asignacion -> VARIABLE IGUAL hashes .)


state 132

    (65) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 65 (asignacion -> VARIABLE IGUAL array .)


state 133

    (66) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 66 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 134

    (67) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .)


state 135

    (48) booleanos -> TRUE .

    $end            reduce using rule 48 (booleanos -> TRUE .)
    END             reduce using rule 48 (booleanos -> TRUE .)
    WHEN            reduce using rule 48 (booleanos -> TRUE .)
    DO              reduce using rule 48 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 48 (booleanos -> TRUE .)
    ELSE            reduce using rule 48 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 48 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 48 (booleanos -> TRUE .)


state 136

    (49) booleanos -> FALSE .

    $end            reduce using rule 49 (booleanos -> FALSE .)
    END             reduce using rule 49 (booleanos -> FALSE .)
    WHEN            reduce using rule 49 (booleanos -> FALSE .)
    DO              reduce using rule 49 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 49 (booleanos -> FALSE .)
    ELSE            reduce using rule 49 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 49 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 49 (booleanos -> FALSE .)


state 137

    (97) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 97 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 138

    (98) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 98 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 139

    (108) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 108 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 108 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 140

    (109) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 109 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 109 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 141

    (77) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 181


state 142

    (145) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 182


state 143

    (32) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (107) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 107 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 107 (funcionesNumeros -> TO_F .) ]


state 144

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 183


state 145

    (104) funcionesArray -> SORT .

    $end            reduce using rule 104 (funcionesArray -> SORT .)
    END             reduce using rule 104 (funcionesArray -> SORT .)


state 146

    (105) funcionesArray -> FOR . EACH

    EACH            shift and go to state 184


state 147

    (46) valores -> valor COMA . valores
    (45) valores -> . valor
    (46) valores -> . valor COMA valores
    (47) valores -> . valor estructura_ifUnaLinea
    (50) valor -> . CADENA
    (51) valor -> . valorNumerico
    (52) valor -> . VARIABLE
    (53) valor -> . VARIABLECLASE
    (54) valor -> . SIMBOLO
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 69
    VARIABLE        shift and go to state 71
    VARIABLECLASE   shift and go to state 72
    SIMBOLO         shift and go to state 73
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valor                          shift and go to state 68
    valores                        shift and go to state 185
    valorNumerico                  shift and go to state 70

state 148

    (47) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)


state 149

    (116) estructura_ifUnaLinea -> IF . condicionIf
    (112) condicionIf -> . expresiones_booleanas
    (113) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    condicionIf                    shift and go to state 186
    expresiones_booleanas          shift and go to state 90
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 150

    (84) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 84 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 151

    (41) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 152

    (81) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 167

    soloEnteros                    shift and go to state 187

state 153

    (85) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 85 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 154

    (95) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 155

    (99) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 156

    (96) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 96 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 157

    (101) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 101 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 158

    (106) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 106 (funcionesFormatoImpresion -> CHOMP .)


state 159

    (137) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 137 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 160

    (144) elemento_hash -> claveValor COMA . claveValor
    (139) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (140) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (141) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (142) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 87
    CADENA          shift and go to state 88

    claveValor                     shift and go to state 188

state 161

    (139) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (140) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 190
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 189

state 162

    (141) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (142) claveValor -> CADENA ASIGNA_HASH . CADENA
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 191
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 192

state 163

    (114) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (115) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (117) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (118) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 193
    ELSEIF          shift and go to state 195

    estructura_secundaria_if       shift and go to state 194

state 164

    (113) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    expresiones_booleanas          shift and go to state 196
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 165

    (93) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 93 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 93 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 93 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 93 (funcionesComparacion -> AND .)


state 166

    (94) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 94 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 94 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 94 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 94 (funcionesComparacion -> OR .)


state 167

    (31) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 31 (soloEnteros -> ENTERO .)


state 168

    (102) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (103) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (110) argumentos -> . VARIABLE
    (111) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 198
    VARIABLE        shift and go to state 197

    argumentos                     shift and go to state 199

state 169

    (75) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 75 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 170

    (68) elementos_array -> elemento_array COMA . elementos_array
    (68) elementos_array -> . elemento_array COMA elementos_array
    (69) elementos_array -> . elemento_array
    (70) elemento_array -> . CADENA
    (71) elemento_array -> . ENTERO
    (72) elemento_array -> . FLOTANTE
    (73) elemento_array -> . array
    (74) elemento_array -> . VARIABLE
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 98
    ENTERO          shift and go to state 99
    FLOTANTE        shift and go to state 100
    VARIABLE        shift and go to state 102
    CORCHETE_IZ     shift and go to state 39

    elemento_array                 shift and go to state 97
    elementos_array                shift and go to state 200
    array                          shift and go to state 101

state 171

    (130) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (131) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 42
    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    expresiones_booleanas          shift and go to state 109
    sentencia_while                shift and go to state 201
    declaracion                    shift and go to state 202
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 172

    (132) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 203


state 173

    (62) asignacion -> VARIABLE IGUAL . CADENA
    (63) asignacion -> VARIABLE IGUAL . expresionNumerica
    (64) asignacion -> VARIABLE IGUAL . hashes
    (65) asignacion -> VARIABLE IGUAL . array
    (66) asignacion -> VARIABLE IGUAL . input_concatenacion
    (67) asignacion -> VARIABLE IGUAL . booleanos
    (61) asignacion_clase -> VARIABLE IGUAL . booleanos
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (48) booleanos -> . TRUE
    (49) booleanos -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    PARENTESIS_IZ   shift and go to state 75
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    TRUE            shift and go to state 135
    FALSE           shift and go to state 136
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 128

    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 132
    input_concatenacion            shift and go to state 133
    booleanos                      shift and go to state 204
    valorNumerico                  shift and go to state 79
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 47

state 174

    (114) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (115) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (116) estructura_ifUnaLinea -> IF condicionIf .
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHEN            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 163
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 175

    (56) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (57) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (58) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (59) asignacion_clase -> VARIABLECLASE IGUAL . array
    (60) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 205
    PARENTESIS_IZ   shift and go to state 75
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 128

    expresionNumerica              shift and go to state 206
    hashes                         shift and go to state 207
    array                          shift and go to state 208
    input_concatenacion            shift and go to state 209
    valorNumerico                  shift and go to state 79
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 47

state 176

    (136) sentencia_until -> UNTIL declaracion DO . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 210
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 177

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (149) cuerpoVariables -> . asignacion_clase
    (150) cuerpoVariables -> . asignacion
    (151) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (152) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 118
    VARIABLE        shift and go to state 214

    cuerpoVariables                shift and go to state 211
    asignacion_clase               shift and go to state 212
    asignacion                     shift and go to state 213

state 178

    (27) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 179

    (135) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 215
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 180

    (24) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 144


state 181

    (77) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 216


state 182

    (145) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 217


state 183

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 218

state 184

    (105) funcionesArray -> FOR EACH .

    $end            reduce using rule 105 (funcionesArray -> FOR EACH .)
    END             reduce using rule 105 (funcionesArray -> FOR EACH .)


state 185

    (46) valores -> valor COMA valores .

    $end            reduce using rule 46 (valores -> valor COMA valores .)
    WHEN            reduce using rule 46 (valores -> valor COMA valores .)
    DO              reduce using rule 46 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 46 (valores -> valor COMA valores .)
    ELSE            reduce using rule 46 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 46 (valores -> valor COMA valores .)
    END             reduce using rule 46 (valores -> valor COMA valores .)


state 186

    (116) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 116 (estructura_ifUnaLinea -> IF condicionIf .)


state 187

    (81) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 219


state 188

    (144) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 144 (elemento_hash -> claveValor COMA claveValor .)


state 189

    (139) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 139 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 139 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 190

    (140) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 140 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 140 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 191

    (142) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 142 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 142 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 192

    (141) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 141 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 141 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 193

    (114) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 220
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 194

    (115) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 115 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 195

    (117) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (118) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (112) condicionIf -> . expresiones_booleanas
    (113) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 92
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 93

    condicionIf                    shift and go to state 221
    expresiones_booleanas          shift and go to state 90
    valorNumerico                  shift and go to state 91
    rangos                         shift and go to state 33

state 196

    (113) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 113 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 197

    (110) argumentos -> VARIABLE .
    (111) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 110 (argumentos -> VARIABLE .)
    COMA            shift and go to state 222


state 198

    (102) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 223
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 199

    (103) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 224


state 200

    (68) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 68 (elementos_array -> elemento_array COMA elementos_array .)


state 201

    (130) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (128) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 225

  ! END             [ reduce using rule 128 (declaracion -> sentencia_while .) ]


state 202

    (131) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 226


state 203

    (132) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 132 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 132 (sentencia_case -> CASE declaracion sentencia_when END .)


state 204

    (67) asignacion -> VARIABLE IGUAL booleanos .
    (61) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for WHEN resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! WHEN            [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 205

    (56) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (25) valorCadena -> CADENA .

    WHEN            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 25 (valorCadena -> CADENA .)


state 206

    (57) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    WHEN            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 207

    (58) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 208

    (59) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 209

    (60) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 210

    (136) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 227


state 211

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 228


state 212

    (149) cuerpoVariables -> asignacion_clase .
    (151) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 149 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 229

  ! NEWLINE         [ reduce using rule 149 (cuerpoVariables -> asignacion_clase .) ]


state 213

    (150) cuerpoVariables -> asignacion .
    (152) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 150 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 230

  ! NEWLINE         [ reduce using rule 150 (cuerpoVariables -> asignacion .) ]


state 214

    (61) asignacion_clase -> VARIABLE . IGUAL booleanos
    (62) asignacion -> VARIABLE . IGUAL CADENA
    (63) asignacion -> VARIABLE . IGUAL expresionNumerica
    (64) asignacion -> VARIABLE . IGUAL hashes
    (65) asignacion -> VARIABLE . IGUAL array
    (66) asignacion -> VARIABLE . IGUAL input_concatenacion
    (67) asignacion -> VARIABLE . IGUAL booleanos

    IGUAL           shift and go to state 231


state 215

    (135) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 135 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 135 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 135 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 216

    (77) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 232


state 217

    (145) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (146) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (147) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 233

    each_args_hash                 shift and go to state 234

state 218

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 235


state 219

    (81) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 81 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 220

    (114) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 236


state 221

    (117) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (118) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 237
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 222

    (111) argumentos -> VARIABLE COMA . argumentos
    (110) argumentos -> . VARIABLE
    (111) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 197

    argumentos                     shift and go to state 238

state 223

    (102) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 239


state 224

    (103) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 240
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 225

    (130) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 130 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 226

    (131) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 131 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 227

    (136) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 136 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 136 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 228

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 241


state 229

    (151) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (149) cuerpoVariables -> . asignacion_clase
    (150) cuerpoVariables -> . asignacion
    (151) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (152) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 118
    VARIABLE        shift and go to state 214

    asignacion_clase               shift and go to state 212
    cuerpoVariables                shift and go to state 242
    asignacion                     shift and go to state 213

state 230

    (152) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (149) cuerpoVariables -> . asignacion_clase
    (150) cuerpoVariables -> . asignacion
    (151) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (152) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 118
    VARIABLE        shift and go to state 214

    asignacion                     shift and go to state 213
    cuerpoVariables                shift and go to state 243
    asignacion_clase               shift and go to state 212

state 231

    (61) asignacion_clase -> VARIABLE IGUAL . booleanos
    (62) asignacion -> VARIABLE IGUAL . CADENA
    (63) asignacion -> VARIABLE IGUAL . expresionNumerica
    (64) asignacion -> VARIABLE IGUAL . hashes
    (65) asignacion -> VARIABLE IGUAL . array
    (66) asignacion -> VARIABLE IGUAL . input_concatenacion
    (67) asignacion -> VARIABLE IGUAL . booleanos
    (48) booleanos -> . TRUE
    (49) booleanos -> . FALSE
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    TRUE            shift and go to state 135
    FALSE           shift and go to state 136
    PARENTESIS_IZ   shift and go to state 75
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 128

    booleanos                      shift and go to state 244
    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 132
    input_concatenacion            shift and go to state 133
    valorNumerico                  shift and go to state 79
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 47

state 232

    (77) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (78) cuerpo_each -> . cuerpo
    (79) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (80) vacio -> .
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (102) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (103) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (108) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (109) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (75) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (76) array -> . CORCHETE_IZ CORCHETE_DER
    (77) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (82) comentarios -> . COMENTARIO
    (83) comentarios -> . COMENTARIO_MULTI
    (145) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (132) sentencia_case -> . CASE declaracion sentencia_when END
    (133) sentencias_when -> . sentencia_when
    (134) sentencias_when -> . sentencia_when sentencias_when
    (136) sentencia_until -> . UNTIL declaracion DO declaracion END
    (148) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (32) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (135) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    END             reduce using rule 80 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 37
    DEF             shift and go to state 38
    CORCHETE_IZ     shift and go to state 39
    COMENTARIO      shift and go to state 40
    COMENTARIO_MULTI shift and go to state 41
    WHILE           shift and go to state 42
    CASE            shift and go to state 43
    UNTIL           shift and go to state 45
    CLASS           shift and go to state 46
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34
    WHEN            shift and go to state 49
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 245
    cuerpo                         shift and go to state 246
    vacio                          shift and go to state 247
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33
    sentencia_when                 shift and go to state 44
    valorCadena                    shift and go to state 47

state 233

    (146) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (147) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 248
    BARRA           shift and go to state 249


state 234

    (145) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 250
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 235

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 236

    (114) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 114 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 237

    (117) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (118) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (117) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (118) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 251
    ELSEIF          shift and go to state 195

    estructura_secundaria_if       shift and go to state 252

state 238

    (111) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 111 (argumentos -> VARIABLE COMA argumentos .)


state 239

    (102) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 102 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 102 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 240

    (103) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 253


state 241

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 254


state 242

    (151) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 151 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 151 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 243

    (152) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 152 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 152 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 244

    (61) asignacion_clase -> VARIABLE IGUAL booleanos .
    (67) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for NEWLINE resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    NEWLINE         reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! NEWLINE         [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 67 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 245

    (77) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 255


state 246

    (78) cuerpo_each -> cuerpo .

    END             reduce using rule 78 (cuerpo_each -> cuerpo .)


state 247

    (79) cuerpo_each -> vacio .

    END             reduce using rule 79 (cuerpo_each -> vacio .)


state 248

    (146) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 256


state 249

    (147) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 147 (each_args_hash -> VARIABLE BARRA .)


state 250

    (145) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 257


state 251

    (117) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 116
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    VARIABLECLASE   shift and go to state 118
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 258
    operacionAritmetica            shift and go to state 105
    asignacion                     shift and go to state 106
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    asignacion_clase               shift and go to state 113
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 252

    (118) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 118 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 253

    (103) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 103 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 103 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 254

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 259


state 255

    (77) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 77 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 77 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 256

    (146) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 260


state 257

    (145) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 145 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 145 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 258

    (117) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 261


state 259

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (110) argumentos -> . VARIABLE
    (111) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 197

    argumentos                     shift and go to state 262

state 260

    (146) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 146 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 261

    (117) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 117 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 262

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 263


state 263

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (153) cuerpoClase -> . cuerpoVariables
    (154) cuerpoClase -> . declaracion
    (155) cuerpoClase -> . funciones
    (149) cuerpoVariables -> . asignacion_clase
    (150) cuerpoVariables -> . asignacion
    (151) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (152) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (119) declaracion -> . operacionAritmetica
    (120) declaracion -> . asignacion
    (121) declaracion -> . impresion
    (122) declaracion -> . impresion_vacia
    (123) declaracion -> . expresiones_booleanas
    (124) declaracion -> . solicitudDatosTeclado
    (125) declaracion -> . hashes
    (126) declaracion -> . estructura_if
    (127) declaracion -> . asignacion_clase
    (128) declaracion -> . sentencia_while
    (129) declaracion -> . estructura_ifUnaLinea
    (102) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (103) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (56) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (57) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (58) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (59) asignacion_clase -> . VARIABLECLASE IGUAL array
    (60) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (61) asignacion_clase -> . VARIABLE IGUAL booleanos
    (62) asignacion -> . VARIABLE IGUAL CADENA
    (63) asignacion -> . VARIABLE IGUAL expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL hashes
    (65) asignacion -> . VARIABLE IGUAL array
    (66) asignacion -> . VARIABLE IGUAL input_concatenacion
    (67) asignacion -> . VARIABLE IGUAL booleanos
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (55) impresion -> . valor_print valores
    (84) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (85) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (96) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (97) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (100) solicitudDatosTeclado -> . GETS
    (101) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (137) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (138) hashes -> . LLAVE_IZ LLAVE_DER
    (114) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (115) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (130) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (131) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (116) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (81) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 38
    VARIABLECLASE   shift and go to state 118
    VARIABLE        shift and go to state 270
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 117
    WHILE           shift and go to state 42
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 48
    ENTERO          shift and go to state 34

    cuerpoVariables                shift and go to state 264
    cuerpoClase                    shift and go to state 265
    declaracion                    shift and go to state 266
    funciones                      shift and go to state 267
    asignacion_clase               shift and go to state 268
    asignacion                     shift and go to state 269
    operacionAritmetica            shift and go to state 105
    impresion                      shift and go to state 107
    impresion_vacia                shift and go to state 108
    expresiones_booleanas          shift and go to state 109
    solicitudDatosTeclado          shift and go to state 110
    hashes                         shift and go to state 111
    estructura_if                  shift and go to state 112
    sentencia_while                shift and go to state 114
    estructura_ifUnaLinea          shift and go to state 115
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 264

    (153) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 153 (cuerpoClase -> cuerpoVariables .)


state 265

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 271


state 266

    (154) cuerpoClase -> declaracion .

    END             reduce using rule 154 (cuerpoClase -> declaracion .)


state 267

    (155) cuerpoClase -> funciones .

    END             reduce using rule 155 (cuerpoClase -> funciones .)


state 268

    (149) cuerpoVariables -> asignacion_clase .
    (151) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (127) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 127 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 229
    END             reduce using rule 127 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 149 (cuerpoVariables -> asignacion_clase .) ]


state 269

    (150) cuerpoVariables -> asignacion .
    (152) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (120) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 120 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 230
    END             reduce using rule 120 (declaracion -> asignacion .)

  ! END             [ reduce using rule 150 (cuerpoVariables -> asignacion .) ]


state 270

    (61) asignacion_clase -> VARIABLE . IGUAL booleanos
    (62) asignacion -> VARIABLE . IGUAL CADENA
    (63) asignacion -> VARIABLE . IGUAL expresionNumerica
    (64) asignacion -> VARIABLE . IGUAL hashes
    (65) asignacion -> VARIABLE . IGUAL array
    (66) asignacion -> VARIABLE . IGUAL input_concatenacion
    (67) asignacion -> VARIABLE . IGUAL booleanos
    (97) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (98) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (87) operadoresComparacion -> . DOBLE_IGUAL
    (88) operadoresComparacion -> . DIFERENTE
    (89) operadoresComparacion -> . MAYOR_QUE
    (90) operadoresComparacion -> . MENOR_QUE
    (91) operadoresComparacion -> . MENOR_IGUAL_QUE
    (92) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 231
    DOBLE_IGUAL     shift and go to state 61
    DIFERENTE       shift and go to state 62
    MAYOR_QUE       shift and go to state 63
    MENOR_QUE       shift and go to state 64
    MENOR_IGUAL_QUE shift and go to state 65
    MAYOR_IGUAL_QUE shift and go to state 66

    operadoresComparacion          shift and go to state 59

state 271

    (148) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 148 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 148 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 124 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 124 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 124 resolved as shift
WARNING: shift/reduce conflict for END in state 201 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 212 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 213 resolved as shift
WARNING: reduce/reduce conflict in state 143 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 143
WARNING: reduce/reduce conflict in state 204 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 204
WARNING: reduce/reduce conflict in state 244 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 244
WARNING: reduce/reduce conflict in state 268 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 268
WARNING: reduce/reduce conflict in state 269 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 269
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
