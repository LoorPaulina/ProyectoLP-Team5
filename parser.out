Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    CONCAT
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SIMBOLO
    SUPER
    TRUE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> concatenacionSimpleCadena
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    valorCadena -> CADENA
Rule 22    valorCadena -> VARIABLE
Rule 23    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 24    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 25    valorNumerico -> FLOTANTE
Rule 26    valorNumerico -> ENTERO
Rule 27    valorNumerico -> VARIABLE
Rule 28    soloEnteros -> ENTERO
Rule 29    operadores -> MAS
Rule 30    operadores -> MENOS
Rule 31    operadores -> DIVISION
Rule 32    operadores -> MULTIPLICACION
Rule 33    operadores -> EXPONENCIACION
Rule 34    operadores -> MODULO
Rule 35    expresionNumerica -> valorNumerico
Rule 36    expresionNumerica -> operacionAritmetica
Rule 37    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 38    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 39    valor_print -> PRINT
Rule 40    valor_print -> PUTS
Rule 41    valores -> valor
Rule 42    valores -> valor COMA valores
Rule 43    valores -> valor estructura_ifUnaLinea
Rule 44    valor -> CADENA
Rule 45    valor -> valorNumerico
Rule 46    valor -> VARIABLE
Rule 47    valor -> VARIABLECLASE
Rule 48    impresion -> valor_print valores
Rule 49    asignacion -> VARIABLE IGUAL CADENA
Rule 50    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 51    asignacion -> VARIABLE IGUAL hashes
Rule 52    asignacion -> VARIABLE IGUAL array
Rule 53    elementos_array -> elemento_array COMA elementos_array
Rule 54    elementos_array -> elemento_array
Rule 55    elemento_array -> CADENA
Rule 56    elemento_array -> ENTERO
Rule 57    elemento_array -> FLOTANTE
Rule 58    elemento_array -> array
Rule 59    elemento_array -> VARIABLE
Rule 60    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 61    array -> CORCHETE_IZ CORCHETE_DER
Rule 62    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 63    cuerpo_each -> cuerpo
Rule 64    cuerpo_each -> vacio
Rule 65    vacio -> <empty>
Rule 66    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 67    comentarios -> COMENTARIO
Rule 68    comentarios -> COMENTARIO_MULTI
Rule 69    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 70    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 71    impresion_vacia -> PUTS
Rule 72    operadoresComparacion -> DOBLE_IGUAL
Rule 73    operadoresComparacion -> DIFERENTE
Rule 74    operadoresComparacion -> MAYOR_QUE
Rule 75    operadoresComparacion -> MENOR_QUE
Rule 76    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 77    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 78    funcionesComparacion -> AND
Rule 79    funcionesComparacion -> OR
Rule 80    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 81    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 82    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 83    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 84    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 85    solicitudDatosTeclado -> GETS
Rule 86    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 87    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
Rule 88    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
Rule 89    funcionesArray -> SORT
Rule 90    funcionesArray -> FOR EACH
Rule 91    funcionesFormatoImpresion -> CHOMP
Rule 92    funcionesNumeros -> TO_F
Rule 93    funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 94    funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 95    argumentos -> VARIABLE
Rule 96    argumentos -> VARIABLE COMA argumentos
Rule 97    condicionIf -> expresiones_booleanas
Rule 98    condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 99    estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 100   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 101   estructura_ifUnaLinea -> IF condicionIf
Rule 102   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 103   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 104   declaracion -> operacionAritmetica
Rule 105   declaracion -> asignacion
Rule 106   declaracion -> impresion
Rule 107   declaracion -> impresion_vacia
Rule 108   declaracion -> expresiones_booleanas
Rule 109   declaracion -> solicitudDatosTeclado
Rule 110   declaracion -> hashes
Rule 111   declaracion -> estructura_if
Rule 112   sentencia_while -> WHILE declaracion DO sentencia_while END
Rule 113   sentencia_while -> WHILE declaracion DO declaracion END
Rule 114   sentencia_case -> CASE declaracion sentencia_when END
Rule 115   sentencias_when -> sentencia_when
Rule 116   sentencias_when -> sentencia_when sentencias_when
Rule 117   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 118   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 119   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 120   hashes -> LLAVE_IZ LLAVE_DER
Rule 121   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 122   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 123   elemento_hash -> claveValor
Rule 124   elemento_hash -> claveValor COMA claveValor
Rule 125   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 126   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 127   each_args_hash -> VARIABLE BARRA
Rule 128   definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 78
ASIGNA_HASH          : 121 122
BARRA                : 62 62 125 126 127
BEGIN                : 
BREAK                : 
CADENA               : 21 44 49 55 122
CASE                 : 114
CHOMP                : 91
CLASS                : 128
COMA                 : 42 53 96 124 126
COMENTARIO           : 67
COMENTARIO_MULTI     : 68
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 
CORCHETE_DER         : 60 61
CORCHETE_IZ          : 60 61
DEF                  : 87 88 128
DEFINED_QUESTION     : 
DIFERENTE            : 73
DIVISION             : 31
DO                   : 62 112 113 118 125
DOBLE_IGUAL          : 72
EACH                 : 90 125
ELSE                 : 99 102
ELSEIF               : 102 103
END                  : 62 87 88 99 102 112 113 114 118 125
ENSURE               : 
ENTERO               : 26 28 56 81
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 33
FALSE                : 
FLOTANTE             : 25 57
FOR                  : 90
GETS                 : 85 86
ID_CLASE             : 128
IF                   : 99 100 101
IGUAL                : 49 50 51 52
IGUAL_DOBLEP         : 117
IN                   : 
INITIALIZE           : 128
LLAVE_DER            : 119 120
LLAVE_IZ             : 119 120
MAS                  : 23 24 29
MAYOR_IGUAL_QUE      : 77
MAYOR_QUE            : 74
MENOR_IGUAL_QUE      : 76
MENOR_QUE            : 75
MENOS                : 30
MODULE               : 
MODULO               : 34
MULTIPLICACION       : 32
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 79
O_SIGNO              : 
PARENTESIS_DER       : 37 66 69 70 87 88 128
PARENTESIS_IZ        : 37 66 69 70 87 88 128
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 39 69
PRINTF               : 
PUNTO                : 62 86 93 94 125
PUTS                 : 40 70 71
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 
SORT                 : 89
SUPER                : 
TO_F                 : 92
TRES_PUNTOS          : 66
TRIPLE_IGUAL         : 81
TRUE                 : 
UNTIL                : 118
VARIABLE             : 22 27 46 49 50 51 52 59 62 62 82 82 83 84 87 88 93 94 95 96 121 122 125 126 126 127
VARIABLECLASE        : 47
WHEN                 : 117
WHILE                : 112 113
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 88 96 128
array                : 12 52 58
asignacion           : 3 105
claveValor           : 123 124 124
comentarios          : 14
concatenacionSimpleCadena : 2 24
condicionIf          : 99 100 101 102 103
cuerpo               : 63 0
cuerpo_each          : 62
declaracion          : 99 99 100 102 102 103 112 113 113 114 117 117 118 118 125
definicion_clase     : 20
each_args_hash       : 125
each_array           : 13
each_hash            : 15
elemento_array       : 53 54
elemento_hash        : 119
elementos_array      : 53 60
estructura_if        : 9 111
estructura_ifUnaLinea : 43
estructura_secundaria_if : 100 103
expresionNumerica    : 38 38 50
expresiones_booleanas : 6 97 98 98 108
funciones            : 10
funcionesArray       : 93
funcionesComparacion : 98
funcionesEstructuras : 11
funcionesFormatoImpresion : 86
funcionesNumeros     : 94
hashes               : 8 51 110
impresion            : 4 106
impresion_vacia      : 5 107
operacionAritmetica  : 1 36 37 104
operadores           : 38
operadoresComparacion : 80 82 83 84
rangos               : 81
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 114 115 116
sentencia_while      : 16 112
sentencias_when      : 18 116
solicitudDatosTeclado : 7 109
soloEnteros          : 66 66
vacio                : 64
valor                : 41 42 43
valorCadena          : 23 23 24
valorNumerico        : 35 45 80 80 83 84 121
valor_print          : 48
valores              : 42 48

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . concatenacionSimpleCadena
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (23) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (24) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (87) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (88) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (93) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (94) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (60) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (61) array -> . CORCHETE_IZ CORCHETE_DER
    (62) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (67) comentarios -> . COMENTARIO
    (68) comentarios -> . COMENTARIO_MULTI
    (125) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (112) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (113) sentencia_while -> . WHILE declaracion DO declaracion END
    (114) sentencia_case -> . CASE declaracion sentencia_when END
    (115) sentencias_when -> . sentencia_when
    (116) sentencias_when -> . sentencia_when sentencias_when
    (118) sentencia_until -> . UNTIL declaracion DO declaracion END
    (128) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (21) valorCadena -> . CADENA
    (22) valorCadena -> . VARIABLE
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (117) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    VARIABLE        shift and go to state 24
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    DEF             shift and go to state 36
    CORCHETE_IZ     shift and go to state 37
    COMENTARIO      shift and go to state 38
    COMENTARIO_MULTI shift and go to state 39
    WHILE           shift and go to state 40
    CASE            shift and go to state 41
    UNTIL           shift and go to state 43
    CLASS           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 28
    CADENA          shift and go to state 25
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    WHEN            shift and go to state 46

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    concatenacionSimpleCadena      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    valorCadena                    shift and go to state 23
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31
    sentencia_when                 shift and go to state 42

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (36) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 36 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> concatenacionSimpleCadena .
    (24) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 2 (cuerpo -> concatenacionSimpleCadena .)
    END             reduce using rule 2 (cuerpo -> concatenacionSimpleCadena .)
    MAS             shift and go to state 47


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (38) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (29) operadores -> . MAS
    (30) operadores -> . MENOS
    (31) operadores -> . DIVISION
    (32) operadores -> . MULTIPLICACION
    (33) operadores -> . EXPONENCIACION
    (34) operadores -> . MODULO

    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    DIVISION        shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    EXPONENCIACION  shift and go to state 53
    MODULO          shift and go to state 54

    operadores                     shift and go to state 48

state 23

    (23) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 55


state 24

    (49) asignacion -> VARIABLE . IGUAL CADENA
    (50) asignacion -> VARIABLE . IGUAL expresionNumerica
    (51) asignacion -> VARIABLE . IGUAL hashes
    (52) asignacion -> VARIABLE . IGUAL array
    (82) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (93) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (94) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (62) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (125) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (22) valorCadena -> VARIABLE .
    (27) valorNumerico -> VARIABLE .
    (72) operadoresComparacion -> . DOBLE_IGUAL
    (73) operadoresComparacion -> . DIFERENTE
    (74) operadoresComparacion -> . MAYOR_QUE
    (75) operadoresComparacion -> . MENOR_QUE
    (76) operadoresComparacion -> . MENOR_IGUAL_QUE
    (77) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 22 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 56
    PUNTO           shift and go to state 58
    MAS             reduce using rule 22 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 27 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 27 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 27 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    MENOR_QUE       shift and go to state 62
    MENOR_IGUAL_QUE shift and go to state 63
    MAYOR_IGUAL_QUE shift and go to state 64

  ! DOBLE_IGUAL     [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAS             [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 57

state 25

    (21) valorCadena -> CADENA .

    MAS             reduce using rule 21 (valorCadena -> CADENA .)
    $end            reduce using rule 21 (valorCadena -> CADENA .)
    END             reduce using rule 21 (valorCadena -> CADENA .)


state 26

    (48) impresion -> valor_print . valores
    (41) valores -> . valor
    (42) valores -> . valor COMA valores
    (43) valores -> . valor estructura_ifUnaLinea
    (44) valor -> . CADENA
    (45) valor -> . valorNumerico
    (46) valor -> . VARIABLE
    (47) valor -> . VARIABLECLASE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 67
    VARIABLE        shift and go to state 69
    VARIABLECLASE   shift and go to state 70
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    valores                        shift and go to state 65
    valor                          shift and go to state 66
    valorNumerico                  shift and go to state 68

state 27

    (69) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (39) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 71
    CADENA          reduce using rule 39 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 39 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 39 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 39 (valor_print -> PRINT .)
    ENTERO          reduce using rule 39 (valor_print -> PRINT .)


state 28

    (37) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (66) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) soloEnteros -> . ENTERO
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    ENTERO          shift and go to state 75
    PARENTESIS_IZ   shift and go to state 72
    FLOTANTE        shift and go to state 45
    VARIABLE        shift and go to state 77

    operacionAritmetica            shift and go to state 73
    soloEnteros                    shift and go to state 74
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 76

state 29

    (70) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> PUTS .
    (40) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 78
    $end            reduce using rule 71 (impresion_vacia -> PUTS .)
    DO              reduce using rule 71 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 71 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 71 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 71 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 71 (impresion_vacia -> PUTS .)
    END             reduce using rule 71 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 40 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 40 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 40 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 40 (valor_print -> PUTS .)
    ENTERO          reduce using rule 40 (valor_print -> PUTS .)


state 30

    (80) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (35) expresionNumerica -> valorNumerico .
    (72) operadoresComparacion -> . DOBLE_IGUAL
    (73) operadoresComparacion -> . DIFERENTE
    (74) operadoresComparacion -> . MAYOR_QUE
    (75) operadoresComparacion -> . MENOR_QUE
    (76) operadoresComparacion -> . MENOR_IGUAL_QUE
    (77) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 35 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 35 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 35 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    MENOR_QUE       shift and go to state 62
    MENOR_IGUAL_QUE shift and go to state 63
    MAYOR_IGUAL_QUE shift and go to state 64

    operadoresComparacion          shift and go to state 79

state 31

    (81) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 80


state 32

    (26) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 26 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 26 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 26 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 26 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 26 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 26 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 26 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 26 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 26 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 26 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 26 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 26 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 26 (valorNumerico -> ENTERO .)
    IF              reduce using rule 26 (valorNumerico -> ENTERO .)
    $end            reduce using rule 26 (valorNumerico -> ENTERO .)
    DO              reduce using rule 26 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 26 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 26 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 26 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 26 (valorNumerico -> ENTERO .)
    END             reduce using rule 26 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 26 (valorNumerico -> ENTERO .)
    AND             reduce using rule 26 (valorNumerico -> ENTERO .)
    OR              reduce using rule 26 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 26 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 26 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 26 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 26 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 26 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 26 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 26 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 26 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 26 (valorNumerico -> ENTERO .)


state 33

    (85) solicitudDatosTeclado -> GETS .
    (86) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 85 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 81


state 34

    (119) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (120) hashes -> LLAVE_IZ . LLAVE_DER
    (123) elemento_hash -> . claveValor
    (124) elemento_hash -> . claveValor COMA claveValor
    (121) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (122) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 83
    VARIABLE        shift and go to state 85

    elemento_hash                  shift and go to state 82
    claveValor                     shift and go to state 84

state 35

    (99) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (97) condicionIf -> . expresiones_booleanas
    (98) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 89
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    PARENTESIS_IZ   shift and go to state 90

    condicionIf                    shift and go to state 86
    expresiones_booleanas          shift and go to state 87
    valorNumerico                  shift and go to state 88
    rangos                         shift and go to state 31

state 36

    (87) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (88) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END

    VARIABLE        shift and go to state 91


state 37

    (60) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (61) array -> CORCHETE_IZ . CORCHETE_DER
    (53) elementos_array -> . elemento_array COMA elementos_array
    (54) elementos_array -> . elemento_array
    (55) elemento_array -> . CADENA
    (56) elemento_array -> . ENTERO
    (57) elemento_array -> . FLOTANTE
    (58) elemento_array -> . array
    (59) elemento_array -> . VARIABLE
    (60) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (61) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 93
    CADENA          shift and go to state 95
    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    VARIABLE        shift and go to state 99
    CORCHETE_IZ     shift and go to state 37

    elementos_array                shift and go to state 92
    elemento_array                 shift and go to state 94
    array                          shift and go to state 98

state 38

    (67) comentarios -> COMENTARIO .

    $end            reduce using rule 67 (comentarios -> COMENTARIO .)
    END             reduce using rule 67 (comentarios -> COMENTARIO .)


state 39

    (68) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 68 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 68 (comentarios -> COMENTARIO_MULTI .)


state 40

    (112) sentencia_while -> WHILE . declaracion DO sentencia_while END
    (113) sentencia_while -> WHILE . declaracion DO declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 100
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 41

    (114) sentencia_case -> CASE . declaracion sentencia_when END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 110
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 42

    (115) sentencias_when -> sentencia_when .
    (116) sentencias_when -> sentencia_when . sentencias_when
    (115) sentencias_when -> . sentencia_when
    (116) sentencias_when -> . sentencia_when sentencias_when
    (117) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 115 (sentencias_when -> sentencia_when .)
    END             reduce using rule 115 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 46

    sentencia_when                 shift and go to state 42
    sentencias_when                shift and go to state 111

state 43

    (118) sentencia_until -> UNTIL . declaracion DO declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 44

    (128) definicion_clase -> CLASS . ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    ID_CLASE        shift and go to state 113


state 45

    (25) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 25 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 25 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 25 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 25 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 25 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 25 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 25 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 25 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 25 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 25 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 25 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 25 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 25 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 25 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 25 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 25 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 25 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 25 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 25 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 25 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 25 (valorNumerico -> FLOTANTE .)


state 46

    (117) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 114
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 47

    (24) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (21) valorCadena -> . CADENA
    (22) valorCadena -> . VARIABLE

    CADENA          shift and go to state 25
    VARIABLE        shift and go to state 116

    valorCadena                    shift and go to state 115

state 48

    (38) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 72
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    VARIABLE        shift and go to state 77

    expresionNumerica              shift and go to state 117
    valorNumerico                  shift and go to state 76
    operacionAritmetica            shift and go to state 118

state 49

    (29) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 29 (operadores -> MAS .)
    FLOTANTE        reduce using rule 29 (operadores -> MAS .)
    ENTERO          reduce using rule 29 (operadores -> MAS .)
    VARIABLE        reduce using rule 29 (operadores -> MAS .)


state 50

    (30) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 30 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 30 (operadores -> MENOS .)
    ENTERO          reduce using rule 30 (operadores -> MENOS .)
    VARIABLE        reduce using rule 30 (operadores -> MENOS .)


state 51

    (31) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 31 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 31 (operadores -> DIVISION .)
    ENTERO          reduce using rule 31 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 31 (operadores -> DIVISION .)


state 52

    (32) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 32 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 32 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 32 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 32 (operadores -> MULTIPLICACION .)


state 53

    (33) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 33 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 33 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 33 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 33 (operadores -> EXPONENCIACION .)


state 54

    (34) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 34 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 34 (operadores -> MODULO .)
    ENTERO          reduce using rule 34 (operadores -> MODULO .)
    VARIABLE        reduce using rule 34 (operadores -> MODULO .)


state 55

    (23) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (21) valorCadena -> . CADENA
    (22) valorCadena -> . VARIABLE

    CADENA          shift and go to state 25
    VARIABLE        shift and go to state 116

    valorCadena                    shift and go to state 119

state 56

    (49) asignacion -> VARIABLE IGUAL . CADENA
    (50) asignacion -> VARIABLE IGUAL . expresionNumerica
    (51) asignacion -> VARIABLE IGUAL . hashes
    (52) asignacion -> VARIABLE IGUAL . array
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (60) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (61) array -> . CORCHETE_IZ CORCHETE_DER
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    CADENA          shift and go to state 120
    PARENTESIS_IZ   shift and go to state 72
    LLAVE_IZ        shift and go to state 34
    CORCHETE_IZ     shift and go to state 37
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    VARIABLE        shift and go to state 77

    expresionNumerica              shift and go to state 121
    hashes                         shift and go to state 122
    array                          shift and go to state 123
    valorNumerico                  shift and go to state 76
    operacionAritmetica            shift and go to state 118

state 57

    (82) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (83) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 124
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    valorNumerico                  shift and go to state 125

state 58

    (93) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (94) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (62) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (125) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (89) funcionesArray -> . SORT
    (90) funcionesArray -> . FOR EACH
    (92) funcionesNumeros -> . TO_F

    DO              shift and go to state 128
    EACH            shift and go to state 129
    SORT            shift and go to state 130
    FOR             shift and go to state 131
    TO_F            shift and go to state 132

    funcionesArray                 shift and go to state 126
    funcionesNumeros               shift and go to state 127

state 59

    (72) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 72 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 72 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 72 (operadoresComparacion -> DOBLE_IGUAL .)


state 60

    (73) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 73 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 73 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 73 (operadoresComparacion -> DIFERENTE .)


state 61

    (74) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 74 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 74 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 74 (operadoresComparacion -> MAYOR_QUE .)


state 62

    (75) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 75 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 75 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 75 (operadoresComparacion -> MENOR_QUE .)


state 63

    (76) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 76 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 76 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 76 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 64

    (77) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 77 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 77 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 77 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 65

    (48) impresion -> valor_print valores .

    $end            reduce using rule 48 (impresion -> valor_print valores .)
    DO              reduce using rule 48 (impresion -> valor_print valores .)
    WHEN            reduce using rule 48 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 48 (impresion -> valor_print valores .)
    ELSE            reduce using rule 48 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 48 (impresion -> valor_print valores .)
    END             reduce using rule 48 (impresion -> valor_print valores .)


state 66

    (41) valores -> valor .
    (42) valores -> valor . COMA valores
    (43) valores -> valor . estructura_ifUnaLinea
    (101) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 41 (valores -> valor .)
    DO              reduce using rule 41 (valores -> valor .)
    WHEN            reduce using rule 41 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 41 (valores -> valor .)
    ELSE            reduce using rule 41 (valores -> valor .)
    ELSEIF          reduce using rule 41 (valores -> valor .)
    END             reduce using rule 41 (valores -> valor .)
    COMA            shift and go to state 133
    IF              shift and go to state 135

    estructura_ifUnaLinea          shift and go to state 134

state 67

    (44) valor -> CADENA .

    COMA            reduce using rule 44 (valor -> CADENA .)
    IF              reduce using rule 44 (valor -> CADENA .)
    $end            reduce using rule 44 (valor -> CADENA .)
    DO              reduce using rule 44 (valor -> CADENA .)
    WHEN            reduce using rule 44 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 44 (valor -> CADENA .)
    ELSE            reduce using rule 44 (valor -> CADENA .)
    ELSEIF          reduce using rule 44 (valor -> CADENA .)
    END             reduce using rule 44 (valor -> CADENA .)


state 68

    (45) valor -> valorNumerico .

    COMA            reduce using rule 45 (valor -> valorNumerico .)
    IF              reduce using rule 45 (valor -> valorNumerico .)
    $end            reduce using rule 45 (valor -> valorNumerico .)
    DO              reduce using rule 45 (valor -> valorNumerico .)
    WHEN            reduce using rule 45 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 45 (valor -> valorNumerico .)
    ELSE            reduce using rule 45 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 45 (valor -> valorNumerico .)
    END             reduce using rule 45 (valor -> valorNumerico .)


state 69

    (46) valor -> VARIABLE .
    (27) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for COMA resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 27 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 27 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 27 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 27 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 27 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 27 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorNumerico -> VARIABLE .)
    END             reduce using rule 27 (valorNumerico -> VARIABLE .)

  ! COMA            [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! IF              [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! DO              [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! WHEN            [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 46 (valor -> VARIABLE .) ]
  ! END             [ reduce using rule 46 (valor -> VARIABLE .) ]


state 70

    (47) valor -> VARIABLECLASE .

    COMA            reduce using rule 47 (valor -> VARIABLECLASE .)
    IF              reduce using rule 47 (valor -> VARIABLECLASE .)
    $end            reduce using rule 47 (valor -> VARIABLECLASE .)
    DO              reduce using rule 47 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 47 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 47 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 47 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 47 (valor -> VARIABLECLASE .)
    END             reduce using rule 47 (valor -> VARIABLECLASE .)


state 71

    (69) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 136


state 72

    (37) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    PARENTESIS_IZ   shift and go to state 72
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    VARIABLE        shift and go to state 77

    operacionAritmetica            shift and go to state 73
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 76

state 73

    (37) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (36) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 137
    MAS             reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 36 (expresionNumerica -> operacionAritmetica .)


state 74

    (66) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 138


state 75

    (28) soloEnteros -> ENTERO .
    (26) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 28 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 26 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 26 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 26 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 26 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 26 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 26 (valorNumerico -> ENTERO .)


state 76

    (35) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 35 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 35 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 35 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 35 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 35 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 35 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 35 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 35 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 35 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 35 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 35 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 35 (expresionNumerica -> valorNumerico .)


state 77

    (27) valorNumerico -> VARIABLE .

    MAS             reduce using rule 27 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 27 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 27 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 27 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 27 (valorNumerico -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 27 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 27 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 27 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorNumerico -> VARIABLE .)
    END             reduce using rule 27 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 27 (valorNumerico -> VARIABLE .)
    LLAVE_DER       reduce using rule 27 (valorNumerico -> VARIABLE .)


state 78

    (70) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 139


state 79

    (80) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (84) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 141
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    valorNumerico                  shift and go to state 140

state 80

    (81) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 142


state 81

    (86) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (91) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 144

    funcionesFormatoImpresion      shift and go to state 143

state 82

    (119) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 145


state 83

    (120) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 120 (hashes -> LLAVE_IZ LLAVE_DER .)


state 84

    (123) elemento_hash -> claveValor .
    (124) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 123 (elemento_hash -> claveValor .)
    COMA            shift and go to state 146


state 85

    (121) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (122) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 147


state 86

    (99) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (100) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 148
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 87

    (97) condicionIf -> expresiones_booleanas .
    (98) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (78) funcionesComparacion -> . AND
    (79) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 97 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 150
    OR              shift and go to state 151

    funcionesComparacion           shift and go to state 149

state 88

    (80) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (72) operadoresComparacion -> . DOBLE_IGUAL
    (73) operadoresComparacion -> . DIFERENTE
    (74) operadoresComparacion -> . MAYOR_QUE
    (75) operadoresComparacion -> . MENOR_QUE
    (76) operadoresComparacion -> . MENOR_IGUAL_QUE
    (77) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    MENOR_QUE       shift and go to state 62
    MENOR_IGUAL_QUE shift and go to state 63
    MAYOR_IGUAL_QUE shift and go to state 64

    operadoresComparacion          shift and go to state 79

state 89

    (82) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (27) valorNumerico -> VARIABLE .
    (72) operadoresComparacion -> . DOBLE_IGUAL
    (73) operadoresComparacion -> . DIFERENTE
    (74) operadoresComparacion -> . MAYOR_QUE
    (75) operadoresComparacion -> . MENOR_QUE
    (76) operadoresComparacion -> . MENOR_IGUAL_QUE
    (77) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    DOBLE_IGUAL     shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    MENOR_QUE       shift and go to state 62
    MENOR_IGUAL_QUE shift and go to state 63
    MAYOR_IGUAL_QUE shift and go to state 64

  ! DOBLE_IGUAL     [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 57

state 90

    (66) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (28) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 152

    soloEnteros                    shift and go to state 74

state 91

    (87) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER END
    (88) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER END

    PARENTESIS_IZ   shift and go to state 153


state 92

    (60) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 154


state 93

    (61) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 61 (array -> CORCHETE_IZ CORCHETE_DER .)


state 94

    (53) elementos_array -> elemento_array . COMA elementos_array
    (54) elementos_array -> elemento_array .

    COMA            shift and go to state 155
    CORCHETE_DER    reduce using rule 54 (elementos_array -> elemento_array .)


state 95

    (55) elemento_array -> CADENA .

    COMA            reduce using rule 55 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 55 (elemento_array -> CADENA .)


state 96

    (56) elemento_array -> ENTERO .

    COMA            reduce using rule 56 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 56 (elemento_array -> ENTERO .)


state 97

    (57) elemento_array -> FLOTANTE .

    COMA            reduce using rule 57 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 57 (elemento_array -> FLOTANTE .)


state 98

    (58) elemento_array -> array .

    COMA            reduce using rule 58 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 58 (elemento_array -> array .)


state 99

    (59) elemento_array -> VARIABLE .

    COMA            reduce using rule 59 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 59 (elemento_array -> VARIABLE .)


state 100

    (112) sentencia_while -> WHILE declaracion . DO sentencia_while END
    (113) sentencia_while -> WHILE declaracion . DO declaracion END

    DO              shift and go to state 156


state 101

    (104) declaracion -> operacionAritmetica .
    (36) expresionNumerica -> operacionAritmetica .

    DO              reduce using rule 104 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 104 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 104 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 104 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 104 (declaracion -> operacionAritmetica .)
    END             reduce using rule 104 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 104 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 36 (expresionNumerica -> operacionAritmetica .)


state 102

    (105) declaracion -> asignacion .

    DO              reduce using rule 105 (declaracion -> asignacion .)
    WHEN            reduce using rule 105 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 105 (declaracion -> asignacion .)
    ELSE            reduce using rule 105 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 105 (declaracion -> asignacion .)
    END             reduce using rule 105 (declaracion -> asignacion .)
    $end            reduce using rule 105 (declaracion -> asignacion .)


state 103

    (106) declaracion -> impresion .

    DO              reduce using rule 106 (declaracion -> impresion .)
    WHEN            reduce using rule 106 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 106 (declaracion -> impresion .)
    ELSE            reduce using rule 106 (declaracion -> impresion .)
    ELSEIF          reduce using rule 106 (declaracion -> impresion .)
    END             reduce using rule 106 (declaracion -> impresion .)
    $end            reduce using rule 106 (declaracion -> impresion .)


state 104

    (107) declaracion -> impresion_vacia .

    DO              reduce using rule 107 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 107 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 107 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 107 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 107 (declaracion -> impresion_vacia .)
    END             reduce using rule 107 (declaracion -> impresion_vacia .)
    $end            reduce using rule 107 (declaracion -> impresion_vacia .)


state 105

    (108) declaracion -> expresiones_booleanas .

    DO              reduce using rule 108 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 108 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 108 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 108 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 108 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 108 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 108 (declaracion -> expresiones_booleanas .)


state 106

    (109) declaracion -> solicitudDatosTeclado .

    DO              reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 109 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 109 (declaracion -> solicitudDatosTeclado .)


state 107

    (110) declaracion -> hashes .

    DO              reduce using rule 110 (declaracion -> hashes .)
    WHEN            reduce using rule 110 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 110 (declaracion -> hashes .)
    ELSE            reduce using rule 110 (declaracion -> hashes .)
    ELSEIF          reduce using rule 110 (declaracion -> hashes .)
    END             reduce using rule 110 (declaracion -> hashes .)
    $end            reduce using rule 110 (declaracion -> hashes .)


state 108

    (111) declaracion -> estructura_if .

    DO              reduce using rule 111 (declaracion -> estructura_if .)
    WHEN            reduce using rule 111 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 111 (declaracion -> estructura_if .)
    ELSE            reduce using rule 111 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 111 (declaracion -> estructura_if .)
    END             reduce using rule 111 (declaracion -> estructura_if .)
    $end            reduce using rule 111 (declaracion -> estructura_if .)


state 109

    (49) asignacion -> VARIABLE . IGUAL CADENA
    (50) asignacion -> VARIABLE . IGUAL expresionNumerica
    (51) asignacion -> VARIABLE . IGUAL hashes
    (52) asignacion -> VARIABLE . IGUAL array
    (82) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (27) valorNumerico -> VARIABLE .
    (72) operadoresComparacion -> . DOBLE_IGUAL
    (73) operadoresComparacion -> . DIFERENTE
    (74) operadoresComparacion -> . MAYOR_QUE
    (75) operadoresComparacion -> . MENOR_QUE
    (76) operadoresComparacion -> . MENOR_IGUAL_QUE
    (77) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 56
    MAS             reduce using rule 27 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 27 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 27 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 27 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 27 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 59
    DIFERENTE       shift and go to state 60
    MAYOR_QUE       shift and go to state 61
    MENOR_QUE       shift and go to state 62
    MENOR_IGUAL_QUE shift and go to state 63
    MAYOR_IGUAL_QUE shift and go to state 64

  ! DOBLE_IGUAL     [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 57

state 110

    (114) sentencia_case -> CASE declaracion . sentencia_when END
    (117) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 46

    sentencia_when                 shift and go to state 157

state 111

    (116) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 116 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 116 (sentencias_when -> sentencia_when sentencias_when .)


state 112

    (118) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 158


state 113

    (128) definicion_clase -> CLASS ID_CLASE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    DEF             shift and go to state 159


state 114

    (117) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 160


state 115

    (24) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 24 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 24 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 24 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 116

    (22) valorCadena -> VARIABLE .

    MAS             reduce using rule 22 (valorCadena -> VARIABLE .)
    $end            reduce using rule 22 (valorCadena -> VARIABLE .)
    END             reduce using rule 22 (valorCadena -> VARIABLE .)


state 117

    (38) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (38) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (29) operadores -> . MAS
    (30) operadores -> . MENOS
    (31) operadores -> . DIVISION
    (32) operadores -> . MULTIPLICACION
    (33) operadores -> . EXPONENCIACION
    (34) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    DIVISION        shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    EXPONENCIACION  shift and go to state 53
    MODULO          shift and go to state 54

  ! MAS             [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 38 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 48

state 118

    (36) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 36 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 36 (expresionNumerica -> operacionAritmetica .)


state 119

    (23) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 23 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 23 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 23 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 120

    (49) asignacion -> VARIABLE IGUAL CADENA .

    $end            reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 49 (asignacion -> VARIABLE IGUAL CADENA .)


state 121

    (50) asignacion -> VARIABLE IGUAL expresionNumerica .
    (38) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (29) operadores -> . MAS
    (30) operadores -> . MENOS
    (31) operadores -> . DIVISION
    (32) operadores -> . MULTIPLICACION
    (33) operadores -> . EXPONENCIACION
    (34) operadores -> . MODULO

    $end            reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 50 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 49
    MENOS           shift and go to state 50
    DIVISION        shift and go to state 51
    MULTIPLICACION  shift and go to state 52
    EXPONENCIACION  shift and go to state 53
    MODULO          shift and go to state 54

    operadores                     shift and go to state 48

state 122

    (51) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 51 (asignacion -> VARIABLE IGUAL hashes .)


state 123

    (52) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 52 (asignacion -> VARIABLE IGUAL array .)


state 124

    (82) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .
    (27) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 27 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 27 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 27 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 27 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 27 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 27 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 27 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 27 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 27 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 27 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 27 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 27 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 27 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 27 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorNumerico -> VARIABLE .)
    END             reduce using rule 27 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 82 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]


state 125

    (83) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 83 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 126

    (93) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 93 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 93 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 127

    (94) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 94 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 94 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 128

    (62) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 161


state 129

    (125) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 162


state 130

    (89) funcionesArray -> SORT .

    $end            reduce using rule 89 (funcionesArray -> SORT .)
    END             reduce using rule 89 (funcionesArray -> SORT .)


state 131

    (90) funcionesArray -> FOR . EACH

    EACH            shift and go to state 163


state 132

    (92) funcionesNumeros -> TO_F .

    $end            reduce using rule 92 (funcionesNumeros -> TO_F .)
    END             reduce using rule 92 (funcionesNumeros -> TO_F .)


state 133

    (42) valores -> valor COMA . valores
    (41) valores -> . valor
    (42) valores -> . valor COMA valores
    (43) valores -> . valor estructura_ifUnaLinea
    (44) valor -> . CADENA
    (45) valor -> . valorNumerico
    (46) valor -> . VARIABLE
    (47) valor -> . VARIABLECLASE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 67
    VARIABLE        shift and go to state 69
    VARIABLECLASE   shift and go to state 70
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    valor                          shift and go to state 66
    valores                        shift and go to state 164
    valorNumerico                  shift and go to state 68

state 134

    (43) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 43 (valores -> valor estructura_ifUnaLinea .)


state 135

    (101) estructura_ifUnaLinea -> IF . condicionIf
    (97) condicionIf -> . expresiones_booleanas
    (98) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 89
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    PARENTESIS_IZ   shift and go to state 90

    condicionIf                    shift and go to state 165
    expresiones_booleanas          shift and go to state 87
    valorNumerico                  shift and go to state 88
    rangos                         shift and go to state 31

state 136

    (69) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 69 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 137

    (37) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 37 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 138

    (66) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (28) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 152

    soloEnteros                    shift and go to state 166

state 139

    (70) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 70 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 140

    (80) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 80 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 141

    (84) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .
    (27) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 27 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 27 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 27 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 27 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 27 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 27 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 27 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 27 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 27 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 27 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 27 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 27 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 27 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 27 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 27 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 27 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorNumerico -> VARIABLE .)
    END             reduce using rule 27 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]


state 142

    (81) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 81 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 143

    (86) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 86 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 144

    (91) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 91 (funcionesFormatoImpresion -> CHOMP .)


state 145

    (119) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 119 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 146

    (124) elemento_hash -> claveValor COMA . claveValor
    (121) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (122) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 85

    claveValor                     shift and go to state 167

state 147

    (121) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (122) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 169
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    VARIABLE        shift and go to state 77

    valorNumerico                  shift and go to state 168

state 148

    (99) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (100) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (102) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (103) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 170
    ELSEIF          shift and go to state 172

    estructura_secundaria_if       shift and go to state 171

state 149

    (98) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 89
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    PARENTESIS_IZ   shift and go to state 90

    expresiones_booleanas          shift and go to state 173
    valorNumerico                  shift and go to state 88
    rangos                         shift and go to state 31

state 150

    (78) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 78 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 78 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 78 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 78 (funcionesComparacion -> AND .)


state 151

    (79) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 79 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 79 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 79 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 79 (funcionesComparacion -> OR .)


state 152

    (28) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 28 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 28 (soloEnteros -> ENTERO .)


state 153

    (87) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER END
    (88) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER END
    (95) argumentos -> . VARIABLE
    (96) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 175
    VARIABLE        shift and go to state 174

    argumentos                     shift and go to state 176

state 154

    (60) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 60 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 155

    (53) elementos_array -> elemento_array COMA . elementos_array
    (53) elementos_array -> . elemento_array COMA elementos_array
    (54) elementos_array -> . elemento_array
    (55) elemento_array -> . CADENA
    (56) elemento_array -> . ENTERO
    (57) elemento_array -> . FLOTANTE
    (58) elemento_array -> . array
    (59) elemento_array -> . VARIABLE
    (60) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (61) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 95
    ENTERO          shift and go to state 96
    FLOTANTE        shift and go to state 97
    VARIABLE        shift and go to state 99
    CORCHETE_IZ     shift and go to state 37

    elemento_array                 shift and go to state 94
    elementos_array                shift and go to state 177
    array                          shift and go to state 98

state 156

    (112) sentencia_while -> WHILE declaracion DO . sentencia_while END
    (113) sentencia_while -> WHILE declaracion DO . declaracion END
    (112) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (113) sentencia_while -> . WHILE declaracion DO declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 40
    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 178
    sentencia_while                shift and go to state 179
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 157

    (114) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 180


state 158

    (118) sentencia_until -> UNTIL declaracion DO . declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 181
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 159

    (128) definicion_clase -> CLASS ID_CLASE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    INITIALIZE      shift and go to state 182


state 160

    (117) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 183
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 161

    (62) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 184


state 162

    (125) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 185


state 163

    (90) funcionesArray -> FOR EACH .

    $end            reduce using rule 90 (funcionesArray -> FOR EACH .)
    END             reduce using rule 90 (funcionesArray -> FOR EACH .)


state 164

    (42) valores -> valor COMA valores .

    $end            reduce using rule 42 (valores -> valor COMA valores .)
    DO              reduce using rule 42 (valores -> valor COMA valores .)
    WHEN            reduce using rule 42 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 42 (valores -> valor COMA valores .)
    ELSE            reduce using rule 42 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 42 (valores -> valor COMA valores .)
    END             reduce using rule 42 (valores -> valor COMA valores .)


state 165

    (101) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 101 (estructura_ifUnaLinea -> IF condicionIf .)


state 166

    (66) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 186


state 167

    (124) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 124 (elemento_hash -> claveValor COMA claveValor .)


state 168

    (121) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 121 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 121 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 169

    (122) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 122 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 122 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 170

    (99) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 187
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 171

    (100) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 100 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 172

    (102) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (103) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (97) condicionIf -> . expresiones_booleanas
    (98) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 89
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    PARENTESIS_IZ   shift and go to state 90

    condicionIf                    shift and go to state 188
    expresiones_booleanas          shift and go to state 87
    valorNumerico                  shift and go to state 88
    rangos                         shift and go to state 31

state 173

    (98) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 98 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 174

    (95) argumentos -> VARIABLE .
    (96) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 95 (argumentos -> VARIABLE .)
    COMA            shift and go to state 189


state 175

    (87) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . END

    END             shift and go to state 190


state 176

    (88) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER END

    PARENTESIS_DER  shift and go to state 191


state 177

    (53) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 53 (elementos_array -> elemento_array COMA elementos_array .)


state 178

    (113) sentencia_while -> WHILE declaracion DO declaracion . END

    END             shift and go to state 192


state 179

    (112) sentencia_while -> WHILE declaracion DO sentencia_while . END

    END             shift and go to state 193


state 180

    (114) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 114 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 114 (sentencia_case -> CASE declaracion sentencia_when END .)


state 181

    (118) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 194


state 182

    (128) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 195


state 183

    (117) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 117 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 117 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 117 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 184

    (62) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 196


state 185

    (125) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (126) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (127) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 197

    each_args_hash                 shift and go to state 198

state 186

    (66) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 66 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 187

    (99) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 199


state 188

    (102) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (103) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 200
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 189

    (96) argumentos -> VARIABLE COMA . argumentos
    (95) argumentos -> . VARIABLE
    (96) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 174

    argumentos                     shift and go to state 201

state 190

    (87) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .

    $end            reduce using rule 87 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)
    END             reduce using rule 87 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)


state 191

    (88) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . END

    END             shift and go to state 202


state 192

    (113) sentencia_while -> WHILE declaracion DO declaracion END .

    $end            reduce using rule 113 (sentencia_while -> WHILE declaracion DO declaracion END .)
    END             reduce using rule 113 (sentencia_while -> WHILE declaracion DO declaracion END .)


state 193

    (112) sentencia_while -> WHILE declaracion DO sentencia_while END .

    $end            reduce using rule 112 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    END             reduce using rule 112 (sentencia_while -> WHILE declaracion DO sentencia_while END .)


state 194

    (118) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 118 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 118 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 195

    (128) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER
    (95) argumentos -> . VARIABLE
    (96) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 174

    argumentos                     shift and go to state 203

state 196

    (62) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (63) cuerpo_each -> . cuerpo
    (64) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . concatenacionSimpleCadena
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (65) vacio -> .
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (23) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (24) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (87) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (88) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (93) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (94) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (60) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (61) array -> . CORCHETE_IZ CORCHETE_DER
    (62) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (67) comentarios -> . COMENTARIO
    (68) comentarios -> . COMENTARIO_MULTI
    (125) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (112) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (113) sentencia_while -> . WHILE declaracion DO declaracion END
    (114) sentencia_case -> . CASE declaracion sentencia_when END
    (115) sentencias_when -> . sentencia_when
    (116) sentencias_when -> . sentencia_when sentencias_when
    (118) sentencia_until -> . UNTIL declaracion DO declaracion END
    (128) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (21) valorCadena -> . CADENA
    (22) valorCadena -> . VARIABLE
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (117) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    END             reduce using rule 65 (vacio -> .)
    VARIABLE        shift and go to state 24
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    DEF             shift and go to state 36
    CORCHETE_IZ     shift and go to state 37
    COMENTARIO      shift and go to state 38
    COMENTARIO_MULTI shift and go to state 39
    WHILE           shift and go to state 40
    CASE            shift and go to state 41
    UNTIL           shift and go to state 43
    CLASS           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 28
    CADENA          shift and go to state 25
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32
    WHEN            shift and go to state 46

    cuerpo_each                    shift and go to state 204
    cuerpo                         shift and go to state 205
    vacio                          shift and go to state 206
    operacionAritmetica            shift and go to state 2
    concatenacionSimpleCadena      shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    valorCadena                    shift and go to state 23
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31
    sentencia_when                 shift and go to state 42

state 197

    (126) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (127) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 207
    BARRA           shift and go to state 208


state 198

    (125) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 209
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 199

    (99) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 99 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 200

    (102) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (103) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (102) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (103) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 210
    ELSEIF          shift and go to state 172

    estructura_secundaria_if       shift and go to state 211

state 201

    (96) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 96 (argumentos -> VARIABLE COMA argumentos .)


state 202

    (88) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .

    $end            reduce using rule 88 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)
    END             reduce using rule 88 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)


state 203

    (128) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 212


state 204

    (62) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 213


state 205

    (63) cuerpo_each -> cuerpo .

    END             reduce using rule 63 (cuerpo_each -> cuerpo .)


state 206

    (64) cuerpo_each -> vacio .

    END             reduce using rule 64 (cuerpo_each -> vacio .)


state 207

    (126) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 214


state 208

    (127) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 127 (each_args_hash -> VARIABLE BARRA .)


state 209

    (125) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 215


state 210

    (102) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (104) declaracion -> . operacionAritmetica
    (105) declaracion -> . asignacion
    (106) declaracion -> . impresion
    (107) declaracion -> . impresion_vacia
    (108) declaracion -> . expresiones_booleanas
    (109) declaracion -> . solicitudDatosTeclado
    (110) declaracion -> . hashes
    (111) declaracion -> . estructura_if
    (38) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (49) asignacion -> . VARIABLE IGUAL CADENA
    (50) asignacion -> . VARIABLE IGUAL expresionNumerica
    (51) asignacion -> . VARIABLE IGUAL hashes
    (52) asignacion -> . VARIABLE IGUAL array
    (48) impresion -> . valor_print valores
    (69) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (70) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (71) impresion_vacia -> . PUTS
    (80) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (81) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (82) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (83) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (85) solicitudDatosTeclado -> . GETS
    (86) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (119) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (120) hashes -> . LLAVE_IZ LLAVE_DER
    (99) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (100) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (35) expresionNumerica -> . valorNumerico
    (36) expresionNumerica -> . operacionAritmetica
    (37) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (39) valor_print -> . PRINT
    (40) valor_print -> . PUTS
    (25) valorNumerico -> . FLOTANTE
    (26) valorNumerico -> . ENTERO
    (27) valorNumerico -> . VARIABLE
    (66) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 109
    PRINT           shift and go to state 27
    PUTS            shift and go to state 29
    GETS            shift and go to state 33
    LLAVE_IZ        shift and go to state 34
    IF              shift and go to state 35
    PARENTESIS_IZ   shift and go to state 28
    FLOTANTE        shift and go to state 45
    ENTERO          shift and go to state 32

    declaracion                    shift and go to state 216
    operacionAritmetica            shift and go to state 101
    asignacion                     shift and go to state 102
    impresion                      shift and go to state 103
    impresion_vacia                shift and go to state 104
    expresiones_booleanas          shift and go to state 105
    solicitudDatosTeclado          shift and go to state 106
    hashes                         shift and go to state 107
    estructura_if                  shift and go to state 108
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 26
    valorNumerico                  shift and go to state 30
    rangos                         shift and go to state 31

state 211

    (103) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 103 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 212

    (128) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .

    $end            reduce using rule 128 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)
    END             reduce using rule 128 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)


state 213

    (62) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 62 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 62 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 214

    (126) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 217


state 215

    (125) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 125 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 125 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 216

    (102) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 218


state 217

    (126) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 126 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 218

    (102) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 102 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 24 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 24 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 24 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 24 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 24 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 24 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 89 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 89 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 89 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 89 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 109 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 109 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 109 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 109 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 109 resolved as shift
WARNING: shift/reduce conflict for MAS in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 117 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 117 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 117 resolved as shift
WARNING: reduce/reduce conflict in state 24 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (valorNumerico -> VARIABLE) in state 24
WARNING: reduce/reduce conflict in state 69 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 69
WARNING: reduce/reduce conflict in state 124 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) in state 124
WARNING: reduce/reduce conflict in state 141 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) in state 141
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) is never reduced
