Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    DOBLE_IGUAL
    EXCLAMACION_ALTO
    IN
    MODULE
    NOT
    OR
    PORCENTAJE
    PREGUNTA
    RETURN
    SELF
    TRES_PUNTOS
    TRIPLE_IGUAL

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> cuerpoInstruccion
Rule 2     cuerpoInstruccion -> cuerpo
Rule 3     cuerpoInstruccion -> cuerpo cuerpoInstruccion
Rule 4     cuerpo -> operacionAritmetica
Rule 5     cuerpo -> input_concatenacion
Rule 6     cuerpo -> asignacion
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> impresion_vacia
Rule 9     cuerpo -> expresiones_booleanas
Rule 10    cuerpo -> solicitudDatosTeclado
Rule 11    cuerpo -> hashes
Rule 12    cuerpo -> estructura_ifUnaLinea
Rule 13    cuerpo -> estructura_if
Rule 14    cuerpo -> funciones
Rule 15    cuerpo -> funcionesEstructuras
Rule 16    cuerpo -> array
Rule 17    cuerpo -> each_array
Rule 18    cuerpo -> each_hash
Rule 19    cuerpo -> sentencia_while
Rule 20    cuerpo -> sentencia_case
Rule 21    cuerpo -> sentencias_when
Rule 22    cuerpo -> sentencia_until
Rule 23    cuerpo -> definicion_clase
Rule 24    cuerpo -> entero_a_flotante
Rule 25    valorSimbolo -> SIMBOLO
Rule 26    valorSimbolo -> VARIABLE
Rule 27    input_concatenacion -> concatenacionSimpleCadena
Rule 28    input_concatenacion -> concatenacion_funcion
Rule 29    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 30    valorCadena -> CADENA
Rule 31    valorCadena -> VARIABLE
Rule 32    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 33    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 34    valorNumerico -> FLOTANTE
Rule 35    valorNumerico -> ENTERO
Rule 36    soloEnteros -> ENTERO
Rule 37    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 38    operadores -> MAS
Rule 39    operadores -> MENOS
Rule 40    operadores -> DIVISION
Rule 41    operadores -> MULTIPLICACION
Rule 42    operadores -> EXPONENCIACION
Rule 43    operadores -> MODULO
Rule 44    expresionNumerica -> valorNumerico
Rule 45    expresionNumerica -> operacionAritmetica
Rule 46    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 47    expresionNumerica -> VARIABLE
Rule 48    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 49    valor_print -> PRINT
Rule 50    valor_print -> PUTS
Rule 51    valores -> valor
Rule 52    valores -> valor COMA valores
Rule 53    valores -> valor estructura_ifUnaLinea
Rule 54    booleanos -> TRUE
Rule 55    booleanos -> FALSE
Rule 56    valor -> CADENA
Rule 57    valor -> valorNumerico
Rule 58    valor -> VARIABLE
Rule 59    valor -> VARIABLECLASE
Rule 60    valor -> SIMBOLO
Rule 61    impresion -> valor_print valores
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 64    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 65    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 66    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 67    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 68    asignacion -> VARIABLE IGUAL CADENA
Rule 69    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 70    asignacion -> VARIABLE IGUAL hashes
Rule 71    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 72    asignacion -> VARIABLE IGUAL array
Rule 73    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 74    asignacion -> VARIABLE IGUAL booleanos
Rule 75    asignacion -> VARIABLE IGUAL solicitudDatosTeclado
Rule 76    asignacion -> VARIABLE IGUAL entero_a_flotante
Rule 77    elementos_array -> elemento_array COMA elementos_array
Rule 78    elementos_array -> elemento_array
Rule 79    elemento_array -> CADENA
Rule 80    elemento_array -> ENTERO
Rule 81    elemento_array -> FLOTANTE
Rule 82    elemento_array -> array
Rule 83    elemento_array -> VARIABLE
Rule 84    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 85    array -> CORCHETE_IZ CORCHETE_DER
Rule 86    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 87    cuerpo_each -> cuerpo
Rule 88    cuerpo_each -> vacio
Rule 89    vacio -> <empty>
Rule 90    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 91    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 92    impresion_vacia -> PUTS
Rule 93    impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER
Rule 94    operadoresComparacion -> IGUAL_DOBLEP
Rule 95    operadoresComparacion -> NAVE
Rule 96    operadoresComparacion -> DIFERENTE
Rule 97    operadoresComparacion -> MAYOR_QUE
Rule 98    operadoresComparacion -> MENOR_QUE
Rule 99    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 100   operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 101   funcionesComparacion -> Y_SIGNO
Rule 102   funcionesComparacion -> O_SIGNO
Rule 103   expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 104   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 105   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 106   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 107   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 108   solicitudDatosTeclado -> GETS
Rule 109   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 110   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
Rule 111   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
Rule 112   funciones -> DEF VARIABLE declaraciones END
Rule 113   funcionesArray -> SORT
Rule 114   funcionesArray -> FOR EACH
Rule 115   funcionesFormatoImpresion -> CHOMP
Rule 116   funcionesNumeros -> TO_F
Rule 117   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 118   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 119   argumentos -> VARIABLE
Rule 120   argumentos -> VARIABLE COMA argumentos
Rule 121   condicionIf -> expresiones_booleanas
Rule 122   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 123   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 124   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 125   estructura_if -> IF condicionIf declaraciones ELSE declaraciones END
Rule 126   estructura_if -> IF condicionIf declaraciones estructura_secundaria_if
Rule 127   estructura_ifUnaLinea -> IF condicionIf declaraciones END
Rule 128   estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END
Rule 129   estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if
Rule 130   declaracion -> operacionAritmetica
Rule 131   declaracion -> asignacion
Rule 132   declaracion -> impresion
Rule 133   declaracion -> impresion_vacia
Rule 134   declaracion -> expresiones_booleanas
Rule 135   declaracion -> solicitudDatosTeclado
Rule 136   declaracion -> hashes
Rule 137   declaracion -> estructura_if
Rule 138   declaracion -> asignacion_clase
Rule 139   declaracion -> sentencia_while
Rule 140   declaracion -> estructura_ifUnaLinea
Rule 141   declaraciones -> declaracion
Rule 142   declaraciones -> declaracion declaraciones
Rule 143   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 144   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 145   sentencia_case -> CASE declaraciones sentencia_when END
Rule 146   sentencias_when -> sentencia_when
Rule 147   sentencias_when -> sentencia_when sentencias_when
Rule 148   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 149   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 150   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 151   hashes -> LLAVE_IZ LLAVE_DER
Rule 152   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 153   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 154   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 155   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 156   elemento_hash -> claveValor
Rule 157   elemento_hash -> claveValor COMA elemento_hash
Rule 158   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 159   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 160   each_args_hash -> VARIABLE BARRA
Rule 161   encabezadoClase -> CLASS ID_CLASE
Rule 162   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 163   definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
Rule 164   cuerpoVariables -> asignacion_clase
Rule 165   cuerpoVariables -> asignacion
Rule 166   cuerpoVariables -> asignacion_clase cuerpoVariables
Rule 167   cuerpoVariables -> asignacion cuerpoVariables
Rule 168   cuerpoClase -> cuerpoVariables
Rule 169   cuerpoClase -> declaracion
Rule 170   cuerpoClase -> funciones
Rule 171   cuerpoClaseE -> cuerpoClase
Rule 172   cuerpoClaseE -> cuerpoClase cuerpoClaseE

Terminals, with rules where they appear

AND                  : 
ASIGNA_HASH          : 152 153 154 155
BARRA                : 86 86 158 159 160
BEGIN                : 
CADENA               : 30 56 62 68 79 153 154 155 155
CASE                 : 145
CHOMP                : 115
CLASS                : 161 162
COMA                 : 52 77 120 157 159
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 29
CORCHETE_DER         : 84 85
CORCHETE_IZ          : 84 85
DEF                  : 110 111 112 163
DIFERENTE            : 96
DIVISION             : 40
DO                   : 86 143 144 149 158
DOBLE_IGUAL          : 
EACH                 : 114 158
ELSE                 : 125 128
ELSEIF               : 128 129
END                  : 86 110 111 112 125 127 128 143 144 145 149 158 163
ENTERO               : 35 36 80
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 122 124
EXPONENCIACION       : 42
FALSE                : 55
FLOTANTE             : 34 81
FOR                  : 114
GETS                 : 108 109
ID_CLASE             : 161 162 162
IF                   : 125 126 127
IGUAL                : 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76
IGUAL_DOBLEP         : 94 148
IN                   : 
INITIALIZE           : 163
LLAVE_DER            : 150 151
LLAVE_IZ             : 150 151
MAS                  : 32 33 38
MAYOR_IGUAL_QUE      : 100
MAYOR_QUE            : 97
MENOR_IGUAL_QUE      : 99
MENOR_QUE            : 98 162
MENOS                : 39
MODULE               : 
MODULO               : 43
MULTIPLICACION       : 41
NAVE                 : 95
NOT                  : 
OR                   : 
O_SIGNO              : 102
PARENTESIS_DER       : 29 46 90 91 93 110 111 122 124 163
PARENTESIS_IZ        : 29 46 90 91 93 110 111 122 124 163
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 49 90
PRINTF               : 93
PUNTO                : 29 37 86 109 117 118 158
PUTS                 : 50 91 92
RETURN               : 
SELF                 : 
SIMBOLO              : 25 60 71
SORT                 : 113
TO_F                 : 37 116
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 54
UNTIL                : 149
VARIABLE             : 26 29 31 37 47 58 67 68 69 70 71 72 73 74 75 76 83 86 86 105 105 106 107 110 111 112 117 118 119 120 152 153 158 159 159 160
VARIABLECLASE        : 59 62 63 64 65 66
WHEN                 : 148
WHILE                : 143 144
Y_SIGNO              : 101
error                : 

Nonterminals, with rules where they appear

argumentos           : 111 120 163
array                : 16 65 72 82
asignacion           : 6 131 165 167
asignacion_clase     : 138 164 166
booleanos            : 67 74
claveValor           : 156 157
concatenacionSimpleCadena : 27 33
concatenacion_funcion : 28
condicionIf          : 122 123 125 126 127 128 129
cuerpo               : 2 3 87
cuerpoClase          : 171 172
cuerpoClaseE         : 163 172
cuerpoInstruccion    : 1 3
cuerpoVariables      : 163 166 167 168
cuerpo_each          : 86
declaracion          : 141 142 144 148 148 149 149 158 169
declaraciones        : 110 111 112 125 125 126 127 128 128 129 142 145
definicion_clase     : 23
each_args_hash       : 158
each_array           : 17
each_hash            : 18
elemento_array       : 77 78
elemento_hash        : 150 157
elementos_array      : 77 84
encabezadoClase      : 163
entero_a_flotante    : 24 76
estructura_if        : 13 137
estructura_ifUnaLinea : 12 53 140
estructura_secundaria_if : 126 129
expresionNumerica    : 48 48 63 69
expresiones_booleanas : 9 121 122 123 124 134 143 144
funciones            : 14 170
funcionesArray       : 117
funcionesComparacion : 122 123
funcionesEstructuras : 15
funcionesFormatoImpresion : 109
funcionesNumeros     : 118
hashes               : 11 64 70 136
impresion            : 7 132
impresion_vacia      : 8 133
input_concatenacion  : 5 66 73
instruccion          : 0
operacionAritmetica  : 4 45 46 130
operadores           : 48
operadoresComparacion : 103 104 105 106 107
sentencia_case       : 20
sentencia_until      : 22
sentencia_when       : 145 146 147
sentencia_while      : 19 139 143
sentencias_when      : 21 147
solicitudDatosTeclado : 10 75 135
soloEnteros          : 
vacio                : 88
valor                : 51 52 53
valorCadena          : 29 32 32 33
valorNumerico        : 44 57 104 104 106 107 152 154
valorSimbolo         : 103 103
valor_print          : 61
valores              : 52 61

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (110) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE declaraciones END
    (117) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (86) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (158) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (145) sentencia_case -> . CASE declaraciones sentencia_when END
    (146) sentencias_when -> . sentencia_when
    (147) sentencias_when -> . sentencia_when sentencias_when
    (149) sentencia_until -> . UNTIL declaracion DO declaracion END
    (163) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (148) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (161) encabezadoClase -> . CLASS ID_CLASE
    (162) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 28
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 40
    DEF             shift and go to state 41
    CORCHETE_IZ     shift and go to state 42
    WHILE           shift and go to state 43
    CASE            shift and go to state 44
    UNTIL           shift and go to state 46
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 29

    instruccion                    shift and go to state 1
    cuerpoInstruccion              shift and go to state 2
    cuerpo                         shift and go to state 3
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    expresionNumerica              shift and go to state 25
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37
    sentencia_when                 shift and go to state 45
    encabezadoClase                shift and go to state 47
    valorCadena                    shift and go to state 48

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> cuerpoInstruccion .

    $end            reduce using rule 1 (instruccion -> cuerpoInstruccion .)


state 3

    (2) cuerpoInstruccion -> cuerpo .
    (3) cuerpoInstruccion -> cuerpo . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (110) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE declaraciones END
    (117) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (86) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (158) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (145) sentencia_case -> . CASE declaraciones sentencia_when END
    (146) sentencias_when -> . sentencia_when
    (147) sentencias_when -> . sentencia_when sentencias_when
    (149) sentencia_until -> . UNTIL declaracion DO declaracion END
    (163) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (148) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (161) encabezadoClase -> . CLASS ID_CLASE
    (162) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    $end            reduce using rule 2 (cuerpoInstruccion -> cuerpo .)
    VARIABLE        shift and go to state 28
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 40
    DEF             shift and go to state 41
    CORCHETE_IZ     shift and go to state 42
    WHILE           shift and go to state 43
    CASE            shift and go to state 44
    UNTIL           shift and go to state 46
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 29

    cuerpo                         shift and go to state 3
    cuerpoInstruccion              shift and go to state 53
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    expresionNumerica              shift and go to state 25
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37
    sentencia_when                 shift and go to state 45
    encabezadoClase                shift and go to state 47
    valorCadena                    shift and go to state 48

state 4

    (4) cuerpo -> operacionAritmetica .
    (45) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINT           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PUTS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINTF          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    GETS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    IF              reduce using rule 4 (cuerpo -> operacionAritmetica .)
    DEF             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHILE           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CASE            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    UNTIL           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 4 (cuerpo -> operacionAritmetica .)
    SIMBOLO         reduce using rule 4 (cuerpo -> operacionAritmetica .)
    FLOTANTE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    ENTERO          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHEN            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CLASS           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CADENA          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    $end            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 5

    (5) cuerpo -> input_concatenacion .

    VARIABLE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINT           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PUTS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINTF          reduce using rule 5 (cuerpo -> input_concatenacion .)
    GETS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    LLAVE_IZ        reduce using rule 5 (cuerpo -> input_concatenacion .)
    IF              reduce using rule 5 (cuerpo -> input_concatenacion .)
    DEF             reduce using rule 5 (cuerpo -> input_concatenacion .)
    CORCHETE_IZ     reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHILE           reduce using rule 5 (cuerpo -> input_concatenacion .)
    CASE            reduce using rule 5 (cuerpo -> input_concatenacion .)
    UNTIL           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 5 (cuerpo -> input_concatenacion .)
    SIMBOLO         reduce using rule 5 (cuerpo -> input_concatenacion .)
    FLOTANTE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    ENTERO          reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHEN            reduce using rule 5 (cuerpo -> input_concatenacion .)
    CLASS           reduce using rule 5 (cuerpo -> input_concatenacion .)
    CADENA          reduce using rule 5 (cuerpo -> input_concatenacion .)
    $end            reduce using rule 5 (cuerpo -> input_concatenacion .)
    END             reduce using rule 5 (cuerpo -> input_concatenacion .)


state 6

    (6) cuerpo -> asignacion .

    VARIABLE        reduce using rule 6 (cuerpo -> asignacion .)
    PRINT           reduce using rule 6 (cuerpo -> asignacion .)
    PUTS            reduce using rule 6 (cuerpo -> asignacion .)
    PRINTF          reduce using rule 6 (cuerpo -> asignacion .)
    GETS            reduce using rule 6 (cuerpo -> asignacion .)
    LLAVE_IZ        reduce using rule 6 (cuerpo -> asignacion .)
    IF              reduce using rule 6 (cuerpo -> asignacion .)
    DEF             reduce using rule 6 (cuerpo -> asignacion .)
    CORCHETE_IZ     reduce using rule 6 (cuerpo -> asignacion .)
    WHILE           reduce using rule 6 (cuerpo -> asignacion .)
    CASE            reduce using rule 6 (cuerpo -> asignacion .)
    UNTIL           reduce using rule 6 (cuerpo -> asignacion .)
    PARENTESIS_IZ   reduce using rule 6 (cuerpo -> asignacion .)
    SIMBOLO         reduce using rule 6 (cuerpo -> asignacion .)
    FLOTANTE        reduce using rule 6 (cuerpo -> asignacion .)
    ENTERO          reduce using rule 6 (cuerpo -> asignacion .)
    WHEN            reduce using rule 6 (cuerpo -> asignacion .)
    CLASS           reduce using rule 6 (cuerpo -> asignacion .)
    CADENA          reduce using rule 6 (cuerpo -> asignacion .)
    $end            reduce using rule 6 (cuerpo -> asignacion .)
    END             reduce using rule 6 (cuerpo -> asignacion .)


state 7

    (7) cuerpo -> impresion .

    VARIABLE        reduce using rule 7 (cuerpo -> impresion .)
    PRINT           reduce using rule 7 (cuerpo -> impresion .)
    PUTS            reduce using rule 7 (cuerpo -> impresion .)
    PRINTF          reduce using rule 7 (cuerpo -> impresion .)
    GETS            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_IZ        reduce using rule 7 (cuerpo -> impresion .)
    IF              reduce using rule 7 (cuerpo -> impresion .)
    DEF             reduce using rule 7 (cuerpo -> impresion .)
    CORCHETE_IZ     reduce using rule 7 (cuerpo -> impresion .)
    WHILE           reduce using rule 7 (cuerpo -> impresion .)
    CASE            reduce using rule 7 (cuerpo -> impresion .)
    UNTIL           reduce using rule 7 (cuerpo -> impresion .)
    PARENTESIS_IZ   reduce using rule 7 (cuerpo -> impresion .)
    SIMBOLO         reduce using rule 7 (cuerpo -> impresion .)
    FLOTANTE        reduce using rule 7 (cuerpo -> impresion .)
    ENTERO          reduce using rule 7 (cuerpo -> impresion .)
    WHEN            reduce using rule 7 (cuerpo -> impresion .)
    CLASS           reduce using rule 7 (cuerpo -> impresion .)
    CADENA          reduce using rule 7 (cuerpo -> impresion .)
    $end            reduce using rule 7 (cuerpo -> impresion .)
    END             reduce using rule 7 (cuerpo -> impresion .)


state 8

    (8) cuerpo -> impresion_vacia .

    VARIABLE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINT           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PUTS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINTF          reduce using rule 8 (cuerpo -> impresion_vacia .)
    GETS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 8 (cuerpo -> impresion_vacia .)
    IF              reduce using rule 8 (cuerpo -> impresion_vacia .)
    DEF             reduce using rule 8 (cuerpo -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHILE           reduce using rule 8 (cuerpo -> impresion_vacia .)
    CASE            reduce using rule 8 (cuerpo -> impresion_vacia .)
    UNTIL           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 8 (cuerpo -> impresion_vacia .)
    SIMBOLO         reduce using rule 8 (cuerpo -> impresion_vacia .)
    FLOTANTE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    ENTERO          reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHEN            reduce using rule 8 (cuerpo -> impresion_vacia .)
    CLASS           reduce using rule 8 (cuerpo -> impresion_vacia .)
    CADENA          reduce using rule 8 (cuerpo -> impresion_vacia .)
    $end            reduce using rule 8 (cuerpo -> impresion_vacia .)
    END             reduce using rule 8 (cuerpo -> impresion_vacia .)


state 9

    (9) cuerpo -> expresiones_booleanas .

    VARIABLE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINT           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PUTS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINTF          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    GETS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    IF              reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    DEF             reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHILE           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CASE            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    UNTIL           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    ENTERO          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHEN            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CLASS           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CADENA          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    $end            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 9 (cuerpo -> expresiones_booleanas .)


state 10

    (10) cuerpo -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINT           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PUTS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    GETS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    IF              reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    DEF             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHILE           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CASE            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHEN            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CLASS           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CADENA          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    $end            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)


state 11

    (11) cuerpo -> hashes .

    VARIABLE        reduce using rule 11 (cuerpo -> hashes .)
    PRINT           reduce using rule 11 (cuerpo -> hashes .)
    PUTS            reduce using rule 11 (cuerpo -> hashes .)
    PRINTF          reduce using rule 11 (cuerpo -> hashes .)
    GETS            reduce using rule 11 (cuerpo -> hashes .)
    LLAVE_IZ        reduce using rule 11 (cuerpo -> hashes .)
    IF              reduce using rule 11 (cuerpo -> hashes .)
    DEF             reduce using rule 11 (cuerpo -> hashes .)
    CORCHETE_IZ     reduce using rule 11 (cuerpo -> hashes .)
    WHILE           reduce using rule 11 (cuerpo -> hashes .)
    CASE            reduce using rule 11 (cuerpo -> hashes .)
    UNTIL           reduce using rule 11 (cuerpo -> hashes .)
    PARENTESIS_IZ   reduce using rule 11 (cuerpo -> hashes .)
    SIMBOLO         reduce using rule 11 (cuerpo -> hashes .)
    FLOTANTE        reduce using rule 11 (cuerpo -> hashes .)
    ENTERO          reduce using rule 11 (cuerpo -> hashes .)
    WHEN            reduce using rule 11 (cuerpo -> hashes .)
    CLASS           reduce using rule 11 (cuerpo -> hashes .)
    CADENA          reduce using rule 11 (cuerpo -> hashes .)
    $end            reduce using rule 11 (cuerpo -> hashes .)
    END             reduce using rule 11 (cuerpo -> hashes .)


state 12

    (12) cuerpo -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    GETS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    IF              reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    DEF             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CASE            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    $end            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    END             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)


state 13

    (13) cuerpo -> estructura_if .

    VARIABLE        reduce using rule 13 (cuerpo -> estructura_if .)
    PRINT           reduce using rule 13 (cuerpo -> estructura_if .)
    PUTS            reduce using rule 13 (cuerpo -> estructura_if .)
    PRINTF          reduce using rule 13 (cuerpo -> estructura_if .)
    GETS            reduce using rule 13 (cuerpo -> estructura_if .)
    LLAVE_IZ        reduce using rule 13 (cuerpo -> estructura_if .)
    IF              reduce using rule 13 (cuerpo -> estructura_if .)
    DEF             reduce using rule 13 (cuerpo -> estructura_if .)
    CORCHETE_IZ     reduce using rule 13 (cuerpo -> estructura_if .)
    WHILE           reduce using rule 13 (cuerpo -> estructura_if .)
    CASE            reduce using rule 13 (cuerpo -> estructura_if .)
    UNTIL           reduce using rule 13 (cuerpo -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 13 (cuerpo -> estructura_if .)
    SIMBOLO         reduce using rule 13 (cuerpo -> estructura_if .)
    FLOTANTE        reduce using rule 13 (cuerpo -> estructura_if .)
    ENTERO          reduce using rule 13 (cuerpo -> estructura_if .)
    WHEN            reduce using rule 13 (cuerpo -> estructura_if .)
    CLASS           reduce using rule 13 (cuerpo -> estructura_if .)
    CADENA          reduce using rule 13 (cuerpo -> estructura_if .)
    $end            reduce using rule 13 (cuerpo -> estructura_if .)
    END             reduce using rule 13 (cuerpo -> estructura_if .)


state 14

    (14) cuerpo -> funciones .

    VARIABLE        reduce using rule 14 (cuerpo -> funciones .)
    PRINT           reduce using rule 14 (cuerpo -> funciones .)
    PUTS            reduce using rule 14 (cuerpo -> funciones .)
    PRINTF          reduce using rule 14 (cuerpo -> funciones .)
    GETS            reduce using rule 14 (cuerpo -> funciones .)
    LLAVE_IZ        reduce using rule 14 (cuerpo -> funciones .)
    IF              reduce using rule 14 (cuerpo -> funciones .)
    DEF             reduce using rule 14 (cuerpo -> funciones .)
    CORCHETE_IZ     reduce using rule 14 (cuerpo -> funciones .)
    WHILE           reduce using rule 14 (cuerpo -> funciones .)
    CASE            reduce using rule 14 (cuerpo -> funciones .)
    UNTIL           reduce using rule 14 (cuerpo -> funciones .)
    PARENTESIS_IZ   reduce using rule 14 (cuerpo -> funciones .)
    SIMBOLO         reduce using rule 14 (cuerpo -> funciones .)
    FLOTANTE        reduce using rule 14 (cuerpo -> funciones .)
    ENTERO          reduce using rule 14 (cuerpo -> funciones .)
    WHEN            reduce using rule 14 (cuerpo -> funciones .)
    CLASS           reduce using rule 14 (cuerpo -> funciones .)
    CADENA          reduce using rule 14 (cuerpo -> funciones .)
    $end            reduce using rule 14 (cuerpo -> funciones .)
    END             reduce using rule 14 (cuerpo -> funciones .)


state 15

    (15) cuerpo -> funcionesEstructuras .

    VARIABLE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINT           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PUTS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINTF          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    GETS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    LLAVE_IZ        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    IF              reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    DEF             reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CORCHETE_IZ     reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHILE           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CASE            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    UNTIL           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PARENTESIS_IZ   reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    SIMBOLO         reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    FLOTANTE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    ENTERO          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHEN            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CLASS           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CADENA          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    $end            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 15 (cuerpo -> funcionesEstructuras .)


state 16

    (16) cuerpo -> array .

    VARIABLE        reduce using rule 16 (cuerpo -> array .)
    PRINT           reduce using rule 16 (cuerpo -> array .)
    PUTS            reduce using rule 16 (cuerpo -> array .)
    PRINTF          reduce using rule 16 (cuerpo -> array .)
    GETS            reduce using rule 16 (cuerpo -> array .)
    LLAVE_IZ        reduce using rule 16 (cuerpo -> array .)
    IF              reduce using rule 16 (cuerpo -> array .)
    DEF             reduce using rule 16 (cuerpo -> array .)
    CORCHETE_IZ     reduce using rule 16 (cuerpo -> array .)
    WHILE           reduce using rule 16 (cuerpo -> array .)
    CASE            reduce using rule 16 (cuerpo -> array .)
    UNTIL           reduce using rule 16 (cuerpo -> array .)
    PARENTESIS_IZ   reduce using rule 16 (cuerpo -> array .)
    SIMBOLO         reduce using rule 16 (cuerpo -> array .)
    FLOTANTE        reduce using rule 16 (cuerpo -> array .)
    ENTERO          reduce using rule 16 (cuerpo -> array .)
    WHEN            reduce using rule 16 (cuerpo -> array .)
    CLASS           reduce using rule 16 (cuerpo -> array .)
    CADENA          reduce using rule 16 (cuerpo -> array .)
    $end            reduce using rule 16 (cuerpo -> array .)
    END             reduce using rule 16 (cuerpo -> array .)


state 17

    (17) cuerpo -> each_array .

    VARIABLE        reduce using rule 17 (cuerpo -> each_array .)
    PRINT           reduce using rule 17 (cuerpo -> each_array .)
    PUTS            reduce using rule 17 (cuerpo -> each_array .)
    PRINTF          reduce using rule 17 (cuerpo -> each_array .)
    GETS            reduce using rule 17 (cuerpo -> each_array .)
    LLAVE_IZ        reduce using rule 17 (cuerpo -> each_array .)
    IF              reduce using rule 17 (cuerpo -> each_array .)
    DEF             reduce using rule 17 (cuerpo -> each_array .)
    CORCHETE_IZ     reduce using rule 17 (cuerpo -> each_array .)
    WHILE           reduce using rule 17 (cuerpo -> each_array .)
    CASE            reduce using rule 17 (cuerpo -> each_array .)
    UNTIL           reduce using rule 17 (cuerpo -> each_array .)
    PARENTESIS_IZ   reduce using rule 17 (cuerpo -> each_array .)
    SIMBOLO         reduce using rule 17 (cuerpo -> each_array .)
    FLOTANTE        reduce using rule 17 (cuerpo -> each_array .)
    ENTERO          reduce using rule 17 (cuerpo -> each_array .)
    WHEN            reduce using rule 17 (cuerpo -> each_array .)
    CLASS           reduce using rule 17 (cuerpo -> each_array .)
    CADENA          reduce using rule 17 (cuerpo -> each_array .)
    $end            reduce using rule 17 (cuerpo -> each_array .)
    END             reduce using rule 17 (cuerpo -> each_array .)


state 18

    (18) cuerpo -> each_hash .

    VARIABLE        reduce using rule 18 (cuerpo -> each_hash .)
    PRINT           reduce using rule 18 (cuerpo -> each_hash .)
    PUTS            reduce using rule 18 (cuerpo -> each_hash .)
    PRINTF          reduce using rule 18 (cuerpo -> each_hash .)
    GETS            reduce using rule 18 (cuerpo -> each_hash .)
    LLAVE_IZ        reduce using rule 18 (cuerpo -> each_hash .)
    IF              reduce using rule 18 (cuerpo -> each_hash .)
    DEF             reduce using rule 18 (cuerpo -> each_hash .)
    CORCHETE_IZ     reduce using rule 18 (cuerpo -> each_hash .)
    WHILE           reduce using rule 18 (cuerpo -> each_hash .)
    CASE            reduce using rule 18 (cuerpo -> each_hash .)
    UNTIL           reduce using rule 18 (cuerpo -> each_hash .)
    PARENTESIS_IZ   reduce using rule 18 (cuerpo -> each_hash .)
    SIMBOLO         reduce using rule 18 (cuerpo -> each_hash .)
    FLOTANTE        reduce using rule 18 (cuerpo -> each_hash .)
    ENTERO          reduce using rule 18 (cuerpo -> each_hash .)
    WHEN            reduce using rule 18 (cuerpo -> each_hash .)
    CLASS           reduce using rule 18 (cuerpo -> each_hash .)
    CADENA          reduce using rule 18 (cuerpo -> each_hash .)
    $end            reduce using rule 18 (cuerpo -> each_hash .)
    END             reduce using rule 18 (cuerpo -> each_hash .)


state 19

    (19) cuerpo -> sentencia_while .

    VARIABLE        reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINT           reduce using rule 19 (cuerpo -> sentencia_while .)
    PUTS            reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINTF          reduce using rule 19 (cuerpo -> sentencia_while .)
    GETS            reduce using rule 19 (cuerpo -> sentencia_while .)
    LLAVE_IZ        reduce using rule 19 (cuerpo -> sentencia_while .)
    IF              reduce using rule 19 (cuerpo -> sentencia_while .)
    DEF             reduce using rule 19 (cuerpo -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 19 (cuerpo -> sentencia_while .)
    WHILE           reduce using rule 19 (cuerpo -> sentencia_while .)
    CASE            reduce using rule 19 (cuerpo -> sentencia_while .)
    UNTIL           reduce using rule 19 (cuerpo -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 19 (cuerpo -> sentencia_while .)
    SIMBOLO         reduce using rule 19 (cuerpo -> sentencia_while .)
    FLOTANTE        reduce using rule 19 (cuerpo -> sentencia_while .)
    ENTERO          reduce using rule 19 (cuerpo -> sentencia_while .)
    WHEN            reduce using rule 19 (cuerpo -> sentencia_while .)
    CLASS           reduce using rule 19 (cuerpo -> sentencia_while .)
    CADENA          reduce using rule 19 (cuerpo -> sentencia_while .)
    $end            reduce using rule 19 (cuerpo -> sentencia_while .)
    END             reduce using rule 19 (cuerpo -> sentencia_while .)


state 20

    (20) cuerpo -> sentencia_case .

    VARIABLE        reduce using rule 20 (cuerpo -> sentencia_case .)
    PRINT           reduce using rule 20 (cuerpo -> sentencia_case .)
    PUTS            reduce using rule 20 (cuerpo -> sentencia_case .)
    PRINTF          reduce using rule 20 (cuerpo -> sentencia_case .)
    GETS            reduce using rule 20 (cuerpo -> sentencia_case .)
    LLAVE_IZ        reduce using rule 20 (cuerpo -> sentencia_case .)
    IF              reduce using rule 20 (cuerpo -> sentencia_case .)
    DEF             reduce using rule 20 (cuerpo -> sentencia_case .)
    CORCHETE_IZ     reduce using rule 20 (cuerpo -> sentencia_case .)
    WHILE           reduce using rule 20 (cuerpo -> sentencia_case .)
    CASE            reduce using rule 20 (cuerpo -> sentencia_case .)
    UNTIL           reduce using rule 20 (cuerpo -> sentencia_case .)
    PARENTESIS_IZ   reduce using rule 20 (cuerpo -> sentencia_case .)
    SIMBOLO         reduce using rule 20 (cuerpo -> sentencia_case .)
    FLOTANTE        reduce using rule 20 (cuerpo -> sentencia_case .)
    ENTERO          reduce using rule 20 (cuerpo -> sentencia_case .)
    WHEN            reduce using rule 20 (cuerpo -> sentencia_case .)
    CLASS           reduce using rule 20 (cuerpo -> sentencia_case .)
    CADENA          reduce using rule 20 (cuerpo -> sentencia_case .)
    $end            reduce using rule 20 (cuerpo -> sentencia_case .)
    END             reduce using rule 20 (cuerpo -> sentencia_case .)


state 21

    (21) cuerpo -> sentencias_when .

    VARIABLE        reduce using rule 21 (cuerpo -> sentencias_when .)
    PRINT           reduce using rule 21 (cuerpo -> sentencias_when .)
    PUTS            reduce using rule 21 (cuerpo -> sentencias_when .)
    PRINTF          reduce using rule 21 (cuerpo -> sentencias_when .)
    GETS            reduce using rule 21 (cuerpo -> sentencias_when .)
    LLAVE_IZ        reduce using rule 21 (cuerpo -> sentencias_when .)
    IF              reduce using rule 21 (cuerpo -> sentencias_when .)
    DEF             reduce using rule 21 (cuerpo -> sentencias_when .)
    CORCHETE_IZ     reduce using rule 21 (cuerpo -> sentencias_when .)
    WHILE           reduce using rule 21 (cuerpo -> sentencias_when .)
    CASE            reduce using rule 21 (cuerpo -> sentencias_when .)
    UNTIL           reduce using rule 21 (cuerpo -> sentencias_when .)
    PARENTESIS_IZ   reduce using rule 21 (cuerpo -> sentencias_when .)
    SIMBOLO         reduce using rule 21 (cuerpo -> sentencias_when .)
    FLOTANTE        reduce using rule 21 (cuerpo -> sentencias_when .)
    ENTERO          reduce using rule 21 (cuerpo -> sentencias_when .)
    WHEN            reduce using rule 21 (cuerpo -> sentencias_when .)
    CLASS           reduce using rule 21 (cuerpo -> sentencias_when .)
    CADENA          reduce using rule 21 (cuerpo -> sentencias_when .)
    $end            reduce using rule 21 (cuerpo -> sentencias_when .)
    END             reduce using rule 21 (cuerpo -> sentencias_when .)


state 22

    (22) cuerpo -> sentencia_until .

    VARIABLE        reduce using rule 22 (cuerpo -> sentencia_until .)
    PRINT           reduce using rule 22 (cuerpo -> sentencia_until .)
    PUTS            reduce using rule 22 (cuerpo -> sentencia_until .)
    PRINTF          reduce using rule 22 (cuerpo -> sentencia_until .)
    GETS            reduce using rule 22 (cuerpo -> sentencia_until .)
    LLAVE_IZ        reduce using rule 22 (cuerpo -> sentencia_until .)
    IF              reduce using rule 22 (cuerpo -> sentencia_until .)
    DEF             reduce using rule 22 (cuerpo -> sentencia_until .)
    CORCHETE_IZ     reduce using rule 22 (cuerpo -> sentencia_until .)
    WHILE           reduce using rule 22 (cuerpo -> sentencia_until .)
    CASE            reduce using rule 22 (cuerpo -> sentencia_until .)
    UNTIL           reduce using rule 22 (cuerpo -> sentencia_until .)
    PARENTESIS_IZ   reduce using rule 22 (cuerpo -> sentencia_until .)
    SIMBOLO         reduce using rule 22 (cuerpo -> sentencia_until .)
    FLOTANTE        reduce using rule 22 (cuerpo -> sentencia_until .)
    ENTERO          reduce using rule 22 (cuerpo -> sentencia_until .)
    WHEN            reduce using rule 22 (cuerpo -> sentencia_until .)
    CLASS           reduce using rule 22 (cuerpo -> sentencia_until .)
    CADENA          reduce using rule 22 (cuerpo -> sentencia_until .)
    $end            reduce using rule 22 (cuerpo -> sentencia_until .)
    END             reduce using rule 22 (cuerpo -> sentencia_until .)


state 23

    (23) cuerpo -> definicion_clase .

    VARIABLE        reduce using rule 23 (cuerpo -> definicion_clase .)
    PRINT           reduce using rule 23 (cuerpo -> definicion_clase .)
    PUTS            reduce using rule 23 (cuerpo -> definicion_clase .)
    PRINTF          reduce using rule 23 (cuerpo -> definicion_clase .)
    GETS            reduce using rule 23 (cuerpo -> definicion_clase .)
    LLAVE_IZ        reduce using rule 23 (cuerpo -> definicion_clase .)
    IF              reduce using rule 23 (cuerpo -> definicion_clase .)
    DEF             reduce using rule 23 (cuerpo -> definicion_clase .)
    CORCHETE_IZ     reduce using rule 23 (cuerpo -> definicion_clase .)
    WHILE           reduce using rule 23 (cuerpo -> definicion_clase .)
    CASE            reduce using rule 23 (cuerpo -> definicion_clase .)
    UNTIL           reduce using rule 23 (cuerpo -> definicion_clase .)
    PARENTESIS_IZ   reduce using rule 23 (cuerpo -> definicion_clase .)
    SIMBOLO         reduce using rule 23 (cuerpo -> definicion_clase .)
    FLOTANTE        reduce using rule 23 (cuerpo -> definicion_clase .)
    ENTERO          reduce using rule 23 (cuerpo -> definicion_clase .)
    WHEN            reduce using rule 23 (cuerpo -> definicion_clase .)
    CLASS           reduce using rule 23 (cuerpo -> definicion_clase .)
    CADENA          reduce using rule 23 (cuerpo -> definicion_clase .)
    $end            reduce using rule 23 (cuerpo -> definicion_clase .)
    END             reduce using rule 23 (cuerpo -> definicion_clase .)


state 24

    (24) cuerpo -> entero_a_flotante .

    VARIABLE        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PRINT           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PUTS            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PRINTF          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    GETS            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    LLAVE_IZ        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    IF              reduce using rule 24 (cuerpo -> entero_a_flotante .)
    DEF             reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 24 (cuerpo -> entero_a_flotante .)
    WHILE           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CASE            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    UNTIL           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 24 (cuerpo -> entero_a_flotante .)
    SIMBOLO         reduce using rule 24 (cuerpo -> entero_a_flotante .)
    FLOTANTE        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    ENTERO          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    WHEN            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CLASS           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CADENA          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    $end            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 24 (cuerpo -> entero_a_flotante .)


state 25

    (48) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    DIVISION        shift and go to state 57
    MULTIPLICACION  shift and go to state 58
    EXPONENCIACION  shift and go to state 59
    MODULO          shift and go to state 60

    operadores                     shift and go to state 54

state 26

    (27) input_concatenacion -> concatenacionSimpleCadena .
    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    VARIABLE        reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINT           reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    PUTS            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINTF          reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    GETS            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    LLAVE_IZ        reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    IF              reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    DEF             reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    CORCHETE_IZ     reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    WHILE           reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    CASE            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    UNTIL           reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    PARENTESIS_IZ   reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    SIMBOLO         reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    FLOTANTE        reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    ENTERO          reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    CLASS           reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    CADENA          reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    $end            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    VARIABLECLASE   reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 61


state 27

    (28) input_concatenacion -> concatenacion_funcion .

    VARIABLE        reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    PRINT           reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    PUTS            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    PRINTF          reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    GETS            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    LLAVE_IZ        reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    IF              reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    DEF             reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    CORCHETE_IZ     reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    WHILE           reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    CASE            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    UNTIL           reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    PARENTESIS_IZ   reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    SIMBOLO         reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    FLOTANTE        reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    ENTERO          reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    CLASS           reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    CADENA          reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    $end            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    VARIABLECLASE   reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)


state 28

    (68) asignacion -> VARIABLE . IGUAL CADENA
    (69) asignacion -> VARIABLE . IGUAL expresionNumerica
    (70) asignacion -> VARIABLE . IGUAL hashes
    (71) asignacion -> VARIABLE . IGUAL SIMBOLO
    (72) asignacion -> VARIABLE . IGUAL array
    (73) asignacion -> VARIABLE . IGUAL input_concatenacion
    (74) asignacion -> VARIABLE . IGUAL booleanos
    (75) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (76) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (105) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (117) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (118) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (86) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (158) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (37) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (47) expresionNumerica -> VARIABLE .
    (29) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (26) valorSimbolo -> VARIABLE .
    (31) valorCadena -> VARIABLE .
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 31 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 62
    PUNTO           shift and go to state 64
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

  ! MAS             [ reduce using rule 47 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 63

state 29

    (30) valorCadena -> CADENA .

    MAS             reduce using rule 30 (valorCadena -> CADENA .)
    VARIABLE        reduce using rule 30 (valorCadena -> CADENA .)
    PRINT           reduce using rule 30 (valorCadena -> CADENA .)
    PUTS            reduce using rule 30 (valorCadena -> CADENA .)
    PRINTF          reduce using rule 30 (valorCadena -> CADENA .)
    GETS            reduce using rule 30 (valorCadena -> CADENA .)
    LLAVE_IZ        reduce using rule 30 (valorCadena -> CADENA .)
    IF              reduce using rule 30 (valorCadena -> CADENA .)
    DEF             reduce using rule 30 (valorCadena -> CADENA .)
    CORCHETE_IZ     reduce using rule 30 (valorCadena -> CADENA .)
    WHILE           reduce using rule 30 (valorCadena -> CADENA .)
    CASE            reduce using rule 30 (valorCadena -> CADENA .)
    UNTIL           reduce using rule 30 (valorCadena -> CADENA .)
    PARENTESIS_IZ   reduce using rule 30 (valorCadena -> CADENA .)
    SIMBOLO         reduce using rule 30 (valorCadena -> CADENA .)
    FLOTANTE        reduce using rule 30 (valorCadena -> CADENA .)
    ENTERO          reduce using rule 30 (valorCadena -> CADENA .)
    WHEN            reduce using rule 30 (valorCadena -> CADENA .)
    CLASS           reduce using rule 30 (valorCadena -> CADENA .)
    CADENA          reduce using rule 30 (valorCadena -> CADENA .)
    $end            reduce using rule 30 (valorCadena -> CADENA .)
    END             reduce using rule 30 (valorCadena -> CADENA .)
    VARIABLECLASE   reduce using rule 30 (valorCadena -> CADENA .)
    DO              reduce using rule 30 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 30 (valorCadena -> CADENA .)
    ELSE            reduce using rule 30 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 30 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 30 (valorCadena -> CADENA .)


state 30

    (25) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    NAVE            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    PRINTF          reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    DEF             reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    CASE            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    UNTIL           reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    CLASS           reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    CADENA          reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    Y_SIGNO         reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    O_SIGNO         reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 25 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_DER  reduce using rule 25 (valorSimbolo -> SIMBOLO .)


state 31

    (61) impresion -> valor_print . valores
    (51) valores -> . valor
    (52) valores -> . valor COMA valores
    (53) valores -> . valor estructura_ifUnaLinea
    (56) valor -> . CADENA
    (57) valor -> . valorNumerico
    (58) valor -> . VARIABLE
    (59) valor -> . VARIABLECLASE
    (60) valor -> . SIMBOLO
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 76
    VARIABLECLASE   shift and go to state 77
    SIMBOLO         shift and go to state 78
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valores                        shift and go to state 72
    valor                          shift and go to state 73
    valorNumerico                  shift and go to state 75

state 32

    (90) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (49) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 79
    CADENA          reduce using rule 49 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 49 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 49 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 49 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 49 (valor_print -> PRINT .)
    ENTERO          reduce using rule 49 (valor_print -> PRINT .)


state 33

    (46) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 82
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    operacionAritmetica            shift and go to state 80
    expresionNumerica              shift and go to state 25
    valorNumerico                  shift and go to state 81

state 34

    (91) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> PUTS .
    (50) valor_print -> PUTS .

  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! reduce/reduce conflict for CADENA resolved using rule 50 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 50 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 50 (valor_print -> PUTS .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 50 (valor_print -> PUTS .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 50 (valor_print -> PUTS .)
  ! reduce/reduce conflict for ENTERO resolved using rule 50 (valor_print -> PUTS .)
    PARENTESIS_IZ   shift and go to state 83
    PRINT           reduce using rule 92 (impresion_vacia -> PUTS .)
    PUTS            reduce using rule 92 (impresion_vacia -> PUTS .)
    PRINTF          reduce using rule 92 (impresion_vacia -> PUTS .)
    GETS            reduce using rule 92 (impresion_vacia -> PUTS .)
    LLAVE_IZ        reduce using rule 92 (impresion_vacia -> PUTS .)
    IF              reduce using rule 92 (impresion_vacia -> PUTS .)
    DEF             reduce using rule 92 (impresion_vacia -> PUTS .)
    CORCHETE_IZ     reduce using rule 92 (impresion_vacia -> PUTS .)
    WHILE           reduce using rule 92 (impresion_vacia -> PUTS .)
    CASE            reduce using rule 92 (impresion_vacia -> PUTS .)
    UNTIL           reduce using rule 92 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 92 (impresion_vacia -> PUTS .)
    CLASS           reduce using rule 92 (impresion_vacia -> PUTS .)
    $end            reduce using rule 92 (impresion_vacia -> PUTS .)
    DO              reduce using rule 92 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 92 (impresion_vacia -> PUTS .)
    END             reduce using rule 92 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 92 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 92 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 50 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 50 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 50 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 50 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 50 (valor_print -> PUTS .)
    ENTERO          reduce using rule 50 (valor_print -> PUTS .)

  ! VARIABLE        [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! PARENTESIS_IZ   [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! SIMBOLO         [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! FLOTANTE        [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! ENTERO          [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! CADENA          [ reduce using rule 92 (impresion_vacia -> PUTS .) ]
  ! VARIABLECLASE   [ reduce using rule 92 (impresion_vacia -> PUTS .) ]


state 35

    (93) impresion_vacia -> PRINTF . PARENTESIS_IZ PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 84


state 36

    (103) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 85

state 37

    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (44) expresionNumerica -> valorNumerico .
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 86

state 38

    (108) solicitudDatosTeclado -> GETS .
    (109) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    VARIABLE        reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    PRINT           reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    PUTS            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    PRINTF          reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    GETS            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    LLAVE_IZ        reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    IF              reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    DEF             reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    CORCHETE_IZ     reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    WHILE           reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    CASE            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    UNTIL           reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    PARENTESIS_IZ   reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    SIMBOLO         reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    FLOTANTE        reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    ENTERO          reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    CLASS           reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    CADENA          reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    $end            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    VARIABLECLASE   reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 108 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 87


state 39

    (150) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (151) hashes -> LLAVE_IZ . LLAVE_DER
    (156) elemento_hash -> . claveValor
    (157) elemento_hash -> . claveValor COMA elemento_hash
    (152) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (153) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (154) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (155) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 89
    VARIABLE        shift and go to state 91
    CADENA          shift and go to state 92

    elemento_hash                  shift and go to state 88
    claveValor                     shift and go to state 90

state 40

    (127) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (125) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    condicionIf                    shift and go to state 93
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 41

    (110) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> DEF . VARIABLE declaraciones END

    VARIABLE        shift and go to state 98


state 42

    (84) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (85) array -> CORCHETE_IZ . CORCHETE_DER
    (77) elementos_array -> . elemento_array COMA elementos_array
    (78) elementos_array -> . elemento_array
    (79) elemento_array -> . CADENA
    (80) elemento_array -> . ENTERO
    (81) elemento_array -> . FLOTANTE
    (82) elemento_array -> . array
    (83) elemento_array -> . VARIABLE
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 100
    CADENA          shift and go to state 102
    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104
    VARIABLE        shift and go to state 106
    CORCHETE_IZ     shift and go to state 42

    elementos_array                shift and go to state 99
    elemento_array                 shift and go to state 101
    array                          shift and go to state 105

state 43

    (143) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresiones_booleanas          shift and go to state 107
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 44

    (145) sentencia_case -> CASE . declaraciones sentencia_when END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 108
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 45

    (146) sentencias_when -> sentencia_when .
    (147) sentencias_when -> sentencia_when . sentencias_when
    (146) sentencias_when -> . sentencia_when
    (147) sentencias_when -> . sentencia_when sentencias_when
    (148) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

  ! shift/reduce conflict for WHEN resolved as shift
    VARIABLE        reduce using rule 146 (sentencias_when -> sentencia_when .)
    PRINT           reduce using rule 146 (sentencias_when -> sentencia_when .)
    PUTS            reduce using rule 146 (sentencias_when -> sentencia_when .)
    PRINTF          reduce using rule 146 (sentencias_when -> sentencia_when .)
    GETS            reduce using rule 146 (sentencias_when -> sentencia_when .)
    LLAVE_IZ        reduce using rule 146 (sentencias_when -> sentencia_when .)
    IF              reduce using rule 146 (sentencias_when -> sentencia_when .)
    DEF             reduce using rule 146 (sentencias_when -> sentencia_when .)
    CORCHETE_IZ     reduce using rule 146 (sentencias_when -> sentencia_when .)
    WHILE           reduce using rule 146 (sentencias_when -> sentencia_when .)
    CASE            reduce using rule 146 (sentencias_when -> sentencia_when .)
    UNTIL           reduce using rule 146 (sentencias_when -> sentencia_when .)
    PARENTESIS_IZ   reduce using rule 146 (sentencias_when -> sentencia_when .)
    SIMBOLO         reduce using rule 146 (sentencias_when -> sentencia_when .)
    FLOTANTE        reduce using rule 146 (sentencias_when -> sentencia_when .)
    ENTERO          reduce using rule 146 (sentencias_when -> sentencia_when .)
    CLASS           reduce using rule 146 (sentencias_when -> sentencia_when .)
    CADENA          reduce using rule 146 (sentencias_when -> sentencia_when .)
    $end            reduce using rule 146 (sentencias_when -> sentencia_when .)
    END             reduce using rule 146 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 51

  ! WHEN            [ reduce using rule 146 (sentencias_when -> sentencia_when .) ]

    sentencia_when                 shift and go to state 45
    sentencias_when                shift and go to state 124

state 46

    (149) sentencia_until -> UNTIL . declaracion DO declaracion END
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 125
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 47

    (163) definicion_clase -> encabezadoClase . cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 129

    cuerpoVariables                shift and go to state 126
    asignacion_clase               shift and go to state 127
    asignacion                     shift and go to state 128

state 48

    (32) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 130


state 49

    (34) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 34 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 34 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PRINTF          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DEF             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    CORCHETE_IZ     reduce using rule 34 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    CASE            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    UNTIL           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 34 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 34 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    CLASS           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    CADENA          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 34 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 34 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 34 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 34 (valorNumerico -> FLOTANTE .)


state 50

    (35) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 35 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 35 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 35 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 35 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 35 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 35 (valorNumerico -> ENTERO .)
    IF              reduce using rule 35 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 35 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 35 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 35 (valorNumerico -> ENTERO .)
    PRINTF          reduce using rule 35 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 35 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 35 (valorNumerico -> ENTERO .)
    DEF             reduce using rule 35 (valorNumerico -> ENTERO .)
    CORCHETE_IZ     reduce using rule 35 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 35 (valorNumerico -> ENTERO .)
    CASE            reduce using rule 35 (valorNumerico -> ENTERO .)
    UNTIL           reduce using rule 35 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 35 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 35 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 35 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 35 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 35 (valorNumerico -> ENTERO .)
    CLASS           reduce using rule 35 (valorNumerico -> ENTERO .)
    CADENA          reduce using rule 35 (valorNumerico -> ENTERO .)
    $end            reduce using rule 35 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 35 (valorNumerico -> ENTERO .)
    DO              reduce using rule 35 (valorNumerico -> ENTERO .)
    END             reduce using rule 35 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 35 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 35 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 35 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 35 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 35 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 35 (valorNumerico -> ENTERO .)


state 51

    (148) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 131
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 52

    (161) encabezadoClase -> CLASS . ID_CLASE
    (162) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 132


state 53

    (3) cuerpoInstruccion -> cuerpo cuerpoInstruccion .

    $end            reduce using rule 3 (cuerpoInstruccion -> cuerpo cuerpoInstruccion .)


state 54

    (48) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 82
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresionNumerica              shift and go to state 133
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 134

state 55

    (38) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MAS .)
    VARIABLE        reduce using rule 38 (operadores -> MAS .)
    FLOTANTE        reduce using rule 38 (operadores -> MAS .)
    ENTERO          reduce using rule 38 (operadores -> MAS .)


state 56

    (39) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> MENOS .)
    VARIABLE        reduce using rule 39 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 39 (operadores -> MENOS .)
    ENTERO          reduce using rule 39 (operadores -> MENOS .)


state 57

    (40) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 40 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 40 (operadores -> DIVISION .)
    ENTERO          reduce using rule 40 (operadores -> DIVISION .)


state 58

    (41) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 41 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 41 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 41 (operadores -> MULTIPLICACION .)


state 59

    (42) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 42 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 42 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 42 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 42 (operadores -> EXPONENCIACION .)


state 60

    (43) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 43 (operadores -> MODULO .)
    VARIABLE        reduce using rule 43 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 43 (operadores -> MODULO .)
    ENTERO          reduce using rule 43 (operadores -> MODULO .)


state 61

    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 136

    valorCadena                    shift and go to state 135

state 62

    (68) asignacion -> VARIABLE IGUAL . CADENA
    (69) asignacion -> VARIABLE IGUAL . expresionNumerica
    (70) asignacion -> VARIABLE IGUAL . hashes
    (71) asignacion -> VARIABLE IGUAL . SIMBOLO
    (72) asignacion -> VARIABLE IGUAL . array
    (73) asignacion -> VARIABLE IGUAL . input_concatenacion
    (74) asignacion -> VARIABLE IGUAL . booleanos
    (75) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (76) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (54) booleanos -> . TRUE
    (55) booleanos -> . FALSE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 138
    SIMBOLO         shift and go to state 141
    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 137
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    GETS            shift and go to state 38
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresionNumerica              shift and go to state 139
    hashes                         shift and go to state 140
    array                          shift and go to state 142
    input_concatenacion            shift and go to state 143
    booleanos                      shift and go to state 144
    solicitudDatosTeclado          shift and go to state 145
    entero_a_flotante              shift and go to state 146
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 48

state 63

    (105) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (106) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 149
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valorNumerico                  shift and go to state 150

state 64

    (117) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (118) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (86) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (158) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (37) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (29) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (113) funcionesArray -> . SORT
    (114) funcionesArray -> . FOR EACH
    (116) funcionesNumeros -> . TO_F

    DO              shift and go to state 153
    EACH            shift and go to state 154
    TO_F            shift and go to state 155
    CONCAT          shift and go to state 156
    SORT            shift and go to state 157
    FOR             shift and go to state 158

    funcionesArray                 shift and go to state 151
    funcionesNumeros               shift and go to state 152

state 65

    (94) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 94 (operadoresComparacion -> IGUAL_DOBLEP .)


state 66

    (95) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 95 (operadoresComparacion -> NAVE .)


state 67

    (96) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 96 (operadoresComparacion -> DIFERENTE .)


state 68

    (97) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 97 (operadoresComparacion -> MAYOR_QUE .)


state 69

    (98) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 98 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 98 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 98 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 98 (operadoresComparacion -> MENOR_QUE .)


state 70

    (99) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 99 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 99 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 99 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 99 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 71

    (100) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 100 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 100 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 100 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 100 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 72

    (61) impresion -> valor_print valores .

    VARIABLE        reduce using rule 61 (impresion -> valor_print valores .)
    PRINT           reduce using rule 61 (impresion -> valor_print valores .)
    PUTS            reduce using rule 61 (impresion -> valor_print valores .)
    PRINTF          reduce using rule 61 (impresion -> valor_print valores .)
    GETS            reduce using rule 61 (impresion -> valor_print valores .)
    LLAVE_IZ        reduce using rule 61 (impresion -> valor_print valores .)
    IF              reduce using rule 61 (impresion -> valor_print valores .)
    DEF             reduce using rule 61 (impresion -> valor_print valores .)
    CORCHETE_IZ     reduce using rule 61 (impresion -> valor_print valores .)
    WHILE           reduce using rule 61 (impresion -> valor_print valores .)
    CASE            reduce using rule 61 (impresion -> valor_print valores .)
    UNTIL           reduce using rule 61 (impresion -> valor_print valores .)
    PARENTESIS_IZ   reduce using rule 61 (impresion -> valor_print valores .)
    SIMBOLO         reduce using rule 61 (impresion -> valor_print valores .)
    FLOTANTE        reduce using rule 61 (impresion -> valor_print valores .)
    ENTERO          reduce using rule 61 (impresion -> valor_print valores .)
    WHEN            reduce using rule 61 (impresion -> valor_print valores .)
    CLASS           reduce using rule 61 (impresion -> valor_print valores .)
    CADENA          reduce using rule 61 (impresion -> valor_print valores .)
    $end            reduce using rule 61 (impresion -> valor_print valores .)
    VARIABLECLASE   reduce using rule 61 (impresion -> valor_print valores .)
    DO              reduce using rule 61 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 61 (impresion -> valor_print valores .)
    END             reduce using rule 61 (impresion -> valor_print valores .)
    ELSE            reduce using rule 61 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 61 (impresion -> valor_print valores .)


state 73

    (51) valores -> valor .
    (52) valores -> valor . COMA valores
    (53) valores -> valor . estructura_ifUnaLinea
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 51 (valores -> valor .)
    PRINT           reduce using rule 51 (valores -> valor .)
    PUTS            reduce using rule 51 (valores -> valor .)
    PRINTF          reduce using rule 51 (valores -> valor .)
    GETS            reduce using rule 51 (valores -> valor .)
    LLAVE_IZ        reduce using rule 51 (valores -> valor .)
    DEF             reduce using rule 51 (valores -> valor .)
    CORCHETE_IZ     reduce using rule 51 (valores -> valor .)
    WHILE           reduce using rule 51 (valores -> valor .)
    CASE            reduce using rule 51 (valores -> valor .)
    UNTIL           reduce using rule 51 (valores -> valor .)
    PARENTESIS_IZ   reduce using rule 51 (valores -> valor .)
    SIMBOLO         reduce using rule 51 (valores -> valor .)
    FLOTANTE        reduce using rule 51 (valores -> valor .)
    ENTERO          reduce using rule 51 (valores -> valor .)
    WHEN            reduce using rule 51 (valores -> valor .)
    CLASS           reduce using rule 51 (valores -> valor .)
    CADENA          reduce using rule 51 (valores -> valor .)
    $end            reduce using rule 51 (valores -> valor .)
    VARIABLECLASE   reduce using rule 51 (valores -> valor .)
    DO              reduce using rule 51 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 51 (valores -> valor .)
    END             reduce using rule 51 (valores -> valor .)
    ELSE            reduce using rule 51 (valores -> valor .)
    ELSEIF          reduce using rule 51 (valores -> valor .)
    COMA            shift and go to state 159
    IF              shift and go to state 161

  ! IF              [ reduce using rule 51 (valores -> valor .) ]

    estructura_ifUnaLinea          shift and go to state 160

state 74

    (56) valor -> CADENA .

    COMA            reduce using rule 56 (valor -> CADENA .)
    IF              reduce using rule 56 (valor -> CADENA .)
    VARIABLE        reduce using rule 56 (valor -> CADENA .)
    PRINT           reduce using rule 56 (valor -> CADENA .)
    PUTS            reduce using rule 56 (valor -> CADENA .)
    PRINTF          reduce using rule 56 (valor -> CADENA .)
    GETS            reduce using rule 56 (valor -> CADENA .)
    LLAVE_IZ        reduce using rule 56 (valor -> CADENA .)
    DEF             reduce using rule 56 (valor -> CADENA .)
    CORCHETE_IZ     reduce using rule 56 (valor -> CADENA .)
    WHILE           reduce using rule 56 (valor -> CADENA .)
    CASE            reduce using rule 56 (valor -> CADENA .)
    UNTIL           reduce using rule 56 (valor -> CADENA .)
    PARENTESIS_IZ   reduce using rule 56 (valor -> CADENA .)
    SIMBOLO         reduce using rule 56 (valor -> CADENA .)
    FLOTANTE        reduce using rule 56 (valor -> CADENA .)
    ENTERO          reduce using rule 56 (valor -> CADENA .)
    WHEN            reduce using rule 56 (valor -> CADENA .)
    CLASS           reduce using rule 56 (valor -> CADENA .)
    CADENA          reduce using rule 56 (valor -> CADENA .)
    $end            reduce using rule 56 (valor -> CADENA .)
    VARIABLECLASE   reduce using rule 56 (valor -> CADENA .)
    DO              reduce using rule 56 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> CADENA .)
    END             reduce using rule 56 (valor -> CADENA .)
    ELSE            reduce using rule 56 (valor -> CADENA .)
    ELSEIF          reduce using rule 56 (valor -> CADENA .)


state 75

    (57) valor -> valorNumerico .

    COMA            reduce using rule 57 (valor -> valorNumerico .)
    IF              reduce using rule 57 (valor -> valorNumerico .)
    VARIABLE        reduce using rule 57 (valor -> valorNumerico .)
    PRINT           reduce using rule 57 (valor -> valorNumerico .)
    PUTS            reduce using rule 57 (valor -> valorNumerico .)
    PRINTF          reduce using rule 57 (valor -> valorNumerico .)
    GETS            reduce using rule 57 (valor -> valorNumerico .)
    LLAVE_IZ        reduce using rule 57 (valor -> valorNumerico .)
    DEF             reduce using rule 57 (valor -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 57 (valor -> valorNumerico .)
    WHILE           reduce using rule 57 (valor -> valorNumerico .)
    CASE            reduce using rule 57 (valor -> valorNumerico .)
    UNTIL           reduce using rule 57 (valor -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 57 (valor -> valorNumerico .)
    SIMBOLO         reduce using rule 57 (valor -> valorNumerico .)
    FLOTANTE        reduce using rule 57 (valor -> valorNumerico .)
    ENTERO          reduce using rule 57 (valor -> valorNumerico .)
    WHEN            reduce using rule 57 (valor -> valorNumerico .)
    CLASS           reduce using rule 57 (valor -> valorNumerico .)
    CADENA          reduce using rule 57 (valor -> valorNumerico .)
    $end            reduce using rule 57 (valor -> valorNumerico .)
    VARIABLECLASE   reduce using rule 57 (valor -> valorNumerico .)
    DO              reduce using rule 57 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> valorNumerico .)
    END             reduce using rule 57 (valor -> valorNumerico .)
    ELSE            reduce using rule 57 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 57 (valor -> valorNumerico .)


state 76

    (58) valor -> VARIABLE .

    COMA            reduce using rule 58 (valor -> VARIABLE .)
    IF              reduce using rule 58 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 58 (valor -> VARIABLE .)
    PRINT           reduce using rule 58 (valor -> VARIABLE .)
    PUTS            reduce using rule 58 (valor -> VARIABLE .)
    PRINTF          reduce using rule 58 (valor -> VARIABLE .)
    GETS            reduce using rule 58 (valor -> VARIABLE .)
    LLAVE_IZ        reduce using rule 58 (valor -> VARIABLE .)
    DEF             reduce using rule 58 (valor -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 58 (valor -> VARIABLE .)
    WHILE           reduce using rule 58 (valor -> VARIABLE .)
    CASE            reduce using rule 58 (valor -> VARIABLE .)
    UNTIL           reduce using rule 58 (valor -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 58 (valor -> VARIABLE .)
    SIMBOLO         reduce using rule 58 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 58 (valor -> VARIABLE .)
    ENTERO          reduce using rule 58 (valor -> VARIABLE .)
    WHEN            reduce using rule 58 (valor -> VARIABLE .)
    CLASS           reduce using rule 58 (valor -> VARIABLE .)
    CADENA          reduce using rule 58 (valor -> VARIABLE .)
    $end            reduce using rule 58 (valor -> VARIABLE .)
    VARIABLECLASE   reduce using rule 58 (valor -> VARIABLE .)
    DO              reduce using rule 58 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 58 (valor -> VARIABLE .)
    END             reduce using rule 58 (valor -> VARIABLE .)
    ELSE            reduce using rule 58 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 58 (valor -> VARIABLE .)


state 77

    (59) valor -> VARIABLECLASE .

    COMA            reduce using rule 59 (valor -> VARIABLECLASE .)
    IF              reduce using rule 59 (valor -> VARIABLECLASE .)
    VARIABLE        reduce using rule 59 (valor -> VARIABLECLASE .)
    PRINT           reduce using rule 59 (valor -> VARIABLECLASE .)
    PUTS            reduce using rule 59 (valor -> VARIABLECLASE .)
    PRINTF          reduce using rule 59 (valor -> VARIABLECLASE .)
    GETS            reduce using rule 59 (valor -> VARIABLECLASE .)
    LLAVE_IZ        reduce using rule 59 (valor -> VARIABLECLASE .)
    DEF             reduce using rule 59 (valor -> VARIABLECLASE .)
    CORCHETE_IZ     reduce using rule 59 (valor -> VARIABLECLASE .)
    WHILE           reduce using rule 59 (valor -> VARIABLECLASE .)
    CASE            reduce using rule 59 (valor -> VARIABLECLASE .)
    UNTIL           reduce using rule 59 (valor -> VARIABLECLASE .)
    PARENTESIS_IZ   reduce using rule 59 (valor -> VARIABLECLASE .)
    SIMBOLO         reduce using rule 59 (valor -> VARIABLECLASE .)
    FLOTANTE        reduce using rule 59 (valor -> VARIABLECLASE .)
    ENTERO          reduce using rule 59 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 59 (valor -> VARIABLECLASE .)
    CLASS           reduce using rule 59 (valor -> VARIABLECLASE .)
    CADENA          reduce using rule 59 (valor -> VARIABLECLASE .)
    $end            reduce using rule 59 (valor -> VARIABLECLASE .)
    VARIABLECLASE   reduce using rule 59 (valor -> VARIABLECLASE .)
    DO              reduce using rule 59 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 59 (valor -> VARIABLECLASE .)
    END             reduce using rule 59 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 59 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 59 (valor -> VARIABLECLASE .)


state 78

    (60) valor -> SIMBOLO .

    COMA            reduce using rule 60 (valor -> SIMBOLO .)
    IF              reduce using rule 60 (valor -> SIMBOLO .)
    VARIABLE        reduce using rule 60 (valor -> SIMBOLO .)
    PRINT           reduce using rule 60 (valor -> SIMBOLO .)
    PUTS            reduce using rule 60 (valor -> SIMBOLO .)
    PRINTF          reduce using rule 60 (valor -> SIMBOLO .)
    GETS            reduce using rule 60 (valor -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 60 (valor -> SIMBOLO .)
    DEF             reduce using rule 60 (valor -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 60 (valor -> SIMBOLO .)
    WHILE           reduce using rule 60 (valor -> SIMBOLO .)
    CASE            reduce using rule 60 (valor -> SIMBOLO .)
    UNTIL           reduce using rule 60 (valor -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 60 (valor -> SIMBOLO .)
    SIMBOLO         reduce using rule 60 (valor -> SIMBOLO .)
    FLOTANTE        reduce using rule 60 (valor -> SIMBOLO .)
    ENTERO          reduce using rule 60 (valor -> SIMBOLO .)
    WHEN            reduce using rule 60 (valor -> SIMBOLO .)
    CLASS           reduce using rule 60 (valor -> SIMBOLO .)
    CADENA          reduce using rule 60 (valor -> SIMBOLO .)
    $end            reduce using rule 60 (valor -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 60 (valor -> SIMBOLO .)
    DO              reduce using rule 60 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 60 (valor -> SIMBOLO .)
    END             reduce using rule 60 (valor -> SIMBOLO .)
    ELSE            reduce using rule 60 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 60 (valor -> SIMBOLO .)


state 79

    (90) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 162


state 80

    (46) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (45) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 163
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 81

    (44) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    VARIABLE        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PRINT           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PUTS            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PRINTF          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    GETS            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    LLAVE_IZ        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    IF              reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DEF             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 44 (expresionNumerica -> valorNumerico .)
    WHILE           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    CASE            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    UNTIL           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 44 (expresionNumerica -> valorNumerico .)
    SIMBOLO         reduce using rule 44 (expresionNumerica -> valorNumerico .)
    FLOTANTE        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    ENTERO          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    CLASS           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    CADENA          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    VARIABLECLASE   reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 44 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> valorNumerico .)


state 82

    (47) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 47 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> VARIABLE .)


state 83

    (91) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 164


state 84

    (93) impresion_vacia -> PRINTF PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 165


state 85

    (103) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 30
    VARIABLE        shift and go to state 167

    valorSimbolo                   shift and go to state 166

state 86

    (104) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (107) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 169
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valorNumerico                  shift and go to state 168

state 87

    (109) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (115) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 171

    funcionesFormatoImpresion      shift and go to state 170

state 88

    (150) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 172


state 89

    (151) hashes -> LLAVE_IZ LLAVE_DER .

    VARIABLE        reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINT           reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    PUTS            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINTF          reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    GETS            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    LLAVE_IZ        reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    IF              reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    DEF             reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHILE           reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    CASE            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    UNTIL           reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    SIMBOLO         reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    FLOTANTE        reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    ENTERO          reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    CLASS           reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    CADENA          reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    $end            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLECLASE   reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 151 (hashes -> LLAVE_IZ LLAVE_DER .)


state 90

    (156) elemento_hash -> claveValor .
    (157) elemento_hash -> claveValor . COMA elemento_hash

    LLAVE_DER       reduce using rule 156 (elemento_hash -> claveValor .)
    COMA            shift and go to state 173


state 91

    (152) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (153) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 174


state 92

    (154) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (155) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 175


state 93

    (127) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (125) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (126) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 176
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 94

    (121) condicionIf -> expresiones_booleanas .
    (123) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (101) funcionesComparacion -> . Y_SIGNO
    (102) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    PRINTF          reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 121 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 178
    O_SIGNO         shift and go to state 179

    funcionesComparacion           shift and go to state 177

state 95

    (122) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 180


state 96

    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 86

state 97

    (105) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (26) valorSimbolo -> VARIABLE .
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

  ! IGUAL_DOBLEP    [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 63

state 98

    (110) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> DEF VARIABLE . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 181
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 182
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 99

    (84) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 183


state 100

    (85) array -> CORCHETE_IZ CORCHETE_DER .

    VARIABLE        reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINT           reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    PUTS            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINTF          reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    GETS            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    IF              reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    DEF             reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHILE           reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    CASE            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    UNTIL           reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    SIMBOLO         reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    FLOTANTE        reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    ENTERO          reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    CLASS           reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    CADENA          reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    $end            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 85 (array -> CORCHETE_IZ CORCHETE_DER .)


state 101

    (77) elementos_array -> elemento_array . COMA elementos_array
    (78) elementos_array -> elemento_array .

    COMA            shift and go to state 184
    CORCHETE_DER    reduce using rule 78 (elementos_array -> elemento_array .)


state 102

    (79) elemento_array -> CADENA .

    COMA            reduce using rule 79 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 79 (elemento_array -> CADENA .)


state 103

    (80) elemento_array -> ENTERO .

    COMA            reduce using rule 80 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 80 (elemento_array -> ENTERO .)


state 104

    (81) elemento_array -> FLOTANTE .

    COMA            reduce using rule 81 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 81 (elemento_array -> FLOTANTE .)


state 105

    (82) elemento_array -> array .

    COMA            reduce using rule 82 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 82 (elemento_array -> array .)


state 106

    (83) elemento_array -> VARIABLE .

    COMA            reduce using rule 83 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 83 (elemento_array -> VARIABLE .)


state 107

    (143) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (144) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 185


state 108

    (145) sentencia_case -> CASE declaraciones . sentencia_when END
    (148) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 186

state 109

    (141) declaraciones -> declaracion .
    (142) declaraciones -> declaracion . declaraciones
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    WHEN            reduce using rule 141 (declaraciones -> declaracion .)
    END             reduce using rule 141 (declaraciones -> declaracion .)
    ELSE            reduce using rule 141 (declaraciones -> declaracion .)
    ELSEIF          reduce using rule 141 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 109
    declaraciones                  shift and go to state 187
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 110

    (130) declaracion -> operacionAritmetica .
    (45) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 130 (declaracion -> operacionAritmetica .)
    PRINT           reduce using rule 130 (declaracion -> operacionAritmetica .)
    PUTS            reduce using rule 130 (declaracion -> operacionAritmetica .)
    PRINTF          reduce using rule 130 (declaracion -> operacionAritmetica .)
    GETS            reduce using rule 130 (declaracion -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 130 (declaracion -> operacionAritmetica .)
    IF              reduce using rule 130 (declaracion -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 130 (declaracion -> operacionAritmetica .)
    WHILE           reduce using rule 130 (declaracion -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 130 (declaracion -> operacionAritmetica .)
    SIMBOLO         reduce using rule 130 (declaracion -> operacionAritmetica .)
    FLOTANTE        reduce using rule 130 (declaracion -> operacionAritmetica .)
    ENTERO          reduce using rule 130 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 130 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 130 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> operacionAritmetica .)
    END             reduce using rule 130 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 130 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 130 (declaracion -> operacionAritmetica .)
    DEF             reduce using rule 130 (declaracion -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 130 (declaracion -> operacionAritmetica .)
    CASE            reduce using rule 130 (declaracion -> operacionAritmetica .)
    UNTIL           reduce using rule 130 (declaracion -> operacionAritmetica .)
    CLASS           reduce using rule 130 (declaracion -> operacionAritmetica .)
    CADENA          reduce using rule 130 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 130 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 111

    (131) declaracion -> asignacion .

    VARIABLE        reduce using rule 131 (declaracion -> asignacion .)
    PRINT           reduce using rule 131 (declaracion -> asignacion .)
    PUTS            reduce using rule 131 (declaracion -> asignacion .)
    PRINTF          reduce using rule 131 (declaracion -> asignacion .)
    GETS            reduce using rule 131 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 131 (declaracion -> asignacion .)
    IF              reduce using rule 131 (declaracion -> asignacion .)
    VARIABLECLASE   reduce using rule 131 (declaracion -> asignacion .)
    WHILE           reduce using rule 131 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 131 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 131 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 131 (declaracion -> asignacion .)
    ENTERO          reduce using rule 131 (declaracion -> asignacion .)
    WHEN            reduce using rule 131 (declaracion -> asignacion .)
    DO              reduce using rule 131 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> asignacion .)
    END             reduce using rule 131 (declaracion -> asignacion .)
    ELSE            reduce using rule 131 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 131 (declaracion -> asignacion .)
    DEF             reduce using rule 131 (declaracion -> asignacion .)
    CORCHETE_IZ     reduce using rule 131 (declaracion -> asignacion .)
    CASE            reduce using rule 131 (declaracion -> asignacion .)
    UNTIL           reduce using rule 131 (declaracion -> asignacion .)
    CLASS           reduce using rule 131 (declaracion -> asignacion .)
    CADENA          reduce using rule 131 (declaracion -> asignacion .)
    $end            reduce using rule 131 (declaracion -> asignacion .)


state 112

    (132) declaracion -> impresion .

    VARIABLE        reduce using rule 132 (declaracion -> impresion .)
    PRINT           reduce using rule 132 (declaracion -> impresion .)
    PUTS            reduce using rule 132 (declaracion -> impresion .)
    PRINTF          reduce using rule 132 (declaracion -> impresion .)
    GETS            reduce using rule 132 (declaracion -> impresion .)
    LLAVE_IZ        reduce using rule 132 (declaracion -> impresion .)
    IF              reduce using rule 132 (declaracion -> impresion .)
    VARIABLECLASE   reduce using rule 132 (declaracion -> impresion .)
    WHILE           reduce using rule 132 (declaracion -> impresion .)
    PARENTESIS_IZ   reduce using rule 132 (declaracion -> impresion .)
    SIMBOLO         reduce using rule 132 (declaracion -> impresion .)
    FLOTANTE        reduce using rule 132 (declaracion -> impresion .)
    ENTERO          reduce using rule 132 (declaracion -> impresion .)
    WHEN            reduce using rule 132 (declaracion -> impresion .)
    DO              reduce using rule 132 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> impresion .)
    END             reduce using rule 132 (declaracion -> impresion .)
    ELSE            reduce using rule 132 (declaracion -> impresion .)
    ELSEIF          reduce using rule 132 (declaracion -> impresion .)
    DEF             reduce using rule 132 (declaracion -> impresion .)
    CORCHETE_IZ     reduce using rule 132 (declaracion -> impresion .)
    CASE            reduce using rule 132 (declaracion -> impresion .)
    UNTIL           reduce using rule 132 (declaracion -> impresion .)
    CLASS           reduce using rule 132 (declaracion -> impresion .)
    CADENA          reduce using rule 132 (declaracion -> impresion .)
    $end            reduce using rule 132 (declaracion -> impresion .)


state 113

    (133) declaracion -> impresion_vacia .

    VARIABLE        reduce using rule 133 (declaracion -> impresion_vacia .)
    PRINT           reduce using rule 133 (declaracion -> impresion_vacia .)
    PUTS            reduce using rule 133 (declaracion -> impresion_vacia .)
    PRINTF          reduce using rule 133 (declaracion -> impresion_vacia .)
    GETS            reduce using rule 133 (declaracion -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> impresion_vacia .)
    IF              reduce using rule 133 (declaracion -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 133 (declaracion -> impresion_vacia .)
    WHILE           reduce using rule 133 (declaracion -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> impresion_vacia .)
    SIMBOLO         reduce using rule 133 (declaracion -> impresion_vacia .)
    FLOTANTE        reduce using rule 133 (declaracion -> impresion_vacia .)
    ENTERO          reduce using rule 133 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 133 (declaracion -> impresion_vacia .)
    DO              reduce using rule 133 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> impresion_vacia .)
    END             reduce using rule 133 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 133 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 133 (declaracion -> impresion_vacia .)
    DEF             reduce using rule 133 (declaracion -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 133 (declaracion -> impresion_vacia .)
    CASE            reduce using rule 133 (declaracion -> impresion_vacia .)
    UNTIL           reduce using rule 133 (declaracion -> impresion_vacia .)
    CLASS           reduce using rule 133 (declaracion -> impresion_vacia .)
    CADENA          reduce using rule 133 (declaracion -> impresion_vacia .)
    $end            reduce using rule 133 (declaracion -> impresion_vacia .)


state 114

    (134) declaracion -> expresiones_booleanas .

    VARIABLE        reduce using rule 134 (declaracion -> expresiones_booleanas .)
    PRINT           reduce using rule 134 (declaracion -> expresiones_booleanas .)
    PUTS            reduce using rule 134 (declaracion -> expresiones_booleanas .)
    PRINTF          reduce using rule 134 (declaracion -> expresiones_booleanas .)
    GETS            reduce using rule 134 (declaracion -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 134 (declaracion -> expresiones_booleanas .)
    IF              reduce using rule 134 (declaracion -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 134 (declaracion -> expresiones_booleanas .)
    WHILE           reduce using rule 134 (declaracion -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 134 (declaracion -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 134 (declaracion -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 134 (declaracion -> expresiones_booleanas .)
    ENTERO          reduce using rule 134 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 134 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 134 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 134 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 134 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 134 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 134 (declaracion -> expresiones_booleanas .)
    DEF             reduce using rule 134 (declaracion -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 134 (declaracion -> expresiones_booleanas .)
    CASE            reduce using rule 134 (declaracion -> expresiones_booleanas .)
    UNTIL           reduce using rule 134 (declaracion -> expresiones_booleanas .)
    CLASS           reduce using rule 134 (declaracion -> expresiones_booleanas .)
    CADENA          reduce using rule 134 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 134 (declaracion -> expresiones_booleanas .)


state 115

    (135) declaracion -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    PRINT           reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    PUTS            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    GETS            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    IF              reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    WHILE           reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    DEF             reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    CASE            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    CLASS           reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    CADENA          reduce using rule 135 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 135 (declaracion -> solicitudDatosTeclado .)


state 116

    (136) declaracion -> hashes .

    VARIABLE        reduce using rule 136 (declaracion -> hashes .)
    PRINT           reduce using rule 136 (declaracion -> hashes .)
    PUTS            reduce using rule 136 (declaracion -> hashes .)
    PRINTF          reduce using rule 136 (declaracion -> hashes .)
    GETS            reduce using rule 136 (declaracion -> hashes .)
    LLAVE_IZ        reduce using rule 136 (declaracion -> hashes .)
    IF              reduce using rule 136 (declaracion -> hashes .)
    VARIABLECLASE   reduce using rule 136 (declaracion -> hashes .)
    WHILE           reduce using rule 136 (declaracion -> hashes .)
    PARENTESIS_IZ   reduce using rule 136 (declaracion -> hashes .)
    SIMBOLO         reduce using rule 136 (declaracion -> hashes .)
    FLOTANTE        reduce using rule 136 (declaracion -> hashes .)
    ENTERO          reduce using rule 136 (declaracion -> hashes .)
    WHEN            reduce using rule 136 (declaracion -> hashes .)
    DO              reduce using rule 136 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 136 (declaracion -> hashes .)
    END             reduce using rule 136 (declaracion -> hashes .)
    ELSE            reduce using rule 136 (declaracion -> hashes .)
    ELSEIF          reduce using rule 136 (declaracion -> hashes .)
    DEF             reduce using rule 136 (declaracion -> hashes .)
    CORCHETE_IZ     reduce using rule 136 (declaracion -> hashes .)
    CASE            reduce using rule 136 (declaracion -> hashes .)
    UNTIL           reduce using rule 136 (declaracion -> hashes .)
    CLASS           reduce using rule 136 (declaracion -> hashes .)
    CADENA          reduce using rule 136 (declaracion -> hashes .)
    $end            reduce using rule 136 (declaracion -> hashes .)


state 117

    (137) declaracion -> estructura_if .

    VARIABLE        reduce using rule 137 (declaracion -> estructura_if .)
    PRINT           reduce using rule 137 (declaracion -> estructura_if .)
    PUTS            reduce using rule 137 (declaracion -> estructura_if .)
    PRINTF          reduce using rule 137 (declaracion -> estructura_if .)
    GETS            reduce using rule 137 (declaracion -> estructura_if .)
    LLAVE_IZ        reduce using rule 137 (declaracion -> estructura_if .)
    IF              reduce using rule 137 (declaracion -> estructura_if .)
    VARIABLECLASE   reduce using rule 137 (declaracion -> estructura_if .)
    WHILE           reduce using rule 137 (declaracion -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 137 (declaracion -> estructura_if .)
    SIMBOLO         reduce using rule 137 (declaracion -> estructura_if .)
    FLOTANTE        reduce using rule 137 (declaracion -> estructura_if .)
    ENTERO          reduce using rule 137 (declaracion -> estructura_if .)
    WHEN            reduce using rule 137 (declaracion -> estructura_if .)
    DO              reduce using rule 137 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 137 (declaracion -> estructura_if .)
    END             reduce using rule 137 (declaracion -> estructura_if .)
    ELSE            reduce using rule 137 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 137 (declaracion -> estructura_if .)
    DEF             reduce using rule 137 (declaracion -> estructura_if .)
    CORCHETE_IZ     reduce using rule 137 (declaracion -> estructura_if .)
    CASE            reduce using rule 137 (declaracion -> estructura_if .)
    UNTIL           reduce using rule 137 (declaracion -> estructura_if .)
    CLASS           reduce using rule 137 (declaracion -> estructura_if .)
    CADENA          reduce using rule 137 (declaracion -> estructura_if .)
    $end            reduce using rule 137 (declaracion -> estructura_if .)


state 118

    (138) declaracion -> asignacion_clase .

    VARIABLE        reduce using rule 138 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 138 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 138 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 138 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 138 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 138 (declaracion -> asignacion_clase .)
    IF              reduce using rule 138 (declaracion -> asignacion_clase .)
    VARIABLECLASE   reduce using rule 138 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 138 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 138 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 138 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 138 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 138 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 138 (declaracion -> asignacion_clase .)
    DO              reduce using rule 138 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 138 (declaracion -> asignacion_clase .)
    END             reduce using rule 138 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 138 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 138 (declaracion -> asignacion_clase .)
    DEF             reduce using rule 138 (declaracion -> asignacion_clase .)
    CORCHETE_IZ     reduce using rule 138 (declaracion -> asignacion_clase .)
    CASE            reduce using rule 138 (declaracion -> asignacion_clase .)
    UNTIL           reduce using rule 138 (declaracion -> asignacion_clase .)
    CLASS           reduce using rule 138 (declaracion -> asignacion_clase .)
    CADENA          reduce using rule 138 (declaracion -> asignacion_clase .)
    $end            reduce using rule 138 (declaracion -> asignacion_clase .)


state 119

    (139) declaracion -> sentencia_while .

    VARIABLE        reduce using rule 139 (declaracion -> sentencia_while .)
    PRINT           reduce using rule 139 (declaracion -> sentencia_while .)
    PUTS            reduce using rule 139 (declaracion -> sentencia_while .)
    PRINTF          reduce using rule 139 (declaracion -> sentencia_while .)
    GETS            reduce using rule 139 (declaracion -> sentencia_while .)
    LLAVE_IZ        reduce using rule 139 (declaracion -> sentencia_while .)
    IF              reduce using rule 139 (declaracion -> sentencia_while .)
    VARIABLECLASE   reduce using rule 139 (declaracion -> sentencia_while .)
    WHILE           reduce using rule 139 (declaracion -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 139 (declaracion -> sentencia_while .)
    SIMBOLO         reduce using rule 139 (declaracion -> sentencia_while .)
    FLOTANTE        reduce using rule 139 (declaracion -> sentencia_while .)
    ENTERO          reduce using rule 139 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 139 (declaracion -> sentencia_while .)
    DO              reduce using rule 139 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 139 (declaracion -> sentencia_while .)
    END             reduce using rule 139 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 139 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 139 (declaracion -> sentencia_while .)
    DEF             reduce using rule 139 (declaracion -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 139 (declaracion -> sentencia_while .)
    CASE            reduce using rule 139 (declaracion -> sentencia_while .)
    UNTIL           reduce using rule 139 (declaracion -> sentencia_while .)
    CLASS           reduce using rule 139 (declaracion -> sentencia_while .)
    CADENA          reduce using rule 139 (declaracion -> sentencia_while .)
    $end            reduce using rule 139 (declaracion -> sentencia_while .)


state 120

    (140) declaracion -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    GETS            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    IF              reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    DEF             reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    CASE            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 140 (declaracion -> estructura_ifUnaLinea .)


state 121

    (68) asignacion -> VARIABLE . IGUAL CADENA
    (69) asignacion -> VARIABLE . IGUAL expresionNumerica
    (70) asignacion -> VARIABLE . IGUAL hashes
    (71) asignacion -> VARIABLE . IGUAL SIMBOLO
    (72) asignacion -> VARIABLE . IGUAL array
    (73) asignacion -> VARIABLE . IGUAL input_concatenacion
    (74) asignacion -> VARIABLE . IGUAL booleanos
    (75) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (76) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (105) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (67) asignacion_clase -> VARIABLE . IGUAL booleanos
    (47) expresionNumerica -> VARIABLE .
    (26) valorSimbolo -> VARIABLE .
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 188
    MAS             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

  ! IGUAL_DOBLEP    [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 63

state 122

    (125) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (127) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    condicionIf                    shift and go to state 189
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 123

    (62) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (63) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (64) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (65) asignacion_clase -> VARIABLECLASE . IGUAL array
    (66) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 190


state 124

    (147) sentencias_when -> sentencia_when sentencias_when .

    VARIABLE        reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    PRINT           reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    PUTS            reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    PRINTF          reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    GETS            reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    LLAVE_IZ        reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    IF              reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    DEF             reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    CORCHETE_IZ     reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    WHILE           reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    CASE            reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    UNTIL           reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    PARENTESIS_IZ   reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    SIMBOLO         reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    FLOTANTE        reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    ENTERO          reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    WHEN            reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    CLASS           reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    CADENA          reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    $end            reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 147 (sentencias_when -> sentencia_when sentencias_when .)


state 125

    (149) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 191


state 126

    (163) definicion_clase -> encabezadoClase cuerpoVariables . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    DEF             shift and go to state 192


state 127

    (164) cuerpoVariables -> asignacion_clase .
    (166) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    PRINT           reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    PUTS            reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    PRINTF          reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    GETS            reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    IF              reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    WHILE           reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    SIMBOLO         reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    FLOTANTE        reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    ENTERO          reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    END             reduce using rule 164 (cuerpoVariables -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 129

  ! VARIABLECLASE   [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 127
    cuerpoVariables                shift and go to state 193
    asignacion                     shift and go to state 128

state 128

    (165) cuerpoVariables -> asignacion .
    (167) cuerpoVariables -> asignacion . cuerpoVariables
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 165 (cuerpoVariables -> asignacion .)
    PRINT           reduce using rule 165 (cuerpoVariables -> asignacion .)
    PUTS            reduce using rule 165 (cuerpoVariables -> asignacion .)
    PRINTF          reduce using rule 165 (cuerpoVariables -> asignacion .)
    GETS            reduce using rule 165 (cuerpoVariables -> asignacion .)
    LLAVE_IZ        reduce using rule 165 (cuerpoVariables -> asignacion .)
    IF              reduce using rule 165 (cuerpoVariables -> asignacion .)
    WHILE           reduce using rule 165 (cuerpoVariables -> asignacion .)
    PARENTESIS_IZ   reduce using rule 165 (cuerpoVariables -> asignacion .)
    SIMBOLO         reduce using rule 165 (cuerpoVariables -> asignacion .)
    FLOTANTE        reduce using rule 165 (cuerpoVariables -> asignacion .)
    ENTERO          reduce using rule 165 (cuerpoVariables -> asignacion .)
    END             reduce using rule 165 (cuerpoVariables -> asignacion .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 129

  ! VARIABLECLASE   [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]

    asignacion                     shift and go to state 128
    cuerpoVariables                shift and go to state 194
    asignacion_clase               shift and go to state 127

state 129

    (67) asignacion_clase -> VARIABLE . IGUAL booleanos
    (68) asignacion -> VARIABLE . IGUAL CADENA
    (69) asignacion -> VARIABLE . IGUAL expresionNumerica
    (70) asignacion -> VARIABLE . IGUAL hashes
    (71) asignacion -> VARIABLE . IGUAL SIMBOLO
    (72) asignacion -> VARIABLE . IGUAL array
    (73) asignacion -> VARIABLE . IGUAL input_concatenacion
    (74) asignacion -> VARIABLE . IGUAL booleanos
    (75) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (76) asignacion -> VARIABLE . IGUAL entero_a_flotante

    IGUAL           shift and go to state 195


state 130

    (32) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 136

    valorCadena                    shift and go to state 196

state 131

    (148) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 197


state 132

    (161) encabezadoClase -> CLASS ID_CLASE .
    (162) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    VARIABLECLASE   reduce using rule 161 (encabezadoClase -> CLASS ID_CLASE .)
    VARIABLE        reduce using rule 161 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 198


state 133

    (48) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (48) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    VARIABLE        reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINT           reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PUTS            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINTF          reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    GETS            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    LLAVE_IZ        reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IF              reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DEF             reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CORCHETE_IZ     reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHILE           reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CASE            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    UNTIL           reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    SIMBOLO         reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    FLOTANTE        reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ENTERO          reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CLASS           reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CADENA          reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    $end            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    VARIABLECLASE   reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    DIVISION        shift and go to state 57
    MULTIPLICACION  shift and go to state 58
    EXPONENCIACION  shift and go to state 59
    MODULO          shift and go to state 60

  ! MAS             [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 48 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 54

state 134

    (45) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    VARIABLE        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PRINT           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PUTS            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PRINTF          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    GETS            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    IF              reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DEF             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    WHILE           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    CASE            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    UNTIL           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    SIMBOLO         reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    FLOTANTE        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    ENTERO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    CLASS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    CADENA          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 135

    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLE        reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINT           reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PUTS            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINTF          reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    GETS            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IF              reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DEF             reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHILE           reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CASE            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    UNTIL           reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ENTERO          reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CLASS           reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CADENA          reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 136

    (31) valorCadena -> VARIABLE .

    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)
    VARIABLE        reduce using rule 31 (valorCadena -> VARIABLE .)
    PRINT           reduce using rule 31 (valorCadena -> VARIABLE .)
    PUTS            reduce using rule 31 (valorCadena -> VARIABLE .)
    PRINTF          reduce using rule 31 (valorCadena -> VARIABLE .)
    GETS            reduce using rule 31 (valorCadena -> VARIABLE .)
    LLAVE_IZ        reduce using rule 31 (valorCadena -> VARIABLE .)
    IF              reduce using rule 31 (valorCadena -> VARIABLE .)
    DEF             reduce using rule 31 (valorCadena -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 31 (valorCadena -> VARIABLE .)
    WHILE           reduce using rule 31 (valorCadena -> VARIABLE .)
    CASE            reduce using rule 31 (valorCadena -> VARIABLE .)
    UNTIL           reduce using rule 31 (valorCadena -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 31 (valorCadena -> VARIABLE .)
    SIMBOLO         reduce using rule 31 (valorCadena -> VARIABLE .)
    FLOTANTE        reduce using rule 31 (valorCadena -> VARIABLE .)
    ENTERO          reduce using rule 31 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 31 (valorCadena -> VARIABLE .)
    CLASS           reduce using rule 31 (valorCadena -> VARIABLE .)
    CADENA          reduce using rule 31 (valorCadena -> VARIABLE .)
    $end            reduce using rule 31 (valorCadena -> VARIABLE .)
    END             reduce using rule 31 (valorCadena -> VARIABLE .)
    VARIABLECLASE   reduce using rule 31 (valorCadena -> VARIABLE .)
    DO              reduce using rule 31 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 31 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 31 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 31 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 31 (valorCadena -> VARIABLE .)


state 137

    (47) expresionNumerica -> VARIABLE .
    (37) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (29) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 31 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 199
    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 47 (expresionNumerica -> VARIABLE .) ]


state 138

    (68) asignacion -> VARIABLE IGUAL CADENA .
    (30) valorCadena -> CADENA .

    VARIABLE        reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINT           reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    PUTS            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINTF          reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    GETS            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    IF              reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    DEF             reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    WHILE           reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    CASE            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    UNTIL           reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    SIMBOLO         reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    FLOTANTE        reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    ENTERO          reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    CLASS           reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    CADENA          reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 30 (valorCadena -> CADENA .)


state 139

    (69) asignacion -> VARIABLE IGUAL expresionNumerica .
    (48) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    VARIABLE        reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINT           reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PUTS            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    GETS            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IF              reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DEF             reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHILE           reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CASE            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CLASS           reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CADENA          reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    DIVISION        shift and go to state 57
    MULTIPLICACION  shift and go to state 58
    EXPONENCIACION  shift and go to state 59
    MODULO          shift and go to state 60

    operadores                     shift and go to state 54

state 140

    (70) asignacion -> VARIABLE IGUAL hashes .

    VARIABLE        reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    PRINT           reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    PUTS            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    PRINTF          reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    GETS            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    IF              reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    DEF             reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    WHILE           reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    CASE            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    UNTIL           reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    SIMBOLO         reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    FLOTANTE        reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    ENTERO          reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    CLASS           reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    CADENA          reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL hashes .)


state 141

    (71) asignacion -> VARIABLE IGUAL SIMBOLO .

    VARIABLE        reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINT           reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PUTS            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINTF          reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    GETS            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    LLAVE_IZ        reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IF              reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DEF             reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CORCHETE_IZ     reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHILE           reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CASE            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    UNTIL           reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    SIMBOLO         reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    FLOTANTE        reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ENTERO          reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CLASS           reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CADENA          reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLECLASE   reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 71 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 142

    (72) asignacion -> VARIABLE IGUAL array .

    VARIABLE        reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    PRINT           reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    PUTS            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    PRINTF          reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    GETS            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    LLAVE_IZ        reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    IF              reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    DEF             reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    CORCHETE_IZ     reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    WHILE           reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    CASE            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    UNTIL           reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    SIMBOLO         reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    FLOTANTE        reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    ENTERO          reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    CLASS           reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    CADENA          reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    VARIABLECLASE   reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL array .)


state 143

    (73) asignacion -> VARIABLE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINT           reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PUTS            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    GETS            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IF              reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DEF             reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHILE           reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CASE            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CLASS           reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CADENA          reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 73 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 144

    (74) asignacion -> VARIABLE IGUAL booleanos .

    VARIABLE        reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .)


state 145

    (75) asignacion -> VARIABLE IGUAL solicitudDatosTeclado .

    VARIABLE        reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINT           reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PUTS            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINTF          reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    GETS            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IF              reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DEF             reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHILE           reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CASE            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    UNTIL           reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ENTERO          reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHEN            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CLASS           reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CADENA          reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    $end            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DO              reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    END             reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSE            reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSEIF          reduce using rule 75 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)


state 146

    (76) asignacion -> VARIABLE IGUAL entero_a_flotante .

    VARIABLE        reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINT           reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PUTS            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINTF          reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    GETS            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    LLAVE_IZ        reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IF              reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DEF             reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHILE           reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CASE            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    UNTIL           reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    SIMBOLO         reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    FLOTANTE        reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ENTERO          reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHEN            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CLASS           reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CADENA          reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    $end            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLECLASE   reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DO              reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IGUAL_DOBLEP    reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    END             reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSE            reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSEIF          reduce using rule 76 (asignacion -> VARIABLE IGUAL entero_a_flotante .)


state 147

    (54) booleanos -> TRUE .

    VARIABLE        reduce using rule 54 (booleanos -> TRUE .)
    PRINT           reduce using rule 54 (booleanos -> TRUE .)
    PUTS            reduce using rule 54 (booleanos -> TRUE .)
    PRINTF          reduce using rule 54 (booleanos -> TRUE .)
    GETS            reduce using rule 54 (booleanos -> TRUE .)
    LLAVE_IZ        reduce using rule 54 (booleanos -> TRUE .)
    IF              reduce using rule 54 (booleanos -> TRUE .)
    DEF             reduce using rule 54 (booleanos -> TRUE .)
    CORCHETE_IZ     reduce using rule 54 (booleanos -> TRUE .)
    WHILE           reduce using rule 54 (booleanos -> TRUE .)
    CASE            reduce using rule 54 (booleanos -> TRUE .)
    UNTIL           reduce using rule 54 (booleanos -> TRUE .)
    PARENTESIS_IZ   reduce using rule 54 (booleanos -> TRUE .)
    SIMBOLO         reduce using rule 54 (booleanos -> TRUE .)
    FLOTANTE        reduce using rule 54 (booleanos -> TRUE .)
    ENTERO          reduce using rule 54 (booleanos -> TRUE .)
    WHEN            reduce using rule 54 (booleanos -> TRUE .)
    CLASS           reduce using rule 54 (booleanos -> TRUE .)
    CADENA          reduce using rule 54 (booleanos -> TRUE .)
    $end            reduce using rule 54 (booleanos -> TRUE .)
    END             reduce using rule 54 (booleanos -> TRUE .)
    VARIABLECLASE   reduce using rule 54 (booleanos -> TRUE .)
    DO              reduce using rule 54 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 54 (booleanos -> TRUE .)
    ELSE            reduce using rule 54 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 54 (booleanos -> TRUE .)


state 148

    (55) booleanos -> FALSE .

    VARIABLE        reduce using rule 55 (booleanos -> FALSE .)
    PRINT           reduce using rule 55 (booleanos -> FALSE .)
    PUTS            reduce using rule 55 (booleanos -> FALSE .)
    PRINTF          reduce using rule 55 (booleanos -> FALSE .)
    GETS            reduce using rule 55 (booleanos -> FALSE .)
    LLAVE_IZ        reduce using rule 55 (booleanos -> FALSE .)
    IF              reduce using rule 55 (booleanos -> FALSE .)
    DEF             reduce using rule 55 (booleanos -> FALSE .)
    CORCHETE_IZ     reduce using rule 55 (booleanos -> FALSE .)
    WHILE           reduce using rule 55 (booleanos -> FALSE .)
    CASE            reduce using rule 55 (booleanos -> FALSE .)
    UNTIL           reduce using rule 55 (booleanos -> FALSE .)
    PARENTESIS_IZ   reduce using rule 55 (booleanos -> FALSE .)
    SIMBOLO         reduce using rule 55 (booleanos -> FALSE .)
    FLOTANTE        reduce using rule 55 (booleanos -> FALSE .)
    ENTERO          reduce using rule 55 (booleanos -> FALSE .)
    WHEN            reduce using rule 55 (booleanos -> FALSE .)
    CLASS           reduce using rule 55 (booleanos -> FALSE .)
    CADENA          reduce using rule 55 (booleanos -> FALSE .)
    $end            reduce using rule 55 (booleanos -> FALSE .)
    END             reduce using rule 55 (booleanos -> FALSE .)
    VARIABLECLASE   reduce using rule 55 (booleanos -> FALSE .)
    DO              reduce using rule 55 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 55 (booleanos -> FALSE .)
    ELSE            reduce using rule 55 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 55 (booleanos -> FALSE .)


state 149

    (105) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DEF             reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CASE            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    $end            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 105 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 150

    (106) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DEF             reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CASE            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    $end            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 151

    (117) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    VARIABLE        reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINT           reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PUTS            reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINTF          reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    GETS            reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    LLAVE_IZ        reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    IF              reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    DEF             reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CORCHETE_IZ     reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHILE           reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CASE            reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    UNTIL           reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PARENTESIS_IZ   reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    SIMBOLO         reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    FLOTANTE        reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    ENTERO          reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHEN            reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CLASS           reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CADENA          reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    $end            reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 117 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 152

    (118) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    VARIABLE        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINT           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PUTS            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINTF          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    GETS            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    LLAVE_IZ        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    IF              reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    DEF             reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CORCHETE_IZ     reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHILE           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CASE            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    UNTIL           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PARENTESIS_IZ   reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    SIMBOLO         reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    FLOTANTE        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    ENTERO          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHEN            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CLASS           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CADENA          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    $end            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 153

    (86) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 200


state 154

    (158) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 201


state 155

    (37) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (116) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for VARIABLE resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINT resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PUTS resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINTF resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for GETS resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for IF resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for DEF resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHILE resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CASE resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for UNTIL resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for ENTERO resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHEN resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CLASS resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CADENA resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for $end resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLE        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! VARIABLE        [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! PRINT           [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! PUTS            [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! PRINTF          [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! GETS            [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! LLAVE_IZ        [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! IF              [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! DEF             [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! CORCHETE_IZ     [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! WHILE           [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! CASE            [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! UNTIL           [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! PARENTESIS_IZ   [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! SIMBOLO         [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! FLOTANTE        [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! ENTERO          [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! WHEN            [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! CLASS           [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! CADENA          [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! $end            [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 116 (funcionesNumeros -> TO_F .) ]


state 156

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 202


state 157

    (113) funcionesArray -> SORT .

    VARIABLE        reduce using rule 113 (funcionesArray -> SORT .)
    PRINT           reduce using rule 113 (funcionesArray -> SORT .)
    PUTS            reduce using rule 113 (funcionesArray -> SORT .)
    PRINTF          reduce using rule 113 (funcionesArray -> SORT .)
    GETS            reduce using rule 113 (funcionesArray -> SORT .)
    LLAVE_IZ        reduce using rule 113 (funcionesArray -> SORT .)
    IF              reduce using rule 113 (funcionesArray -> SORT .)
    DEF             reduce using rule 113 (funcionesArray -> SORT .)
    CORCHETE_IZ     reduce using rule 113 (funcionesArray -> SORT .)
    WHILE           reduce using rule 113 (funcionesArray -> SORT .)
    CASE            reduce using rule 113 (funcionesArray -> SORT .)
    UNTIL           reduce using rule 113 (funcionesArray -> SORT .)
    PARENTESIS_IZ   reduce using rule 113 (funcionesArray -> SORT .)
    SIMBOLO         reduce using rule 113 (funcionesArray -> SORT .)
    FLOTANTE        reduce using rule 113 (funcionesArray -> SORT .)
    ENTERO          reduce using rule 113 (funcionesArray -> SORT .)
    WHEN            reduce using rule 113 (funcionesArray -> SORT .)
    CLASS           reduce using rule 113 (funcionesArray -> SORT .)
    CADENA          reduce using rule 113 (funcionesArray -> SORT .)
    $end            reduce using rule 113 (funcionesArray -> SORT .)
    END             reduce using rule 113 (funcionesArray -> SORT .)


state 158

    (114) funcionesArray -> FOR . EACH

    EACH            shift and go to state 203


state 159

    (52) valores -> valor COMA . valores
    (51) valores -> . valor
    (52) valores -> . valor COMA valores
    (53) valores -> . valor estructura_ifUnaLinea
    (56) valor -> . CADENA
    (57) valor -> . valorNumerico
    (58) valor -> . VARIABLE
    (59) valor -> . VARIABLECLASE
    (60) valor -> . SIMBOLO
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 76
    VARIABLECLASE   shift and go to state 77
    SIMBOLO         shift and go to state 78
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valor                          shift and go to state 73
    valores                        shift and go to state 204
    valorNumerico                  shift and go to state 75

state 160

    (53) valores -> valor estructura_ifUnaLinea .

    VARIABLE        reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    PRINT           reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    PUTS            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    PRINTF          reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    GETS            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    IF              reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    DEF             reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    WHILE           reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    CASE            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    UNTIL           reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    ENTERO          reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    CLASS           reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    CADENA          reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    $end            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 53 (valores -> valor estructura_ifUnaLinea .)


state 161

    (127) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    condicionIf                    shift and go to state 205
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 162

    (90) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 163

    (46) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLE        reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINT           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PUTS            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINTF          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    GETS            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IF              reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DEF             reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHILE           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CASE            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    UNTIL           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    SIMBOLO         reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    FLOTANTE        reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ENTERO          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CLASS           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CADENA          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 164

    (91) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 165

    (93) impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 93 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)


state 166

    (103) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    VARIABLE        reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINTF          reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DEF             reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CORCHETE_IZ     reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CASE            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    UNTIL           reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CLASS           reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CADENA          reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    $end            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 103 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 167

    (26) valorSimbolo -> VARIABLE .

    VARIABLE        reduce using rule 26 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 26 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    PRINTF          reduce using rule 26 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 26 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 26 (valorSimbolo -> VARIABLE .)
    DEF             reduce using rule 26 (valorSimbolo -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 26 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 26 (valorSimbolo -> VARIABLE .)
    CASE            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    UNTIL           reduce using rule 26 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 26 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 26 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 26 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 26 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    CLASS           reduce using rule 26 (valorSimbolo -> VARIABLE .)
    CADENA          reduce using rule 26 (valorSimbolo -> VARIABLE .)
    $end            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 26 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 26 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 26 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 26 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 26 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 26 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 26 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 26 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 26 (valorSimbolo -> VARIABLE .)


state 168

    (104) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DEF             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CASE            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    $end            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 169

    (107) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DEF             reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CASE            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    $end            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 107 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 170

    (109) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    VARIABLE        reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINT           reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PUTS            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINTF          reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    GETS            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    LLAVE_IZ        reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IF              reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DEF             reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CORCHETE_IZ     reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHILE           reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CASE            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    UNTIL           reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PARENTESIS_IZ   reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    SIMBOLO         reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    FLOTANTE        reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ENTERO          reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CLASS           reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CADENA          reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    $end            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLECLASE   reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 109 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 171

    (115) funcionesFormatoImpresion -> CHOMP .

    VARIABLE        reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    PRINT           reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    PUTS            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    PRINTF          reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    GETS            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    LLAVE_IZ        reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    IF              reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    DEF             reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    CORCHETE_IZ     reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    WHILE           reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    CASE            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    UNTIL           reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    PARENTESIS_IZ   reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    SIMBOLO         reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    FLOTANTE        reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    ENTERO          reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    CLASS           reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    CADENA          reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    $end            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLECLASE   reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 115 (funcionesFormatoImpresion -> CHOMP .)


state 172

    (150) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    VARIABLE        reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINT           reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PUTS            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINTF          reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    GETS            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    LLAVE_IZ        reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IF              reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DEF             reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHILE           reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CASE            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    UNTIL           reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    SIMBOLO         reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    FLOTANTE        reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ENTERO          reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CLASS           reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CADENA          reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    $end            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLECLASE   reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 150 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 173

    (157) elemento_hash -> claveValor COMA . elemento_hash
    (156) elemento_hash -> . claveValor
    (157) elemento_hash -> . claveValor COMA elemento_hash
    (152) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (153) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (154) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (155) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 91
    CADENA          shift and go to state 92

    claveValor                     shift and go to state 90
    elemento_hash                  shift and go to state 206

state 174

    (152) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (153) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 208
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valorNumerico                  shift and go to state 207

state 175

    (154) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (155) claveValor -> CADENA ASIGNA_HASH . CADENA
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 209
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    valorNumerico                  shift and go to state 210

state 176

    (127) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (125) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (126) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (128) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    END             shift and go to state 211
    ELSE            shift and go to state 212
    ELSEIF          shift and go to state 214

    estructura_secundaria_if       shift and go to state 213

state 177

    (123) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresiones_booleanas          shift and go to state 94
    condicionIf                    shift and go to state 215
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 178

    (101) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 101 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 101 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 101 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 101 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 101 (funcionesComparacion -> Y_SIGNO .)


state 179

    (102) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 102 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 102 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 102 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 102 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 102 (funcionesComparacion -> O_SIGNO .)


state 180

    (122) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresiones_booleanas          shift and go to state 216
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 181

    (110) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaraciones END
    (111) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaraciones END
    (46) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (119) argumentos -> . VARIABLE
    (120) argumentos -> . VARIABLE COMA argumentos
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    PARENTESIS_DER  shift and go to state 218
    VARIABLE        shift and go to state 217
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    argumentos                     shift and go to state 219
    operacionAritmetica            shift and go to state 80
    expresionNumerica              shift and go to state 25
    valorNumerico                  shift and go to state 81

state 182

    (112) funciones -> DEF VARIABLE declaraciones . END

    END             shift and go to state 220


state 183

    (84) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    VARIABLE        reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINT           reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PUTS            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINTF          reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    GETS            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IF              reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DEF             reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHILE           reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CASE            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    UNTIL           reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    SIMBOLO         reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    FLOTANTE        reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ENTERO          reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CLASS           reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CADENA          reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    $end            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 84 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 184

    (77) elementos_array -> elemento_array COMA . elementos_array
    (77) elementos_array -> . elemento_array COMA elementos_array
    (78) elementos_array -> . elemento_array
    (79) elemento_array -> . CADENA
    (80) elemento_array -> . ENTERO
    (81) elemento_array -> . FLOTANTE
    (82) elemento_array -> . array
    (83) elemento_array -> . VARIABLE
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 102
    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104
    VARIABLE        shift and go to state 106
    CORCHETE_IZ     shift and go to state 42

    elemento_array                 shift and go to state 101
    elementos_array                shift and go to state 221
    array                          shift and go to state 105

state 185

    (143) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (144) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    WHILE           shift and go to state 43
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresiones_booleanas          shift and go to state 114
    sentencia_while                shift and go to state 222
    declaracion                    shift and go to state 223
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 186

    (145) sentencia_case -> CASE declaraciones sentencia_when . END

    END             shift and go to state 224


state 187

    (142) declaraciones -> declaracion declaraciones .

    WHEN            reduce using rule 142 (declaraciones -> declaracion declaraciones .)
    END             reduce using rule 142 (declaraciones -> declaracion declaraciones .)
    ELSE            reduce using rule 142 (declaraciones -> declaracion declaraciones .)
    ELSEIF          reduce using rule 142 (declaraciones -> declaracion declaraciones .)


state 188

    (68) asignacion -> VARIABLE IGUAL . CADENA
    (69) asignacion -> VARIABLE IGUAL . expresionNumerica
    (70) asignacion -> VARIABLE IGUAL . hashes
    (71) asignacion -> VARIABLE IGUAL . SIMBOLO
    (72) asignacion -> VARIABLE IGUAL . array
    (73) asignacion -> VARIABLE IGUAL . input_concatenacion
    (74) asignacion -> VARIABLE IGUAL . booleanos
    (75) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (76) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (67) asignacion_clase -> VARIABLE IGUAL . booleanos
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (54) booleanos -> . TRUE
    (55) booleanos -> . FALSE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 138
    SIMBOLO         shift and go to state 141
    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 137
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    GETS            shift and go to state 38
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresionNumerica              shift and go to state 139
    hashes                         shift and go to state 140
    array                          shift and go to state 142
    input_concatenacion            shift and go to state 143
    booleanos                      shift and go to state 225
    solicitudDatosTeclado          shift and go to state 145
    entero_a_flotante              shift and go to state 146
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 48

state 189

    (125) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (126) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (127) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 226
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 190

    (62) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (63) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (64) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (65) asignacion_clase -> VARIABLECLASE IGUAL . array
    (66) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 227
    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 232
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresionNumerica              shift and go to state 228
    hashes                         shift and go to state 229
    array                          shift and go to state 230
    input_concatenacion            shift and go to state 231
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 48

state 191

    (149) sentencia_until -> UNTIL declaracion DO . declaracion END
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 233
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 192

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    INITIALIZE      shift and go to state 234


state 193

    (166) cuerpoVariables -> asignacion_clase cuerpoVariables .

    DEF             reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLECLASE   reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLE        reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINT           reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PUTS            reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINTF          reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    GETS            reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    LLAVE_IZ        reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    IF              reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    WHILE           reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    SIMBOLO         reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    FLOTANTE        reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    ENTERO          reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    END             reduce using rule 166 (cuerpoVariables -> asignacion_clase cuerpoVariables .)


state 194

    (167) cuerpoVariables -> asignacion cuerpoVariables .

    DEF             reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLECLASE   reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLE        reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINT           reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    PUTS            reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINTF          reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    GETS            reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    LLAVE_IZ        reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    IF              reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    WHILE           reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    SIMBOLO         reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    FLOTANTE        reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    ENTERO          reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)
    END             reduce using rule 167 (cuerpoVariables -> asignacion cuerpoVariables .)


state 195

    (67) asignacion_clase -> VARIABLE IGUAL . booleanos
    (68) asignacion -> VARIABLE IGUAL . CADENA
    (69) asignacion -> VARIABLE IGUAL . expresionNumerica
    (70) asignacion -> VARIABLE IGUAL . hashes
    (71) asignacion -> VARIABLE IGUAL . SIMBOLO
    (72) asignacion -> VARIABLE IGUAL . array
    (73) asignacion -> VARIABLE IGUAL . input_concatenacion
    (74) asignacion -> VARIABLE IGUAL . booleanos
    (75) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (76) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (54) booleanos -> . TRUE
    (55) booleanos -> . FALSE
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 138
    SIMBOLO         shift and go to state 141
    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    PARENTESIS_IZ   shift and go to state 33
    VARIABLE        shift and go to state 137
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    GETS            shift and go to state 38
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    booleanos                      shift and go to state 235
    expresionNumerica              shift and go to state 139
    hashes                         shift and go to state 140
    array                          shift and go to state 142
    input_concatenacion            shift and go to state 143
    solicitudDatosTeclado          shift and go to state 145
    entero_a_flotante              shift and go to state 146
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 48

state 196

    (32) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLE        reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINT           reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PUTS            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINTF          reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    GETS            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IF              reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DEF             reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHILE           reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CASE            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    UNTIL           reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ENTERO          reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CLASS           reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CADENA          reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 197

    (148) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 236
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 198

    (162) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 237


state 199

    (37) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (29) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    TO_F            shift and go to state 238
    CONCAT          shift and go to state 156


state 200

    (86) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 239


state 201

    (158) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 240


state 202

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 136

    valorCadena                    shift and go to state 241

state 203

    (114) funcionesArray -> FOR EACH .

    VARIABLE        reduce using rule 114 (funcionesArray -> FOR EACH .)
    PRINT           reduce using rule 114 (funcionesArray -> FOR EACH .)
    PUTS            reduce using rule 114 (funcionesArray -> FOR EACH .)
    PRINTF          reduce using rule 114 (funcionesArray -> FOR EACH .)
    GETS            reduce using rule 114 (funcionesArray -> FOR EACH .)
    LLAVE_IZ        reduce using rule 114 (funcionesArray -> FOR EACH .)
    IF              reduce using rule 114 (funcionesArray -> FOR EACH .)
    DEF             reduce using rule 114 (funcionesArray -> FOR EACH .)
    CORCHETE_IZ     reduce using rule 114 (funcionesArray -> FOR EACH .)
    WHILE           reduce using rule 114 (funcionesArray -> FOR EACH .)
    CASE            reduce using rule 114 (funcionesArray -> FOR EACH .)
    UNTIL           reduce using rule 114 (funcionesArray -> FOR EACH .)
    PARENTESIS_IZ   reduce using rule 114 (funcionesArray -> FOR EACH .)
    SIMBOLO         reduce using rule 114 (funcionesArray -> FOR EACH .)
    FLOTANTE        reduce using rule 114 (funcionesArray -> FOR EACH .)
    ENTERO          reduce using rule 114 (funcionesArray -> FOR EACH .)
    WHEN            reduce using rule 114 (funcionesArray -> FOR EACH .)
    CLASS           reduce using rule 114 (funcionesArray -> FOR EACH .)
    CADENA          reduce using rule 114 (funcionesArray -> FOR EACH .)
    $end            reduce using rule 114 (funcionesArray -> FOR EACH .)
    END             reduce using rule 114 (funcionesArray -> FOR EACH .)


state 204

    (52) valores -> valor COMA valores .

    VARIABLE        reduce using rule 52 (valores -> valor COMA valores .)
    PRINT           reduce using rule 52 (valores -> valor COMA valores .)
    PUTS            reduce using rule 52 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 52 (valores -> valor COMA valores .)
    GETS            reduce using rule 52 (valores -> valor COMA valores .)
    LLAVE_IZ        reduce using rule 52 (valores -> valor COMA valores .)
    IF              reduce using rule 52 (valores -> valor COMA valores .)
    DEF             reduce using rule 52 (valores -> valor COMA valores .)
    CORCHETE_IZ     reduce using rule 52 (valores -> valor COMA valores .)
    WHILE           reduce using rule 52 (valores -> valor COMA valores .)
    CASE            reduce using rule 52 (valores -> valor COMA valores .)
    UNTIL           reduce using rule 52 (valores -> valor COMA valores .)
    PARENTESIS_IZ   reduce using rule 52 (valores -> valor COMA valores .)
    SIMBOLO         reduce using rule 52 (valores -> valor COMA valores .)
    FLOTANTE        reduce using rule 52 (valores -> valor COMA valores .)
    ENTERO          reduce using rule 52 (valores -> valor COMA valores .)
    WHEN            reduce using rule 52 (valores -> valor COMA valores .)
    CLASS           reduce using rule 52 (valores -> valor COMA valores .)
    CADENA          reduce using rule 52 (valores -> valor COMA valores .)
    $end            reduce using rule 52 (valores -> valor COMA valores .)
    VARIABLECLASE   reduce using rule 52 (valores -> valor COMA valores .)
    DO              reduce using rule 52 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 52 (valores -> valor COMA valores .)
    END             reduce using rule 52 (valores -> valor COMA valores .)
    ELSE            reduce using rule 52 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 52 (valores -> valor COMA valores .)


state 205

    (127) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 242
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 206

    (157) elemento_hash -> claveValor COMA elemento_hash .

    LLAVE_DER       reduce using rule 157 (elemento_hash -> claveValor COMA elemento_hash .)


state 207

    (152) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 152 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 152 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 208

    (153) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 153 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 153 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 209

    (155) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 155 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 155 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 210

    (154) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 154 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 154 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 211

    (127) estructura_ifUnaLinea -> IF condicionIf declaraciones END .

    VARIABLE        reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINT           reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PUTS            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINTF          reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    GETS            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    LLAVE_IZ        reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IF              reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DEF             reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CORCHETE_IZ     reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHILE           reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CASE            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    UNTIL           reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PARENTESIS_IZ   reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    SIMBOLO         reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    FLOTANTE        reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ENTERO          reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHEN            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CLASS           reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CADENA          reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    $end            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLECLASE   reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DO              reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    END             reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSE            reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSEIF          reduce using rule 127 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)


state 212

    (125) estructura_if -> IF condicionIf declaraciones ELSE . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 243
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 213

    (126) estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)


state 214

    (128) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones ELSE declaraciones END
    (129) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones estructura_secundaria_if
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    condicionIf                    shift and go to state 244
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 215

    (123) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 123 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)


state 216

    (122) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 245


state 217

    (119) argumentos -> VARIABLE .
    (120) argumentos -> VARIABLE . COMA argumentos
    (47) expresionNumerica -> VARIABLE .

    PARENTESIS_DER  reduce using rule 119 (argumentos -> VARIABLE .)
    COMA            shift and go to state 246
    MAS             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)


state 218

    (110) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 247
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 219

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaraciones END

    PARENTESIS_DER  shift and go to state 248


state 220

    (112) funciones -> DEF VARIABLE declaraciones END .

    VARIABLE        reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    PRINT           reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    PUTS            reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    PRINTF          reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    GETS            reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    IF              reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    DEF             reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    WHILE           reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    CASE            reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    UNTIL           reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    ENTERO          reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    WHEN            reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    CLASS           reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    CADENA          reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    $end            reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    END             reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 112 (funciones -> DEF VARIABLE declaraciones END .)


state 221

    (77) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 77 (elementos_array -> elemento_array COMA elementos_array .)


state 222

    (143) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (139) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 249

  ! END             [ reduce using rule 139 (declaracion -> sentencia_while .) ]


state 223

    (144) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 250


state 224

    (145) sentencia_case -> CASE declaraciones sentencia_when END .

    VARIABLE        reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PRINT           reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PUTS            reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PRINTF          reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    GETS            reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    LLAVE_IZ        reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    IF              reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    DEF             reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CORCHETE_IZ     reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    WHILE           reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CASE            reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    UNTIL           reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PARENTESIS_IZ   reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    SIMBOLO         reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    FLOTANTE        reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    ENTERO          reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    WHEN            reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CLASS           reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CADENA          reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    $end            reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)
    END             reduce using rule 145 (sentencia_case -> CASE declaraciones sentencia_when END .)


state 225

    (74) asignacion -> VARIABLE IGUAL booleanos .
    (67) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHEN resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CASE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for UNTIL resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CLASS resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CADENA resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLE        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLECLASE   [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHEN            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CORCHETE_IZ     [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CASE            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! UNTIL           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CLASS           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CADENA          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 226

    (125) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (126) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (127) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (128) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 212
    END             shift and go to state 211
    ELSEIF          shift and go to state 214

    estructura_secundaria_if       shift and go to state 213

state 227

    (62) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (30) valorCadena -> CADENA .

    VARIABLE        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINT           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PUTS            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINTF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    GETS            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IF              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHILE           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    SIMBOLO         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    FLOTANTE        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ENTERO          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DEF             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CASE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    UNTIL           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CLASS           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CADENA          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 30 (valorCadena -> CADENA .)


state 228

    (63) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (48) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    VARIABLE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINT           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PUTS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    GETS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IF              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHILE           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DEF             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CASE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CLASS           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CADENA          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 55
    MENOS           shift and go to state 56
    DIVISION        shift and go to state 57
    MULTIPLICACION  shift and go to state 58
    EXPONENCIACION  shift and go to state 59
    MODULO          shift and go to state 60

    operadores                     shift and go to state 54

state 229

    (64) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    VARIABLE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINT           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PUTS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINTF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    GETS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IF              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHILE           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    SIMBOLO         reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    FLOTANTE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ENTERO          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DEF             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CASE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    UNTIL           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CLASS           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CADENA          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 230

    (65) asignacion_clase -> VARIABLECLASE IGUAL array .

    VARIABLE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINT           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PUTS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINTF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    GETS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    LLAVE_IZ        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IF              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    VARIABLECLASE   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHILE           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    SIMBOLO         reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    FLOTANTE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ENTERO          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DEF             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CORCHETE_IZ     reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CASE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    UNTIL           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CLASS           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CADENA          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 231

    (66) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINT           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PUTS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    GETS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IF              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHILE           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DEF             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CASE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CLASS           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CADENA          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 232

    (47) expresionNumerica -> VARIABLE .
    (29) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 31 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 47 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 47 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 251
    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 47 (expresionNumerica -> VARIABLE .) ]


state 233

    (149) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 252


state 234

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_IZ   shift and go to state 253


state 235

    (67) asignacion_clase -> VARIABLE IGUAL booleanos .
    (74) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 67 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLECLASE   [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLE        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 74 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 236

    (148) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    VARIABLE        reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PRINT           reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PUTS            reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PRINTF          reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    GETS            reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    LLAVE_IZ        reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    IF              reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    DEF             reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CORCHETE_IZ     reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    WHILE           reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CASE            reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    UNTIL           reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PARENTESIS_IZ   reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    SIMBOLO         reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    FLOTANTE        reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    ENTERO          reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CLASS           reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CADENA          reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 148 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 237

    (162) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    VARIABLECLASE   reduce using rule 162 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    VARIABLE        reduce using rule 162 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 238

    (37) entero_a_flotante -> VARIABLE PUNTO TO_F .

    VARIABLE        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DO              reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IGUAL_DOBLEP    reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSE            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSEIF          reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)


state 239

    (86) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 254


state 240

    (158) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (159) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (160) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 255

    each_args_hash                 shift and go to state 256

state 241

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 257


state 242

    (127) estructura_ifUnaLinea -> IF condicionIf declaraciones . END

    END             shift and go to state 211


state 243

    (125) estructura_if -> IF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 258


state 244

    (128) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones ELSE declaraciones END
    (129) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones estructura_secundaria_if
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 259
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 245

    (122) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (101) funcionesComparacion -> . Y_SIGNO
    (102) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINTF          reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 178
    O_SIGNO         shift and go to state 179

    funcionesComparacion           shift and go to state 260

state 246

    (120) argumentos -> VARIABLE COMA . argumentos
    (119) argumentos -> . VARIABLE
    (120) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 261

    argumentos                     shift and go to state 262

state 247

    (110) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones . END

    END             shift and go to state 263


state 248

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 264
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 249

    (143) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    VARIABLE        reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINT           reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PUTS            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINTF          reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    GETS            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    LLAVE_IZ        reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IF              reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DEF             reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CORCHETE_IZ     reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHILE           reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CASE            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    UNTIL           reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PARENTESIS_IZ   reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    SIMBOLO         reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    FLOTANTE        reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ENTERO          reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CLASS           reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CADENA          reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    $end            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    VARIABLECLASE   reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 143 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 250

    (144) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    VARIABLE        reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINT           reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PUTS            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINTF          reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    GETS            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    LLAVE_IZ        reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IF              reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DEF             reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CORCHETE_IZ     reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHILE           reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CASE            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    UNTIL           reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    SIMBOLO         reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    FLOTANTE        reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ENTERO          reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CLASS           reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CADENA          reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    $end            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    VARIABLECLASE   reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 144 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 251

    (29) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 156


state 252

    (149) sentencia_until -> UNTIL declaracion DO declaracion END .

    VARIABLE        reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINT           reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PUTS            reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINTF          reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    GETS            reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    LLAVE_IZ        reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    IF              reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    DEF             reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CORCHETE_IZ     reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHILE           reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CASE            reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    UNTIL           reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    SIMBOLO         reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    FLOTANTE        reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    ENTERO          reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHEN            reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CLASS           reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CADENA          reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    $end            reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 149 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 253

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClaseE END
    (119) argumentos -> . VARIABLE
    (120) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 261

    argumentos                     shift and go to state 265

state 254

    (86) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (87) cuerpo_each -> . cuerpo
    (88) cuerpo_each -> . vacio
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (89) vacio -> .
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (110) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE declaraciones END
    (117) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (84) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (85) array -> . CORCHETE_IZ CORCHETE_DER
    (86) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (158) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (145) sentencia_case -> . CASE declaraciones sentencia_when END
    (146) sentencias_when -> . sentencia_when
    (147) sentencias_when -> . sentencia_when sentencias_when
    (149) sentencia_until -> . UNTIL declaracion DO declaracion END
    (163) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (148) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (161) encabezadoClase -> . CLASS ID_CLASE
    (162) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    END             reduce using rule 89 (vacio -> .)
    VARIABLE        shift and go to state 28
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 40
    DEF             shift and go to state 41
    CORCHETE_IZ     shift and go to state 42
    WHILE           shift and go to state 43
    CASE            shift and go to state 44
    UNTIL           shift and go to state 46
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 29

    cuerpo_each                    shift and go to state 266
    cuerpo                         shift and go to state 267
    vacio                          shift and go to state 268
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    expresionNumerica              shift and go to state 25
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37
    sentencia_when                 shift and go to state 45
    encabezadoClase                shift and go to state 47
    valorCadena                    shift and go to state 48

state 255

    (159) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (160) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 269
    BARRA           shift and go to state 270


state 256

    (158) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaracion                    shift and go to state 271
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 257

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    VARIABLE        reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINT           reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PUTS            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINTF          reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    GETS            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IF              reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DEF             reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHILE           reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CASE            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    UNTIL           reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    SIMBOLO         reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    FLOTANTE        reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ENTERO          reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CLASS           reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CADENA          reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    $end            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 258

    (125) estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 125 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)


state 259

    (128) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . ELSE declaraciones END
    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . estructura_secundaria_if
    (128) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 272
    ELSEIF          shift and go to state 214

    estructura_secundaria_if       shift and go to state 273

state 260

    (122) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (121) condicionIf -> . expresiones_booleanas
    (122) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (123) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 95
    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    expresiones_booleanas          shift and go to state 94
    condicionIf                    shift and go to state 274
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 96

state 261

    (119) argumentos -> VARIABLE .
    (120) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 119 (argumentos -> VARIABLE .)
    COMA            shift and go to state 246


state 262

    (120) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 120 (argumentos -> VARIABLE COMA argumentos .)


state 263

    (110) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    END             reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 110 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)


state 264

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones . END

    END             shift and go to state 275


state 265

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_DER  shift and go to state 276


state 266

    (86) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 277


state 267

    (87) cuerpo_each -> cuerpo .

    END             reduce using rule 87 (cuerpo_each -> cuerpo .)


state 268

    (88) cuerpo_each -> vacio .

    END             reduce using rule 88 (cuerpo_each -> vacio .)


state 269

    (159) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 278


state 270

    (160) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    PRINTF          reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 160 (each_args_hash -> VARIABLE BARRA .)


state 271

    (158) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 279


state 272

    (128) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE . declaraciones END
    (141) declaraciones -> . declaracion
    (142) declaraciones -> . declaracion declaraciones
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    declaraciones                  shift and go to state 280
    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 273

    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)


state 274

    (122) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 122 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)


state 275

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    END             reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)


state 276

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClaseE END
    (171) cuerpoClaseE -> . cuerpoClase
    (172) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (168) cuerpoClase -> . cuerpoVariables
    (169) cuerpoClase -> . declaracion
    (170) cuerpoClase -> . funciones
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (110) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE declaraciones END
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    DEF             shift and go to state 41
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 288
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    cuerpoVariables                shift and go to state 281
    cuerpoClaseE                   shift and go to state 282
    cuerpoClase                    shift and go to state 283
    declaracion                    shift and go to state 284
    funciones                      shift and go to state 285
    asignacion_clase               shift and go to state 286
    asignacion                     shift and go to state 287
    operacionAritmetica            shift and go to state 110
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 277

    (86) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    VARIABLE        reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINT           reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PUTS            reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINTF          reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    GETS            reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    LLAVE_IZ        reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    IF              reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    DEF             reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CORCHETE_IZ     reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHILE           reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CASE            reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    UNTIL           reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PARENTESIS_IZ   reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    SIMBOLO         reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    FLOTANTE        reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    ENTERO          reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHEN            reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CLASS           reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CADENA          reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    $end            reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 86 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 278

    (159) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 289


state 279

    (158) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    VARIABLE        reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINT           reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PUTS            reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINTF          reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    GETS            reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    LLAVE_IZ        reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    IF              reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    DEF             reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CORCHETE_IZ     reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHILE           reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CASE            reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    UNTIL           reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PARENTESIS_IZ   reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    SIMBOLO         reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    FLOTANTE        reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    ENTERO          reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHEN            reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CLASS           reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CADENA          reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    $end            reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 158 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 280

    (128) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 290


state 281

    (168) cuerpoClase -> cuerpoVariables .

    DEF             reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    VARIABLECLASE   reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    VARIABLE        reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    PRINT           reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    PUTS            reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    PRINTF          reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    GETS            reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    LLAVE_IZ        reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    IF              reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    WHILE           reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    SIMBOLO         reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    FLOTANTE        reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    ENTERO          reduce using rule 168 (cuerpoClase -> cuerpoVariables .)
    END             reduce using rule 168 (cuerpoClase -> cuerpoVariables .)


state 282

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE . END

    END             shift and go to state 291


state 283

    (171) cuerpoClaseE -> cuerpoClase .
    (172) cuerpoClaseE -> cuerpoClase . cuerpoClaseE
    (171) cuerpoClaseE -> . cuerpoClase
    (172) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (168) cuerpoClase -> . cuerpoVariables
    (169) cuerpoClase -> . declaracion
    (170) cuerpoClase -> . funciones
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (130) declaracion -> . operacionAritmetica
    (131) declaracion -> . asignacion
    (132) declaracion -> . impresion
    (133) declaracion -> . impresion_vacia
    (134) declaracion -> . expresiones_booleanas
    (135) declaracion -> . solicitudDatosTeclado
    (136) declaracion -> . hashes
    (137) declaracion -> . estructura_if
    (138) declaracion -> . asignacion_clase
    (139) declaracion -> . sentencia_while
    (140) declaracion -> . estructura_ifUnaLinea
    (110) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE declaraciones END
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (48) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (61) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (93) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (103) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (108) solicitudDatosTeclado -> . GETS
    (109) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (150) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (151) hashes -> . LLAVE_IZ LLAVE_DER
    (125) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (143) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (144) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (47) expresionNumerica -> . VARIABLE
    (49) valor_print -> . PRINT
    (50) valor_print -> . PUTS
    (25) valorSimbolo -> . SIMBOLO
    (26) valorSimbolo -> . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    END             reduce using rule 171 (cuerpoClaseE -> cuerpoClase .)
    DEF             shift and go to state 41
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 288
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    PRINTF          shift and go to state 35
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    WHILE           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 49
    ENTERO          shift and go to state 50

    cuerpoClase                    shift and go to state 283
    cuerpoClaseE                   shift and go to state 292
    cuerpoVariables                shift and go to state 281
    declaracion                    shift and go to state 284
    funciones                      shift and go to state 285
    asignacion_clase               shift and go to state 286
    asignacion                     shift and go to state 287
    operacionAritmetica            shift and go to state 110
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 25
    valor_print                    shift and go to state 31
    valorSimbolo                   shift and go to state 36
    valorNumerico                  shift and go to state 37

state 284

    (169) cuerpoClase -> declaracion .

    DEF             reduce using rule 169 (cuerpoClase -> declaracion .)
    VARIABLECLASE   reduce using rule 169 (cuerpoClase -> declaracion .)
    VARIABLE        reduce using rule 169 (cuerpoClase -> declaracion .)
    PRINT           reduce using rule 169 (cuerpoClase -> declaracion .)
    PUTS            reduce using rule 169 (cuerpoClase -> declaracion .)
    PRINTF          reduce using rule 169 (cuerpoClase -> declaracion .)
    GETS            reduce using rule 169 (cuerpoClase -> declaracion .)
    LLAVE_IZ        reduce using rule 169 (cuerpoClase -> declaracion .)
    IF              reduce using rule 169 (cuerpoClase -> declaracion .)
    WHILE           reduce using rule 169 (cuerpoClase -> declaracion .)
    PARENTESIS_IZ   reduce using rule 169 (cuerpoClase -> declaracion .)
    SIMBOLO         reduce using rule 169 (cuerpoClase -> declaracion .)
    FLOTANTE        reduce using rule 169 (cuerpoClase -> declaracion .)
    ENTERO          reduce using rule 169 (cuerpoClase -> declaracion .)
    END             reduce using rule 169 (cuerpoClase -> declaracion .)


state 285

    (170) cuerpoClase -> funciones .

    DEF             reduce using rule 170 (cuerpoClase -> funciones .)
    VARIABLECLASE   reduce using rule 170 (cuerpoClase -> funciones .)
    VARIABLE        reduce using rule 170 (cuerpoClase -> funciones .)
    PRINT           reduce using rule 170 (cuerpoClase -> funciones .)
    PUTS            reduce using rule 170 (cuerpoClase -> funciones .)
    PRINTF          reduce using rule 170 (cuerpoClase -> funciones .)
    GETS            reduce using rule 170 (cuerpoClase -> funciones .)
    LLAVE_IZ        reduce using rule 170 (cuerpoClase -> funciones .)
    IF              reduce using rule 170 (cuerpoClase -> funciones .)
    WHILE           reduce using rule 170 (cuerpoClase -> funciones .)
    PARENTESIS_IZ   reduce using rule 170 (cuerpoClase -> funciones .)
    SIMBOLO         reduce using rule 170 (cuerpoClase -> funciones .)
    FLOTANTE        reduce using rule 170 (cuerpoClase -> funciones .)
    ENTERO          reduce using rule 170 (cuerpoClase -> funciones .)
    END             reduce using rule 170 (cuerpoClase -> funciones .)


state 286

    (164) cuerpoVariables -> asignacion_clase .
    (166) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (138) declaracion -> asignacion_clase .
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINT resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PUTS resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINTF resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for GETS resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for IF resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for WHILE resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for ENTERO resolved using rule 138 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for END resolved using rule 138 (declaracion -> asignacion_clase .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 138 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 138 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 138 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 138 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 138 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 138 (declaracion -> asignacion_clase .)
    IF              reduce using rule 138 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 138 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 138 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 138 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 138 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 138 (declaracion -> asignacion_clase .)
    END             reduce using rule 138 (declaracion -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 129

  ! DEF             [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINT           [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! PUTS            [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINTF          [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! GETS            [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! LLAVE_IZ        [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! IF              [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! WHILE           [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! PARENTESIS_IZ   [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! SIMBOLO         [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! FLOTANTE        [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! ENTERO          [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! END             [ reduce using rule 164 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 138 (declaracion -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 138 (declaracion -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 127
    cuerpoVariables                shift and go to state 193
    asignacion                     shift and go to state 128

state 287

    (165) cuerpoVariables -> asignacion .
    (167) cuerpoVariables -> asignacion . cuerpoVariables
    (131) declaracion -> asignacion .
    (164) cuerpoVariables -> . asignacion_clase
    (165) cuerpoVariables -> . asignacion
    (166) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (167) cuerpoVariables -> . asignacion cuerpoVariables
    (62) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (63) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (64) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (65) asignacion_clase -> . VARIABLECLASE IGUAL array
    (66) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (67) asignacion_clase -> . VARIABLE IGUAL booleanos
    (68) asignacion -> . VARIABLE IGUAL CADENA
    (69) asignacion -> . VARIABLE IGUAL expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL hashes
    (71) asignacion -> . VARIABLE IGUAL SIMBOLO
    (72) asignacion -> . VARIABLE IGUAL array
    (73) asignacion -> . VARIABLE IGUAL input_concatenacion
    (74) asignacion -> . VARIABLE IGUAL booleanos
    (75) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (76) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINT resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for GETS resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 131 (declaracion -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 131 (declaracion -> asignacion .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 131 (declaracion -> asignacion .)
    PRINT           reduce using rule 131 (declaracion -> asignacion .)
    PUTS            reduce using rule 131 (declaracion -> asignacion .)
    PRINTF          reduce using rule 131 (declaracion -> asignacion .)
    GETS            reduce using rule 131 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 131 (declaracion -> asignacion .)
    IF              reduce using rule 131 (declaracion -> asignacion .)
    WHILE           reduce using rule 131 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 131 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 131 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 131 (declaracion -> asignacion .)
    ENTERO          reduce using rule 131 (declaracion -> asignacion .)
    END             reduce using rule 131 (declaracion -> asignacion .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 129

  ! DEF             [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! PRINT           [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! PUTS            [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! PRINTF          [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! GETS            [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! LLAVE_IZ        [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! IF              [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! WHILE           [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! SIMBOLO         [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! FLOTANTE        [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! ENTERO          [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! END             [ reduce using rule 165 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 131 (declaracion -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 131 (declaracion -> asignacion .) ]

    asignacion                     shift and go to state 128
    cuerpoVariables                shift and go to state 194
    asignacion_clase               shift and go to state 127

state 288

    (67) asignacion_clase -> VARIABLE . IGUAL booleanos
    (68) asignacion -> VARIABLE . IGUAL CADENA
    (69) asignacion -> VARIABLE . IGUAL expresionNumerica
    (70) asignacion -> VARIABLE . IGUAL hashes
    (71) asignacion -> VARIABLE . IGUAL SIMBOLO
    (72) asignacion -> VARIABLE . IGUAL array
    (73) asignacion -> VARIABLE . IGUAL input_concatenacion
    (74) asignacion -> VARIABLE . IGUAL booleanos
    (75) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (76) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (105) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (47) expresionNumerica -> VARIABLE .
    (26) valorSimbolo -> VARIABLE .
    (94) operadoresComparacion -> . IGUAL_DOBLEP
    (95) operadoresComparacion -> . NAVE
    (96) operadoresComparacion -> . DIFERENTE
    (97) operadoresComparacion -> . MAYOR_QUE
    (98) operadoresComparacion -> . MENOR_QUE
    (99) operadoresComparacion -> . MENOR_IGUAL_QUE
    (100) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 195
    MAS             reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 47 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 47 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 65
    NAVE            shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

  ! IGUAL_DOBLEP    [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 26 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 63

state 289

    (159) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINTF          reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 159 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 290

    (128) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 128 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)


state 291

    (163) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .

    VARIABLE        reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PRINT           reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PUTS            reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PRINTF          reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    GETS            reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    LLAVE_IZ        reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    IF              reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    DEF             reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CORCHETE_IZ     reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    WHILE           reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CASE            reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    UNTIL           reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PARENTESIS_IZ   reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    SIMBOLO         reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    FLOTANTE        reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    ENTERO          reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    WHEN            reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CLASS           reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CADENA          reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    $end            reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    END             reduce using rule 163 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)


state 292

    (172) cuerpoClaseE -> cuerpoClase cuerpoClaseE .

    END             reduce using rule 172 (cuerpoClaseE -> cuerpoClase cuerpoClaseE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 28 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 28 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 28 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 28 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 28 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 28 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 28 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 34 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 45 resolved as shift
WARNING: shift/reduce conflict for IF in state 73 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 97 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 97 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 121 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 127 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 127 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 128 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 128 resolved as shift
WARNING: shift/reduce conflict for MAS in state 133 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 133 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 133 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 133 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 133 resolved as shift
WARNING: shift/reduce conflict for END in state 222 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 286 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 286 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 287 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 287 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 288 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 288 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 288 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 288 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 288 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 288 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 288 resolved as shift
WARNING: reduce/reduce conflict in state 28 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 28
WARNING: reduce/reduce conflict in state 34 resolved using rule (valor_print -> PUTS)
WARNING: rejected rule (impresion_vacia -> PUTS) in state 34
WARNING: reduce/reduce conflict in state 137 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 137
WARNING: reduce/reduce conflict in state 155 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 155
WARNING: reduce/reduce conflict in state 225 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 225
WARNING: reduce/reduce conflict in state 232 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 232
WARNING: reduce/reduce conflict in state 235 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 235
WARNING: reduce/reduce conflict in state 286 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 286
WARNING: reduce/reduce conflict in state 287 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 287
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
