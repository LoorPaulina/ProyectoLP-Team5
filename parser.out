Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    DOBLE_IGUAL
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    valorSimbolo -> SIMBOLO
Rule 23    valorSimbolo -> VARIABLE
Rule 24    input_concatenacion -> concatenacionSimpleCadena
Rule 25    input_concatenacion -> concatenacion_funcion
Rule 26    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 27    valorCadena -> CADENA
Rule 28    valorCadena -> VARIABLE
Rule 29    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 30    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 31    valorNumerico -> FLOTANTE
Rule 32    valorNumerico -> ENTERO
Rule 33    soloEnteros -> ENTERO
Rule 34    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 35    operadores -> MAS
Rule 36    operadores -> MENOS
Rule 37    operadores -> DIVISION
Rule 38    operadores -> MULTIPLICACION
Rule 39    operadores -> EXPONENCIACION
Rule 40    operadores -> MODULO
Rule 41    expresionNumerica -> valorNumerico
Rule 42    expresionNumerica -> operacionAritmetica
Rule 43    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 44    expresionNumerica -> VARIABLE
Rule 45    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 46    valor_print -> PRINT
Rule 47    valor_print -> PUTS
Rule 48    valores -> valor
Rule 49    valores -> valor COMA valores
Rule 50    valores -> valor estructura_ifUnaLinea
Rule 51    booleanos -> TRUE
Rule 52    booleanos -> FALSE
Rule 53    valor -> CADENA
Rule 54    valor -> valorNumerico
Rule 55    valor -> VARIABLE
Rule 56    valor -> VARIABLECLASE
Rule 57    valor -> SIMBOLO
Rule 58    impresion -> valor_print valores
Rule 59    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 60    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 61    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 64    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 65    asignacion -> VARIABLE IGUAL CADENA
Rule 66    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 67    asignacion -> VARIABLE IGUAL hashes
Rule 68    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 69    asignacion -> VARIABLE IGUAL array
Rule 70    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 71    asignacion -> VARIABLE IGUAL booleanos
Rule 72    elementos_array -> elemento_array COMA elementos_array
Rule 73    elementos_array -> elemento_array
Rule 74    elemento_array -> CADENA
Rule 75    elemento_array -> ENTERO
Rule 76    elemento_array -> FLOTANTE
Rule 77    elemento_array -> array
Rule 78    elemento_array -> VARIABLE
Rule 79    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 80    array -> CORCHETE_IZ CORCHETE_DER
Rule 81    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 82    cuerpo_each -> cuerpo
Rule 83    cuerpo_each -> vacio
Rule 84    vacio -> <empty>
Rule 85    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 86    comentarios -> COMENTARIO
Rule 87    comentarios -> COMENTARIO_MULTI
Rule 88    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 89    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 90    impresion_vacia -> PUTS
Rule 91    operadoresComparacion -> IGUAL_DOBLEP
Rule 92    operadoresComparacion -> DIFERENTE
Rule 93    operadoresComparacion -> MAYOR_QUE
Rule 94    operadoresComparacion -> MENOR_QUE
Rule 95    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 96    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 97    funcionesComparacion -> AND
Rule 98    funcionesComparacion -> OR
Rule 99    expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 100   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 101   expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 102   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 103   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 104   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 105   solicitudDatosTeclado -> GETS
Rule 106   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 107   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 108   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 109   funcionesArray -> SORT
Rule 110   funcionesArray -> FOR EACH
Rule 111   funcionesFormatoImpresion -> CHOMP
Rule 112   funcionesNumeros -> TO_F
Rule 113   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 114   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 115   argumentos -> VARIABLE
Rule 116   argumentos -> VARIABLE COMA argumentos
Rule 117   condicionIf -> expresiones_booleanas
Rule 118   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 119   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 120   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 121   estructura_ifUnaLinea -> IF condicionIf
Rule 122   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 123   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 124   declaracion -> operacionAritmetica
Rule 125   declaracion -> asignacion
Rule 126   declaracion -> impresion
Rule 127   declaracion -> impresion_vacia
Rule 128   declaracion -> expresiones_booleanas
Rule 129   declaracion -> solicitudDatosTeclado
Rule 130   declaracion -> hashes
Rule 131   declaracion -> estructura_if
Rule 132   declaracion -> asignacion_clase
Rule 133   declaracion -> sentencia_while
Rule 134   declaracion -> estructura_ifUnaLinea
Rule 135   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 136   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 137   sentencia_case -> CASE declaracion sentencia_when END
Rule 138   sentencias_when -> sentencia_when
Rule 139   sentencias_when -> sentencia_when sentencias_when
Rule 140   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 141   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 142   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 143   hashes -> LLAVE_IZ LLAVE_DER
Rule 144   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 145   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 146   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 147   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 148   elemento_hash -> claveValor
Rule 149   elemento_hash -> claveValor COMA claveValor
Rule 150   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 151   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 152   each_args_hash -> VARIABLE BARRA
Rule 153   encabezadoClase -> CLASS ID_CLASE
Rule 154   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 155   definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 156   cuerpoVariables -> asignacion_clase
Rule 157   cuerpoVariables -> asignacion
Rule 158   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 159   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 160   cuerpoClase -> cuerpoVariables
Rule 161   cuerpoClase -> declaracion
Rule 162   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 97
ASIGNA_HASH          : 144 145 146 147
BARRA                : 81 81 150 151 152
BEGIN                : 
BREAK                : 
CADENA               : 27 53 59 65 74 145 146 147 147
CASE                 : 137
CHOMP                : 111
CLASS                : 153 154
COMA                 : 49 72 116 149 151
COMENTARIO           : 86
COMENTARIO_MULTI     : 87
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 26
CORCHETE_DER         : 79 80
CORCHETE_IZ          : 79 80
DEF                  : 107 108 155
DEFINED_QUESTION     : 
DIFERENTE            : 92
DIVISION             : 37
DO                   : 81 135 136 141 150
DOBLE_IGUAL          : 
EACH                 : 110 150
ELSE                 : 119 122
ELSEIF               : 122 123
END                  : 81 107 108 119 122 135 136 137 141 150 155
ENSURE               : 
ENTERO               : 32 33 75 101
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 39
FALSE                : 52
FLOTANTE             : 31 76
FOR                  : 110
GETS                 : 105 106
ID_CLASE             : 153 154 154
IF                   : 119 120 121
IGUAL                : 59 60 61 62 63 64 65 66 67 68 69 70 71
IGUAL_DOBLEP         : 91 140
IN                   : 
INITIALIZE           : 155
LLAVE_DER            : 142 143
LLAVE_IZ             : 142 143
MAS                  : 29 30 35
MAYOR_IGUAL_QUE      : 96
MAYOR_QUE            : 93
MENOR_IGUAL_QUE      : 95
MENOR_QUE            : 94 154
MENOS                : 36
MODULE               : 
MODULO               : 40
MULTIPLICACION       : 38
NEWLINE              : 155 155 158 159
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 98
O_SIGNO              : 
PARENTESIS_DER       : 26 43 85 88 89 107 108 155
PARENTESIS_IZ        : 26 43 85 88 89 107 108 155
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 46 88
PRINTF               : 
PUNTO                : 26 34 81 106 113 114 150
PUTS                 : 47 89 90
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 22 57 68
SORT                 : 109
SUPER                : 
TO_F                 : 34 112
TRES_PUNTOS          : 85
TRIPLE_IGUAL         : 101
TRUE                 : 51
UNTIL                : 141
VARIABLE             : 23 26 28 34 44 55 64 65 66 67 68 69 70 71 78 81 81 102 102 103 104 107 108 113 114 115 116 144 145 150 151 151 152
VARIABLECLASE        : 56 59 60 61 62 63
WHEN                 : 140
WHILE                : 135 136
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 108 116 155
array                : 12 62 69 77
asignacion           : 3 125 157 159
asignacion_clase     : 132 156 158
booleanos            : 64 71
claveValor           : 148 149 149
comentarios          : 14
concatenacionSimpleCadena : 24 30
concatenacion_funcion : 25
condicionIf          : 119 120 121 122 123
cuerpo               : 82 0
cuerpoClase          : 155
cuerpoVariables      : 155 158 159 160
cuerpo_each          : 81
declaracion          : 107 108 119 119 120 122 122 123 136 137 140 140 141 141 150 161
definicion_clase     : 20
each_args_hash       : 150
each_array           : 13
each_hash            : 15
elemento_array       : 72 73
elemento_hash        : 142
elementos_array      : 72 79
encabezadoClase      : 155
entero_a_flotante    : 21
estructura_if        : 9 131
estructura_ifUnaLinea : 50 134
estructura_secundaria_if : 120 123
expresionNumerica    : 45 45 60 66
expresiones_booleanas : 6 117 118 118 128 135 136
funciones            : 10 162
funcionesArray       : 113
funcionesComparacion : 118
funcionesEstructuras : 11
funcionesFormatoImpresion : 106
funcionesNumeros     : 114
hashes               : 8 61 67 130
impresion            : 4 126
impresion_vacia      : 5 127
input_concatenacion  : 2 63 70
operacionAritmetica  : 1 42 43 124
operadores           : 45
operadoresComparacion : 99 100 102 103 104
rangos               : 101
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 137 138 139
sentencia_while      : 16 133 135
sentencias_when      : 18 139
solicitudDatosTeclado : 7 129
soloEnteros          : 85 85
vacio                : 83
valor                : 48 49 50
valorCadena          : 26 29 29 30
valorNumerico        : 41 54 100 100 103 104 144 146
valorSimbolo         : 99 99
valor_print          : 58
valores              : 49 58

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (113) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (81) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (86) comentarios -> . COMENTARIO
    (87) comentarios -> . COMENTARIO_MULTI
    (150) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (137) sentencia_case -> . CASE declaracion sentencia_when END
    (138) sentencias_when -> . sentencia_when
    (139) sentencias_when -> . sentencia_when sentencias_when
    (141) sentencia_until -> . UNTIL declaracion DO declaracion END
    (155) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (140) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (153) encabezadoClase -> . CLASS ID_CLASE
    (154) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
    valorCadena                    shift and go to state 49

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 24

    (24) input_concatenacion -> concatenacionSimpleCadena .
    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 60


state 25

    (25) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)


state 26

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (113) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (114) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (81) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (150) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (23) valorSimbolo -> VARIABLE .
    (28) valorCadena -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 61
    PUNTO           shift and go to state 63
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 27

    (27) valorCadena -> CADENA .

    MAS             reduce using rule 27 (valorCadena -> CADENA .)
    $end            reduce using rule 27 (valorCadena -> CADENA .)
    END             reduce using rule 27 (valorCadena -> CADENA .)
    WHEN            reduce using rule 27 (valorCadena -> CADENA .)
    DO              reduce using rule 27 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 27 (valorCadena -> CADENA .)
    ELSE            reduce using rule 27 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 27 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 27 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 27 (valorCadena -> CADENA .)


state 28

    (22) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    AND             reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    OR              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 22 (valorSimbolo -> SIMBOLO .)


state 29

    (58) impresion -> valor_print . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 72
    VARIABLE        shift and go to state 74
    VARIABLECLASE   shift and go to state 75
    SIMBOLO         shift and go to state 76
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valores                        shift and go to state 70
    valor                          shift and go to state 71
    valorNumerico                  shift and go to state 73

state 30

    (88) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (46) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 77
    CADENA          reduce using rule 46 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 46 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 46 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 46 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 46 (valor_print -> PRINT .)
    ENTERO          reduce using rule 46 (valor_print -> PRINT .)


state 31

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (85) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) soloEnteros -> . ENTERO
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 81
    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 83
    FLOTANTE        shift and go to state 50

    operacionAritmetica            shift and go to state 79
    soloEnteros                    shift and go to state 80
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 82

state 32

    (89) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> PUTS .
    (47) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 84
    $end            reduce using rule 90 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 90 (impresion_vacia -> PUTS .)
    DO              reduce using rule 90 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 90 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 90 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 90 (impresion_vacia -> PUTS .)
    END             reduce using rule 90 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 47 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 47 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 47 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 47 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 47 (valor_print -> PUTS .)
    ENTERO          reduce using rule 47 (valor_print -> PUTS .)


state 33

    (99) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 85

state 34

    (100) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (41) expresionNumerica -> valorNumerico .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 86

state 35

    (101) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 87


state 36

    (32) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 32 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 32 (valorNumerico -> ENTERO .)
    IF              reduce using rule 32 (valorNumerico -> ENTERO .)
    $end            reduce using rule 32 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 32 (valorNumerico -> ENTERO .)
    DO              reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 32 (valorNumerico -> ENTERO .)
    END             reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 32 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 32 (valorNumerico -> ENTERO .)
    AND             reduce using rule 32 (valorNumerico -> ENTERO .)
    OR              reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 32 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 32 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 32 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 32 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 32 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 32 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 32 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 32 (valorNumerico -> ENTERO .)


state 37

    (105) solicitudDatosTeclado -> GETS .
    (106) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 88


state 38

    (142) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (143) hashes -> LLAVE_IZ . LLAVE_DER
    (148) elemento_hash -> . claveValor
    (149) elemento_hash -> . claveValor COMA claveValor
    (144) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (145) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (146) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (147) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 90
    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93

    elemento_hash                  shift and go to state 89
    claveValor                     shift and go to state 91

state 39

    (119) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (117) condicionIf -> . expresiones_booleanas
    (118) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 94
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 40

    (107) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (108) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 99


state 41

    (79) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (80) array -> CORCHETE_IZ . CORCHETE_DER
    (72) elementos_array -> . elemento_array COMA elementos_array
    (73) elementos_array -> . elemento_array
    (74) elemento_array -> . CADENA
    (75) elemento_array -> . ENTERO
    (76) elemento_array -> . FLOTANTE
    (77) elemento_array -> . array
    (78) elemento_array -> . VARIABLE
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 101
    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 41

    elementos_array                shift and go to state 100
    elemento_array                 shift and go to state 102
    array                          shift and go to state 106

state 42

    (86) comentarios -> COMENTARIO .

    $end            reduce using rule 86 (comentarios -> COMENTARIO .)
    END             reduce using rule 86 (comentarios -> COMENTARIO .)


state 43

    (87) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 87 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 87 (comentarios -> COMENTARIO_MULTI .)


state 44

    (135) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    expresiones_booleanas          shift and go to state 108
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 45

    (137) sentencia_case -> CASE . declaracion sentencia_when END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 46

    (138) sentencias_when -> sentencia_when .
    (139) sentencias_when -> sentencia_when . sentencias_when
    (138) sentencias_when -> . sentencia_when
    (139) sentencias_when -> . sentencia_when sentencias_when
    (140) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 138 (sentencias_when -> sentencia_when .)
    END             reduce using rule 138 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 124

state 47

    (141) sentencia_until -> UNTIL . declaracion DO declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 125
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 48

    (155) definicion_clase -> encabezadoClase . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 126


state 49

    (29) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 127


state 50

    (31) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 31 (valorNumerico -> FLOTANTE .)


state 51

    (140) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 128
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 52

    (153) encabezadoClase -> CLASS . ID_CLASE
    (154) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 129


state 53

    (45) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 83
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 130
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 131

state 54

    (35) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> MAS .)
    VARIABLE        reduce using rule 35 (operadores -> MAS .)
    FLOTANTE        reduce using rule 35 (operadores -> MAS .)
    ENTERO          reduce using rule 35 (operadores -> MAS .)


state 55

    (36) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MENOS .)
    VARIABLE        reduce using rule 36 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 36 (operadores -> MENOS .)
    ENTERO          reduce using rule 36 (operadores -> MENOS .)


state 56

    (37) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 37 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 37 (operadores -> DIVISION .)
    ENTERO          reduce using rule 37 (operadores -> DIVISION .)


state 57

    (38) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 38 (operadores -> MULTIPLICACION .)


state 58

    (39) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 39 (operadores -> EXPONENCIACION .)


state 59

    (40) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MODULO .)
    VARIABLE        reduce using rule 40 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 40 (operadores -> MODULO .)
    ENTERO          reduce using rule 40 (operadores -> MODULO .)


state 60

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 132

state 61

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    TRUE            shift and go to state 142
    FALSE           shift and go to state 143
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    booleanos                      shift and go to state 141
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 62

    (102) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (103) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 144
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 145

state 63

    (113) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (114) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (81) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (150) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (109) funcionesArray -> . SORT
    (110) funcionesArray -> . FOR EACH
    (112) funcionesNumeros -> . TO_F

    DO              shift and go to state 148
    EACH            shift and go to state 149
    TO_F            shift and go to state 150
    CONCAT          shift and go to state 151
    SORT            shift and go to state 152
    FOR             shift and go to state 153

    funcionesArray                 shift and go to state 146
    funcionesNumeros               shift and go to state 147

state 64

    (91) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)


state 65

    (92) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 92 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 92 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 92 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 92 (operadoresComparacion -> DIFERENTE .)


state 66

    (93) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 93 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 93 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 93 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 93 (operadoresComparacion -> MAYOR_QUE .)


state 67

    (94) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 94 (operadoresComparacion -> MENOR_QUE .)


state 68

    (95) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 95 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 69

    (96) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 96 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 70

    (58) impresion -> valor_print valores .

    $end            reduce using rule 58 (impresion -> valor_print valores .)
    WHEN            reduce using rule 58 (impresion -> valor_print valores .)
    DO              reduce using rule 58 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 58 (impresion -> valor_print valores .)
    ELSE            reduce using rule 58 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 58 (impresion -> valor_print valores .)
    END             reduce using rule 58 (impresion -> valor_print valores .)


state 71

    (48) valores -> valor .
    (49) valores -> valor . COMA valores
    (50) valores -> valor . estructura_ifUnaLinea
    (121) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 48 (valores -> valor .)
    WHEN            reduce using rule 48 (valores -> valor .)
    DO              reduce using rule 48 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 48 (valores -> valor .)
    ELSE            reduce using rule 48 (valores -> valor .)
    ELSEIF          reduce using rule 48 (valores -> valor .)
    END             reduce using rule 48 (valores -> valor .)
    COMA            shift and go to state 154
    IF              shift and go to state 156

    estructura_ifUnaLinea          shift and go to state 155

state 72

    (53) valor -> CADENA .

    COMA            reduce using rule 53 (valor -> CADENA .)
    IF              reduce using rule 53 (valor -> CADENA .)
    $end            reduce using rule 53 (valor -> CADENA .)
    WHEN            reduce using rule 53 (valor -> CADENA .)
    DO              reduce using rule 53 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> CADENA .)
    ELSE            reduce using rule 53 (valor -> CADENA .)
    ELSEIF          reduce using rule 53 (valor -> CADENA .)
    END             reduce using rule 53 (valor -> CADENA .)


state 73

    (54) valor -> valorNumerico .

    COMA            reduce using rule 54 (valor -> valorNumerico .)
    IF              reduce using rule 54 (valor -> valorNumerico .)
    $end            reduce using rule 54 (valor -> valorNumerico .)
    WHEN            reduce using rule 54 (valor -> valorNumerico .)
    DO              reduce using rule 54 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> valorNumerico .)
    ELSE            reduce using rule 54 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 54 (valor -> valorNumerico .)
    END             reduce using rule 54 (valor -> valorNumerico .)


state 74

    (55) valor -> VARIABLE .

    COMA            reduce using rule 55 (valor -> VARIABLE .)
    IF              reduce using rule 55 (valor -> VARIABLE .)
    $end            reduce using rule 55 (valor -> VARIABLE .)
    WHEN            reduce using rule 55 (valor -> VARIABLE .)
    DO              reduce using rule 55 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> VARIABLE .)
    ELSE            reduce using rule 55 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 55 (valor -> VARIABLE .)
    END             reduce using rule 55 (valor -> VARIABLE .)


state 75

    (56) valor -> VARIABLECLASE .

    COMA            reduce using rule 56 (valor -> VARIABLECLASE .)
    IF              reduce using rule 56 (valor -> VARIABLECLASE .)
    $end            reduce using rule 56 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 56 (valor -> VARIABLECLASE .)
    DO              reduce using rule 56 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 56 (valor -> VARIABLECLASE .)
    END             reduce using rule 56 (valor -> VARIABLECLASE .)


state 76

    (57) valor -> SIMBOLO .

    COMA            reduce using rule 57 (valor -> SIMBOLO .)
    IF              reduce using rule 57 (valor -> SIMBOLO .)
    $end            reduce using rule 57 (valor -> SIMBOLO .)
    WHEN            reduce using rule 57 (valor -> SIMBOLO .)
    DO              reduce using rule 57 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> SIMBOLO .)
    ELSE            reduce using rule 57 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 57 (valor -> SIMBOLO .)
    END             reduce using rule 57 (valor -> SIMBOLO .)


state 77

    (88) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 157


state 78

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 83
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    operacionAritmetica            shift and go to state 79
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 82

state 79

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (42) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 158
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 80

    (85) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 159


state 81

    (33) soloEnteros -> ENTERO .
    (32) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 33 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)


state 82

    (41) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 41 (expresionNumerica -> valorNumerico .)


state 83

    (44) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    NEWLINE         reduce using rule 44 (expresionNumerica -> VARIABLE .)


state 84

    (89) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 160


state 85

    (99) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 28
    VARIABLE        shift and go to state 162

    valorSimbolo                   shift and go to state 161

state 86

    (100) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (104) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 164
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 163

state 87

    (101) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 165


state 88

    (106) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (111) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 167

    funcionesFormatoImpresion      shift and go to state 166

state 89

    (142) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 168


state 90

    (143) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 143 (hashes -> LLAVE_IZ LLAVE_DER .)


state 91

    (148) elemento_hash -> claveValor .
    (149) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 148 (elemento_hash -> claveValor .)
    COMA            shift and go to state 169


state 92

    (144) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (145) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 170


state 93

    (146) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (147) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 171


state 94

    (119) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (120) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 172
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 95

    (117) condicionIf -> expresiones_booleanas .
    (118) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (97) funcionesComparacion -> . AND
    (98) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 117 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 174
    OR              shift and go to state 175

    funcionesComparacion           shift and go to state 173

state 96

    (100) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 86

state 97

    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 98

    (85) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (33) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 176

    soloEnteros                    shift and go to state 80

state 99

    (107) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (108) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 177


state 100

    (79) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 178


state 101

    (80) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)


state 102

    (72) elementos_array -> elemento_array . COMA elementos_array
    (73) elementos_array -> elemento_array .

    COMA            shift and go to state 179
    CORCHETE_DER    reduce using rule 73 (elementos_array -> elemento_array .)


state 103

    (74) elemento_array -> CADENA .

    COMA            reduce using rule 74 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 74 (elemento_array -> CADENA .)


state 104

    (75) elemento_array -> ENTERO .

    COMA            reduce using rule 75 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 75 (elemento_array -> ENTERO .)


state 105

    (76) elemento_array -> FLOTANTE .

    COMA            reduce using rule 76 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 76 (elemento_array -> FLOTANTE .)


state 106

    (77) elemento_array -> array .

    COMA            reduce using rule 77 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 77 (elemento_array -> array .)


state 107

    (78) elemento_array -> VARIABLE .

    COMA            reduce using rule 78 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 78 (elemento_array -> VARIABLE .)


state 108

    (135) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (136) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 180


state 109

    (137) sentencia_case -> CASE declaracion . sentencia_when END
    (140) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 181

state 110

    (124) declaracion -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 124 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 124 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 124 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 124 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 124 (declaracion -> operacionAritmetica .)
    END             reduce using rule 124 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 124 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 111

    (125) declaracion -> asignacion .

    WHEN            reduce using rule 125 (declaracion -> asignacion .)
    DO              reduce using rule 125 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> asignacion .)
    ELSE            reduce using rule 125 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 125 (declaracion -> asignacion .)
    END             reduce using rule 125 (declaracion -> asignacion .)
    $end            reduce using rule 125 (declaracion -> asignacion .)


state 112

    (126) declaracion -> impresion .

    WHEN            reduce using rule 126 (declaracion -> impresion .)
    DO              reduce using rule 126 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> impresion .)
    ELSE            reduce using rule 126 (declaracion -> impresion .)
    ELSEIF          reduce using rule 126 (declaracion -> impresion .)
    END             reduce using rule 126 (declaracion -> impresion .)
    $end            reduce using rule 126 (declaracion -> impresion .)


state 113

    (127) declaracion -> impresion_vacia .

    WHEN            reduce using rule 127 (declaracion -> impresion_vacia .)
    DO              reduce using rule 127 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 127 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 127 (declaracion -> impresion_vacia .)
    END             reduce using rule 127 (declaracion -> impresion_vacia .)
    $end            reduce using rule 127 (declaracion -> impresion_vacia .)


state 114

    (128) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 128 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 128 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 128 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 128 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 128 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 128 (declaracion -> expresiones_booleanas .)


state 115

    (129) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 129 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 129 (declaracion -> solicitudDatosTeclado .)


state 116

    (130) declaracion -> hashes .

    WHEN            reduce using rule 130 (declaracion -> hashes .)
    DO              reduce using rule 130 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> hashes .)
    ELSE            reduce using rule 130 (declaracion -> hashes .)
    ELSEIF          reduce using rule 130 (declaracion -> hashes .)
    END             reduce using rule 130 (declaracion -> hashes .)
    $end            reduce using rule 130 (declaracion -> hashes .)


state 117

    (131) declaracion -> estructura_if .

    WHEN            reduce using rule 131 (declaracion -> estructura_if .)
    DO              reduce using rule 131 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> estructura_if .)
    ELSE            reduce using rule 131 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 131 (declaracion -> estructura_if .)
    END             reduce using rule 131 (declaracion -> estructura_if .)
    $end            reduce using rule 131 (declaracion -> estructura_if .)


state 118

    (132) declaracion -> asignacion_clase .

    WHEN            reduce using rule 132 (declaracion -> asignacion_clase .)
    DO              reduce using rule 132 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 132 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 132 (declaracion -> asignacion_clase .)
    END             reduce using rule 132 (declaracion -> asignacion_clase .)
    $end            reduce using rule 132 (declaracion -> asignacion_clase .)


state 119

    (133) declaracion -> sentencia_while .

    WHEN            reduce using rule 133 (declaracion -> sentencia_while .)
    DO              reduce using rule 133 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 133 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 133 (declaracion -> sentencia_while .)
    END             reduce using rule 133 (declaracion -> sentencia_while .)
    $end            reduce using rule 133 (declaracion -> sentencia_while .)


state 120

    (134) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 134 (declaracion -> estructura_ifUnaLinea .)


state 121

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 182
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 122

    (119) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (121) estructura_ifUnaLinea -> IF . condicionIf
    (117) condicionIf -> . expresiones_booleanas
    (118) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 183
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 123

    (59) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (60) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (62) asignacion_clase -> VARIABLECLASE . IGUAL array
    (63) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 184


state 124

    (139) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 139 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 139 (sentencias_when -> sentencia_when sentencias_when .)


state 125

    (141) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 185


state 126

    (155) definicion_clase -> encabezadoClase NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (156) cuerpoVariables -> . asignacion_clase
    (157) cuerpoVariables -> . asignacion
    (158) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (159) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 189

    cuerpoVariables                shift and go to state 186
    asignacion_clase               shift and go to state 187
    asignacion                     shift and go to state 188

state 127

    (29) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 190

state 128

    (140) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 191


state 129

    (153) encabezadoClase -> CLASS ID_CLASE .
    (154) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    NEWLINE         reduce using rule 153 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 192


state 130

    (45) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 53

state 131

    (42) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 132

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 133

    (28) valorCadena -> VARIABLE .

    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    $end            reduce using rule 28 (valorCadena -> VARIABLE .)
    END             reduce using rule 28 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 28 (valorCadena -> VARIABLE .)
    DO              reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 28 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 28 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 28 (valorCadena -> VARIABLE .)


state 134

    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    NEWLINE         reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 193
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]


state 135

    (65) asignacion -> VARIABLE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    $end            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 136

    (66) asignacion -> VARIABLE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    $end            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 137

    (67) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)


state 138

    (68) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    NEWLINE         reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 139

    (69) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)


state 140

    (70) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 141

    (71) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)


state 142

    (51) booleanos -> TRUE .

    $end            reduce using rule 51 (booleanos -> TRUE .)
    END             reduce using rule 51 (booleanos -> TRUE .)
    WHEN            reduce using rule 51 (booleanos -> TRUE .)
    DO              reduce using rule 51 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 51 (booleanos -> TRUE .)
    ELSE            reduce using rule 51 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 51 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 51 (booleanos -> TRUE .)


state 143

    (52) booleanos -> FALSE .

    $end            reduce using rule 52 (booleanos -> FALSE .)
    END             reduce using rule 52 (booleanos -> FALSE .)
    WHEN            reduce using rule 52 (booleanos -> FALSE .)
    DO              reduce using rule 52 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 52 (booleanos -> FALSE .)
    ELSE            reduce using rule 52 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 52 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 52 (booleanos -> FALSE .)


state 144

    (102) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 145

    (103) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 146

    (113) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 113 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 113 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 147

    (114) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 148

    (81) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 194


state 149

    (150) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 195


state 150

    (34) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (112) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 112 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 112 (funcionesNumeros -> TO_F .) ]


state 151

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 196


state 152

    (109) funcionesArray -> SORT .

    $end            reduce using rule 109 (funcionesArray -> SORT .)
    END             reduce using rule 109 (funcionesArray -> SORT .)


state 153

    (110) funcionesArray -> FOR . EACH

    EACH            shift and go to state 197


state 154

    (49) valores -> valor COMA . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 72
    VARIABLE        shift and go to state 74
    VARIABLECLASE   shift and go to state 75
    SIMBOLO         shift and go to state 76
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valor                          shift and go to state 71
    valores                        shift and go to state 198
    valorNumerico                  shift and go to state 73

state 155

    (50) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)


state 156

    (121) estructura_ifUnaLinea -> IF . condicionIf
    (117) condicionIf -> . expresiones_booleanas
    (118) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 199
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 157

    (88) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 88 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 158

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 159

    (85) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (33) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 176

    soloEnteros                    shift and go to state 200

state 160

    (89) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 89 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 161

    (99) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    $end            reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    AND             reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    OR              reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLE        reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 99 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 162

    (23) valorSimbolo -> VARIABLE .

    $end            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    AND             reduce using rule 23 (valorSimbolo -> VARIABLE .)
    OR              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 23 (valorSimbolo -> VARIABLE .)


state 163

    (100) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 100 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 164

    (104) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 165

    (101) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    SIMBOLO         reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 101 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 166

    (106) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 167

    (111) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 111 (funcionesFormatoImpresion -> CHOMP .)


state 168

    (142) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 142 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 169

    (149) elemento_hash -> claveValor COMA . claveValor
    (144) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (145) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (146) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (147) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93

    claveValor                     shift and go to state 201

state 170

    (144) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (145) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 203
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 202

state 171

    (146) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (147) claveValor -> CADENA ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 204
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 205

state 172

    (119) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (120) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (123) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 206
    ELSEIF          shift and go to state 208

    estructura_secundaria_if       shift and go to state 207

state 173

    (118) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    expresiones_booleanas          shift and go to state 209
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 174

    (97) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 97 (funcionesComparacion -> AND .)
    SIMBOLO         reduce using rule 97 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 97 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 97 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 97 (funcionesComparacion -> AND .)


state 175

    (98) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 98 (funcionesComparacion -> OR .)
    SIMBOLO         reduce using rule 98 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 98 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 98 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 98 (funcionesComparacion -> OR .)


state 176

    (33) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 33 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 33 (soloEnteros -> ENTERO .)


state 177

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (108) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (115) argumentos -> . VARIABLE
    (116) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 211
    VARIABLE        shift and go to state 210

    argumentos                     shift and go to state 212

state 178

    (79) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 179

    (72) elementos_array -> elemento_array COMA . elementos_array
    (72) elementos_array -> . elemento_array COMA elementos_array
    (73) elementos_array -> . elemento_array
    (74) elemento_array -> . CADENA
    (75) elemento_array -> . ENTERO
    (76) elemento_array -> . FLOTANTE
    (77) elemento_array -> . array
    (78) elemento_array -> . VARIABLE
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 41

    elemento_array                 shift and go to state 102
    elementos_array                shift and go to state 213
    array                          shift and go to state 106

state 180

    (135) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (136) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresiones_booleanas          shift and go to state 114
    sentencia_while                shift and go to state 214
    declaracion                    shift and go to state 215
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 181

    (137) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 216


state 182

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    TRUE            shift and go to state 142
    FALSE           shift and go to state 143
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    booleanos                      shift and go to state 217
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 183

    (119) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (120) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (121) estructura_ifUnaLinea -> IF condicionIf .
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHEN            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 172
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 184

    (59) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (60) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (62) asignacion_clase -> VARIABLECLASE IGUAL . array
    (63) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 218
    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 219
    hashes                         shift and go to state 220
    array                          shift and go to state 221
    input_concatenacion            shift and go to state 222
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 185

    (141) sentencia_until -> UNTIL declaracion DO . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 223
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 186

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 224


state 187

    (156) cuerpoVariables -> asignacion_clase .
    (158) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 156 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 225

  ! NEWLINE         [ reduce using rule 156 (cuerpoVariables -> asignacion_clase .) ]


state 188

    (157) cuerpoVariables -> asignacion .
    (159) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 157 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 226

  ! NEWLINE         [ reduce using rule 157 (cuerpoVariables -> asignacion .) ]


state 189

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos

    IGUAL           shift and go to state 227


state 190

    (29) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 191

    (140) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 228
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 192

    (154) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 229


state 193

    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 151


state 194

    (81) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 230


state 195

    (150) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 231


state 196

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 232

state 197

    (110) funcionesArray -> FOR EACH .

    $end            reduce using rule 110 (funcionesArray -> FOR EACH .)
    END             reduce using rule 110 (funcionesArray -> FOR EACH .)


state 198

    (49) valores -> valor COMA valores .

    $end            reduce using rule 49 (valores -> valor COMA valores .)
    WHEN            reduce using rule 49 (valores -> valor COMA valores .)
    DO              reduce using rule 49 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 49 (valores -> valor COMA valores .)
    ELSE            reduce using rule 49 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 49 (valores -> valor COMA valores .)
    END             reduce using rule 49 (valores -> valor COMA valores .)


state 199

    (121) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 121 (estructura_ifUnaLinea -> IF condicionIf .)


state 200

    (85) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 233


state 201

    (149) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 149 (elemento_hash -> claveValor COMA claveValor .)


state 202

    (144) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 203

    (145) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 145 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 145 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 204

    (147) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 147 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 147 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 205

    (146) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 206

    (119) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 234
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 207

    (120) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 120 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 208

    (122) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (123) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (117) condicionIf -> . expresiones_booleanas
    (118) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 235
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 35

state 209

    (118) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    SIMBOLO         reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 118 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 210

    (115) argumentos -> VARIABLE .
    (116) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 115 (argumentos -> VARIABLE .)
    COMA            shift and go to state 236


state 211

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 237
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 212

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 238


state 213

    (72) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 72 (elementos_array -> elemento_array COMA elementos_array .)


state 214

    (135) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (133) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 239

  ! END             [ reduce using rule 133 (declaracion -> sentencia_while .) ]


state 215

    (136) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 240


state 216

    (137) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 137 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 137 (sentencia_case -> CASE declaracion sentencia_when END .)


state 217

    (71) asignacion -> VARIABLE IGUAL booleanos .
    (64) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for WHEN resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! WHEN            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 218

    (59) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    WHEN            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 219

    (60) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    WHEN            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 220

    (61) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 221

    (62) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 222

    (63) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 223

    (141) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 241


state 224

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 242


state 225

    (158) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (156) cuerpoVariables -> . asignacion_clase
    (157) cuerpoVariables -> . asignacion
    (158) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (159) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 189

    asignacion_clase               shift and go to state 187
    cuerpoVariables                shift and go to state 243
    asignacion                     shift and go to state 188

state 226

    (159) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (156) cuerpoVariables -> . asignacion_clase
    (157) cuerpoVariables -> . asignacion
    (158) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (159) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 189

    asignacion                     shift and go to state 188
    cuerpoVariables                shift and go to state 244
    asignacion_clase               shift and go to state 187

state 227

    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    TRUE            shift and go to state 142
    FALSE           shift and go to state 143
    PARENTESIS_IZ   shift and go to state 78
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    booleanos                      shift and go to state 245
    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 228

    (140) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 140 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 140 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 140 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 229

    (154) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    NEWLINE         reduce using rule 154 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 230

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 246


state 231

    (150) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (151) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (152) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 247

    each_args_hash                 shift and go to state 248

state 232

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 249


state 233

    (85) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 85 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 234

    (119) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 250


state 235

    (122) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (123) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 251
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 236

    (116) argumentos -> VARIABLE COMA . argumentos
    (115) argumentos -> . VARIABLE
    (116) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 210

    argumentos                     shift and go to state 252

state 237

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 253


state 238

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 254
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 239

    (135) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 240

    (136) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 241

    (141) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 141 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 141 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 242

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 255


state 243

    (158) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 158 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 158 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 244

    (159) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 159 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 159 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 245

    (64) asignacion_clase -> VARIABLE IGUAL booleanos .
    (71) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for NEWLINE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    NEWLINE         reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! NEWLINE         [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 246

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (82) cuerpo_each -> . cuerpo
    (83) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (84) vacio -> .
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (113) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (81) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (86) comentarios -> . COMENTARIO
    (87) comentarios -> . COMENTARIO_MULTI
    (150) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (137) sentencia_case -> . CASE declaracion sentencia_when END
    (138) sentencias_when -> . sentencia_when
    (139) sentencias_when -> . sentencia_when sentencias_when
    (141) sentencia_until -> . UNTIL declaracion DO declaracion END
    (155) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (140) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (153) encabezadoClase -> . CLASS ID_CLASE
    (154) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    END             reduce using rule 84 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 256
    cuerpo                         shift and go to state 257
    vacio                          shift and go to state 258
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
    valorCadena                    shift and go to state 49

state 247

    (151) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (152) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 259
    BARRA           shift and go to state 260


state 248

    (150) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 261
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 249

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 250

    (119) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 119 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 251

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (123) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 262
    ELSEIF          shift and go to state 208

    estructura_secundaria_if       shift and go to state 263

state 252

    (116) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 116 (argumentos -> VARIABLE COMA argumentos .)


state 253

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 254

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 264


state 255

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 265


state 256

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 266


state 257

    (82) cuerpo_each -> cuerpo .

    END             reduce using rule 82 (cuerpo_each -> cuerpo .)


state 258

    (83) cuerpo_each -> vacio .

    END             reduce using rule 83 (cuerpo_each -> vacio .)


state 259

    (151) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 267


state 260

    (152) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 152 (each_args_hash -> VARIABLE BARRA .)


state 261

    (150) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 268


state 262

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 269
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 263

    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 264

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 265

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (115) argumentos -> . VARIABLE
    (116) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 210

    argumentos                     shift and go to state 270

state 266

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 81 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 81 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 267

    (151) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 271


state 268

    (150) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 150 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 150 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 269

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 272


state 270

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 273


state 271

    (151) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 151 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 272

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 273

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (160) cuerpoClase -> . cuerpoVariables
    (161) cuerpoClase -> . declaracion
    (162) cuerpoClase -> . funciones
    (156) cuerpoVariables -> . asignacion_clase
    (157) cuerpoVariables -> . asignacion
    (158) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (159) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (124) declaracion -> . operacionAritmetica
    (125) declaracion -> . asignacion
    (126) declaracion -> . impresion
    (127) declaracion -> . impresion_vacia
    (128) declaracion -> . expresiones_booleanas
    (129) declaracion -> . solicitudDatosTeclado
    (130) declaracion -> . hashes
    (131) declaracion -> . estructura_if
    (132) declaracion -> . asignacion_clase
    (133) declaracion -> . sentencia_while
    (134) declaracion -> . estructura_ifUnaLinea
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (58) impresion -> . valor_print valores
    (88) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (90) impresion_vacia -> . PUTS
    (99) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (100) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (142) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (143) hashes -> . LLAVE_IZ LLAVE_DER
    (119) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (120) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (135) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (121) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (85) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 40
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 280
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    cuerpoVariables                shift and go to state 274
    cuerpoClase                    shift and go to state 275
    declaracion                    shift and go to state 276
    funciones                      shift and go to state 277
    asignacion_clase               shift and go to state 278
    asignacion                     shift and go to state 279
    operacionAritmetica            shift and go to state 110
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 274

    (160) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 160 (cuerpoClase -> cuerpoVariables .)


state 275

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 281


state 276

    (161) cuerpoClase -> declaracion .

    END             reduce using rule 161 (cuerpoClase -> declaracion .)


state 277

    (162) cuerpoClase -> funciones .

    END             reduce using rule 162 (cuerpoClase -> funciones .)


state 278

    (156) cuerpoVariables -> asignacion_clase .
    (158) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (132) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 132 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 225
    END             reduce using rule 132 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 156 (cuerpoVariables -> asignacion_clase .) ]


state 279

    (157) cuerpoVariables -> asignacion .
    (159) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (125) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 125 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 226
    END             reduce using rule 125 (declaracion -> asignacion .)

  ! END             [ reduce using rule 157 (cuerpoVariables -> asignacion .) ]


state 280

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . DIFERENTE
    (93) operadoresComparacion -> . MAYOR_QUE
    (94) operadoresComparacion -> . MENOR_QUE
    (95) operadoresComparacion -> . MENOR_IGUAL_QUE
    (96) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 227
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 281

    (155) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 155 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 155 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 26 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 97 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 97 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 121 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 121 resolved as shift
WARNING: shift/reduce conflict for MAS in state 130 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 130 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 130 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 130 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 130 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 130 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 187 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 188 resolved as shift
WARNING: shift/reduce conflict for END in state 214 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 280 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 280 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 280 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 280 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 280 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 280 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 26
WARNING: reduce/reduce conflict in state 134 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 150 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 150
WARNING: reduce/reduce conflict in state 217 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 217
WARNING: reduce/reduce conflict in state 245 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 245
WARNING: reduce/reduce conflict in state 278 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 278
WARNING: reduce/reduce conflict in state 279 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 279
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
