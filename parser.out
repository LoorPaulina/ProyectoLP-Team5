Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    input_concatenacion -> concatenacionSimpleCadena
Rule 23    input_concatenacion -> concatenacion_funcion
Rule 24    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 25    valorCadena -> CADENA
Rule 26    valorCadena -> VARIABLE
Rule 27    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 28    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 29    valorNumerico -> FLOTANTE
Rule 30    valorNumerico -> ENTERO
Rule 31    soloEnteros -> ENTERO
Rule 32    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 33    operadores -> MAS
Rule 34    operadores -> MENOS
Rule 35    operadores -> DIVISION
Rule 36    operadores -> MULTIPLICACION
Rule 37    operadores -> EXPONENCIACION
Rule 38    operadores -> MODULO
Rule 39    expresionNumerica -> valorNumerico
Rule 40    expresionNumerica -> operacionAritmetica
Rule 41    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 42    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 43    valor_print -> PRINT
Rule 44    valor_print -> PUTS
Rule 45    valores -> valor
Rule 46    valores -> valor COMA valores
Rule 47    valores -> valor estructura_ifUnaLinea
Rule 48    valor -> CADENA
Rule 49    valor -> valorNumerico
Rule 50    valor -> VARIABLE
Rule 51    valor -> VARIABLECLASE
Rule 52    valor -> SIMBOLO
Rule 53    impresion -> valor_print valores
Rule 54    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 55    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 56    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 57    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 58    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 59    asignacion -> VARIABLE IGUAL CADENA
Rule 60    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 61    asignacion -> VARIABLE IGUAL hashes
Rule 62    asignacion -> VARIABLE IGUAL array
Rule 63    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 64    elementos_array -> elemento_array COMA elementos_array
Rule 65    elementos_array -> elemento_array
Rule 66    elemento_array -> CADENA
Rule 67    elemento_array -> ENTERO
Rule 68    elemento_array -> FLOTANTE
Rule 69    elemento_array -> array
Rule 70    elemento_array -> VARIABLE
Rule 71    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 72    array -> CORCHETE_IZ CORCHETE_DER
Rule 73    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 74    cuerpo_each -> cuerpo
Rule 75    cuerpo_each -> vacio
Rule 76    vacio -> <empty>
Rule 77    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 78    comentarios -> COMENTARIO
Rule 79    comentarios -> COMENTARIO_MULTI
Rule 80    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 81    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 82    impresion_vacia -> PUTS
Rule 83    operadoresComparacion -> DOBLE_IGUAL
Rule 84    operadoresComparacion -> DIFERENTE
Rule 85    operadoresComparacion -> MAYOR_QUE
Rule 86    operadoresComparacion -> MENOR_QUE
Rule 87    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 88    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 89    funcionesComparacion -> AND
Rule 90    funcionesComparacion -> OR
Rule 91    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 92    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 93    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 94    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 95    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 96    expresiones_booleanas -> TRUE
Rule 97    expresiones_booleanas -> FALSE
Rule 98    solicitudDatosTeclado -> GETS
Rule 99    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 100   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 101   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 102   funcionesArray -> SORT
Rule 103   funcionesArray -> FOR EACH
Rule 104   funcionesFormatoImpresion -> CHOMP
Rule 105   funcionesNumeros -> TO_F
Rule 106   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 107   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 108   argumentos -> VARIABLE
Rule 109   argumentos -> VARIABLE COMA argumentos
Rule 110   condicionIf -> expresiones_booleanas
Rule 111   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 112   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 113   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 114   estructura_ifUnaLinea -> IF condicionIf
Rule 115   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 116   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 117   declaracion -> operacionAritmetica
Rule 118   declaracion -> asignacion
Rule 119   declaracion -> impresion
Rule 120   declaracion -> impresion_vacia
Rule 121   declaracion -> expresiones_booleanas
Rule 122   declaracion -> solicitudDatosTeclado
Rule 123   declaracion -> hashes
Rule 124   declaracion -> estructura_if
Rule 125   declaracion -> asignacion_clase
Rule 126   declaracion -> sentencia_while
Rule 127   declaracion -> estructura_ifUnaLinea
Rule 128   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 129   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 130   sentencia_case -> CASE declaracion sentencia_when END
Rule 131   sentencias_when -> sentencia_when
Rule 132   sentencias_when -> sentencia_when sentencias_when
Rule 133   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 134   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 135   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 136   hashes -> LLAVE_IZ LLAVE_DER
Rule 137   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 138   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 139   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 140   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 141   elemento_hash -> claveValor
Rule 142   elemento_hash -> claveValor COMA claveValor
Rule 143   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 144   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 145   each_args_hash -> VARIABLE BARRA
Rule 146   definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 147   cuerpoVariables -> asignacion_clase
Rule 148   cuerpoVariables -> asignacion
Rule 149   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 150   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 151   cuerpoClase -> cuerpoVariables
Rule 152   cuerpoClase -> declaracion
Rule 153   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 89
ASIGNA_HASH          : 137 138 139 140
BARRA                : 73 73 143 144 145
BEGIN                : 
BREAK                : 
CADENA               : 25 48 54 59 66 138 139 140 140
CASE                 : 130
CHOMP                : 104
CLASS                : 146
COMA                 : 46 64 109 142 144
COMENTARIO           : 78
COMENTARIO_MULTI     : 79
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 24
CORCHETE_DER         : 71 72
CORCHETE_IZ          : 71 72
DEF                  : 100 101 146
DEFINED_QUESTION     : 
DIFERENTE            : 84
DIVISION             : 35
DO                   : 73 128 129 134 143
DOBLE_IGUAL          : 83
EACH                 : 103 143
ELSE                 : 112 115
ELSEIF               : 115 116
END                  : 73 100 101 112 115 128 129 130 134 143 146
ENSURE               : 
ENTERO               : 30 31 67 92
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 37
FALSE                : 97
FLOTANTE             : 29 68
FOR                  : 103
GETS                 : 98 99
ID_CLASE             : 146
IF                   : 112 113 114
IGUAL                : 54 55 56 57 58 59 60 61 62 63
IGUAL_DOBLEP         : 133
IN                   : 
INITIALIZE           : 146
LLAVE_DER            : 135 136
LLAVE_IZ             : 135 136
MAS                  : 27 28 33
MAYOR_IGUAL_QUE      : 88
MAYOR_QUE            : 85
MENOR_IGUAL_QUE      : 87
MENOR_QUE            : 86
MENOS                : 34
MODULE               : 
MODULO               : 38
MULTIPLICACION       : 36
NEWLINE              : 146 146 149 150
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 90
O_SIGNO              : 
PARENTESIS_DER       : 24 41 77 80 81 100 101 146
PARENTESIS_IZ        : 24 41 77 80 81 100 101 146
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 43 80
PRINTF               : 
PUNTO                : 24 32 73 99 106 107 143
PUTS                 : 44 81 82
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 52
SORT                 : 102
SUPER                : 
TO_F                 : 32 105
TRES_PUNTOS          : 77
TRIPLE_IGUAL         : 92
TRUE                 : 96
UNTIL                : 134
VARIABLE             : 24 26 32 50 59 60 61 62 63 70 73 73 93 93 94 95 100 101 106 107 108 109 137 138 143 144 144 145
VARIABLECLASE        : 51 54 55 56 57 58
WHEN                 : 133
WHILE                : 128 129
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 101 109 146
array                : 12 57 62 69
asignacion           : 3 118 148 150
asignacion_clase     : 125 147 149
claveValor           : 141 142 142
comentarios          : 14
concatenacionSimpleCadena : 22 28
concatenacion_funcion : 23
condicionIf          : 112 113 114 115 116
cuerpo               : 74 0
cuerpoClase          : 146
cuerpoVariables      : 146 149 150 151
cuerpo_each          : 73
declaracion          : 100 101 112 112 113 115 115 116 129 130 133 133 134 134 143 152
definicion_clase     : 20
each_args_hash       : 143
each_array           : 13
each_hash            : 15
elemento_array       : 64 65
elemento_hash        : 135
elementos_array      : 64 71
entero_a_flotante    : 21
estructura_if        : 9 124
estructura_ifUnaLinea : 47 127
estructura_secundaria_if : 113 116
expresionNumerica    : 42 42 55 60
expresiones_booleanas : 6 110 111 111 121 128 129
funciones            : 10 153
funcionesArray       : 106
funcionesComparacion : 111
funcionesEstructuras : 11
funcionesFormatoImpresion : 99
funcionesNumeros     : 107
hashes               : 8 56 61 123
impresion            : 4 119
impresion_vacia      : 5 120
input_concatenacion  : 2 58 63
operacionAritmetica  : 1 40 41 117
operadores           : 42
operadoresComparacion : 91 93 94 95
rangos               : 92
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 130 131 132
sentencia_while      : 16 126 128
sentencias_when      : 18 132
solicitudDatosTeclado : 7 122
soloEnteros          : 77 77
vacio                : 75
valor                : 45 46 47
valorCadena          : 24 27 27 28
valorNumerico        : 39 49 91 91 94 95 137 139
valor_print          : 53
valores              : 46 53

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (100) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (101) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (106) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (107) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER
    (73) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (78) comentarios -> . COMENTARIO
    (79) comentarios -> . COMENTARIO_MULTI
    (143) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (130) sentencia_case -> . CASE declaracion sentencia_when END
    (131) sentencias_when -> . sentencia_when
    (132) sentencias_when -> . sentencia_when sentencias_when
    (134) sentencia_until -> . UNTIL declaracion DO declaracion END
    (146) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (32) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (133) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    CLASS           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    WHEN            shift and go to state 51
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33
    sentencia_when                 shift and go to state 46
    valorCadena                    shift and go to state 49

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (40) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

    operadores                     shift and go to state 52

state 24

    (22) input_concatenacion -> concatenacionSimpleCadena .
    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 22 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 59


state 25

    (23) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 23 (input_concatenacion -> concatenacion_funcion .)


state 26

    (59) asignacion -> VARIABLE . IGUAL CADENA
    (60) asignacion -> VARIABLE . IGUAL expresionNumerica
    (61) asignacion -> VARIABLE . IGUAL hashes
    (62) asignacion -> VARIABLE . IGUAL array
    (63) asignacion -> VARIABLE . IGUAL input_concatenacion
    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (106) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (107) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (73) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (143) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (32) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (24) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (26) valorCadena -> VARIABLE .
    (83) operadoresComparacion -> . DOBLE_IGUAL
    (84) operadoresComparacion -> . DIFERENTE
    (85) operadoresComparacion -> . MAYOR_QUE
    (86) operadoresComparacion -> . MENOR_QUE
    (87) operadoresComparacion -> . MENOR_IGUAL_QUE
    (88) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 60
    PUNTO           shift and go to state 62
    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 61

state 27

    (25) valorCadena -> CADENA .

    MAS             reduce using rule 25 (valorCadena -> CADENA .)
    $end            reduce using rule 25 (valorCadena -> CADENA .)
    WHEN            reduce using rule 25 (valorCadena -> CADENA .)
    DO              reduce using rule 25 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 25 (valorCadena -> CADENA .)
    ELSE            reduce using rule 25 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 25 (valorCadena -> CADENA .)
    END             reduce using rule 25 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 25 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 25 (valorCadena -> CADENA .)


state 28

    (53) impresion -> valor_print . valores
    (45) valores -> . valor
    (46) valores -> . valor COMA valores
    (47) valores -> . valor estructura_ifUnaLinea
    (48) valor -> . CADENA
    (49) valor -> . valorNumerico
    (50) valor -> . VARIABLE
    (51) valor -> . VARIABLECLASE
    (52) valor -> . SIMBOLO
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 71
    VARIABLE        shift and go to state 73
    VARIABLECLASE   shift and go to state 74
    SIMBOLO         shift and go to state 75
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valores                        shift and go to state 69
    valor                          shift and go to state 70
    valorNumerico                  shift and go to state 72

state 29

    (80) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (43) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 76
    CADENA          reduce using rule 43 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 43 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 43 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 43 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 43 (valor_print -> PRINT .)
    ENTERO          reduce using rule 43 (valor_print -> PRINT .)


state 30

    (41) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (77) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (31) soloEnteros -> . ENTERO
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 80
    PARENTESIS_IZ   shift and go to state 77
    FLOTANTE        shift and go to state 50

    operacionAritmetica            shift and go to state 78
    soloEnteros                    shift and go to state 79
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 81

state 31

    (81) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> PUTS .
    (44) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 82
    $end            reduce using rule 82 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 82 (impresion_vacia -> PUTS .)
    DO              reduce using rule 82 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 82 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 82 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 82 (impresion_vacia -> PUTS .)
    END             reduce using rule 82 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 44 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 44 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 44 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 44 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 44 (valor_print -> PUTS .)
    ENTERO          reduce using rule 44 (valor_print -> PUTS .)


state 32

    (91) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (39) expresionNumerica -> valorNumerico .
    (83) operadoresComparacion -> . DOBLE_IGUAL
    (84) operadoresComparacion -> . DIFERENTE
    (85) operadoresComparacion -> . MAYOR_QUE
    (86) operadoresComparacion -> . MENOR_QUE
    (87) operadoresComparacion -> . MENOR_IGUAL_QUE
    (88) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 83

state 33

    (92) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 84


state 34

    (30) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 30 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 30 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 30 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 30 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 30 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 30 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 30 (valorNumerico -> ENTERO .)
    IF              reduce using rule 30 (valorNumerico -> ENTERO .)
    $end            reduce using rule 30 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 30 (valorNumerico -> ENTERO .)
    DO              reduce using rule 30 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 30 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 30 (valorNumerico -> ENTERO .)
    END             reduce using rule 30 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 30 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 30 (valorNumerico -> ENTERO .)
    AND             reduce using rule 30 (valorNumerico -> ENTERO .)
    OR              reduce using rule 30 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 30 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 30 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 30 (valorNumerico -> ENTERO .)
    TRUE            reduce using rule 30 (valorNumerico -> ENTERO .)
    FALSE           reduce using rule 30 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 30 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 30 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 30 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 30 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 30 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 30 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 30 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 30 (valorNumerico -> ENTERO .)


state 35

    (96) expresiones_booleanas -> TRUE .

    $end            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    AND             reduce using rule 96 (expresiones_booleanas -> TRUE .)
    OR              reduce using rule 96 (expresiones_booleanas -> TRUE .)
    VARIABLE        reduce using rule 96 (expresiones_booleanas -> TRUE .)
    PRINT           reduce using rule 96 (expresiones_booleanas -> TRUE .)
    PUTS            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    TRUE            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    FALSE           reduce using rule 96 (expresiones_booleanas -> TRUE .)
    GETS            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    LLAVE_IZ        reduce using rule 96 (expresiones_booleanas -> TRUE .)
    IF              reduce using rule 96 (expresiones_booleanas -> TRUE .)
    VARIABLECLASE   reduce using rule 96 (expresiones_booleanas -> TRUE .)
    WHILE           reduce using rule 96 (expresiones_booleanas -> TRUE .)
    PARENTESIS_IZ   reduce using rule 96 (expresiones_booleanas -> TRUE .)
    FLOTANTE        reduce using rule 96 (expresiones_booleanas -> TRUE .)
    ENTERO          reduce using rule 96 (expresiones_booleanas -> TRUE .)
    DO              reduce using rule 96 (expresiones_booleanas -> TRUE .)
    WHEN            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 96 (expresiones_booleanas -> TRUE .)
    ELSE            reduce using rule 96 (expresiones_booleanas -> TRUE .)
    ELSEIF          reduce using rule 96 (expresiones_booleanas -> TRUE .)
    END             reduce using rule 96 (expresiones_booleanas -> TRUE .)


state 36

    (97) expresiones_booleanas -> FALSE .

    $end            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    AND             reduce using rule 97 (expresiones_booleanas -> FALSE .)
    OR              reduce using rule 97 (expresiones_booleanas -> FALSE .)
    VARIABLE        reduce using rule 97 (expresiones_booleanas -> FALSE .)
    PRINT           reduce using rule 97 (expresiones_booleanas -> FALSE .)
    PUTS            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    TRUE            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    FALSE           reduce using rule 97 (expresiones_booleanas -> FALSE .)
    GETS            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    LLAVE_IZ        reduce using rule 97 (expresiones_booleanas -> FALSE .)
    IF              reduce using rule 97 (expresiones_booleanas -> FALSE .)
    VARIABLECLASE   reduce using rule 97 (expresiones_booleanas -> FALSE .)
    WHILE           reduce using rule 97 (expresiones_booleanas -> FALSE .)
    PARENTESIS_IZ   reduce using rule 97 (expresiones_booleanas -> FALSE .)
    FLOTANTE        reduce using rule 97 (expresiones_booleanas -> FALSE .)
    ENTERO          reduce using rule 97 (expresiones_booleanas -> FALSE .)
    DO              reduce using rule 97 (expresiones_booleanas -> FALSE .)
    WHEN            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 97 (expresiones_booleanas -> FALSE .)
    ELSE            reduce using rule 97 (expresiones_booleanas -> FALSE .)
    ELSEIF          reduce using rule 97 (expresiones_booleanas -> FALSE .)
    END             reduce using rule 97 (expresiones_booleanas -> FALSE .)


state 37

    (98) solicitudDatosTeclado -> GETS .
    (99) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 98 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 85


state 38

    (135) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (136) hashes -> LLAVE_IZ . LLAVE_DER
    (141) elemento_hash -> . claveValor
    (142) elemento_hash -> . claveValor COMA claveValor
    (137) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (138) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (139) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (140) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 87
    VARIABLE        shift and go to state 89
    CADENA          shift and go to state 90

    elemento_hash                  shift and go to state 86
    claveValor                     shift and go to state 88

state 39

    (112) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (110) condicionIf -> . expresiones_booleanas
    (111) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    condicionIf                    shift and go to state 91
    expresiones_booleanas          shift and go to state 92
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 40

    (100) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (101) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 96


state 41

    (71) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (72) array -> CORCHETE_IZ . CORCHETE_DER
    (64) elementos_array -> . elemento_array COMA elementos_array
    (65) elementos_array -> . elemento_array
    (66) elemento_array -> . CADENA
    (67) elemento_array -> . ENTERO
    (68) elemento_array -> . FLOTANTE
    (69) elemento_array -> . array
    (70) elemento_array -> . VARIABLE
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 98
    CADENA          shift and go to state 100
    ENTERO          shift and go to state 101
    FLOTANTE        shift and go to state 102
    VARIABLE        shift and go to state 104
    CORCHETE_IZ     shift and go to state 41

    elementos_array                shift and go to state 97
    elemento_array                 shift and go to state 99
    array                          shift and go to state 103

state 42

    (78) comentarios -> COMENTARIO .

    $end            reduce using rule 78 (comentarios -> COMENTARIO .)
    END             reduce using rule 78 (comentarios -> COMENTARIO .)


state 43

    (79) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 79 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 79 (comentarios -> COMENTARIO_MULTI .)


state 44

    (128) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    expresiones_booleanas          shift and go to state 105
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 45

    (130) sentencia_case -> CASE . declaracion sentencia_when END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 46

    (131) sentencias_when -> sentencia_when .
    (132) sentencias_when -> sentencia_when . sentencias_when
    (131) sentencias_when -> . sentencia_when
    (132) sentencias_when -> . sentencia_when sentencias_when
    (133) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 131 (sentencias_when -> sentencia_when .)
    END             reduce using rule 131 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 121

state 47

    (134) sentencia_until -> UNTIL . declaracion DO declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 122
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 48

    (146) definicion_clase -> CLASS . ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    ID_CLASE        shift and go to state 123


state 49

    (27) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 124


state 50

    (29) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 29 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 29 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 29 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 29 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    TRUE            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    FALSE           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 29 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 29 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 29 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 29 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 29 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 29 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 29 (valorNumerico -> FLOTANTE .)


state 51

    (133) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 125
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 52

    (42) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 77
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    expresionNumerica              shift and go to state 126
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 127

state 53

    (33) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 33 (operadores -> MAS .)
    FLOTANTE        reduce using rule 33 (operadores -> MAS .)
    ENTERO          reduce using rule 33 (operadores -> MAS .)


state 54

    (34) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 34 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 34 (operadores -> MENOS .)
    ENTERO          reduce using rule 34 (operadores -> MENOS .)


state 55

    (35) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 35 (operadores -> DIVISION .)
    ENTERO          reduce using rule 35 (operadores -> DIVISION .)


state 56

    (36) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 36 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 36 (operadores -> MULTIPLICACION .)


state 57

    (37) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 37 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 37 (operadores -> EXPONENCIACION .)


state 58

    (38) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 38 (operadores -> MODULO .)
    ENTERO          reduce using rule 38 (operadores -> MODULO .)


state 59

    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 129

    valorCadena                    shift and go to state 128

state 60

    (59) asignacion -> VARIABLE IGUAL . CADENA
    (60) asignacion -> VARIABLE IGUAL . expresionNumerica
    (61) asignacion -> VARIABLE IGUAL . hashes
    (62) asignacion -> VARIABLE IGUAL . array
    (63) asignacion -> VARIABLE IGUAL . input_concatenacion
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 131
    PARENTESIS_IZ   shift and go to state 77
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 130

    expresionNumerica              shift and go to state 132
    hashes                         shift and go to state 133
    array                          shift and go to state 134
    input_concatenacion            shift and go to state 135
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 127
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 61

    (93) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (94) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 136
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 137

state 62

    (106) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (107) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (73) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (143) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (32) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (24) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (102) funcionesArray -> . SORT
    (103) funcionesArray -> . FOR EACH
    (105) funcionesNumeros -> . TO_F

    DO              shift and go to state 140
    EACH            shift and go to state 141
    TO_F            shift and go to state 142
    CONCAT          shift and go to state 143
    SORT            shift and go to state 144
    FOR             shift and go to state 145

    funcionesArray                 shift and go to state 138
    funcionesNumeros               shift and go to state 139

state 63

    (83) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 83 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 83 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 83 (operadoresComparacion -> DOBLE_IGUAL .)


state 64

    (84) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 84 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 84 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 84 (operadoresComparacion -> DIFERENTE .)


state 65

    (85) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 85 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 85 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 85 (operadoresComparacion -> MAYOR_QUE .)


state 66

    (86) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 86 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 86 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 86 (operadoresComparacion -> MENOR_QUE .)


state 67

    (87) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 87 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 87 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 87 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 68

    (88) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 88 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 88 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 88 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 69

    (53) impresion -> valor_print valores .

    $end            reduce using rule 53 (impresion -> valor_print valores .)
    WHEN            reduce using rule 53 (impresion -> valor_print valores .)
    DO              reduce using rule 53 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 53 (impresion -> valor_print valores .)
    ELSE            reduce using rule 53 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 53 (impresion -> valor_print valores .)
    END             reduce using rule 53 (impresion -> valor_print valores .)


state 70

    (45) valores -> valor .
    (46) valores -> valor . COMA valores
    (47) valores -> valor . estructura_ifUnaLinea
    (114) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 45 (valores -> valor .)
    WHEN            reduce using rule 45 (valores -> valor .)
    DO              reduce using rule 45 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 45 (valores -> valor .)
    ELSE            reduce using rule 45 (valores -> valor .)
    ELSEIF          reduce using rule 45 (valores -> valor .)
    END             reduce using rule 45 (valores -> valor .)
    COMA            shift and go to state 146
    IF              shift and go to state 148

    estructura_ifUnaLinea          shift and go to state 147

state 71

    (48) valor -> CADENA .

    COMA            reduce using rule 48 (valor -> CADENA .)
    IF              reduce using rule 48 (valor -> CADENA .)
    $end            reduce using rule 48 (valor -> CADENA .)
    WHEN            reduce using rule 48 (valor -> CADENA .)
    DO              reduce using rule 48 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 48 (valor -> CADENA .)
    ELSE            reduce using rule 48 (valor -> CADENA .)
    ELSEIF          reduce using rule 48 (valor -> CADENA .)
    END             reduce using rule 48 (valor -> CADENA .)


state 72

    (49) valor -> valorNumerico .

    COMA            reduce using rule 49 (valor -> valorNumerico .)
    IF              reduce using rule 49 (valor -> valorNumerico .)
    $end            reduce using rule 49 (valor -> valorNumerico .)
    WHEN            reduce using rule 49 (valor -> valorNumerico .)
    DO              reduce using rule 49 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 49 (valor -> valorNumerico .)
    ELSE            reduce using rule 49 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 49 (valor -> valorNumerico .)
    END             reduce using rule 49 (valor -> valorNumerico .)


state 73

    (50) valor -> VARIABLE .

    COMA            reduce using rule 50 (valor -> VARIABLE .)
    IF              reduce using rule 50 (valor -> VARIABLE .)
    $end            reduce using rule 50 (valor -> VARIABLE .)
    WHEN            reduce using rule 50 (valor -> VARIABLE .)
    DO              reduce using rule 50 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 50 (valor -> VARIABLE .)
    ELSE            reduce using rule 50 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 50 (valor -> VARIABLE .)
    END             reduce using rule 50 (valor -> VARIABLE .)


state 74

    (51) valor -> VARIABLECLASE .

    COMA            reduce using rule 51 (valor -> VARIABLECLASE .)
    IF              reduce using rule 51 (valor -> VARIABLECLASE .)
    $end            reduce using rule 51 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 51 (valor -> VARIABLECLASE .)
    DO              reduce using rule 51 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 51 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 51 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 51 (valor -> VARIABLECLASE .)
    END             reduce using rule 51 (valor -> VARIABLECLASE .)


state 75

    (52) valor -> SIMBOLO .

    COMA            reduce using rule 52 (valor -> SIMBOLO .)
    IF              reduce using rule 52 (valor -> SIMBOLO .)
    $end            reduce using rule 52 (valor -> SIMBOLO .)
    WHEN            reduce using rule 52 (valor -> SIMBOLO .)
    DO              reduce using rule 52 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 52 (valor -> SIMBOLO .)
    ELSE            reduce using rule 52 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 52 (valor -> SIMBOLO .)
    END             reduce using rule 52 (valor -> SIMBOLO .)


state 76

    (80) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 149


state 77

    (41) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 77
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    operacionAritmetica            shift and go to state 78
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 81

state 78

    (41) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (40) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 150
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 79

    (77) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 151


state 80

    (31) soloEnteros -> ENTERO .
    (30) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 30 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 30 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 30 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 30 (valorNumerico -> ENTERO .)


state 81

    (39) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 39 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 39 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 39 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 39 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 39 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 39 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 39 (expresionNumerica -> valorNumerico .)


state 82

    (81) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 152


state 83

    (91) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (95) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 154
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 153

state 84

    (92) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 155


state 85

    (99) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (104) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 157

    funcionesFormatoImpresion      shift and go to state 156

state 86

    (135) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 158


state 87

    (136) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 136 (hashes -> LLAVE_IZ LLAVE_DER .)


state 88

    (141) elemento_hash -> claveValor .
    (142) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 141 (elemento_hash -> claveValor .)
    COMA            shift and go to state 159


state 89

    (137) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (138) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 160


state 90

    (139) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (140) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 161


state 91

    (112) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (113) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 162
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 92

    (110) condicionIf -> expresiones_booleanas .
    (111) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (89) funcionesComparacion -> . AND
    (90) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    TRUE            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    FALSE           reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 110 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 164
    OR              shift and go to state 165

    funcionesComparacion           shift and go to state 163

state 93

    (91) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (83) operadoresComparacion -> . DOBLE_IGUAL
    (84) operadoresComparacion -> . DIFERENTE
    (85) operadoresComparacion -> . MAYOR_QUE
    (86) operadoresComparacion -> . MENOR_QUE
    (87) operadoresComparacion -> . MENOR_IGUAL_QUE
    (88) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 83

state 94

    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (83) operadoresComparacion -> . DOBLE_IGUAL
    (84) operadoresComparacion -> . DIFERENTE
    (85) operadoresComparacion -> . MAYOR_QUE
    (86) operadoresComparacion -> . MENOR_QUE
    (87) operadoresComparacion -> . MENOR_IGUAL_QUE
    (88) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 61

state 95

    (77) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 166

    soloEnteros                    shift and go to state 79

state 96

    (100) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (101) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 167


state 97

    (71) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 168


state 98

    (72) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 72 (array -> CORCHETE_IZ CORCHETE_DER .)


state 99

    (64) elementos_array -> elemento_array . COMA elementos_array
    (65) elementos_array -> elemento_array .

    COMA            shift and go to state 169
    CORCHETE_DER    reduce using rule 65 (elementos_array -> elemento_array .)


state 100

    (66) elemento_array -> CADENA .

    COMA            reduce using rule 66 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 66 (elemento_array -> CADENA .)


state 101

    (67) elemento_array -> ENTERO .

    COMA            reduce using rule 67 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 67 (elemento_array -> ENTERO .)


state 102

    (68) elemento_array -> FLOTANTE .

    COMA            reduce using rule 68 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 68 (elemento_array -> FLOTANTE .)


state 103

    (69) elemento_array -> array .

    COMA            reduce using rule 69 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 69 (elemento_array -> array .)


state 104

    (70) elemento_array -> VARIABLE .

    COMA            reduce using rule 70 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 70 (elemento_array -> VARIABLE .)


state 105

    (128) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (129) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 170


state 106

    (130) sentencia_case -> CASE declaracion . sentencia_when END
    (133) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 171

state 107

    (117) declaracion -> operacionAritmetica .
    (40) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 117 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 117 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 117 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 117 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 117 (declaracion -> operacionAritmetica .)
    END             reduce using rule 117 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 117 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 108

    (118) declaracion -> asignacion .

    WHEN            reduce using rule 118 (declaracion -> asignacion .)
    DO              reduce using rule 118 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 118 (declaracion -> asignacion .)
    ELSE            reduce using rule 118 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 118 (declaracion -> asignacion .)
    END             reduce using rule 118 (declaracion -> asignacion .)
    $end            reduce using rule 118 (declaracion -> asignacion .)


state 109

    (119) declaracion -> impresion .

    WHEN            reduce using rule 119 (declaracion -> impresion .)
    DO              reduce using rule 119 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 119 (declaracion -> impresion .)
    ELSE            reduce using rule 119 (declaracion -> impresion .)
    ELSEIF          reduce using rule 119 (declaracion -> impresion .)
    END             reduce using rule 119 (declaracion -> impresion .)
    $end            reduce using rule 119 (declaracion -> impresion .)


state 110

    (120) declaracion -> impresion_vacia .

    WHEN            reduce using rule 120 (declaracion -> impresion_vacia .)
    DO              reduce using rule 120 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 120 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 120 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 120 (declaracion -> impresion_vacia .)
    END             reduce using rule 120 (declaracion -> impresion_vacia .)
    $end            reduce using rule 120 (declaracion -> impresion_vacia .)


state 111

    (121) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 121 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 121 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 121 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 121 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 121 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 121 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 121 (declaracion -> expresiones_booleanas .)


state 112

    (122) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 122 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 122 (declaracion -> solicitudDatosTeclado .)


state 113

    (123) declaracion -> hashes .

    WHEN            reduce using rule 123 (declaracion -> hashes .)
    DO              reduce using rule 123 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 123 (declaracion -> hashes .)
    ELSE            reduce using rule 123 (declaracion -> hashes .)
    ELSEIF          reduce using rule 123 (declaracion -> hashes .)
    END             reduce using rule 123 (declaracion -> hashes .)
    $end            reduce using rule 123 (declaracion -> hashes .)


state 114

    (124) declaracion -> estructura_if .

    WHEN            reduce using rule 124 (declaracion -> estructura_if .)
    DO              reduce using rule 124 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 124 (declaracion -> estructura_if .)
    ELSE            reduce using rule 124 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 124 (declaracion -> estructura_if .)
    END             reduce using rule 124 (declaracion -> estructura_if .)
    $end            reduce using rule 124 (declaracion -> estructura_if .)


state 115

    (125) declaracion -> asignacion_clase .

    WHEN            reduce using rule 125 (declaracion -> asignacion_clase .)
    DO              reduce using rule 125 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 125 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 125 (declaracion -> asignacion_clase .)
    END             reduce using rule 125 (declaracion -> asignacion_clase .)
    $end            reduce using rule 125 (declaracion -> asignacion_clase .)


state 116

    (126) declaracion -> sentencia_while .

    WHEN            reduce using rule 126 (declaracion -> sentencia_while .)
    DO              reduce using rule 126 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 126 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 126 (declaracion -> sentencia_while .)
    END             reduce using rule 126 (declaracion -> sentencia_while .)
    $end            reduce using rule 126 (declaracion -> sentencia_while .)


state 117

    (127) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 127 (declaracion -> estructura_ifUnaLinea .)


state 118

    (59) asignacion -> VARIABLE . IGUAL CADENA
    (60) asignacion -> VARIABLE . IGUAL expresionNumerica
    (61) asignacion -> VARIABLE . IGUAL hashes
    (62) asignacion -> VARIABLE . IGUAL array
    (63) asignacion -> VARIABLE . IGUAL input_concatenacion
    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (83) operadoresComparacion -> . DOBLE_IGUAL
    (84) operadoresComparacion -> . DIFERENTE
    (85) operadoresComparacion -> . MAYOR_QUE
    (86) operadoresComparacion -> . MENOR_QUE
    (87) operadoresComparacion -> . MENOR_IGUAL_QUE
    (88) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 60
    DOBLE_IGUAL     shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 61

state 119

    (112) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (114) estructura_ifUnaLinea -> IF . condicionIf
    (110) condicionIf -> . expresiones_booleanas
    (111) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    condicionIf                    shift and go to state 172
    expresiones_booleanas          shift and go to state 92
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 120

    (54) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (55) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (56) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (57) asignacion_clase -> VARIABLECLASE . IGUAL array
    (58) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 173


state 121

    (132) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 132 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 132 (sentencias_when -> sentencia_when sentencias_when .)


state 122

    (134) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 174


state 123

    (146) definicion_clase -> CLASS ID_CLASE . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 175


state 124

    (27) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 129

    valorCadena                    shift and go to state 176

state 125

    (133) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 177


state 126

    (42) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

  ! MAS             [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 42 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 52

state 127

    (40) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 40 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 40 (expresionNumerica -> operacionAritmetica .)


state 128

    (28) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 28 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 129

    (26) valorCadena -> VARIABLE .

    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)
    $end            reduce using rule 26 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 26 (valorCadena -> VARIABLE .)
    DO              reduce using rule 26 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 26 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 26 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 26 (valorCadena -> VARIABLE .)
    END             reduce using rule 26 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 26 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 26 (valorCadena -> VARIABLE .)


state 130

    (24) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (26) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 178
    MAS             reduce using rule 26 (valorCadena -> VARIABLE .)


state 131

    (59) asignacion -> VARIABLE IGUAL CADENA .
    (25) valorCadena -> CADENA .

    $end            reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 59 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 25 (valorCadena -> CADENA .)


state 132

    (60) asignacion -> VARIABLE IGUAL expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    $end            reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 60 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

    operadores                     shift and go to state 52

state 133

    (61) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 61 (asignacion -> VARIABLE IGUAL hashes .)


state 134

    (62) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 62 (asignacion -> VARIABLE IGUAL array .)


state 135

    (63) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 63 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 136

    (93) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    TRUE            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FALSE           reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 137

    (94) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    TRUE            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FALSE           reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 94 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 138

    (106) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 106 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 106 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 139

    (107) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 107 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 107 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 140

    (73) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 179


state 141

    (143) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 180


state 142

    (32) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (105) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 32 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 105 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 105 (funcionesNumeros -> TO_F .) ]


state 143

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 181


state 144

    (102) funcionesArray -> SORT .

    $end            reduce using rule 102 (funcionesArray -> SORT .)
    END             reduce using rule 102 (funcionesArray -> SORT .)


state 145

    (103) funcionesArray -> FOR . EACH

    EACH            shift and go to state 182


state 146

    (46) valores -> valor COMA . valores
    (45) valores -> . valor
    (46) valores -> . valor COMA valores
    (47) valores -> . valor estructura_ifUnaLinea
    (48) valor -> . CADENA
    (49) valor -> . valorNumerico
    (50) valor -> . VARIABLE
    (51) valor -> . VARIABLECLASE
    (52) valor -> . SIMBOLO
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 71
    VARIABLE        shift and go to state 73
    VARIABLECLASE   shift and go to state 74
    SIMBOLO         shift and go to state 75
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valor                          shift and go to state 70
    valores                        shift and go to state 183
    valorNumerico                  shift and go to state 72

state 147

    (47) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 47 (valores -> valor estructura_ifUnaLinea .)


state 148

    (114) estructura_ifUnaLinea -> IF . condicionIf
    (110) condicionIf -> . expresiones_booleanas
    (111) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    condicionIf                    shift and go to state 184
    expresiones_booleanas          shift and go to state 92
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 149

    (80) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 80 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 150

    (41) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 41 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 151

    (77) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 166

    soloEnteros                    shift and go to state 185

state 152

    (81) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 81 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 153

    (91) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    TRUE            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FALSE           reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 91 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 154

    (95) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    TRUE            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FALSE           reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 95 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 155

    (92) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    TRUE            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FALSE           reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 92 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 156

    (99) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 99 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 157

    (104) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 104 (funcionesFormatoImpresion -> CHOMP .)


state 158

    (135) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 135 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 159

    (142) elemento_hash -> claveValor COMA . claveValor
    (137) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (138) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (139) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (140) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 89
    CADENA          shift and go to state 90

    claveValor                     shift and go to state 186

state 160

    (137) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (138) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 188
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 187

state 161

    (139) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (140) claveValor -> CADENA ASIGNA_HASH . CADENA
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO

    CADENA          shift and go to state 189
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    valorNumerico                  shift and go to state 190

state 162

    (112) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (113) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (115) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (116) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 191
    ELSEIF          shift and go to state 193

    estructura_secundaria_if       shift and go to state 192

state 163

    (111) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    expresiones_booleanas          shift and go to state 194
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 164

    (89) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 89 (funcionesComparacion -> AND .)
    TRUE            reduce using rule 89 (funcionesComparacion -> AND .)
    FALSE           reduce using rule 89 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 89 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 89 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 89 (funcionesComparacion -> AND .)


state 165

    (90) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 90 (funcionesComparacion -> OR .)
    TRUE            reduce using rule 90 (funcionesComparacion -> OR .)
    FALSE           reduce using rule 90 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 90 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 90 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 90 (funcionesComparacion -> OR .)


state 166

    (31) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 31 (soloEnteros -> ENTERO .)


state 167

    (100) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (101) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (108) argumentos -> . VARIABLE
    (109) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 196
    VARIABLE        shift and go to state 195

    argumentos                     shift and go to state 197

state 168

    (71) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 71 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 169

    (64) elementos_array -> elemento_array COMA . elementos_array
    (64) elementos_array -> . elemento_array COMA elementos_array
    (65) elementos_array -> . elemento_array
    (66) elemento_array -> . CADENA
    (67) elemento_array -> . ENTERO
    (68) elemento_array -> . FLOTANTE
    (69) elemento_array -> . array
    (70) elemento_array -> . VARIABLE
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 100
    ENTERO          shift and go to state 101
    FLOTANTE        shift and go to state 102
    VARIABLE        shift and go to state 104
    CORCHETE_IZ     shift and go to state 41

    elemento_array                 shift and go to state 99
    elementos_array                shift and go to state 198
    array                          shift and go to state 103

state 170

    (128) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (129) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    expresiones_booleanas          shift and go to state 111
    sentencia_while                shift and go to state 199
    declaracion                    shift and go to state 200
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 171

    (130) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 201


state 172

    (112) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (113) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (114) estructura_ifUnaLinea -> IF condicionIf .
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHEN            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 162
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 173

    (54) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (55) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (56) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (57) asignacion_clase -> VARIABLECLASE IGUAL . array
    (58) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 202
    PARENTESIS_IZ   shift and go to state 77
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    VARIABLE        shift and go to state 130

    expresionNumerica              shift and go to state 203
    hashes                         shift and go to state 204
    array                          shift and go to state 205
    input_concatenacion            shift and go to state 206
    valorNumerico                  shift and go to state 81
    operacionAritmetica            shift and go to state 127
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 174

    (134) sentencia_until -> UNTIL declaracion DO . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 207
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 175

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (147) cuerpoVariables -> . asignacion_clase
    (148) cuerpoVariables -> . asignacion
    (149) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (150) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 211

    cuerpoVariables                shift and go to state 208
    asignacion_clase               shift and go to state 209
    asignacion                     shift and go to state 210

state 176

    (27) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 27 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 177

    (133) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 212
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 178

    (24) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 143


state 179

    (73) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 213


state 180

    (143) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 214


state 181

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 129

    valorCadena                    shift and go to state 215

state 182

    (103) funcionesArray -> FOR EACH .

    $end            reduce using rule 103 (funcionesArray -> FOR EACH .)
    END             reduce using rule 103 (funcionesArray -> FOR EACH .)


state 183

    (46) valores -> valor COMA valores .

    $end            reduce using rule 46 (valores -> valor COMA valores .)
    WHEN            reduce using rule 46 (valores -> valor COMA valores .)
    DO              reduce using rule 46 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 46 (valores -> valor COMA valores .)
    ELSE            reduce using rule 46 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 46 (valores -> valor COMA valores .)
    END             reduce using rule 46 (valores -> valor COMA valores .)


state 184

    (114) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 114 (estructura_ifUnaLinea -> IF condicionIf .)


state 185

    (77) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 216


state 186

    (142) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 142 (elemento_hash -> claveValor COMA claveValor .)


state 187

    (137) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 137 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 137 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 188

    (138) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 138 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 138 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 189

    (140) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 140 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 140 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 190

    (139) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 139 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 139 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 191

    (112) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 217
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 192

    (113) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 113 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 193

    (115) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (116) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (110) condicionIf -> . expresiones_booleanas
    (111) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 94
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    PARENTESIS_IZ   shift and go to state 95

    condicionIf                    shift and go to state 218
    expresiones_booleanas          shift and go to state 92
    valorNumerico                  shift and go to state 93
    rangos                         shift and go to state 33

state 194

    (111) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    TRUE            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FALSE           reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 111 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 195

    (108) argumentos -> VARIABLE .
    (109) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 108 (argumentos -> VARIABLE .)
    COMA            shift and go to state 219


state 196

    (100) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 220
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 197

    (101) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 221


state 198

    (64) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 64 (elementos_array -> elemento_array COMA elementos_array .)


state 199

    (128) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (126) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 222

  ! END             [ reduce using rule 126 (declaracion -> sentencia_while .) ]


state 200

    (129) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 223


state 201

    (130) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 130 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 130 (sentencia_case -> CASE declaracion sentencia_when END .)


state 202

    (54) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (25) valorCadena -> CADENA .

    WHEN            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 25 (valorCadena -> CADENA .)


state 203

    (55) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (42) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (33) operadores -> . MAS
    (34) operadores -> . MENOS
    (35) operadores -> . DIVISION
    (36) operadores -> . MULTIPLICACION
    (37) operadores -> . EXPONENCIACION
    (38) operadores -> . MODULO

    WHEN            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

    operadores                     shift and go to state 52

state 204

    (56) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 205

    (57) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 57 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 206

    (58) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 207

    (134) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 224


state 208

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 225


state 209

    (147) cuerpoVariables -> asignacion_clase .
    (149) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 147 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 226

  ! NEWLINE         [ reduce using rule 147 (cuerpoVariables -> asignacion_clase .) ]


state 210

    (148) cuerpoVariables -> asignacion .
    (150) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 148 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 227

  ! NEWLINE         [ reduce using rule 148 (cuerpoVariables -> asignacion .) ]


state 211

    (59) asignacion -> VARIABLE . IGUAL CADENA
    (60) asignacion -> VARIABLE . IGUAL expresionNumerica
    (61) asignacion -> VARIABLE . IGUAL hashes
    (62) asignacion -> VARIABLE . IGUAL array
    (63) asignacion -> VARIABLE . IGUAL input_concatenacion

    IGUAL           shift and go to state 60


state 212

    (133) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 133 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 133 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 133 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 213

    (73) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 228


state 214

    (143) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (144) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (145) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 229

    each_args_hash                 shift and go to state 230

state 215

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 231


state 216

    (77) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 77 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 217

    (112) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 232


state 218

    (115) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (116) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 233
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 219

    (109) argumentos -> VARIABLE COMA . argumentos
    (108) argumentos -> . VARIABLE
    (109) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 195

    argumentos                     shift and go to state 234

state 220

    (100) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 235


state 221

    (101) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 236
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 222

    (128) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 128 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 223

    (129) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 129 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 224

    (134) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 134 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 134 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 225

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 237


state 226

    (149) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (147) cuerpoVariables -> . asignacion_clase
    (148) cuerpoVariables -> . asignacion
    (149) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (150) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 211

    asignacion_clase               shift and go to state 209
    cuerpoVariables                shift and go to state 238
    asignacion                     shift and go to state 210

state 227

    (150) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (147) cuerpoVariables -> . asignacion_clase
    (148) cuerpoVariables -> . asignacion
    (149) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (150) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 211

    asignacion                     shift and go to state 210
    cuerpoVariables                shift and go to state 239
    asignacion_clase               shift and go to state 209

state 228

    (73) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (74) cuerpo_each -> . cuerpo
    (75) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (76) vacio -> .
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (22) input_concatenacion -> . concatenacionSimpleCadena
    (23) input_concatenacion -> . concatenacion_funcion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (100) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (101) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (106) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (107) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (71) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (72) array -> . CORCHETE_IZ CORCHETE_DER
    (73) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (78) comentarios -> . COMENTARIO
    (79) comentarios -> . COMENTARIO_MULTI
    (143) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (130) sentencia_case -> . CASE declaracion sentencia_when END
    (131) sentencias_when -> . sentencia_when
    (132) sentencias_when -> . sentencia_when sentencias_when
    (134) sentencia_until -> . UNTIL declaracion DO declaracion END
    (146) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (32) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (27) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (28) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (24) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (133) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (25) valorCadena -> . CADENA
    (26) valorCadena -> . VARIABLE

    END             reduce using rule 76 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    CLASS           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34
    WHEN            shift and go to state 51
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 240
    cuerpo                         shift and go to state 241
    vacio                          shift and go to state 242
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33
    sentencia_when                 shift and go to state 46
    valorCadena                    shift and go to state 49

state 229

    (144) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (145) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 243
    BARRA           shift and go to state 244


state 230

    (143) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 245
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 231

    (24) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 24 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 232

    (112) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 112 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 233

    (115) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (116) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (115) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (116) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 246
    ELSEIF          shift and go to state 193

    estructura_secundaria_if       shift and go to state 247

state 234

    (109) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 109 (argumentos -> VARIABLE COMA argumentos .)


state 235

    (100) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 100 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 100 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 236

    (101) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 248


state 237

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 249


state 238

    (149) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 149 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 149 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 239

    (150) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 150 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 150 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 240

    (73) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 250


state 241

    (74) cuerpo_each -> cuerpo .

    END             reduce using rule 74 (cuerpo_each -> cuerpo .)


state 242

    (75) cuerpo_each -> vacio .

    END             reduce using rule 75 (cuerpo_each -> vacio .)


state 243

    (144) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 251


state 244

    (145) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    TRUE            reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    FALSE           reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 145 (each_args_hash -> VARIABLE BARRA .)


state 245

    (143) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 252


state 246

    (115) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    declaracion                    shift and go to state 253
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 247

    (116) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 116 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 248

    (101) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 101 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 101 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 249

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 254


state 250

    (73) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 73 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 73 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 251

    (144) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 255


state 252

    (143) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 143 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 143 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 253

    (115) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 256


state 254

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (108) argumentos -> . VARIABLE
    (109) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 195

    argumentos                     shift and go to state 257

state 255

    (144) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    TRUE            reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FALSE           reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 144 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 256

    (115) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 115 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 257

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 258


state 258

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (151) cuerpoClase -> . cuerpoVariables
    (152) cuerpoClase -> . declaracion
    (153) cuerpoClase -> . funciones
    (147) cuerpoVariables -> . asignacion_clase
    (148) cuerpoVariables -> . asignacion
    (149) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (150) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (117) declaracion -> . operacionAritmetica
    (118) declaracion -> . asignacion
    (119) declaracion -> . impresion
    (120) declaracion -> . impresion_vacia
    (121) declaracion -> . expresiones_booleanas
    (122) declaracion -> . solicitudDatosTeclado
    (123) declaracion -> . hashes
    (124) declaracion -> . estructura_if
    (125) declaracion -> . asignacion_clase
    (126) declaracion -> . sentencia_while
    (127) declaracion -> . estructura_ifUnaLinea
    (100) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (101) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (54) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (55) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (56) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (57) asignacion_clase -> . VARIABLECLASE IGUAL array
    (58) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (59) asignacion -> . VARIABLE IGUAL CADENA
    (60) asignacion -> . VARIABLE IGUAL expresionNumerica
    (61) asignacion -> . VARIABLE IGUAL hashes
    (62) asignacion -> . VARIABLE IGUAL array
    (63) asignacion -> . VARIABLE IGUAL input_concatenacion
    (42) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (53) impresion -> . valor_print valores
    (80) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (82) impresion_vacia -> . PUTS
    (91) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (92) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (94) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (95) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (96) expresiones_booleanas -> . TRUE
    (97) expresiones_booleanas -> . FALSE
    (98) solicitudDatosTeclado -> . GETS
    (99) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (135) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (136) hashes -> . LLAVE_IZ LLAVE_DER
    (112) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (113) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (128) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (129) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (114) estructura_ifUnaLinea -> . IF condicionIf
    (39) expresionNumerica -> . valorNumerico
    (40) expresionNumerica -> . operacionAritmetica
    (41) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (43) valor_print -> . PRINT
    (44) valor_print -> . PUTS
    (29) valorNumerico -> . FLOTANTE
    (30) valorNumerico -> . ENTERO
    (77) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 40
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 119
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 30
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 34

    cuerpoVariables                shift and go to state 259
    cuerpoClase                    shift and go to state 260
    declaracion                    shift and go to state 261
    funciones                      shift and go to state 262
    asignacion_clase               shift and go to state 263
    asignacion                     shift and go to state 264
    operacionAritmetica            shift and go to state 107
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 28
    valorNumerico                  shift and go to state 32
    rangos                         shift and go to state 33

state 259

    (151) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 151 (cuerpoClase -> cuerpoVariables .)


state 260

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 265


state 261

    (152) cuerpoClase -> declaracion .

    END             reduce using rule 152 (cuerpoClase -> declaracion .)


state 262

    (153) cuerpoClase -> funciones .

    END             reduce using rule 153 (cuerpoClase -> funciones .)


state 263

    (147) cuerpoVariables -> asignacion_clase .
    (149) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (125) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 125 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 226
    END             reduce using rule 125 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 147 (cuerpoVariables -> asignacion_clase .) ]


state 264

    (148) cuerpoVariables -> asignacion .
    (150) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (118) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 118 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 227
    END             reduce using rule 118 (declaracion -> asignacion .)

  ! END             [ reduce using rule 148 (cuerpoVariables -> asignacion .) ]


state 265

    (146) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 146 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 146 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 126 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 126 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 126 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 126 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 126 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 126 resolved as shift
WARNING: shift/reduce conflict for END in state 199 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 209 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 210 resolved as shift
WARNING: reduce/reduce conflict in state 142 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 142
WARNING: reduce/reduce conflict in state 263 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 263
WARNING: reduce/reduce conflict in state 264 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 264
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
