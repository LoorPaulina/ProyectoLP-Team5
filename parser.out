Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    DOBLE_IGUAL
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    valorSimbolo -> SIMBOLO
Rule 23    valorSimbolo -> VARIABLE
Rule 24    input_concatenacion -> concatenacionSimpleCadena
Rule 25    input_concatenacion -> concatenacion_funcion
Rule 26    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 27    valorCadena -> CADENA
Rule 28    valorCadena -> VARIABLE
Rule 29    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 30    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 31    valorNumerico -> FLOTANTE
Rule 32    valorNumerico -> ENTERO
Rule 33    soloEnteros -> ENTERO
Rule 34    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 35    operadores -> MAS
Rule 36    operadores -> MENOS
Rule 37    operadores -> DIVISION
Rule 38    operadores -> MULTIPLICACION
Rule 39    operadores -> EXPONENCIACION
Rule 40    operadores -> MODULO
Rule 41    expresionNumerica -> valorNumerico
Rule 42    expresionNumerica -> operacionAritmetica
Rule 43    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 44    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 45    valor_print -> PRINT
Rule 46    valor_print -> PUTS
Rule 47    valores -> valor
Rule 48    valores -> valor COMA valores
Rule 49    valores -> valor estructura_ifUnaLinea
Rule 50    booleanos -> TRUE
Rule 51    booleanos -> FALSE
Rule 52    valor -> CADENA
Rule 53    valor -> valorNumerico
Rule 54    valor -> VARIABLE
Rule 55    valor -> VARIABLECLASE
Rule 56    valor -> SIMBOLO
Rule 57    impresion -> valor_print valores
Rule 58    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 59    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 60    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 61    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 63    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 64    asignacion -> VARIABLE IGUAL CADENA
Rule 65    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 66    asignacion -> VARIABLE IGUAL hashes
Rule 67    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 68    asignacion -> VARIABLE IGUAL array
Rule 69    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 70    asignacion -> VARIABLE IGUAL booleanos
Rule 71    elementos_array -> elemento_array COMA elementos_array
Rule 72    elementos_array -> elemento_array
Rule 73    elemento_array -> CADENA
Rule 74    elemento_array -> ENTERO
Rule 75    elemento_array -> FLOTANTE
Rule 76    elemento_array -> array
Rule 77    elemento_array -> VARIABLE
Rule 78    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 79    array -> CORCHETE_IZ CORCHETE_DER
Rule 80    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 81    cuerpo_each -> cuerpo
Rule 82    cuerpo_each -> vacio
Rule 83    vacio -> <empty>
Rule 84    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 85    comentarios -> COMENTARIO
Rule 86    comentarios -> COMENTARIO_MULTI
Rule 87    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 88    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 89    impresion_vacia -> PUTS
Rule 90    operadoresComparacion -> IGUAL_DOBLEP
Rule 91    operadoresComparacion -> DIFERENTE
Rule 92    operadoresComparacion -> MAYOR_QUE
Rule 93    operadoresComparacion -> MENOR_QUE
Rule 94    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 95    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 96    funcionesComparacion -> AND
Rule 97    funcionesComparacion -> OR
Rule 98    expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 99    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 100   expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 101   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 102   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 103   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 104   solicitudDatosTeclado -> GETS
Rule 105   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 106   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 107   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 108   funcionesArray -> SORT
Rule 109   funcionesArray -> FOR EACH
Rule 110   funcionesFormatoImpresion -> CHOMP
Rule 111   funcionesNumeros -> TO_F
Rule 112   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 113   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 114   argumentos -> VARIABLE
Rule 115   argumentos -> VARIABLE COMA argumentos
Rule 116   condicionIf -> expresiones_booleanas
Rule 117   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 118   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 119   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 120   estructura_ifUnaLinea -> IF condicionIf
Rule 121   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 122   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 123   declaracion -> operacionAritmetica
Rule 124   declaracion -> asignacion
Rule 125   declaracion -> impresion
Rule 126   declaracion -> impresion_vacia
Rule 127   declaracion -> expresiones_booleanas
Rule 128   declaracion -> solicitudDatosTeclado
Rule 129   declaracion -> hashes
Rule 130   declaracion -> estructura_if
Rule 131   declaracion -> asignacion_clase
Rule 132   declaracion -> sentencia_while
Rule 133   declaracion -> estructura_ifUnaLinea
Rule 134   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 135   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 136   sentencia_case -> CASE declaracion sentencia_when END
Rule 137   sentencias_when -> sentencia_when
Rule 138   sentencias_when -> sentencia_when sentencias_when
Rule 139   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 140   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 141   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 142   hashes -> LLAVE_IZ LLAVE_DER
Rule 143   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 144   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 145   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 146   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 147   elemento_hash -> claveValor
Rule 148   elemento_hash -> claveValor COMA claveValor
Rule 149   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 150   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 151   each_args_hash -> VARIABLE BARRA
Rule 152   encabezadoClase -> CLASS ID_CLASE
Rule 153   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 154   definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 155   cuerpoVariables -> asignacion_clase
Rule 156   cuerpoVariables -> asignacion
Rule 157   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 158   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 159   cuerpoClase -> cuerpoVariables
Rule 160   cuerpoClase -> declaracion
Rule 161   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 96
ASIGNA_HASH          : 143 144 145 146
BARRA                : 80 80 149 150 151
BEGIN                : 
BREAK                : 
CADENA               : 27 52 58 64 73 144 145 146 146
CASE                 : 136
CHOMP                : 110
CLASS                : 152 153
COMA                 : 48 71 115 148 150
COMENTARIO           : 85
COMENTARIO_MULTI     : 86
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 26
CORCHETE_DER         : 78 79
CORCHETE_IZ          : 78 79
DEF                  : 106 107 154
DEFINED_QUESTION     : 
DIFERENTE            : 91
DIVISION             : 37
DO                   : 80 134 135 140 149
DOBLE_IGUAL          : 
EACH                 : 109 149
ELSE                 : 118 121
ELSEIF               : 121 122
END                  : 80 106 107 118 121 134 135 136 140 149 154
ENSURE               : 
ENTERO               : 32 33 74 100
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 39
FALSE                : 51
FLOTANTE             : 31 75
FOR                  : 109
GETS                 : 104 105
ID_CLASE             : 152 153 153
IF                   : 118 119 120
IGUAL                : 58 59 60 61 62 63 64 65 66 67 68 69 70
IGUAL_DOBLEP         : 90 139
IN                   : 
INITIALIZE           : 154
LLAVE_DER            : 141 142
LLAVE_IZ             : 141 142
MAS                  : 29 30 35
MAYOR_IGUAL_QUE      : 95
MAYOR_QUE            : 92
MENOR_IGUAL_QUE      : 94
MENOR_QUE            : 93 153
MENOS                : 36
MODULE               : 
MODULO               : 40
MULTIPLICACION       : 38
NEWLINE              : 154 154 157 158
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 97
O_SIGNO              : 
PARENTESIS_DER       : 26 43 84 87 88 106 107 154
PARENTESIS_IZ        : 26 43 84 87 88 106 107 154
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 45 87
PRINTF               : 
PUNTO                : 26 34 80 105 112 113 149
PUTS                 : 46 88 89
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 22 56 67
SORT                 : 108
SUPER                : 
TO_F                 : 34 111
TRES_PUNTOS          : 84
TRIPLE_IGUAL         : 100
TRUE                 : 50
UNTIL                : 140
VARIABLE             : 23 26 28 34 54 63 64 65 66 67 68 69 70 77 80 80 101 101 102 103 106 107 112 113 114 115 143 144 149 150 150 151
VARIABLECLASE        : 55 58 59 60 61 62
WHEN                 : 139
WHILE                : 134 135
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 107 115 154
array                : 12 61 68 76
asignacion           : 3 124 156 158
asignacion_clase     : 131 155 157
booleanos            : 63 70
claveValor           : 147 148 148
comentarios          : 14
concatenacionSimpleCadena : 24 30
concatenacion_funcion : 25
condicionIf          : 118 119 120 121 122
cuerpo               : 81 0
cuerpoClase          : 154
cuerpoVariables      : 154 157 158 159
cuerpo_each          : 80
declaracion          : 106 107 118 118 119 121 121 122 135 136 139 139 140 140 149 160
definicion_clase     : 20
each_args_hash       : 149
each_array           : 13
each_hash            : 15
elemento_array       : 71 72
elemento_hash        : 141
elementos_array      : 71 78
encabezadoClase      : 154
entero_a_flotante    : 21
estructura_if        : 9 130
estructura_ifUnaLinea : 49 133
estructura_secundaria_if : 119 122
expresionNumerica    : 44 44 59 65
expresiones_booleanas : 6 116 117 117 127 134 135
funciones            : 10 161
funcionesArray       : 112
funcionesComparacion : 117
funcionesEstructuras : 11
funcionesFormatoImpresion : 105
funcionesNumeros     : 113
hashes               : 8 60 66 129
impresion            : 4 125
impresion_vacia      : 5 126
input_concatenacion  : 2 62 69
operacionAritmetica  : 1 42 43 123
operadores           : 44
operadoresComparacion : 98 99 101 102 103
rangos               : 100
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 136 137 138
sentencia_while      : 16 132 134
sentencias_when      : 18 138
solicitudDatosTeclado : 7 128
soloEnteros          : 84 84
vacio                : 82
valor                : 47 48 49
valorCadena          : 26 29 29 30
valorNumerico        : 41 53 99 99 102 103 143 145
valorSimbolo         : 98 98
valor_print          : 57
valores              : 48 57

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (106) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (112) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (113) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (80) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (85) comentarios -> . COMENTARIO
    (86) comentarios -> . COMENTARIO_MULTI
    (149) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (136) sentencia_case -> . CASE declaracion sentencia_when END
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (140) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (152) encabezadoClase -> . CLASS ID_CLASE
    (153) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
    valorCadena                    shift and go to state 49

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (44) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 24

    (24) input_concatenacion -> concatenacionSimpleCadena .
    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 60


state 25

    (25) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)


state 26

    (64) asignacion -> VARIABLE . IGUAL CADENA
    (65) asignacion -> VARIABLE . IGUAL expresionNumerica
    (66) asignacion -> VARIABLE . IGUAL hashes
    (67) asignacion -> VARIABLE . IGUAL SIMBOLO
    (68) asignacion -> VARIABLE . IGUAL array
    (69) asignacion -> VARIABLE . IGUAL input_concatenacion
    (70) asignacion -> VARIABLE . IGUAL booleanos
    (101) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (112) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (113) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (80) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (23) valorSimbolo -> VARIABLE .
    (28) valorCadena -> VARIABLE .
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 61
    PUNTO           shift and go to state 63
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 27

    (27) valorCadena -> CADENA .

    MAS             reduce using rule 27 (valorCadena -> CADENA .)
    $end            reduce using rule 27 (valorCadena -> CADENA .)
    END             reduce using rule 27 (valorCadena -> CADENA .)
    WHEN            reduce using rule 27 (valorCadena -> CADENA .)
    DO              reduce using rule 27 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 27 (valorCadena -> CADENA .)
    ELSE            reduce using rule 27 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 27 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 27 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 27 (valorCadena -> CADENA .)


state 28

    (22) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    AND             reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    OR              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 22 (valorSimbolo -> SIMBOLO .)


state 29

    (57) impresion -> valor_print . valores
    (47) valores -> . valor
    (48) valores -> . valor COMA valores
    (49) valores -> . valor estructura_ifUnaLinea
    (52) valor -> . CADENA
    (53) valor -> . valorNumerico
    (54) valor -> . VARIABLE
    (55) valor -> . VARIABLECLASE
    (56) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 72
    VARIABLE        shift and go to state 74
    VARIABLECLASE   shift and go to state 75
    SIMBOLO         shift and go to state 76
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valores                        shift and go to state 70
    valor                          shift and go to state 71
    valorNumerico                  shift and go to state 73

state 30

    (87) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (45) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 77
    CADENA          reduce using rule 45 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 45 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 45 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 45 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 45 (valor_print -> PRINT .)
    ENTERO          reduce using rule 45 (valor_print -> PRINT .)


state 31

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (84) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) soloEnteros -> . ENTERO
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 81
    PARENTESIS_IZ   shift and go to state 78
    FLOTANTE        shift and go to state 50

    operacionAritmetica            shift and go to state 79
    soloEnteros                    shift and go to state 80
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 82

state 32

    (88) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> PUTS .
    (46) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 83
    $end            reduce using rule 89 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 89 (impresion_vacia -> PUTS .)
    DO              reduce using rule 89 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 89 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 89 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 89 (impresion_vacia -> PUTS .)
    END             reduce using rule 89 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 46 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 46 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 46 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 46 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 46 (valor_print -> PUTS .)
    ENTERO          reduce using rule 46 (valor_print -> PUTS .)


state 33

    (98) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 84

state 34

    (99) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (41) expresionNumerica -> valorNumerico .
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 85

state 35

    (100) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 86


state 36

    (32) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 32 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 32 (valorNumerico -> ENTERO .)
    IF              reduce using rule 32 (valorNumerico -> ENTERO .)
    $end            reduce using rule 32 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 32 (valorNumerico -> ENTERO .)
    DO              reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 32 (valorNumerico -> ENTERO .)
    END             reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 32 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 32 (valorNumerico -> ENTERO .)
    AND             reduce using rule 32 (valorNumerico -> ENTERO .)
    OR              reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 32 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 32 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 32 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 32 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 32 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 32 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 32 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 32 (valorNumerico -> ENTERO .)


state 37

    (104) solicitudDatosTeclado -> GETS .
    (105) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 104 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 87


state 38

    (141) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (142) hashes -> LLAVE_IZ . LLAVE_DER
    (147) elemento_hash -> . claveValor
    (148) elemento_hash -> . claveValor COMA claveValor
    (143) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (144) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (145) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (146) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 89
    VARIABLE        shift and go to state 91
    CADENA          shift and go to state 92

    elemento_hash                  shift and go to state 88
    claveValor                     shift and go to state 90

state 39

    (118) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (116) condicionIf -> . expresiones_booleanas
    (117) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    condicionIf                    shift and go to state 93
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 40

    (106) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (107) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 98


state 41

    (78) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (79) array -> CORCHETE_IZ . CORCHETE_DER
    (71) elementos_array -> . elemento_array COMA elementos_array
    (72) elementos_array -> . elemento_array
    (73) elemento_array -> . CADENA
    (74) elemento_array -> . ENTERO
    (75) elemento_array -> . FLOTANTE
    (76) elemento_array -> . array
    (77) elemento_array -> . VARIABLE
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 100
    CADENA          shift and go to state 102
    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104
    VARIABLE        shift and go to state 106
    CORCHETE_IZ     shift and go to state 41

    elementos_array                shift and go to state 99
    elemento_array                 shift and go to state 101
    array                          shift and go to state 105

state 42

    (85) comentarios -> COMENTARIO .

    $end            reduce using rule 85 (comentarios -> COMENTARIO .)
    END             reduce using rule 85 (comentarios -> COMENTARIO .)


state 43

    (86) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 86 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 86 (comentarios -> COMENTARIO_MULTI .)


state 44

    (134) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    expresiones_booleanas          shift and go to state 107
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 45

    (136) sentencia_case -> CASE . declaracion sentencia_when END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 108
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 46

    (137) sentencias_when -> sentencia_when .
    (138) sentencias_when -> sentencia_when . sentencias_when
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 137 (sentencias_when -> sentencia_when .)
    END             reduce using rule 137 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 123

state 47

    (140) sentencia_until -> UNTIL . declaracion DO declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 124
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 48

    (154) definicion_clase -> encabezadoClase . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 125


state 49

    (29) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 126


state 50

    (31) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 31 (valorNumerico -> FLOTANTE .)


state 51

    (139) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 127
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 52

    (152) encabezadoClase -> CLASS . ID_CLASE
    (153) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 128


state 53

    (44) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 78
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 129
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 130

state 54

    (35) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> MAS .)
    FLOTANTE        reduce using rule 35 (operadores -> MAS .)
    ENTERO          reduce using rule 35 (operadores -> MAS .)


state 55

    (36) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 36 (operadores -> MENOS .)
    ENTERO          reduce using rule 36 (operadores -> MENOS .)


state 56

    (37) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 37 (operadores -> DIVISION .)
    ENTERO          reduce using rule 37 (operadores -> DIVISION .)


state 57

    (38) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 38 (operadores -> MULTIPLICACION .)


state 58

    (39) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 39 (operadores -> EXPONENCIACION .)


state 59

    (40) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 40 (operadores -> MODULO .)
    ENTERO          reduce using rule 40 (operadores -> MODULO .)


state 60

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 132

    valorCadena                    shift and go to state 131

state 61

    (64) asignacion -> VARIABLE IGUAL . CADENA
    (65) asignacion -> VARIABLE IGUAL . expresionNumerica
    (66) asignacion -> VARIABLE IGUAL . hashes
    (67) asignacion -> VARIABLE IGUAL . SIMBOLO
    (68) asignacion -> VARIABLE IGUAL . array
    (69) asignacion -> VARIABLE IGUAL . input_concatenacion
    (70) asignacion -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (50) booleanos -> . TRUE
    (51) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 134
    SIMBOLO         shift and go to state 137
    PARENTESIS_IZ   shift and go to state 78
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    VARIABLE        shift and go to state 133

    expresionNumerica              shift and go to state 135
    hashes                         shift and go to state 136
    array                          shift and go to state 138
    input_concatenacion            shift and go to state 139
    booleanos                      shift and go to state 140
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 62

    (101) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (102) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 143
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 144

state 63

    (112) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (113) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (80) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (108) funcionesArray -> . SORT
    (109) funcionesArray -> . FOR EACH
    (111) funcionesNumeros -> . TO_F

    DO              shift and go to state 147
    EACH            shift and go to state 148
    TO_F            shift and go to state 149
    CONCAT          shift and go to state 150
    SORT            shift and go to state 151
    FOR             shift and go to state 152

    funcionesArray                 shift and go to state 145
    funcionesNumeros               shift and go to state 146

state 64

    (90) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 90 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 90 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 90 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 90 (operadoresComparacion -> IGUAL_DOBLEP .)


state 65

    (91) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 91 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 91 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 91 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 91 (operadoresComparacion -> DIFERENTE .)


state 66

    (92) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 92 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 92 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 92 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 92 (operadoresComparacion -> MAYOR_QUE .)


state 67

    (93) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 93 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 93 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 93 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 93 (operadoresComparacion -> MENOR_QUE .)


state 68

    (94) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 94 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 69

    (95) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 95 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 70

    (57) impresion -> valor_print valores .

    $end            reduce using rule 57 (impresion -> valor_print valores .)
    WHEN            reduce using rule 57 (impresion -> valor_print valores .)
    DO              reduce using rule 57 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 57 (impresion -> valor_print valores .)
    ELSE            reduce using rule 57 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 57 (impresion -> valor_print valores .)
    END             reduce using rule 57 (impresion -> valor_print valores .)


state 71

    (47) valores -> valor .
    (48) valores -> valor . COMA valores
    (49) valores -> valor . estructura_ifUnaLinea
    (120) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 47 (valores -> valor .)
    WHEN            reduce using rule 47 (valores -> valor .)
    DO              reduce using rule 47 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 47 (valores -> valor .)
    ELSE            reduce using rule 47 (valores -> valor .)
    ELSEIF          reduce using rule 47 (valores -> valor .)
    END             reduce using rule 47 (valores -> valor .)
    COMA            shift and go to state 153
    IF              shift and go to state 155

    estructura_ifUnaLinea          shift and go to state 154

state 72

    (52) valor -> CADENA .

    COMA            reduce using rule 52 (valor -> CADENA .)
    IF              reduce using rule 52 (valor -> CADENA .)
    $end            reduce using rule 52 (valor -> CADENA .)
    WHEN            reduce using rule 52 (valor -> CADENA .)
    DO              reduce using rule 52 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 52 (valor -> CADENA .)
    ELSE            reduce using rule 52 (valor -> CADENA .)
    ELSEIF          reduce using rule 52 (valor -> CADENA .)
    END             reduce using rule 52 (valor -> CADENA .)


state 73

    (53) valor -> valorNumerico .

    COMA            reduce using rule 53 (valor -> valorNumerico .)
    IF              reduce using rule 53 (valor -> valorNumerico .)
    $end            reduce using rule 53 (valor -> valorNumerico .)
    WHEN            reduce using rule 53 (valor -> valorNumerico .)
    DO              reduce using rule 53 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> valorNumerico .)
    ELSE            reduce using rule 53 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 53 (valor -> valorNumerico .)
    END             reduce using rule 53 (valor -> valorNumerico .)


state 74

    (54) valor -> VARIABLE .

    COMA            reduce using rule 54 (valor -> VARIABLE .)
    IF              reduce using rule 54 (valor -> VARIABLE .)
    $end            reduce using rule 54 (valor -> VARIABLE .)
    WHEN            reduce using rule 54 (valor -> VARIABLE .)
    DO              reduce using rule 54 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> VARIABLE .)
    ELSE            reduce using rule 54 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 54 (valor -> VARIABLE .)
    END             reduce using rule 54 (valor -> VARIABLE .)


state 75

    (55) valor -> VARIABLECLASE .

    COMA            reduce using rule 55 (valor -> VARIABLECLASE .)
    IF              reduce using rule 55 (valor -> VARIABLECLASE .)
    $end            reduce using rule 55 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 55 (valor -> VARIABLECLASE .)
    DO              reduce using rule 55 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 55 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 55 (valor -> VARIABLECLASE .)
    END             reduce using rule 55 (valor -> VARIABLECLASE .)


state 76

    (56) valor -> SIMBOLO .

    COMA            reduce using rule 56 (valor -> SIMBOLO .)
    IF              reduce using rule 56 (valor -> SIMBOLO .)
    $end            reduce using rule 56 (valor -> SIMBOLO .)
    WHEN            reduce using rule 56 (valor -> SIMBOLO .)
    DO              reduce using rule 56 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> SIMBOLO .)
    ELSE            reduce using rule 56 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 56 (valor -> SIMBOLO .)
    END             reduce using rule 56 (valor -> SIMBOLO .)


state 77

    (87) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 156


state 78

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 78
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    operacionAritmetica            shift and go to state 79
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 82

state 79

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (42) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 157
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 80

    (84) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 158


state 81

    (33) soloEnteros -> ENTERO .
    (32) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 33 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)


state 82

    (41) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 41 (expresionNumerica -> valorNumerico .)


state 83

    (88) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 159


state 84

    (98) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 28
    VARIABLE        shift and go to state 161

    valorSimbolo                   shift and go to state 160

state 85

    (99) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (103) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 163
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 162

state 86

    (100) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 164


state 87

    (105) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (110) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 166

    funcionesFormatoImpresion      shift and go to state 165

state 88

    (141) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 167


state 89

    (142) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)


state 90

    (147) elemento_hash -> claveValor .
    (148) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 147 (elemento_hash -> claveValor .)
    COMA            shift and go to state 168


state 91

    (143) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (144) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 169


state 92

    (145) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (146) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 170


state 93

    (118) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (119) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 171
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 94

    (116) condicionIf -> expresiones_booleanas .
    (117) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (96) funcionesComparacion -> . AND
    (97) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 116 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 173
    OR              shift and go to state 174

    funcionesComparacion           shift and go to state 172

state 95

    (99) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

    operadoresComparacion          shift and go to state 85

state 96

    (101) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (23) valorSimbolo -> VARIABLE .
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 97

    (84) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (33) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 175

    soloEnteros                    shift and go to state 80

state 98

    (106) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (107) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 176


state 99

    (78) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 177


state 100

    (79) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 79 (array -> CORCHETE_IZ CORCHETE_DER .)


state 101

    (71) elementos_array -> elemento_array . COMA elementos_array
    (72) elementos_array -> elemento_array .

    COMA            shift and go to state 178
    CORCHETE_DER    reduce using rule 72 (elementos_array -> elemento_array .)


state 102

    (73) elemento_array -> CADENA .

    COMA            reduce using rule 73 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 73 (elemento_array -> CADENA .)


state 103

    (74) elemento_array -> ENTERO .

    COMA            reduce using rule 74 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 74 (elemento_array -> ENTERO .)


state 104

    (75) elemento_array -> FLOTANTE .

    COMA            reduce using rule 75 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 75 (elemento_array -> FLOTANTE .)


state 105

    (76) elemento_array -> array .

    COMA            reduce using rule 76 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 76 (elemento_array -> array .)


state 106

    (77) elemento_array -> VARIABLE .

    COMA            reduce using rule 77 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 77 (elemento_array -> VARIABLE .)


state 107

    (134) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (135) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 179


state 108

    (136) sentencia_case -> CASE declaracion . sentencia_when END
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 180

state 109

    (123) declaracion -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 123 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 123 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 123 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 123 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 123 (declaracion -> operacionAritmetica .)
    END             reduce using rule 123 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 123 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 110

    (124) declaracion -> asignacion .

    WHEN            reduce using rule 124 (declaracion -> asignacion .)
    DO              reduce using rule 124 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 124 (declaracion -> asignacion .)
    ELSE            reduce using rule 124 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 124 (declaracion -> asignacion .)
    END             reduce using rule 124 (declaracion -> asignacion .)
    $end            reduce using rule 124 (declaracion -> asignacion .)


state 111

    (125) declaracion -> impresion .

    WHEN            reduce using rule 125 (declaracion -> impresion .)
    DO              reduce using rule 125 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> impresion .)
    ELSE            reduce using rule 125 (declaracion -> impresion .)
    ELSEIF          reduce using rule 125 (declaracion -> impresion .)
    END             reduce using rule 125 (declaracion -> impresion .)
    $end            reduce using rule 125 (declaracion -> impresion .)


state 112

    (126) declaracion -> impresion_vacia .

    WHEN            reduce using rule 126 (declaracion -> impresion_vacia .)
    DO              reduce using rule 126 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 126 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 126 (declaracion -> impresion_vacia .)
    END             reduce using rule 126 (declaracion -> impresion_vacia .)
    $end            reduce using rule 126 (declaracion -> impresion_vacia .)


state 113

    (127) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 127 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 127 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 127 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 127 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 127 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 127 (declaracion -> expresiones_booleanas .)


state 114

    (128) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)


state 115

    (129) declaracion -> hashes .

    WHEN            reduce using rule 129 (declaracion -> hashes .)
    DO              reduce using rule 129 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> hashes .)
    ELSE            reduce using rule 129 (declaracion -> hashes .)
    ELSEIF          reduce using rule 129 (declaracion -> hashes .)
    END             reduce using rule 129 (declaracion -> hashes .)
    $end            reduce using rule 129 (declaracion -> hashes .)


state 116

    (130) declaracion -> estructura_if .

    WHEN            reduce using rule 130 (declaracion -> estructura_if .)
    DO              reduce using rule 130 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> estructura_if .)
    ELSE            reduce using rule 130 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 130 (declaracion -> estructura_if .)
    END             reduce using rule 130 (declaracion -> estructura_if .)
    $end            reduce using rule 130 (declaracion -> estructura_if .)


state 117

    (131) declaracion -> asignacion_clase .

    WHEN            reduce using rule 131 (declaracion -> asignacion_clase .)
    DO              reduce using rule 131 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 131 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 131 (declaracion -> asignacion_clase .)
    END             reduce using rule 131 (declaracion -> asignacion_clase .)
    $end            reduce using rule 131 (declaracion -> asignacion_clase .)


state 118

    (132) declaracion -> sentencia_while .

    WHEN            reduce using rule 132 (declaracion -> sentencia_while .)
    DO              reduce using rule 132 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 132 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 132 (declaracion -> sentencia_while .)
    END             reduce using rule 132 (declaracion -> sentencia_while .)
    $end            reduce using rule 132 (declaracion -> sentencia_while .)


state 119

    (133) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)


state 120

    (64) asignacion -> VARIABLE . IGUAL CADENA
    (65) asignacion -> VARIABLE . IGUAL expresionNumerica
    (66) asignacion -> VARIABLE . IGUAL hashes
    (67) asignacion -> VARIABLE . IGUAL SIMBOLO
    (68) asignacion -> VARIABLE . IGUAL array
    (69) asignacion -> VARIABLE . IGUAL input_concatenacion
    (70) asignacion -> VARIABLE . IGUAL booleanos
    (101) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (63) asignacion_clase -> VARIABLE . IGUAL booleanos
    (23) valorSimbolo -> VARIABLE .
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 181
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 121

    (118) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (120) estructura_ifUnaLinea -> IF . condicionIf
    (116) condicionIf -> . expresiones_booleanas
    (117) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    condicionIf                    shift and go to state 182
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 122

    (58) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (59) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (60) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (61) asignacion_clase -> VARIABLECLASE . IGUAL array
    (62) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 183


state 123

    (138) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 138 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 138 (sentencias_when -> sentencia_when sentencias_when .)


state 124

    (140) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 184


state 125

    (154) definicion_clase -> encabezadoClase NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 122
    VARIABLE        shift and go to state 188

    cuerpoVariables                shift and go to state 185
    asignacion_clase               shift and go to state 186
    asignacion                     shift and go to state 187

state 126

    (29) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 132

    valorCadena                    shift and go to state 189

state 127

    (139) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 190


state 128

    (152) encabezadoClase -> CLASS ID_CLASE .
    (153) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    NEWLINE         reduce using rule 152 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 191


state 129

    (44) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (44) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 44 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 53

state 130

    (42) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 131

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 132

    (28) valorCadena -> VARIABLE .

    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    $end            reduce using rule 28 (valorCadena -> VARIABLE .)
    END             reduce using rule 28 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 28 (valorCadena -> VARIABLE .)
    DO              reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 28 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 28 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 28 (valorCadena -> VARIABLE .)


state 133

    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 192
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)


state 134

    (64) asignacion -> VARIABLE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    $end            reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 64 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 135

    (65) asignacion -> VARIABLE IGUAL expresionNumerica .
    (44) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    $end            reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 65 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 136

    (66) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 66 (asignacion -> VARIABLE IGUAL hashes .)


state 137

    (67) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    NEWLINE         reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 138

    (68) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL array .)


state 139

    (69) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 140

    (70) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .)


state 141

    (50) booleanos -> TRUE .

    $end            reduce using rule 50 (booleanos -> TRUE .)
    END             reduce using rule 50 (booleanos -> TRUE .)
    WHEN            reduce using rule 50 (booleanos -> TRUE .)
    DO              reduce using rule 50 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 50 (booleanos -> TRUE .)
    ELSE            reduce using rule 50 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 50 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 50 (booleanos -> TRUE .)


state 142

    (51) booleanos -> FALSE .

    $end            reduce using rule 51 (booleanos -> FALSE .)
    END             reduce using rule 51 (booleanos -> FALSE .)
    WHEN            reduce using rule 51 (booleanos -> FALSE .)
    DO              reduce using rule 51 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 51 (booleanos -> FALSE .)
    ELSE            reduce using rule 51 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 51 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 51 (booleanos -> FALSE .)


state 143

    (101) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 101 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 144

    (102) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 145

    (112) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 112 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 112 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 146

    (113) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 113 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 113 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 147

    (80) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 193


state 148

    (149) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 194


state 149

    (34) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (111) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 111 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 111 (funcionesNumeros -> TO_F .) ]


state 150

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 195


state 151

    (108) funcionesArray -> SORT .

    $end            reduce using rule 108 (funcionesArray -> SORT .)
    END             reduce using rule 108 (funcionesArray -> SORT .)


state 152

    (109) funcionesArray -> FOR . EACH

    EACH            shift and go to state 196


state 153

    (48) valores -> valor COMA . valores
    (47) valores -> . valor
    (48) valores -> . valor COMA valores
    (49) valores -> . valor estructura_ifUnaLinea
    (52) valor -> . CADENA
    (53) valor -> . valorNumerico
    (54) valor -> . VARIABLE
    (55) valor -> . VARIABLECLASE
    (56) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 72
    VARIABLE        shift and go to state 74
    VARIABLECLASE   shift and go to state 75
    SIMBOLO         shift and go to state 76
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valor                          shift and go to state 71
    valores                        shift and go to state 197
    valorNumerico                  shift and go to state 73

state 154

    (49) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 49 (valores -> valor estructura_ifUnaLinea .)


state 155

    (120) estructura_ifUnaLinea -> IF . condicionIf
    (116) condicionIf -> . expresiones_booleanas
    (117) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    condicionIf                    shift and go to state 198
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 156

    (87) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 157

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 158

    (84) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (33) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 175

    soloEnteros                    shift and go to state 199

state 159

    (88) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 160

    (98) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    $end            reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    AND             reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    OR              reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLE        reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 98 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 161

    (23) valorSimbolo -> VARIABLE .

    $end            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    AND             reduce using rule 23 (valorSimbolo -> VARIABLE .)
    OR              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 23 (valorSimbolo -> VARIABLE .)


state 162

    (99) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 99 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 163

    (103) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 103 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 164

    (100) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    SIMBOLO         reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 100 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 165

    (105) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 105 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 166

    (110) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 110 (funcionesFormatoImpresion -> CHOMP .)


state 167

    (141) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 168

    (148) elemento_hash -> claveValor COMA . claveValor
    (143) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (144) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (145) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (146) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 91
    CADENA          shift and go to state 92

    claveValor                     shift and go to state 200

state 169

    (143) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (144) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 202
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 201

state 170

    (145) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (146) claveValor -> CADENA ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 203
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 204

state 171

    (118) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (119) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (121) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 205
    ELSEIF          shift and go to state 207

    estructura_secundaria_if       shift and go to state 206

state 172

    (117) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    expresiones_booleanas          shift and go to state 208
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 173

    (96) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 96 (funcionesComparacion -> AND .)
    SIMBOLO         reduce using rule 96 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 96 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 96 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 96 (funcionesComparacion -> AND .)


state 174

    (97) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 97 (funcionesComparacion -> OR .)
    SIMBOLO         reduce using rule 97 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 97 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 97 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 97 (funcionesComparacion -> OR .)


state 175

    (33) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 33 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 33 (soloEnteros -> ENTERO .)


state 176

    (106) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (107) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (114) argumentos -> . VARIABLE
    (115) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 210
    VARIABLE        shift and go to state 209

    argumentos                     shift and go to state 211

state 177

    (78) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 78 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 178

    (71) elementos_array -> elemento_array COMA . elementos_array
    (71) elementos_array -> . elemento_array COMA elementos_array
    (72) elementos_array -> . elemento_array
    (73) elemento_array -> . CADENA
    (74) elemento_array -> . ENTERO
    (75) elemento_array -> . FLOTANTE
    (76) elemento_array -> . array
    (77) elemento_array -> . VARIABLE
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 102
    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104
    VARIABLE        shift and go to state 106
    CORCHETE_IZ     shift and go to state 41

    elemento_array                 shift and go to state 101
    elementos_array                shift and go to state 212
    array                          shift and go to state 105

state 179

    (134) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (135) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresiones_booleanas          shift and go to state 113
    sentencia_while                shift and go to state 213
    declaracion                    shift and go to state 214
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 180

    (136) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 215


state 181

    (64) asignacion -> VARIABLE IGUAL . CADENA
    (65) asignacion -> VARIABLE IGUAL . expresionNumerica
    (66) asignacion -> VARIABLE IGUAL . hashes
    (67) asignacion -> VARIABLE IGUAL . SIMBOLO
    (68) asignacion -> VARIABLE IGUAL . array
    (69) asignacion -> VARIABLE IGUAL . input_concatenacion
    (70) asignacion -> VARIABLE IGUAL . booleanos
    (63) asignacion_clase -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (50) booleanos -> . TRUE
    (51) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 134
    SIMBOLO         shift and go to state 137
    PARENTESIS_IZ   shift and go to state 78
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    VARIABLE        shift and go to state 133

    expresionNumerica              shift and go to state 135
    hashes                         shift and go to state 136
    array                          shift and go to state 138
    input_concatenacion            shift and go to state 139
    booleanos                      shift and go to state 216
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 182

    (118) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (119) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (120) estructura_ifUnaLinea -> IF condicionIf .
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHEN            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 171
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 183

    (58) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (59) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (60) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (61) asignacion_clase -> VARIABLECLASE IGUAL . array
    (62) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 217
    PARENTESIS_IZ   shift and go to state 78
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    VARIABLE        shift and go to state 133

    expresionNumerica              shift and go to state 218
    hashes                         shift and go to state 219
    array                          shift and go to state 220
    input_concatenacion            shift and go to state 221
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 184

    (140) sentencia_until -> UNTIL declaracion DO . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 222
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 185

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 223


state 186

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 155 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 224

  ! NEWLINE         [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 187

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 156 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 225

  ! NEWLINE         [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 188

    (63) asignacion_clase -> VARIABLE . IGUAL booleanos
    (64) asignacion -> VARIABLE . IGUAL CADENA
    (65) asignacion -> VARIABLE . IGUAL expresionNumerica
    (66) asignacion -> VARIABLE . IGUAL hashes
    (67) asignacion -> VARIABLE . IGUAL SIMBOLO
    (68) asignacion -> VARIABLE . IGUAL array
    (69) asignacion -> VARIABLE . IGUAL input_concatenacion
    (70) asignacion -> VARIABLE . IGUAL booleanos

    IGUAL           shift and go to state 226


state 189

    (29) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 190

    (139) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 227
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 191

    (153) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 228


state 192

    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 150


state 193

    (80) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 229


state 194

    (149) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 230


state 195

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 132

    valorCadena                    shift and go to state 231

state 196

    (109) funcionesArray -> FOR EACH .

    $end            reduce using rule 109 (funcionesArray -> FOR EACH .)
    END             reduce using rule 109 (funcionesArray -> FOR EACH .)


state 197

    (48) valores -> valor COMA valores .

    $end            reduce using rule 48 (valores -> valor COMA valores .)
    WHEN            reduce using rule 48 (valores -> valor COMA valores .)
    DO              reduce using rule 48 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 48 (valores -> valor COMA valores .)
    ELSE            reduce using rule 48 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 48 (valores -> valor COMA valores .)
    END             reduce using rule 48 (valores -> valor COMA valores .)


state 198

    (120) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf .)


state 199

    (84) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 232


state 200

    (148) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 148 (elemento_hash -> claveValor COMA claveValor .)


state 201

    (143) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 143 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 143 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 202

    (144) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 203

    (146) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 204

    (145) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 145 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 145 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 205

    (118) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 233
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 206

    (119) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 207

    (121) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (116) condicionIf -> . expresiones_booleanas
    (117) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 96
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 97

    condicionIf                    shift and go to state 234
    expresiones_booleanas          shift and go to state 94
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 95
    rangos                         shift and go to state 35

state 208

    (117) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    SIMBOLO         reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 117 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 209

    (114) argumentos -> VARIABLE .
    (115) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 114 (argumentos -> VARIABLE .)
    COMA            shift and go to state 235


state 210

    (106) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 236
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 211

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 237


state 212

    (71) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 71 (elementos_array -> elemento_array COMA elementos_array .)


state 213

    (134) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (132) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 238

  ! END             [ reduce using rule 132 (declaracion -> sentencia_while .) ]


state 214

    (135) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 239


state 215

    (136) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 136 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 136 (sentencia_case -> CASE declaracion sentencia_when END .)


state 216

    (70) asignacion -> VARIABLE IGUAL booleanos .
    (63) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for WHEN resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! WHEN            [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 217

    (58) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    WHEN            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 58 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 218

    (59) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (44) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    WHEN            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 219

    (60) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 220

    (61) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 221

    (62) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 222

    (140) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 240


state 223

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 241


state 224

    (157) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 122
    VARIABLE        shift and go to state 188

    asignacion_clase               shift and go to state 186
    cuerpoVariables                shift and go to state 242
    asignacion                     shift and go to state 187

state 225

    (158) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 122
    VARIABLE        shift and go to state 188

    asignacion                     shift and go to state 187
    cuerpoVariables                shift and go to state 243
    asignacion_clase               shift and go to state 186

state 226

    (63) asignacion_clase -> VARIABLE IGUAL . booleanos
    (64) asignacion -> VARIABLE IGUAL . CADENA
    (65) asignacion -> VARIABLE IGUAL . expresionNumerica
    (66) asignacion -> VARIABLE IGUAL . hashes
    (67) asignacion -> VARIABLE IGUAL . SIMBOLO
    (68) asignacion -> VARIABLE IGUAL . array
    (69) asignacion -> VARIABLE IGUAL . input_concatenacion
    (70) asignacion -> VARIABLE IGUAL . booleanos
    (50) booleanos -> . TRUE
    (51) booleanos -> . FALSE
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 134
    SIMBOLO         shift and go to state 137
    TRUE            shift and go to state 141
    FALSE           shift and go to state 142
    PARENTESIS_IZ   shift and go to state 78
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    VARIABLE        shift and go to state 133

    booleanos                      shift and go to state 244
    expresionNumerica              shift and go to state 135
    hashes                         shift and go to state 136
    array                          shift and go to state 138
    input_concatenacion            shift and go to state 139
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 49

state 227

    (139) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 228

    (153) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    NEWLINE         reduce using rule 153 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 229

    (80) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 245


state 230

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (150) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (151) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 246

    each_args_hash                 shift and go to state 247

state 231

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 248


state 232

    (84) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 84 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 233

    (118) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 249


state 234

    (121) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 250
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 235

    (115) argumentos -> VARIABLE COMA . argumentos
    (114) argumentos -> . VARIABLE
    (115) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 209

    argumentos                     shift and go to state 251

state 236

    (106) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 252


state 237

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 253
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 238

    (134) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 239

    (135) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 240

    (140) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 140 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 140 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 241

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 254


state 242

    (157) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 243

    (158) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 244

    (63) asignacion_clase -> VARIABLE IGUAL booleanos .
    (70) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for NEWLINE resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    NEWLINE         reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! NEWLINE         [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 70 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 245

    (80) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (81) cuerpo_each -> . cuerpo
    (82) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (83) vacio -> .
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (106) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (112) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (113) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (78) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (79) array -> . CORCHETE_IZ CORCHETE_DER
    (80) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (85) comentarios -> . COMENTARIO
    (86) comentarios -> . COMENTARIO_MULTI
    (149) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (136) sentencia_case -> . CASE declaracion sentencia_when END
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (140) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (152) encabezadoClase -> . CLASS ID_CLASE
    (153) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    END             reduce using rule 83 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CLASS           shift and go to state 52
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 255
    cuerpo                         shift and go to state 256
    vacio                          shift and go to state 257
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
    valorCadena                    shift and go to state 49

state 246

    (150) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (151) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 258
    BARRA           shift and go to state 259


state 247

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 260
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 248

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 249

    (118) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 250

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (121) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 261
    ELSEIF          shift and go to state 207

    estructura_secundaria_if       shift and go to state 262

state 251

    (115) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 115 (argumentos -> VARIABLE COMA argumentos .)


state 252

    (106) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 106 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 106 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 253

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 263


state 254

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 264


state 255

    (80) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 265


state 256

    (81) cuerpo_each -> cuerpo .

    END             reduce using rule 81 (cuerpo_each -> cuerpo .)


state 257

    (82) cuerpo_each -> vacio .

    END             reduce using rule 82 (cuerpo_each -> vacio .)


state 258

    (150) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 266


state 259

    (151) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)


state 260

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 267


state 261

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    VARIABLECLASE   shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 268
    operacionAritmetica            shift and go to state 109
    asignacion                     shift and go to state 110
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    asignacion_clase               shift and go to state 117
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 262

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 263

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 264

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (114) argumentos -> . VARIABLE
    (115) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 209

    argumentos                     shift and go to state 269

state 265

    (80) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 80 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 80 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 266

    (150) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 270


state 267

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 149 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 149 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 268

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 271


state 269

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 272


state 270

    (150) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 271

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 272

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (159) cuerpoClase -> . cuerpoVariables
    (160) cuerpoClase -> . declaracion
    (161) cuerpoClase -> . funciones
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (106) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (58) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (59) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (60) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (61) asignacion_clase -> . VARIABLECLASE IGUAL array
    (62) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (63) asignacion_clase -> . VARIABLE IGUAL booleanos
    (64) asignacion -> . VARIABLE IGUAL CADENA
    (65) asignacion -> . VARIABLE IGUAL expresionNumerica
    (66) asignacion -> . VARIABLE IGUAL hashes
    (67) asignacion -> . VARIABLE IGUAL SIMBOLO
    (68) asignacion -> . VARIABLE IGUAL array
    (69) asignacion -> . VARIABLE IGUAL input_concatenacion
    (70) asignacion -> . VARIABLE IGUAL booleanos
    (44) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (98) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (99) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (100) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (101) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (103) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (104) solicitudDatosTeclado -> . GETS
    (105) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (45) valor_print -> . PRINT
    (46) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (84) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 40
    VARIABLECLASE   shift and go to state 122
    VARIABLE        shift and go to state 279
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 121
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    cuerpoVariables                shift and go to state 273
    cuerpoClase                    shift and go to state 274
    declaracion                    shift and go to state 275
    funciones                      shift and go to state 276
    asignacion_clase               shift and go to state 277
    asignacion                     shift and go to state 278
    operacionAritmetica            shift and go to state 109
    impresion                      shift and go to state 111
    impresion_vacia                shift and go to state 112
    expresiones_booleanas          shift and go to state 113
    solicitudDatosTeclado          shift and go to state 114
    hashes                         shift and go to state 115
    estructura_if                  shift and go to state 116
    sentencia_while                shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 119
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 273

    (159) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 159 (cuerpoClase -> cuerpoVariables .)


state 274

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 280


state 275

    (160) cuerpoClase -> declaracion .

    END             reduce using rule 160 (cuerpoClase -> declaracion .)


state 276

    (161) cuerpoClase -> funciones .

    END             reduce using rule 161 (cuerpoClase -> funciones .)


state 277

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (131) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 131 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 224
    END             reduce using rule 131 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 278

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (124) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 124 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 225
    END             reduce using rule 124 (declaracion -> asignacion .)

  ! END             [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 279

    (63) asignacion_clase -> VARIABLE . IGUAL booleanos
    (64) asignacion -> VARIABLE . IGUAL CADENA
    (65) asignacion -> VARIABLE . IGUAL expresionNumerica
    (66) asignacion -> VARIABLE . IGUAL hashes
    (67) asignacion -> VARIABLE . IGUAL SIMBOLO
    (68) asignacion -> VARIABLE . IGUAL array
    (69) asignacion -> VARIABLE . IGUAL input_concatenacion
    (70) asignacion -> VARIABLE . IGUAL booleanos
    (101) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (23) valorSimbolo -> VARIABLE .
    (90) operadoresComparacion -> . IGUAL_DOBLEP
    (91) operadoresComparacion -> . DIFERENTE
    (92) operadoresComparacion -> . MAYOR_QUE
    (93) operadoresComparacion -> . MENOR_QUE
    (94) operadoresComparacion -> . MENOR_IGUAL_QUE
    (95) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 226
    IGUAL_DOBLEP    shift and go to state 64
    DIFERENTE       shift and go to state 65
    MAYOR_QUE       shift and go to state 66
    MENOR_QUE       shift and go to state 67
    MENOR_IGUAL_QUE shift and go to state 68
    MAYOR_IGUAL_QUE shift and go to state 69

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 62

state 280

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 154 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 154 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 26 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 96 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 96 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 96 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 96 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAS in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 129 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 129 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 129 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 129 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 186 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 187 resolved as shift
WARNING: shift/reduce conflict for END in state 213 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 279 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 279 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 279 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 279 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 279 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 279 resolved as shift
WARNING: reduce/reduce conflict in state 149 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 149
WARNING: reduce/reduce conflict in state 216 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 216
WARNING: reduce/reduce conflict in state 244 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 244
WARNING: reduce/reduce conflict in state 277 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 277
WARNING: reduce/reduce conflict in state 278 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 278
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
