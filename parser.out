Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SIMBOLO
    SUPER
    TRUE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    input_concatenacion -> concatenacionSimpleCadena
Rule 22    input_concatenacion -> concatenacion_funcion
Rule 23    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 24    valorCadena -> CADENA
Rule 25    valorCadena -> VARIABLE
Rule 26    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 27    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 28    valorNumerico -> FLOTANTE
Rule 29    valorNumerico -> ENTERO
Rule 30    valorNumerico -> VARIABLE
Rule 31    soloEnteros -> ENTERO
Rule 32    operadores -> MAS
Rule 33    operadores -> MENOS
Rule 34    operadores -> DIVISION
Rule 35    operadores -> MULTIPLICACION
Rule 36    operadores -> EXPONENCIACION
Rule 37    operadores -> MODULO
Rule 38    expresionNumerica -> valorNumerico
Rule 39    expresionNumerica -> operacionAritmetica
Rule 40    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 41    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 42    valor_print -> PRINT
Rule 43    valor_print -> PUTS
Rule 44    valores -> valor
Rule 45    valores -> valor COMA valores
Rule 46    valores -> valor estructura_ifUnaLinea
Rule 47    valor -> CADENA
Rule 48    valor -> valorNumerico
Rule 49    valor -> VARIABLE
Rule 50    valor -> VARIABLECLASE
Rule 51    impresion -> valor_print valores
Rule 52    asignacion -> VARIABLE IGUAL CADENA
Rule 53    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 54    asignacion -> VARIABLE IGUAL hashes
Rule 55    asignacion -> VARIABLE IGUAL array
Rule 56    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 57    elementos_array -> elemento_array COMA elementos_array
Rule 58    elementos_array -> elemento_array
Rule 59    elemento_array -> CADENA
Rule 60    elemento_array -> ENTERO
Rule 61    elemento_array -> FLOTANTE
Rule 62    elemento_array -> array
Rule 63    elemento_array -> VARIABLE
Rule 64    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 65    array -> CORCHETE_IZ CORCHETE_DER
Rule 66    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 67    cuerpo_each -> cuerpo
Rule 68    cuerpo_each -> vacio
Rule 69    vacio -> <empty>
Rule 70    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 71    comentarios -> COMENTARIO
Rule 72    comentarios -> COMENTARIO_MULTI
Rule 73    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 74    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 75    impresion_vacia -> PUTS
Rule 76    operadoresComparacion -> DOBLE_IGUAL
Rule 77    operadoresComparacion -> DIFERENTE
Rule 78    operadoresComparacion -> MAYOR_QUE
Rule 79    operadoresComparacion -> MENOR_QUE
Rule 80    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 81    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 82    funcionesComparacion -> AND
Rule 83    funcionesComparacion -> OR
Rule 84    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 85    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 86    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 87    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 88    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 89    solicitudDatosTeclado -> GETS
Rule 90    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 91    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
Rule 92    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
Rule 93    funcionesArray -> SORT
Rule 94    funcionesArray -> FOR EACH
Rule 95    funcionesFormatoImpresion -> CHOMP
Rule 96    funcionesNumeros -> TO_F
Rule 97    funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 98    funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 99    argumentos -> VARIABLE
Rule 100   argumentos -> VARIABLE COMA argumentos
Rule 101   condicionIf -> expresiones_booleanas
Rule 102   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 103   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 104   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 105   estructura_ifUnaLinea -> IF condicionIf
Rule 106   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 107   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 108   declaracion -> operacionAritmetica
Rule 109   declaracion -> asignacion
Rule 110   declaracion -> impresion
Rule 111   declaracion -> impresion_vacia
Rule 112   declaracion -> expresiones_booleanas
Rule 113   declaracion -> solicitudDatosTeclado
Rule 114   declaracion -> hashes
Rule 115   declaracion -> estructura_if
Rule 116   sentencia_while -> WHILE declaracion DO sentencia_while END
Rule 117   sentencia_while -> WHILE declaracion DO declaracion END
Rule 118   sentencia_case -> CASE declaracion sentencia_when END
Rule 119   sentencias_when -> sentencia_when
Rule 120   sentencias_when -> sentencia_when sentencias_when
Rule 121   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 122   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 123   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 124   hashes -> LLAVE_IZ LLAVE_DER
Rule 125   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 126   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 127   elemento_hash -> claveValor
Rule 128   elemento_hash -> claveValor COMA claveValor
Rule 129   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 130   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 131   each_args_hash -> VARIABLE BARRA
Rule 132   definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 82
ASIGNA_HASH          : 125 126
BARRA                : 66 66 129 130 131
BEGIN                : 
BREAK                : 
CADENA               : 24 47 52 59 126
CASE                 : 118
CHOMP                : 95
CLASS                : 132
COMA                 : 45 57 100 128 130
COMENTARIO           : 71
COMENTARIO_MULTI     : 72
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 23
CORCHETE_DER         : 64 65
CORCHETE_IZ          : 64 65
DEF                  : 91 92 132
DEFINED_QUESTION     : 
DIFERENTE            : 77
DIVISION             : 34
DO                   : 66 116 117 122 129
DOBLE_IGUAL          : 76
EACH                 : 94 129
ELSE                 : 103 106
ELSEIF               : 106 107
END                  : 66 91 92 103 106 116 117 118 122 129
ENSURE               : 
ENTERO               : 29 31 60 85
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 36
FALSE                : 
FLOTANTE             : 28 61
FOR                  : 94
GETS                 : 89 90
ID_CLASE             : 132
IF                   : 103 104 105
IGUAL                : 52 53 54 55 56
IGUAL_DOBLEP         : 121
IN                   : 
INITIALIZE           : 132
LLAVE_DER            : 123 124
LLAVE_IZ             : 123 124
MAS                  : 26 27 32
MAYOR_IGUAL_QUE      : 81
MAYOR_QUE            : 78
MENOR_IGUAL_QUE      : 80
MENOR_QUE            : 79
MENOS                : 33
MODULE               : 
MODULO               : 37
MULTIPLICACION       : 35
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 83
O_SIGNO              : 
PARENTESIS_DER       : 23 40 70 73 74 91 92 132
PARENTESIS_IZ        : 23 40 70 73 74 91 92 132
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 42 73
PRINTF               : 
PUNTO                : 23 66 90 97 98 129
PUTS                 : 43 74 75
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 
SORT                 : 93
SUPER                : 
TO_F                 : 96
TRES_PUNTOS          : 70
TRIPLE_IGUAL         : 85
TRUE                 : 
UNTIL                : 122
VARIABLE             : 23 25 30 49 52 53 54 55 56 63 66 66 86 86 87 88 91 92 97 98 99 100 125 126 129 130 130 131
VARIABLECLASE        : 50
WHEN                 : 121
WHILE                : 116 117
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 92 100 132
array                : 12 55 62
asignacion           : 3 109
claveValor           : 127 128 128
comentarios          : 14
concatenacionSimpleCadena : 21 27
concatenacion_funcion : 22
condicionIf          : 103 104 105 106 107
cuerpo               : 67 0
cuerpo_each          : 66
declaracion          : 103 103 104 106 106 107 116 117 117 118 121 121 122 122 129
definicion_clase     : 20
each_args_hash       : 129
each_array           : 13
each_hash            : 15
elemento_array       : 57 58
elemento_hash        : 123
elementos_array      : 57 64
estructura_if        : 9 115
estructura_ifUnaLinea : 46
estructura_secundaria_if : 104 107
expresionNumerica    : 41 41 53
expresiones_booleanas : 6 101 102 102 112
funciones            : 10
funcionesArray       : 97
funcionesComparacion : 102
funcionesEstructuras : 11
funcionesFormatoImpresion : 90
funcionesNumeros     : 98
hashes               : 8 54 114
impresion            : 4 110
impresion_vacia      : 5 111
input_concatenacion  : 2 56
operacionAritmetica  : 1 39 40 108
operadores           : 41
operadoresComparacion : 84 86 87 88
rangos               : 85
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 118 119 120
sentencia_while      : 16 116
sentencias_when      : 18 120
solicitudDatosTeclado : 7 113
soloEnteros          : 70 70
vacio                : 68
valor                : 44 45 46
valorCadena          : 23 26 26 27
valorNumerico        : 38 48 84 84 87 88 125
valor_print          : 51
valores              : 45 51

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (91) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (92) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (97) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (98) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (64) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (65) array -> . CORCHETE_IZ CORCHETE_DER
    (66) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (71) comentarios -> . COMENTARIO
    (72) comentarios -> . COMENTARIO_MULTI
    (129) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (116) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (117) sentencia_while -> . WHILE declaracion DO declaracion END
    (118) sentencia_case -> . CASE declaracion sentencia_when END
    (119) sentencias_when -> . sentencia_when
    (120) sentencias_when -> . sentencia_when sentencias_when
    (122) sentencia_until -> . UNTIL declaracion DO declaracion END
    (132) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (121) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 25
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    DEF             shift and go to state 37
    CORCHETE_IZ     shift and go to state 38
    COMENTARIO      shift and go to state 39
    COMENTARIO_MULTI shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    CLASS           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    WHEN            shift and go to state 48
    CADENA          shift and go to state 26

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32
    sentencia_when                 shift and go to state 43
    valorCadena                    shift and go to state 46

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (39) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 39 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (41) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (32) operadores -> . MAS
    (33) operadores -> . MENOS
    (34) operadores -> . DIVISION
    (35) operadores -> . MULTIPLICACION
    (36) operadores -> . EXPONENCIACION
    (37) operadores -> . MODULO

    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

    operadores                     shift and go to state 49

state 23

    (21) input_concatenacion -> concatenacionSimpleCadena .
    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 56


state 24

    (22) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)


state 25

    (52) asignacion -> VARIABLE . IGUAL CADENA
    (53) asignacion -> VARIABLE . IGUAL expresionNumerica
    (54) asignacion -> VARIABLE . IGUAL hashes
    (55) asignacion -> VARIABLE . IGUAL array
    (56) asignacion -> VARIABLE . IGUAL input_concatenacion
    (86) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (97) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (98) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (66) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (129) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (23) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorNumerico -> VARIABLE .
    (25) valorCadena -> VARIABLE .
    (76) operadoresComparacion -> . DOBLE_IGUAL
    (77) operadoresComparacion -> . DIFERENTE
    (78) operadoresComparacion -> . MAYOR_QUE
    (79) operadoresComparacion -> . MENOR_QUE
    (80) operadoresComparacion -> . MENOR_IGUAL_QUE
    (81) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 25 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 57
    PUNTO           shift and go to state 59
    MENOS           reduce using rule 30 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 30 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

  ! DOBLE_IGUAL     [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAS             [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 58

state 26

    (24) valorCadena -> CADENA .

    MAS             reduce using rule 24 (valorCadena -> CADENA .)
    $end            reduce using rule 24 (valorCadena -> CADENA .)
    DO              reduce using rule 24 (valorCadena -> CADENA .)
    WHEN            reduce using rule 24 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 24 (valorCadena -> CADENA .)
    ELSE            reduce using rule 24 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 24 (valorCadena -> CADENA .)
    END             reduce using rule 24 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 24 (valorCadena -> CADENA .)


state 27

    (51) impresion -> valor_print . valores
    (44) valores -> . valor
    (45) valores -> . valor COMA valores
    (46) valores -> . valor estructura_ifUnaLinea
    (47) valor -> . CADENA
    (48) valor -> . valorNumerico
    (49) valor -> . VARIABLE
    (50) valor -> . VARIABLECLASE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 68
    VARIABLE        shift and go to state 70
    VARIABLECLASE   shift and go to state 71
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valores                        shift and go to state 66
    valor                          shift and go to state 67
    valorNumerico                  shift and go to state 69

state 28

    (73) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (42) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 72
    CADENA          reduce using rule 42 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 42 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 42 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 42 (valor_print -> PRINT .)
    ENTERO          reduce using rule 42 (valor_print -> PRINT .)


state 29

    (40) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (70) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (31) soloEnteros -> . ENTERO
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    ENTERO          shift and go to state 76
    PARENTESIS_IZ   shift and go to state 73
    FLOTANTE        shift and go to state 47
    VARIABLE        shift and go to state 78

    operacionAritmetica            shift and go to state 74
    soloEnteros                    shift and go to state 75
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 77

state 30

    (74) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> PUTS .
    (43) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 79
    $end            reduce using rule 75 (impresion_vacia -> PUTS .)
    DO              reduce using rule 75 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 75 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 75 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 75 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 75 (impresion_vacia -> PUTS .)
    END             reduce using rule 75 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 43 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 43 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 43 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 43 (valor_print -> PUTS .)
    ENTERO          reduce using rule 43 (valor_print -> PUTS .)


state 31

    (84) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (38) expresionNumerica -> valorNumerico .
    (76) operadoresComparacion -> . DOBLE_IGUAL
    (77) operadoresComparacion -> . DIFERENTE
    (78) operadoresComparacion -> . MAYOR_QUE
    (79) operadoresComparacion -> . MENOR_QUE
    (80) operadoresComparacion -> . MENOR_IGUAL_QUE
    (81) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 38 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 38 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 80

state 32

    (85) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 81


state 33

    (29) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 29 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 29 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 29 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 29 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 29 (valorNumerico -> ENTERO .)
    IF              reduce using rule 29 (valorNumerico -> ENTERO .)
    $end            reduce using rule 29 (valorNumerico -> ENTERO .)
    DO              reduce using rule 29 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 29 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 29 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 29 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 29 (valorNumerico -> ENTERO .)
    END             reduce using rule 29 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 29 (valorNumerico -> ENTERO .)
    AND             reduce using rule 29 (valorNumerico -> ENTERO .)
    OR              reduce using rule 29 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 29 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 29 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 29 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 29 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 29 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 29 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 29 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 29 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 29 (valorNumerico -> ENTERO .)


state 34

    (89) solicitudDatosTeclado -> GETS .
    (90) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 89 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 82


state 35

    (123) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (124) hashes -> LLAVE_IZ . LLAVE_DER
    (127) elemento_hash -> . claveValor
    (128) elemento_hash -> . claveValor COMA claveValor
    (125) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (126) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 84
    VARIABLE        shift and go to state 86

    elemento_hash                  shift and go to state 83
    claveValor                     shift and go to state 85

state 36

    (103) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (101) condicionIf -> . expresiones_booleanas
    (102) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 90
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 91

    condicionIf                    shift and go to state 87
    expresiones_booleanas          shift and go to state 88
    valorNumerico                  shift and go to state 89
    rangos                         shift and go to state 32

state 37

    (91) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (92) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END

    VARIABLE        shift and go to state 92


state 38

    (64) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (65) array -> CORCHETE_IZ . CORCHETE_DER
    (57) elementos_array -> . elemento_array COMA elementos_array
    (58) elementos_array -> . elemento_array
    (59) elemento_array -> . CADENA
    (60) elemento_array -> . ENTERO
    (61) elemento_array -> . FLOTANTE
    (62) elemento_array -> . array
    (63) elemento_array -> . VARIABLE
    (64) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (65) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 94
    CADENA          shift and go to state 96
    ENTERO          shift and go to state 97
    FLOTANTE        shift and go to state 98
    VARIABLE        shift and go to state 100
    CORCHETE_IZ     shift and go to state 38

    elementos_array                shift and go to state 93
    elemento_array                 shift and go to state 95
    array                          shift and go to state 99

state 39

    (71) comentarios -> COMENTARIO .

    $end            reduce using rule 71 (comentarios -> COMENTARIO .)
    END             reduce using rule 71 (comentarios -> COMENTARIO .)


state 40

    (72) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 72 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 72 (comentarios -> COMENTARIO_MULTI .)


state 41

    (116) sentencia_while -> WHILE . declaracion DO sentencia_while END
    (117) sentencia_while -> WHILE . declaracion DO declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 101
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 42

    (118) sentencia_case -> CASE . declaracion sentencia_when END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 111
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 43

    (119) sentencias_when -> sentencia_when .
    (120) sentencias_when -> sentencia_when . sentencias_when
    (119) sentencias_when -> . sentencia_when
    (120) sentencias_when -> . sentencia_when sentencias_when
    (121) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 119 (sentencias_when -> sentencia_when .)
    END             reduce using rule 119 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 43
    sentencias_when                shift and go to state 112

state 44

    (122) sentencia_until -> UNTIL . declaracion DO declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 113
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 45

    (132) definicion_clase -> CLASS . ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    ID_CLASE        shift and go to state 114


state 46

    (26) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 115


state 47

    (28) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 28 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 28 (valorNumerico -> FLOTANTE .)


state 48

    (121) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 116
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 49

    (41) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 73
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 78

    expresionNumerica              shift and go to state 117
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 118

state 50

    (32) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 32 (operadores -> MAS .)
    FLOTANTE        reduce using rule 32 (operadores -> MAS .)
    ENTERO          reduce using rule 32 (operadores -> MAS .)
    VARIABLE        reduce using rule 32 (operadores -> MAS .)


state 51

    (33) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 33 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 33 (operadores -> MENOS .)
    ENTERO          reduce using rule 33 (operadores -> MENOS .)
    VARIABLE        reduce using rule 33 (operadores -> MENOS .)


state 52

    (34) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 34 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 34 (operadores -> DIVISION .)
    ENTERO          reduce using rule 34 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 34 (operadores -> DIVISION .)


state 53

    (35) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 35 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 35 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 35 (operadores -> MULTIPLICACION .)


state 54

    (36) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 36 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 36 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 36 (operadores -> EXPONENCIACION .)


state 55

    (37) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 37 (operadores -> MODULO .)
    ENTERO          reduce using rule 37 (operadores -> MODULO .)
    VARIABLE        reduce using rule 37 (operadores -> MODULO .)


state 56

    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 120

    valorCadena                    shift and go to state 119

state 57

    (52) asignacion -> VARIABLE IGUAL . CADENA
    (53) asignacion -> VARIABLE IGUAL . expresionNumerica
    (54) asignacion -> VARIABLE IGUAL . hashes
    (55) asignacion -> VARIABLE IGUAL . array
    (56) asignacion -> VARIABLE IGUAL . input_concatenacion
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (64) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (65) array -> . CORCHETE_IZ CORCHETE_DER
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 122
    PARENTESIS_IZ   shift and go to state 73
    LLAVE_IZ        shift and go to state 35
    CORCHETE_IZ     shift and go to state 38
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 121

    expresionNumerica              shift and go to state 123
    hashes                         shift and go to state 124
    array                          shift and go to state 125
    input_concatenacion            shift and go to state 126
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 118
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valorCadena                    shift and go to state 46

state 58

    (86) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (87) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 127
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 128

state 59

    (97) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (98) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (66) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (129) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (23) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (93) funcionesArray -> . SORT
    (94) funcionesArray -> . FOR EACH
    (96) funcionesNumeros -> . TO_F

    DO              shift and go to state 131
    EACH            shift and go to state 132
    CONCAT          shift and go to state 133
    SORT            shift and go to state 134
    FOR             shift and go to state 135
    TO_F            shift and go to state 136

    funcionesArray                 shift and go to state 129
    funcionesNumeros               shift and go to state 130

state 60

    (76) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 76 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 76 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 76 (operadoresComparacion -> DOBLE_IGUAL .)


state 61

    (77) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 77 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 77 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 77 (operadoresComparacion -> DIFERENTE .)


state 62

    (78) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 78 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 78 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 78 (operadoresComparacion -> MAYOR_QUE .)


state 63

    (79) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 79 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 79 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 79 (operadoresComparacion -> MENOR_QUE .)


state 64

    (80) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 80 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 80 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 80 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 65

    (81) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 81 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 81 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 81 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 66

    (51) impresion -> valor_print valores .

    $end            reduce using rule 51 (impresion -> valor_print valores .)
    DO              reduce using rule 51 (impresion -> valor_print valores .)
    WHEN            reduce using rule 51 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 51 (impresion -> valor_print valores .)
    ELSE            reduce using rule 51 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 51 (impresion -> valor_print valores .)
    END             reduce using rule 51 (impresion -> valor_print valores .)


state 67

    (44) valores -> valor .
    (45) valores -> valor . COMA valores
    (46) valores -> valor . estructura_ifUnaLinea
    (105) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 44 (valores -> valor .)
    DO              reduce using rule 44 (valores -> valor .)
    WHEN            reduce using rule 44 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 44 (valores -> valor .)
    ELSE            reduce using rule 44 (valores -> valor .)
    ELSEIF          reduce using rule 44 (valores -> valor .)
    END             reduce using rule 44 (valores -> valor .)
    COMA            shift and go to state 137
    IF              shift and go to state 139

    estructura_ifUnaLinea          shift and go to state 138

state 68

    (47) valor -> CADENA .

    COMA            reduce using rule 47 (valor -> CADENA .)
    IF              reduce using rule 47 (valor -> CADENA .)
    $end            reduce using rule 47 (valor -> CADENA .)
    DO              reduce using rule 47 (valor -> CADENA .)
    WHEN            reduce using rule 47 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 47 (valor -> CADENA .)
    ELSE            reduce using rule 47 (valor -> CADENA .)
    ELSEIF          reduce using rule 47 (valor -> CADENA .)
    END             reduce using rule 47 (valor -> CADENA .)


state 69

    (48) valor -> valorNumerico .

    COMA            reduce using rule 48 (valor -> valorNumerico .)
    IF              reduce using rule 48 (valor -> valorNumerico .)
    $end            reduce using rule 48 (valor -> valorNumerico .)
    DO              reduce using rule 48 (valor -> valorNumerico .)
    WHEN            reduce using rule 48 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 48 (valor -> valorNumerico .)
    ELSE            reduce using rule 48 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 48 (valor -> valorNumerico .)
    END             reduce using rule 48 (valor -> valorNumerico .)


state 70

    (49) valor -> VARIABLE .
    (30) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for COMA resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 30 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 30 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 30 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 30 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorNumerico -> VARIABLE .)
    END             reduce using rule 30 (valorNumerico -> VARIABLE .)

  ! COMA            [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! IF              [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! DO              [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! WHEN            [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 49 (valor -> VARIABLE .) ]
  ! END             [ reduce using rule 49 (valor -> VARIABLE .) ]


state 71

    (50) valor -> VARIABLECLASE .

    COMA            reduce using rule 50 (valor -> VARIABLECLASE .)
    IF              reduce using rule 50 (valor -> VARIABLECLASE .)
    $end            reduce using rule 50 (valor -> VARIABLECLASE .)
    DO              reduce using rule 50 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 50 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 50 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 50 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 50 (valor -> VARIABLECLASE .)
    END             reduce using rule 50 (valor -> VARIABLECLASE .)


state 72

    (73) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 140


state 73

    (40) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    PARENTESIS_IZ   shift and go to state 73
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 78

    operacionAritmetica            shift and go to state 74
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 77

state 74

    (40) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (39) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 141
    MAS             reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 39 (expresionNumerica -> operacionAritmetica .)


state 75

    (70) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 142


state 76

    (31) soloEnteros -> ENTERO .
    (29) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 29 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 29 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 29 (valorNumerico -> ENTERO .)


state 77

    (38) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 38 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 38 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 38 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 38 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 38 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 38 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 38 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 38 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 38 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 38 (expresionNumerica -> valorNumerico .)


state 78

    (30) valorNumerico -> VARIABLE .

    MAS             reduce using rule 30 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 30 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 30 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 30 (valorNumerico -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 30 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 30 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorNumerico -> VARIABLE .)
    END             reduce using rule 30 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 30 (valorNumerico -> VARIABLE .)
    LLAVE_DER       reduce using rule 30 (valorNumerico -> VARIABLE .)


state 79

    (74) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 143


state 80

    (84) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (88) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 145
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 144

state 81

    (85) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 146


state 82

    (90) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (95) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 148

    funcionesFormatoImpresion      shift and go to state 147

state 83

    (123) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 149


state 84

    (124) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 124 (hashes -> LLAVE_IZ LLAVE_DER .)


state 85

    (127) elemento_hash -> claveValor .
    (128) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 127 (elemento_hash -> claveValor .)
    COMA            shift and go to state 150


state 86

    (125) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (126) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 151


state 87

    (103) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (104) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 152
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 88

    (101) condicionIf -> expresiones_booleanas .
    (102) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (82) funcionesComparacion -> . AND
    (83) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 101 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 154
    OR              shift and go to state 155

    funcionesComparacion           shift and go to state 153

state 89

    (84) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (76) operadoresComparacion -> . DOBLE_IGUAL
    (77) operadoresComparacion -> . DIFERENTE
    (78) operadoresComparacion -> . MAYOR_QUE
    (79) operadoresComparacion -> . MENOR_QUE
    (80) operadoresComparacion -> . MENOR_IGUAL_QUE
    (81) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 80

state 90

    (86) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (30) valorNumerico -> VARIABLE .
    (76) operadoresComparacion -> . DOBLE_IGUAL
    (77) operadoresComparacion -> . DIFERENTE
    (78) operadoresComparacion -> . MAYOR_QUE
    (79) operadoresComparacion -> . MENOR_QUE
    (80) operadoresComparacion -> . MENOR_IGUAL_QUE
    (81) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

  ! DOBLE_IGUAL     [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 58

state 91

    (70) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 156

    soloEnteros                    shift and go to state 75

state 92

    (91) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER END
    (92) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER END

    PARENTESIS_IZ   shift and go to state 157


state 93

    (64) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 158


state 94

    (65) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 65 (array -> CORCHETE_IZ CORCHETE_DER .)


state 95

    (57) elementos_array -> elemento_array . COMA elementos_array
    (58) elementos_array -> elemento_array .

    COMA            shift and go to state 159
    CORCHETE_DER    reduce using rule 58 (elementos_array -> elemento_array .)


state 96

    (59) elemento_array -> CADENA .

    COMA            reduce using rule 59 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 59 (elemento_array -> CADENA .)


state 97

    (60) elemento_array -> ENTERO .

    COMA            reduce using rule 60 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 60 (elemento_array -> ENTERO .)


state 98

    (61) elemento_array -> FLOTANTE .

    COMA            reduce using rule 61 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 61 (elemento_array -> FLOTANTE .)


state 99

    (62) elemento_array -> array .

    COMA            reduce using rule 62 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 62 (elemento_array -> array .)


state 100

    (63) elemento_array -> VARIABLE .

    COMA            reduce using rule 63 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 63 (elemento_array -> VARIABLE .)


state 101

    (116) sentencia_while -> WHILE declaracion . DO sentencia_while END
    (117) sentencia_while -> WHILE declaracion . DO declaracion END

    DO              shift and go to state 160


state 102

    (108) declaracion -> operacionAritmetica .
    (39) expresionNumerica -> operacionAritmetica .

    DO              reduce using rule 108 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 108 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 108 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 108 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 108 (declaracion -> operacionAritmetica .)
    END             reduce using rule 108 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 108 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 39 (expresionNumerica -> operacionAritmetica .)


state 103

    (109) declaracion -> asignacion .

    DO              reduce using rule 109 (declaracion -> asignacion .)
    WHEN            reduce using rule 109 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 109 (declaracion -> asignacion .)
    ELSE            reduce using rule 109 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 109 (declaracion -> asignacion .)
    END             reduce using rule 109 (declaracion -> asignacion .)
    $end            reduce using rule 109 (declaracion -> asignacion .)


state 104

    (110) declaracion -> impresion .

    DO              reduce using rule 110 (declaracion -> impresion .)
    WHEN            reduce using rule 110 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 110 (declaracion -> impresion .)
    ELSE            reduce using rule 110 (declaracion -> impresion .)
    ELSEIF          reduce using rule 110 (declaracion -> impresion .)
    END             reduce using rule 110 (declaracion -> impresion .)
    $end            reduce using rule 110 (declaracion -> impresion .)


state 105

    (111) declaracion -> impresion_vacia .

    DO              reduce using rule 111 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 111 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 111 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 111 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 111 (declaracion -> impresion_vacia .)
    END             reduce using rule 111 (declaracion -> impresion_vacia .)
    $end            reduce using rule 111 (declaracion -> impresion_vacia .)


state 106

    (112) declaracion -> expresiones_booleanas .

    DO              reduce using rule 112 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 112 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 112 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 112 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 112 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 112 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 112 (declaracion -> expresiones_booleanas .)


state 107

    (113) declaracion -> solicitudDatosTeclado .

    DO              reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 113 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 113 (declaracion -> solicitudDatosTeclado .)


state 108

    (114) declaracion -> hashes .

    DO              reduce using rule 114 (declaracion -> hashes .)
    WHEN            reduce using rule 114 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 114 (declaracion -> hashes .)
    ELSE            reduce using rule 114 (declaracion -> hashes .)
    ELSEIF          reduce using rule 114 (declaracion -> hashes .)
    END             reduce using rule 114 (declaracion -> hashes .)
    $end            reduce using rule 114 (declaracion -> hashes .)


state 109

    (115) declaracion -> estructura_if .

    DO              reduce using rule 115 (declaracion -> estructura_if .)
    WHEN            reduce using rule 115 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 115 (declaracion -> estructura_if .)
    ELSE            reduce using rule 115 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 115 (declaracion -> estructura_if .)
    END             reduce using rule 115 (declaracion -> estructura_if .)
    $end            reduce using rule 115 (declaracion -> estructura_if .)


state 110

    (52) asignacion -> VARIABLE . IGUAL CADENA
    (53) asignacion -> VARIABLE . IGUAL expresionNumerica
    (54) asignacion -> VARIABLE . IGUAL hashes
    (55) asignacion -> VARIABLE . IGUAL array
    (56) asignacion -> VARIABLE . IGUAL input_concatenacion
    (86) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (30) valorNumerico -> VARIABLE .
    (76) operadoresComparacion -> . DOBLE_IGUAL
    (77) operadoresComparacion -> . DIFERENTE
    (78) operadoresComparacion -> . MAYOR_QUE
    (79) operadoresComparacion -> . MENOR_QUE
    (80) operadoresComparacion -> . MENOR_IGUAL_QUE
    (81) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 57
    MAS             reduce using rule 30 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 30 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 30 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

  ! DOBLE_IGUAL     [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 58

state 111

    (118) sentencia_case -> CASE declaracion . sentencia_when END
    (121) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 161

state 112

    (120) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 120 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 120 (sentencias_when -> sentencia_when sentencias_when .)


state 113

    (122) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 162


state 114

    (132) definicion_clase -> CLASS ID_CLASE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    DEF             shift and go to state 163


state 115

    (26) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 120

    valorCadena                    shift and go to state 164

state 116

    (121) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 165


state 117

    (41) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (41) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (32) operadores -> . MAS
    (33) operadores -> . MENOS
    (34) operadores -> . DIVISION
    (35) operadores -> . MULTIPLICACION
    (36) operadores -> . EXPONENCIACION
    (37) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

  ! MAS             [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 41 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 49

state 118

    (39) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 39 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 39 (expresionNumerica -> operacionAritmetica .)


state 119

    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 120

    (25) valorCadena -> VARIABLE .

    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)
    $end            reduce using rule 25 (valorCadena -> VARIABLE .)
    DO              reduce using rule 25 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 25 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 25 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 25 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 25 (valorCadena -> VARIABLE .)
    END             reduce using rule 25 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 25 (valorCadena -> VARIABLE .)


state 121

    (30) valorNumerico -> VARIABLE .
    (23) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 25 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 30 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 30 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 30 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 30 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 30 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorNumerico -> VARIABLE .)
    END             reduce using rule 30 (valorNumerico -> VARIABLE .)
    PUNTO           shift and go to state 166
    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 30 (valorNumerico -> VARIABLE .) ]


state 122

    (52) asignacion -> VARIABLE IGUAL CADENA .
    (24) valorCadena -> CADENA .

    $end            reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 52 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 24 (valorCadena -> CADENA .)


state 123

    (53) asignacion -> VARIABLE IGUAL expresionNumerica .
    (41) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (32) operadores -> . MAS
    (33) operadores -> . MENOS
    (34) operadores -> . DIVISION
    (35) operadores -> . MULTIPLICACION
    (36) operadores -> . EXPONENCIACION
    (37) operadores -> . MODULO

    $end            reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 53 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

    operadores                     shift and go to state 49

state 124

    (54) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 54 (asignacion -> VARIABLE IGUAL hashes .)


state 125

    (55) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 55 (asignacion -> VARIABLE IGUAL array .)


state 126

    (56) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 56 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 127

    (86) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .
    (30) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 30 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 30 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 30 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 30 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 30 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 30 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 30 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 30 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 30 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 30 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 30 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 30 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 30 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorNumerico -> VARIABLE .)
    END             reduce using rule 30 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 86 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]


state 128

    (87) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 87 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 129

    (97) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 97 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 97 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 130

    (98) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 98 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 98 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 131

    (66) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 167


state 132

    (129) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 168


state 133

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 169


state 134

    (93) funcionesArray -> SORT .

    $end            reduce using rule 93 (funcionesArray -> SORT .)
    END             reduce using rule 93 (funcionesArray -> SORT .)


state 135

    (94) funcionesArray -> FOR . EACH

    EACH            shift and go to state 170


state 136

    (96) funcionesNumeros -> TO_F .

    $end            reduce using rule 96 (funcionesNumeros -> TO_F .)
    END             reduce using rule 96 (funcionesNumeros -> TO_F .)


state 137

    (45) valores -> valor COMA . valores
    (44) valores -> . valor
    (45) valores -> . valor COMA valores
    (46) valores -> . valor estructura_ifUnaLinea
    (47) valor -> . CADENA
    (48) valor -> . valorNumerico
    (49) valor -> . VARIABLE
    (50) valor -> . VARIABLECLASE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 68
    VARIABLE        shift and go to state 70
    VARIABLECLASE   shift and go to state 71
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valor                          shift and go to state 67
    valores                        shift and go to state 171
    valorNumerico                  shift and go to state 69

state 138

    (46) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 46 (valores -> valor estructura_ifUnaLinea .)


state 139

    (105) estructura_ifUnaLinea -> IF . condicionIf
    (101) condicionIf -> . expresiones_booleanas
    (102) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 90
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 91

    condicionIf                    shift and go to state 172
    expresiones_booleanas          shift and go to state 88
    valorNumerico                  shift and go to state 89
    rangos                         shift and go to state 32

state 140

    (73) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 73 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 141

    (40) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 40 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 142

    (70) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (31) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 156

    soloEnteros                    shift and go to state 173

state 143

    (74) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 74 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 144

    (84) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 84 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 145

    (88) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .
    (30) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for DO resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for WHEN resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 30 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 30 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 30 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 30 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 30 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 30 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 30 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 30 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 30 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 30 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 30 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 30 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 30 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 30 (valorNumerico -> VARIABLE .)
    DO              reduce using rule 30 (valorNumerico -> VARIABLE .)
    WHEN            reduce using rule 30 (valorNumerico -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 30 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorNumerico -> VARIABLE .)
    END             reduce using rule 30 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! DO              [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! WHEN            [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 88 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]


state 146

    (85) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 85 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 147

    (90) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 90 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 148

    (95) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 95 (funcionesFormatoImpresion -> CHOMP .)


state 149

    (123) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 123 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 150

    (128) elemento_hash -> claveValor COMA . claveValor
    (125) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (126) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 86

    claveValor                     shift and go to state 174

state 151

    (125) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (126) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 176
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 78

    valorNumerico                  shift and go to state 175

state 152

    (103) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (104) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (106) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (107) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 177
    ELSEIF          shift and go to state 179

    estructura_secundaria_if       shift and go to state 178

state 153

    (102) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 90
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 91

    expresiones_booleanas          shift and go to state 180
    valorNumerico                  shift and go to state 89
    rangos                         shift and go to state 32

state 154

    (82) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 82 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 82 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 82 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 82 (funcionesComparacion -> AND .)


state 155

    (83) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 83 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 83 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 83 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 83 (funcionesComparacion -> OR .)


state 156

    (31) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 31 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 31 (soloEnteros -> ENTERO .)


state 157

    (91) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER END
    (92) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER END
    (99) argumentos -> . VARIABLE
    (100) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 182
    VARIABLE        shift and go to state 181

    argumentos                     shift and go to state 183

state 158

    (64) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 64 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 159

    (57) elementos_array -> elemento_array COMA . elementos_array
    (57) elementos_array -> . elemento_array COMA elementos_array
    (58) elementos_array -> . elemento_array
    (59) elemento_array -> . CADENA
    (60) elemento_array -> . ENTERO
    (61) elemento_array -> . FLOTANTE
    (62) elemento_array -> . array
    (63) elemento_array -> . VARIABLE
    (64) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (65) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 96
    ENTERO          shift and go to state 97
    FLOTANTE        shift and go to state 98
    VARIABLE        shift and go to state 100
    CORCHETE_IZ     shift and go to state 38

    elemento_array                 shift and go to state 95
    elementos_array                shift and go to state 184
    array                          shift and go to state 99

state 160

    (116) sentencia_while -> WHILE declaracion DO . sentencia_while END
    (117) sentencia_while -> WHILE declaracion DO . declaracion END
    (116) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (117) sentencia_while -> . WHILE declaracion DO declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 41
    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 185
    sentencia_while                shift and go to state 186
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 161

    (118) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 187


state 162

    (122) sentencia_until -> UNTIL declaracion DO . declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 188
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 163

    (132) definicion_clase -> CLASS ID_CLASE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    INITIALIZE      shift and go to state 189


state 164

    (26) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 165

    (121) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 190
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 166

    (23) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 133


state 167

    (66) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 191


state 168

    (129) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 192


state 169

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 120

    valorCadena                    shift and go to state 193

state 170

    (94) funcionesArray -> FOR EACH .

    $end            reduce using rule 94 (funcionesArray -> FOR EACH .)
    END             reduce using rule 94 (funcionesArray -> FOR EACH .)


state 171

    (45) valores -> valor COMA valores .

    $end            reduce using rule 45 (valores -> valor COMA valores .)
    DO              reduce using rule 45 (valores -> valor COMA valores .)
    WHEN            reduce using rule 45 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 45 (valores -> valor COMA valores .)
    ELSE            reduce using rule 45 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 45 (valores -> valor COMA valores .)
    END             reduce using rule 45 (valores -> valor COMA valores .)


state 172

    (105) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 105 (estructura_ifUnaLinea -> IF condicionIf .)


state 173

    (70) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 194


state 174

    (128) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 128 (elemento_hash -> claveValor COMA claveValor .)


state 175

    (125) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 125 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 125 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 176

    (126) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 126 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 126 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 177

    (103) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 195
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 178

    (104) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 104 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 179

    (106) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (107) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (101) condicionIf -> . expresiones_booleanas
    (102) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 90
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 91

    condicionIf                    shift and go to state 196
    expresiones_booleanas          shift and go to state 88
    valorNumerico                  shift and go to state 89
    rangos                         shift and go to state 32

state 180

    (102) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 102 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 181

    (99) argumentos -> VARIABLE .
    (100) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 99 (argumentos -> VARIABLE .)
    COMA            shift and go to state 197


state 182

    (91) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . END

    END             shift and go to state 198


state 183

    (92) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER END

    PARENTESIS_DER  shift and go to state 199


state 184

    (57) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 57 (elementos_array -> elemento_array COMA elementos_array .)


state 185

    (117) sentencia_while -> WHILE declaracion DO declaracion . END

    END             shift and go to state 200


state 186

    (116) sentencia_while -> WHILE declaracion DO sentencia_while . END

    END             shift and go to state 201


state 187

    (118) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 118 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 118 (sentencia_case -> CASE declaracion sentencia_when END .)


state 188

    (122) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 202


state 189

    (132) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 203


state 190

    (121) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 121 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 121 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 121 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 191

    (66) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 204


state 192

    (129) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (130) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (131) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 205

    each_args_hash                 shift and go to state 206

state 193

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 207


state 194

    (70) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 70 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 195

    (103) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 208


state 196

    (106) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (107) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 209
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 197

    (100) argumentos -> VARIABLE COMA . argumentos
    (99) argumentos -> . VARIABLE
    (100) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 181

    argumentos                     shift and go to state 210

state 198

    (91) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .

    $end            reduce using rule 91 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)
    END             reduce using rule 91 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)


state 199

    (92) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . END

    END             shift and go to state 211


state 200

    (117) sentencia_while -> WHILE declaracion DO declaracion END .

    $end            reduce using rule 117 (sentencia_while -> WHILE declaracion DO declaracion END .)
    END             reduce using rule 117 (sentencia_while -> WHILE declaracion DO declaracion END .)


state 201

    (116) sentencia_while -> WHILE declaracion DO sentencia_while END .

    $end            reduce using rule 116 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    END             reduce using rule 116 (sentencia_while -> WHILE declaracion DO sentencia_while END .)


state 202

    (122) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 122 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 122 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 203

    (132) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER
    (99) argumentos -> . VARIABLE
    (100) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 181

    argumentos                     shift and go to state 212

state 204

    (66) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (67) cuerpo_each -> . cuerpo
    (68) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (69) vacio -> .
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (91) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (92) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (97) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (98) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (64) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (65) array -> . CORCHETE_IZ CORCHETE_DER
    (66) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (71) comentarios -> . COMENTARIO
    (72) comentarios -> . COMENTARIO_MULTI
    (129) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (116) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (117) sentencia_while -> . WHILE declaracion DO declaracion END
    (118) sentencia_case -> . CASE declaracion sentencia_when END
    (119) sentencias_when -> . sentencia_when
    (120) sentencias_when -> . sentencia_when sentencias_when
    (122) sentencia_until -> . UNTIL declaracion DO declaracion END
    (132) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (121) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    END             reduce using rule 69 (vacio -> .)
    VARIABLE        shift and go to state 25
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    DEF             shift and go to state 37
    CORCHETE_IZ     shift and go to state 38
    COMENTARIO      shift and go to state 39
    COMENTARIO_MULTI shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    CLASS           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    WHEN            shift and go to state 48
    CADENA          shift and go to state 26

    cuerpo_each                    shift and go to state 213
    cuerpo                         shift and go to state 214
    vacio                          shift and go to state 215
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32
    sentencia_when                 shift and go to state 43
    valorCadena                    shift and go to state 46

state 205

    (130) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (131) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 216
    BARRA           shift and go to state 217


state 206

    (129) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 218
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 207

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 208

    (103) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 103 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 209

    (106) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (107) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (106) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (107) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 219
    ELSEIF          shift and go to state 179

    estructura_secundaria_if       shift and go to state 220

state 210

    (100) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 100 (argumentos -> VARIABLE COMA argumentos .)


state 211

    (92) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .

    $end            reduce using rule 92 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)
    END             reduce using rule 92 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)


state 212

    (132) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 221


state 213

    (66) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 222


state 214

    (67) cuerpo_each -> cuerpo .

    END             reduce using rule 67 (cuerpo_each -> cuerpo .)


state 215

    (68) cuerpo_each -> vacio .

    END             reduce using rule 68 (cuerpo_each -> vacio .)


state 216

    (130) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 223


state 217

    (131) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 131 (each_args_hash -> VARIABLE BARRA .)


state 218

    (129) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 224


state 219

    (106) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (108) declaracion -> . operacionAritmetica
    (109) declaracion -> . asignacion
    (110) declaracion -> . impresion
    (111) declaracion -> . impresion_vacia
    (112) declaracion -> . expresiones_booleanas
    (113) declaracion -> . solicitudDatosTeclado
    (114) declaracion -> . hashes
    (115) declaracion -> . estructura_if
    (41) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (52) asignacion -> . VARIABLE IGUAL CADENA
    (53) asignacion -> . VARIABLE IGUAL expresionNumerica
    (54) asignacion -> . VARIABLE IGUAL hashes
    (55) asignacion -> . VARIABLE IGUAL array
    (56) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (73) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (74) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (75) impresion_vacia -> . PUTS
    (84) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (85) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (86) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (87) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (88) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (89) solicitudDatosTeclado -> . GETS
    (90) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (123) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (124) hashes -> . LLAVE_IZ LLAVE_DER
    (103) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (104) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (38) expresionNumerica -> . valorNumerico
    (39) expresionNumerica -> . operacionAritmetica
    (40) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (42) valor_print -> . PRINT
    (43) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (30) valorNumerico -> . VARIABLE
    (70) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 110
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 225
    operacionAritmetica            shift and go to state 102
    asignacion                     shift and go to state 103
    impresion                      shift and go to state 104
    impresion_vacia                shift and go to state 105
    expresiones_booleanas          shift and go to state 106
    solicitudDatosTeclado          shift and go to state 107
    hashes                         shift and go to state 108
    estructura_if                  shift and go to state 109
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 220

    (107) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 107 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 221

    (132) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .

    $end            reduce using rule 132 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)
    END             reduce using rule 132 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)


state 222

    (66) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 66 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 66 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 223

    (130) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 226


state 224

    (129) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 129 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 129 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 225

    (106) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 227


state 226

    (130) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 130 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 227

    (106) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 106 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 25 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 25 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 25 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 25 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 25 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 25 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 90 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 90 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 90 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 90 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 90 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 110 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 110 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 110 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 110 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 110 resolved as shift
WARNING: shift/reduce conflict for MAS in state 117 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 117 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 117 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 117 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 117 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 117 resolved as shift
WARNING: reduce/reduce conflict in state 25 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (valorNumerico -> VARIABLE) in state 25
WARNING: reduce/reduce conflict in state 70 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 70
WARNING: reduce/reduce conflict in state 121 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (valorNumerico -> VARIABLE) in state 121
WARNING: reduce/reduce conflict in state 127 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) in state 127
WARNING: reduce/reduce conflict in state 145 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) in state 145
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) is never reduced
