Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    DOBLE_IGUAL
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> comparacion_simbolo
Rule 3     cuerpo -> input_concatenacion
Rule 4     cuerpo -> asignacion
Rule 5     cuerpo -> impresion
Rule 6     cuerpo -> impresion_vacia
Rule 7     cuerpo -> expresiones_booleanas
Rule 8     cuerpo -> solicitudDatosTeclado
Rule 9     cuerpo -> hashes
Rule 10    cuerpo -> estructura_if
Rule 11    cuerpo -> funciones
Rule 12    cuerpo -> funcionesEstructuras
Rule 13    cuerpo -> array
Rule 14    cuerpo -> each_array
Rule 15    cuerpo -> comentarios
Rule 16    cuerpo -> each_hash
Rule 17    cuerpo -> sentencia_while
Rule 18    cuerpo -> sentencia_case
Rule 19    cuerpo -> sentencias_when
Rule 20    cuerpo -> sentencia_until
Rule 21    cuerpo -> definicion_clase
Rule 22    cuerpo -> entero_a_flotante
Rule 23    valorSimbolo -> SIMBOLO
Rule 24    valorSimbolo -> VARIABLE
Rule 25    comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo
Rule 26    comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo
Rule 27    input_concatenacion -> concatenacionSimpleCadena
Rule 28    input_concatenacion -> concatenacion_funcion
Rule 29    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 30    valorCadena -> CADENA
Rule 31    valorCadena -> VARIABLE
Rule 32    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 33    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 34    valorNumerico -> FLOTANTE
Rule 35    valorNumerico -> ENTERO
Rule 36    soloEnteros -> ENTERO
Rule 37    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 38    operadores -> MAS
Rule 39    operadores -> MENOS
Rule 40    operadores -> DIVISION
Rule 41    operadores -> MULTIPLICACION
Rule 42    operadores -> EXPONENCIACION
Rule 43    operadores -> MODULO
Rule 44    expresionNumerica -> valorNumerico
Rule 45    expresionNumerica -> operacionAritmetica
Rule 46    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 47    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 48    valor_print -> PRINT
Rule 49    valor_print -> PUTS
Rule 50    valores -> valor
Rule 51    valores -> valor COMA valores
Rule 52    valores -> valor estructura_ifUnaLinea
Rule 53    booleanos -> TRUE
Rule 54    booleanos -> FALSE
Rule 55    valor -> CADENA
Rule 56    valor -> valorNumerico
Rule 57    valor -> VARIABLE
Rule 58    valor -> VARIABLECLASE
Rule 59    valor -> SIMBOLO
Rule 60    impresion -> valor_print valores
Rule 61    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 64    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 65    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 66    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 67    asignacion -> VARIABLE IGUAL CADENA
Rule 68    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 69    asignacion -> VARIABLE IGUAL hashes
Rule 70    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 71    asignacion -> VARIABLE IGUAL array
Rule 72    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 73    asignacion -> VARIABLE IGUAL booleanos
Rule 74    elementos_array -> elemento_array COMA elementos_array
Rule 75    elementos_array -> elemento_array
Rule 76    elemento_array -> CADENA
Rule 77    elemento_array -> ENTERO
Rule 78    elemento_array -> FLOTANTE
Rule 79    elemento_array -> array
Rule 80    elemento_array -> VARIABLE
Rule 81    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 82    array -> CORCHETE_IZ CORCHETE_DER
Rule 83    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 84    cuerpo_each -> cuerpo
Rule 85    cuerpo_each -> vacio
Rule 86    vacio -> <empty>
Rule 87    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 88    comentarios -> COMENTARIO
Rule 89    comentarios -> COMENTARIO_MULTI
Rule 90    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 91    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 92    impresion_vacia -> PUTS
Rule 93    operadoresComparacion -> IGUAL_DOBLEP
Rule 94    operadoresComparacion -> DIFERENTE
Rule 95    operadoresComparacion -> MAYOR_QUE
Rule 96    operadoresComparacion -> MENOR_QUE
Rule 97    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 98    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 99    funcionesComparacion -> AND
Rule 100   funcionesComparacion -> OR
Rule 101   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 102   expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 103   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 104   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 105   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 106   solicitudDatosTeclado -> GETS
Rule 107   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 108   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 109   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 110   funcionesArray -> SORT
Rule 111   funcionesArray -> FOR EACH
Rule 112   funcionesFormatoImpresion -> CHOMP
Rule 113   funcionesNumeros -> TO_F
Rule 114   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 115   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 116   argumentos -> VARIABLE
Rule 117   argumentos -> VARIABLE COMA argumentos
Rule 118   condicionIf -> expresiones_booleanas
Rule 119   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 120   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 121   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 122   estructura_ifUnaLinea -> IF condicionIf
Rule 123   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 124   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 125   declaracion -> operacionAritmetica
Rule 126   declaracion -> asignacion
Rule 127   declaracion -> impresion
Rule 128   declaracion -> impresion_vacia
Rule 129   declaracion -> expresiones_booleanas
Rule 130   declaracion -> solicitudDatosTeclado
Rule 131   declaracion -> hashes
Rule 132   declaracion -> estructura_if
Rule 133   declaracion -> asignacion_clase
Rule 134   declaracion -> sentencia_while
Rule 135   declaracion -> estructura_ifUnaLinea
Rule 136   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 137   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 138   sentencia_case -> CASE declaracion sentencia_when END
Rule 139   sentencias_when -> sentencia_when
Rule 140   sentencias_when -> sentencia_when sentencias_when
Rule 141   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 142   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 143   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 144   hashes -> LLAVE_IZ LLAVE_DER
Rule 145   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 146   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 147   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 148   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 149   elemento_hash -> claveValor
Rule 150   elemento_hash -> claveValor COMA claveValor
Rule 151   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 152   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 153   each_args_hash -> VARIABLE BARRA
Rule 154   definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 155   cuerpoVariables -> asignacion_clase
Rule 156   cuerpoVariables -> asignacion
Rule 157   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 158   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 159   cuerpoClase -> cuerpoVariables
Rule 160   cuerpoClase -> declaracion
Rule 161   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 99
ASIGNA_HASH          : 145 146 147 148
BARRA                : 83 83 151 152 153
BEGIN                : 
BREAK                : 
CADENA               : 30 55 61 67 76 146 147 148 148
CASE                 : 138
CHOMP                : 112
CLASS                : 154
COMA                 : 51 74 117 150 152
COMENTARIO           : 88
COMENTARIO_MULTI     : 89
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 29
CORCHETE_DER         : 81 82
CORCHETE_IZ          : 81 82
DEF                  : 108 109 154
DEFINED_QUESTION     : 
DIFERENTE            : 26 94
DIVISION             : 40
DO                   : 83 136 137 142 151
DOBLE_IGUAL          : 
EACH                 : 111 151
ELSE                 : 120 123
ELSEIF               : 123 124
END                  : 83 108 109 120 123 136 137 138 142 151 154
ENSURE               : 
ENTERO               : 35 36 77 102
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 42
FALSE                : 54
FLOTANTE             : 34 78
FOR                  : 111
GETS                 : 106 107
ID_CLASE             : 154
IF                   : 120 121 122
IGUAL                : 61 62 63 64 65 66 67 68 69 70 71 72 73
IGUAL_DOBLEP         : 25 93 141
IN                   : 
INITIALIZE           : 154
LLAVE_DER            : 143 144
LLAVE_IZ             : 143 144
MAS                  : 32 33 38
MAYOR_IGUAL_QUE      : 98
MAYOR_QUE            : 95
MENOR_IGUAL_QUE      : 97
MENOR_QUE            : 96
MENOS                : 39
MODULE               : 
MODULO               : 43
MULTIPLICACION       : 41
NEWLINE              : 154 154 157 158
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 100
O_SIGNO              : 
PARENTESIS_DER       : 29 46 87 90 91 108 109 154
PARENTESIS_IZ        : 29 46 87 90 91 108 109 154
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 48 90
PRINTF               : 
PUNTO                : 29 37 83 107 114 115 151
PUTS                 : 49 91 92
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 23 59 70
SORT                 : 110
SUPER                : 
TO_F                 : 37 113
TRES_PUNTOS          : 87
TRIPLE_IGUAL         : 102
TRUE                 : 53
UNTIL                : 142
VARIABLE             : 24 29 31 37 57 66 67 68 69 70 71 72 73 80 83 83 103 103 104 105 108 109 114 115 116 117 145 146 151 152 152 153
VARIABLECLASE        : 58 61 62 63 64 65
WHEN                 : 141
WHILE                : 136 137
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 109 117 154
array                : 13 64 71 79
asignacion           : 4 126 156 158
asignacion_clase     : 133 155 157
booleanos            : 66 73
claveValor           : 149 150 150
comentarios          : 15
comparacion_simbolo  : 2
concatenacionSimpleCadena : 27 33
concatenacion_funcion : 28
condicionIf          : 120 121 122 123 124
cuerpo               : 84 0
cuerpoClase          : 154
cuerpoVariables      : 154 157 158 159
cuerpo_each          : 83
declaracion          : 108 109 120 120 121 123 123 124 137 138 141 141 142 142 151 160
definicion_clase     : 21
each_args_hash       : 151
each_array           : 14
each_hash            : 16
elemento_array       : 74 75
elemento_hash        : 143
elementos_array      : 74 81
entero_a_flotante    : 22
estructura_if        : 10 132
estructura_ifUnaLinea : 52 135
estructura_secundaria_if : 121 124
expresionNumerica    : 47 47 62 68
expresiones_booleanas : 7 118 119 119 129 136 137
funciones            : 11 161
funcionesArray       : 114
funcionesComparacion : 119
funcionesEstructuras : 12
funcionesFormatoImpresion : 107
funcionesNumeros     : 115
hashes               : 9 63 69 131
impresion            : 5 127
impresion_vacia      : 6 128
input_concatenacion  : 3 65 72
operacionAritmetica  : 1 45 46 125
operadores           : 47
operadoresComparacion : 101 103 104 105
rangos               : 102
sentencia_case       : 18
sentencia_until      : 20
sentencia_when       : 138 139 140
sentencia_while      : 17 134 136
sentencias_when      : 19 140
solicitudDatosTeclado : 8 130
soloEnteros          : 87 87
vacio                : 85
valor                : 50 51 52
valorCadena          : 29 32 32 33
valorNumerico        : 44 56 101 101 104 105 145 147
valorSimbolo         : 25 25 26 26
valor_print          : 60
valores              : 51 60

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . comparacion_simbolo
    (3) cuerpo -> . input_concatenacion
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . impresion
    (6) cuerpo -> . impresion_vacia
    (7) cuerpo -> . expresiones_booleanas
    (8) cuerpo -> . solicitudDatosTeclado
    (9) cuerpo -> . hashes
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . comentarios
    (16) cuerpo -> . each_hash
    (17) cuerpo -> . sentencia_while
    (18) cuerpo -> . sentencia_case
    (19) cuerpo -> . sentencias_when
    (20) cuerpo -> . sentencia_until
    (21) cuerpo -> . definicion_clase
    (22) cuerpo -> . entero_a_flotante
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (25) comparacion_simbolo -> . valorSimbolo IGUAL_DOBLEP valorSimbolo
    (26) comparacion_simbolo -> . valorSimbolo DIFERENTE valorSimbolo
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (109) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (115) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (83) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (88) comentarios -> . COMENTARIO
    (89) comentarios -> . COMENTARIO_MULTI
    (151) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (138) sentencia_case -> . CASE declaracion sentencia_when END
    (139) sentencias_when -> . sentencia_when
    (140) sentencias_when -> . sentencia_when sentencias_when
    (142) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (23) valorSimbolo -> . SIMBOLO
    (24) valorSimbolo -> . VARIABLE
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (141) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 28
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 40
    DEF             shift and go to state 41
    CORCHETE_IZ     shift and go to state 42
    COMENTARIO      shift and go to state 43
    COMENTARIO_MULTI shift and go to state 44
    WHILE           shift and go to state 45
    CASE            shift and go to state 46
    UNTIL           shift and go to state 48
    CLASS           shift and go to state 49
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    WHEN            shift and go to state 52
    CADENA          shift and go to state 29

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    comparacion_simbolo            shift and go to state 3
    input_concatenacion            shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    impresion_vacia                shift and go to state 7
    expresiones_booleanas          shift and go to state 8
    solicitudDatosTeclado          shift and go to state 9
    hashes                         shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    comentarios                    shift and go to state 16
    each_hash                      shift and go to state 17
    sentencia_while                shift and go to state 18
    sentencia_case                 shift and go to state 19
    sentencias_when                shift and go to state 20
    sentencia_until                shift and go to state 21
    definicion_clase               shift and go to state 22
    entero_a_flotante              shift and go to state 23
    expresionNumerica              shift and go to state 24
    valorSimbolo                   shift and go to state 25
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36
    sentencia_when                 shift and go to state 47
    valorCadena                    shift and go to state 50

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (45) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> comparacion_simbolo .

    $end            reduce using rule 2 (cuerpo -> comparacion_simbolo .)
    END             reduce using rule 2 (cuerpo -> comparacion_simbolo .)


state 4

    (3) cuerpo -> input_concatenacion .

    $end            reduce using rule 3 (cuerpo -> input_concatenacion .)
    END             reduce using rule 3 (cuerpo -> input_concatenacion .)


state 5

    (4) cuerpo -> asignacion .

    $end            reduce using rule 4 (cuerpo -> asignacion .)
    END             reduce using rule 4 (cuerpo -> asignacion .)


state 6

    (5) cuerpo -> impresion .

    $end            reduce using rule 5 (cuerpo -> impresion .)
    END             reduce using rule 5 (cuerpo -> impresion .)


state 7

    (6) cuerpo -> impresion_vacia .

    $end            reduce using rule 6 (cuerpo -> impresion_vacia .)
    END             reduce using rule 6 (cuerpo -> impresion_vacia .)


state 8

    (7) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 7 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 7 (cuerpo -> expresiones_booleanas .)


state 9

    (8) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 8 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 8 (cuerpo -> solicitudDatosTeclado .)


state 10

    (9) cuerpo -> hashes .

    $end            reduce using rule 9 (cuerpo -> hashes .)
    END             reduce using rule 9 (cuerpo -> hashes .)


state 11

    (10) cuerpo -> estructura_if .

    $end            reduce using rule 10 (cuerpo -> estructura_if .)
    END             reduce using rule 10 (cuerpo -> estructura_if .)


state 12

    (11) cuerpo -> funciones .

    $end            reduce using rule 11 (cuerpo -> funciones .)
    END             reduce using rule 11 (cuerpo -> funciones .)


state 13

    (12) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 12 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 12 (cuerpo -> funcionesEstructuras .)


state 14

    (13) cuerpo -> array .

    $end            reduce using rule 13 (cuerpo -> array .)
    END             reduce using rule 13 (cuerpo -> array .)


state 15

    (14) cuerpo -> each_array .

    $end            reduce using rule 14 (cuerpo -> each_array .)
    END             reduce using rule 14 (cuerpo -> each_array .)


state 16

    (15) cuerpo -> comentarios .

    $end            reduce using rule 15 (cuerpo -> comentarios .)
    END             reduce using rule 15 (cuerpo -> comentarios .)


state 17

    (16) cuerpo -> each_hash .

    $end            reduce using rule 16 (cuerpo -> each_hash .)
    END             reduce using rule 16 (cuerpo -> each_hash .)


state 18

    (17) cuerpo -> sentencia_while .

    $end            reduce using rule 17 (cuerpo -> sentencia_while .)
    END             reduce using rule 17 (cuerpo -> sentencia_while .)


state 19

    (18) cuerpo -> sentencia_case .

    $end            reduce using rule 18 (cuerpo -> sentencia_case .)
    END             reduce using rule 18 (cuerpo -> sentencia_case .)


state 20

    (19) cuerpo -> sentencias_when .

    $end            reduce using rule 19 (cuerpo -> sentencias_when .)
    END             reduce using rule 19 (cuerpo -> sentencias_when .)


state 21

    (20) cuerpo -> sentencia_until .

    $end            reduce using rule 20 (cuerpo -> sentencia_until .)
    END             reduce using rule 20 (cuerpo -> sentencia_until .)


state 22

    (21) cuerpo -> definicion_clase .

    $end            reduce using rule 21 (cuerpo -> definicion_clase .)
    END             reduce using rule 21 (cuerpo -> definicion_clase .)


state 23

    (22) cuerpo -> entero_a_flotante .

    $end            reduce using rule 22 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 22 (cuerpo -> entero_a_flotante .)


state 24

    (47) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 25

    (25) comparacion_simbolo -> valorSimbolo . IGUAL_DOBLEP valorSimbolo
    (26) comparacion_simbolo -> valorSimbolo . DIFERENTE valorSimbolo

    IGUAL_DOBLEP    shift and go to state 60
    DIFERENTE       shift and go to state 61


state 26

    (27) input_concatenacion -> concatenacionSimpleCadena .
    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 27 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 62


state 27

    (28) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 28 (input_concatenacion -> concatenacion_funcion .)


state 28

    (67) asignacion -> VARIABLE . IGUAL CADENA
    (68) asignacion -> VARIABLE . IGUAL expresionNumerica
    (69) asignacion -> VARIABLE . IGUAL hashes
    (70) asignacion -> VARIABLE . IGUAL SIMBOLO
    (71) asignacion -> VARIABLE . IGUAL array
    (72) asignacion -> VARIABLE . IGUAL input_concatenacion
    (73) asignacion -> VARIABLE . IGUAL booleanos
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (114) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (115) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (83) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (151) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (37) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (24) valorSimbolo -> VARIABLE .
    (29) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> VARIABLE .
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    IGUAL           shift and go to state 63
    PUNTO           shift and go to state 65
    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

  ! IGUAL_DOBLEP    [ reduce using rule 24 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 24 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 64

state 29

    (30) valorCadena -> CADENA .

    MAS             reduce using rule 30 (valorCadena -> CADENA .)
    $end            reduce using rule 30 (valorCadena -> CADENA .)
    END             reduce using rule 30 (valorCadena -> CADENA .)
    WHEN            reduce using rule 30 (valorCadena -> CADENA .)
    DO              reduce using rule 30 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 30 (valorCadena -> CADENA .)
    ELSE            reduce using rule 30 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 30 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 30 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 30 (valorCadena -> CADENA .)


state 30

    (23) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 23 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 23 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 23 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 23 (valorSimbolo -> SIMBOLO .)


state 31

    (60) impresion -> valor_print . valores
    (50) valores -> . valor
    (51) valores -> . valor COMA valores
    (52) valores -> . valor estructura_ifUnaLinea
    (55) valor -> . CADENA
    (56) valor -> . valorNumerico
    (57) valor -> . VARIABLE
    (58) valor -> . VARIABLECLASE
    (59) valor -> . SIMBOLO
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 76
    VARIABLECLASE   shift and go to state 77
    SIMBOLO         shift and go to state 78
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valores                        shift and go to state 72
    valor                          shift and go to state 73
    valorNumerico                  shift and go to state 75

state 32

    (90) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (48) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 79
    CADENA          reduce using rule 48 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 48 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 48 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 48 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 48 (valor_print -> PRINT .)
    ENTERO          reduce using rule 48 (valor_print -> PRINT .)


state 33

    (46) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (87) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (36) soloEnteros -> . ENTERO
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 83
    PARENTESIS_IZ   shift and go to state 80
    FLOTANTE        shift and go to state 51

    operacionAritmetica            shift and go to state 81
    soloEnteros                    shift and go to state 82
    expresionNumerica              shift and go to state 24
    valorNumerico                  shift and go to state 84

state 34

    (91) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> PUTS .
    (49) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 85
    $end            reduce using rule 92 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 92 (impresion_vacia -> PUTS .)
    DO              reduce using rule 92 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 92 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 92 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 92 (impresion_vacia -> PUTS .)
    END             reduce using rule 92 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 49 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 49 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 49 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 49 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 49 (valor_print -> PUTS .)
    ENTERO          reduce using rule 49 (valor_print -> PUTS .)


state 35

    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (44) expresionNumerica -> valorNumerico .
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 86

state 36

    (102) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 87


state 37

    (35) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 35 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 35 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 35 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 35 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 35 (valorNumerico -> ENTERO .)
    IF              reduce using rule 35 (valorNumerico -> ENTERO .)
    $end            reduce using rule 35 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 35 (valorNumerico -> ENTERO .)
    DO              reduce using rule 35 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 35 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 35 (valorNumerico -> ENTERO .)
    END             reduce using rule 35 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 35 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 35 (valorNumerico -> ENTERO .)
    AND             reduce using rule 35 (valorNumerico -> ENTERO .)
    OR              reduce using rule 35 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 35 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 35 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 35 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 35 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 35 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 35 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 35 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 35 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 35 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 35 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 35 (valorNumerico -> ENTERO .)


state 38

    (106) solicitudDatosTeclado -> GETS .
    (107) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 106 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 88


state 39

    (143) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (144) hashes -> LLAVE_IZ . LLAVE_DER
    (149) elemento_hash -> . claveValor
    (150) elemento_hash -> . claveValor COMA claveValor
    (145) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (146) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (147) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (148) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 90
    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93

    elemento_hash                  shift and go to state 89
    claveValor                     shift and go to state 91

state 40

    (120) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 94
    expresiones_booleanas          shift and go to state 95
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 41

    (108) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (109) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 99


state 42

    (81) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (82) array -> CORCHETE_IZ . CORCHETE_DER
    (74) elementos_array -> . elemento_array COMA elementos_array
    (75) elementos_array -> . elemento_array
    (76) elemento_array -> . CADENA
    (77) elemento_array -> . ENTERO
    (78) elemento_array -> . FLOTANTE
    (79) elemento_array -> . array
    (80) elemento_array -> . VARIABLE
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 101
    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 42

    elementos_array                shift and go to state 100
    elemento_array                 shift and go to state 102
    array                          shift and go to state 106

state 43

    (88) comentarios -> COMENTARIO .

    $end            reduce using rule 88 (comentarios -> COMENTARIO .)
    END             reduce using rule 88 (comentarios -> COMENTARIO .)


state 44

    (89) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 89 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 89 (comentarios -> COMENTARIO_MULTI .)


state 45

    (136) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    expresiones_booleanas          shift and go to state 108
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 46

    (138) sentencia_case -> CASE . declaracion sentencia_when END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 109
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 47

    (139) sentencias_when -> sentencia_when .
    (140) sentencias_when -> sentencia_when . sentencias_when
    (139) sentencias_when -> . sentencia_when
    (140) sentencias_when -> . sentencia_when sentencias_when
    (141) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 139 (sentencias_when -> sentencia_when .)
    END             reduce using rule 139 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 52

    sentencia_when                 shift and go to state 47
    sentencias_when                shift and go to state 124

state 48

    (142) sentencia_until -> UNTIL . declaracion DO declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 125
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 49

    (154) definicion_clase -> CLASS . ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    ID_CLASE        shift and go to state 126


state 50

    (32) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 127


state 51

    (34) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 34 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 34 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 34 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 34 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 34 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 34 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 34 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 34 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 34 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 34 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 34 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 34 (valorNumerico -> FLOTANTE .)


state 52

    (141) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 128
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 53

    (47) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 80
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    expresionNumerica              shift and go to state 129
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 130

state 54

    (38) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MAS .)
    FLOTANTE        reduce using rule 38 (operadores -> MAS .)
    ENTERO          reduce using rule 38 (operadores -> MAS .)


state 55

    (39) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 39 (operadores -> MENOS .)
    ENTERO          reduce using rule 39 (operadores -> MENOS .)


state 56

    (40) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 40 (operadores -> DIVISION .)
    ENTERO          reduce using rule 40 (operadores -> DIVISION .)


state 57

    (41) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 41 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 41 (operadores -> MULTIPLICACION .)


state 58

    (42) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 42 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 42 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 42 (operadores -> EXPONENCIACION .)


state 59

    (43) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 43 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 43 (operadores -> MODULO .)
    ENTERO          reduce using rule 43 (operadores -> MODULO .)


state 60

    (25) comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP . valorSimbolo
    (23) valorSimbolo -> . SIMBOLO
    (24) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 30
    VARIABLE        shift and go to state 132

    valorSimbolo                   shift and go to state 131

state 61

    (26) comparacion_simbolo -> valorSimbolo DIFERENTE . valorSimbolo
    (23) valorSimbolo -> . SIMBOLO
    (24) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 30
    VARIABLE        shift and go to state 132

    valorSimbolo                   shift and go to state 133

state 62

    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 135

    valorCadena                    shift and go to state 134

state 63

    (67) asignacion -> VARIABLE IGUAL . CADENA
    (68) asignacion -> VARIABLE IGUAL . expresionNumerica
    (69) asignacion -> VARIABLE IGUAL . hashes
    (70) asignacion -> VARIABLE IGUAL . SIMBOLO
    (71) asignacion -> VARIABLE IGUAL . array
    (72) asignacion -> VARIABLE IGUAL . input_concatenacion
    (73) asignacion -> VARIABLE IGUAL . booleanos
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (53) booleanos -> . TRUE
    (54) booleanos -> . FALSE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 137
    SIMBOLO         shift and go to state 140
    PARENTESIS_IZ   shift and go to state 80
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    VARIABLE        shift and go to state 136

    expresionNumerica              shift and go to state 138
    hashes                         shift and go to state 139
    array                          shift and go to state 141
    input_concatenacion            shift and go to state 142
    booleanos                      shift and go to state 143
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 50

state 64

    (103) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (104) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 146
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valorNumerico                  shift and go to state 147

state 65

    (114) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (115) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (83) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (151) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (37) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (29) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (110) funcionesArray -> . SORT
    (111) funcionesArray -> . FOR EACH
    (113) funcionesNumeros -> . TO_F

    DO              shift and go to state 150
    EACH            shift and go to state 151
    TO_F            shift and go to state 152
    CONCAT          shift and go to state 153
    SORT            shift and go to state 154
    FOR             shift and go to state 155

    funcionesArray                 shift and go to state 148
    funcionesNumeros               shift and go to state 149

state 66

    (93) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 93 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 93 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 93 (operadoresComparacion -> IGUAL_DOBLEP .)


state 67

    (94) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> DIFERENTE .)


state 68

    (95) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> MAYOR_QUE .)


state 69

    (96) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> MENOR_QUE .)


state 70

    (97) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 71

    (98) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 98 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 98 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 98 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 72

    (60) impresion -> valor_print valores .

    $end            reduce using rule 60 (impresion -> valor_print valores .)
    WHEN            reduce using rule 60 (impresion -> valor_print valores .)
    DO              reduce using rule 60 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 60 (impresion -> valor_print valores .)
    ELSE            reduce using rule 60 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 60 (impresion -> valor_print valores .)
    END             reduce using rule 60 (impresion -> valor_print valores .)


state 73

    (50) valores -> valor .
    (51) valores -> valor . COMA valores
    (52) valores -> valor . estructura_ifUnaLinea
    (122) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 50 (valores -> valor .)
    WHEN            reduce using rule 50 (valores -> valor .)
    DO              reduce using rule 50 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 50 (valores -> valor .)
    ELSE            reduce using rule 50 (valores -> valor .)
    ELSEIF          reduce using rule 50 (valores -> valor .)
    END             reduce using rule 50 (valores -> valor .)
    COMA            shift and go to state 156
    IF              shift and go to state 158

    estructura_ifUnaLinea          shift and go to state 157

state 74

    (55) valor -> CADENA .

    COMA            reduce using rule 55 (valor -> CADENA .)
    IF              reduce using rule 55 (valor -> CADENA .)
    $end            reduce using rule 55 (valor -> CADENA .)
    WHEN            reduce using rule 55 (valor -> CADENA .)
    DO              reduce using rule 55 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> CADENA .)
    ELSE            reduce using rule 55 (valor -> CADENA .)
    ELSEIF          reduce using rule 55 (valor -> CADENA .)
    END             reduce using rule 55 (valor -> CADENA .)


state 75

    (56) valor -> valorNumerico .

    COMA            reduce using rule 56 (valor -> valorNumerico .)
    IF              reduce using rule 56 (valor -> valorNumerico .)
    $end            reduce using rule 56 (valor -> valorNumerico .)
    WHEN            reduce using rule 56 (valor -> valorNumerico .)
    DO              reduce using rule 56 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> valorNumerico .)
    ELSE            reduce using rule 56 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 56 (valor -> valorNumerico .)
    END             reduce using rule 56 (valor -> valorNumerico .)


state 76

    (57) valor -> VARIABLE .

    COMA            reduce using rule 57 (valor -> VARIABLE .)
    IF              reduce using rule 57 (valor -> VARIABLE .)
    $end            reduce using rule 57 (valor -> VARIABLE .)
    WHEN            reduce using rule 57 (valor -> VARIABLE .)
    DO              reduce using rule 57 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> VARIABLE .)
    ELSE            reduce using rule 57 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 57 (valor -> VARIABLE .)
    END             reduce using rule 57 (valor -> VARIABLE .)


state 77

    (58) valor -> VARIABLECLASE .

    COMA            reduce using rule 58 (valor -> VARIABLECLASE .)
    IF              reduce using rule 58 (valor -> VARIABLECLASE .)
    $end            reduce using rule 58 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 58 (valor -> VARIABLECLASE .)
    DO              reduce using rule 58 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 58 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 58 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 58 (valor -> VARIABLECLASE .)
    END             reduce using rule 58 (valor -> VARIABLECLASE .)


state 78

    (59) valor -> SIMBOLO .

    COMA            reduce using rule 59 (valor -> SIMBOLO .)
    IF              reduce using rule 59 (valor -> SIMBOLO .)
    $end            reduce using rule 59 (valor -> SIMBOLO .)
    WHEN            reduce using rule 59 (valor -> SIMBOLO .)
    DO              reduce using rule 59 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 59 (valor -> SIMBOLO .)
    ELSE            reduce using rule 59 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 59 (valor -> SIMBOLO .)
    END             reduce using rule 59 (valor -> SIMBOLO .)


state 79

    (90) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 159


state 80

    (46) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 80
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    operacionAritmetica            shift and go to state 81
    expresionNumerica              shift and go to state 24
    valorNumerico                  shift and go to state 84

state 81

    (46) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (45) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 160
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 82

    (87) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 161


state 83

    (36) soloEnteros -> ENTERO .
    (35) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 36 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 35 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 35 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 35 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 35 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 35 (valorNumerico -> ENTERO .)


state 84

    (44) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 44 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 44 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 44 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 44 (expresionNumerica -> valorNumerico .)


state 85

    (91) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 162


state 86

    (101) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (105) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 164
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valorNumerico                  shift and go to state 163

state 87

    (102) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 165


state 88

    (107) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (112) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 167

    funcionesFormatoImpresion      shift and go to state 166

state 89

    (143) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 168


state 90

    (144) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 144 (hashes -> LLAVE_IZ LLAVE_DER .)


state 91

    (149) elemento_hash -> claveValor .
    (150) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 149 (elemento_hash -> claveValor .)
    COMA            shift and go to state 169


state 92

    (145) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (146) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 170


state 93

    (147) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (148) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 171


state 94

    (120) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (121) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 172
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 95

    (118) condicionIf -> expresiones_booleanas .
    (119) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (99) funcionesComparacion -> . AND
    (100) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 174
    OR              shift and go to state 175

    funcionesComparacion           shift and go to state 173

state 96

    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 86

state 97

    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 64

state 98

    (87) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (36) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 176

    soloEnteros                    shift and go to state 82

state 99

    (108) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (109) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 177


state 100

    (81) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 178


state 101

    (82) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)


state 102

    (74) elementos_array -> elemento_array . COMA elementos_array
    (75) elementos_array -> elemento_array .

    COMA            shift and go to state 179
    CORCHETE_DER    reduce using rule 75 (elementos_array -> elemento_array .)


state 103

    (76) elemento_array -> CADENA .

    COMA            reduce using rule 76 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 76 (elemento_array -> CADENA .)


state 104

    (77) elemento_array -> ENTERO .

    COMA            reduce using rule 77 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 77 (elemento_array -> ENTERO .)


state 105

    (78) elemento_array -> FLOTANTE .

    COMA            reduce using rule 78 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 78 (elemento_array -> FLOTANTE .)


state 106

    (79) elemento_array -> array .

    COMA            reduce using rule 79 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 79 (elemento_array -> array .)


state 107

    (80) elemento_array -> VARIABLE .

    COMA            reduce using rule 80 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 80 (elemento_array -> VARIABLE .)


state 108

    (136) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (137) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 180


state 109

    (138) sentencia_case -> CASE declaracion . sentencia_when END
    (141) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 52

    sentencia_when                 shift and go to state 181

state 110

    (125) declaracion -> operacionAritmetica .
    (45) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 125 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 125 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 125 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 125 (declaracion -> operacionAritmetica .)
    END             reduce using rule 125 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 125 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 111

    (126) declaracion -> asignacion .

    WHEN            reduce using rule 126 (declaracion -> asignacion .)
    DO              reduce using rule 126 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> asignacion .)
    ELSE            reduce using rule 126 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 126 (declaracion -> asignacion .)
    END             reduce using rule 126 (declaracion -> asignacion .)
    $end            reduce using rule 126 (declaracion -> asignacion .)


state 112

    (127) declaracion -> impresion .

    WHEN            reduce using rule 127 (declaracion -> impresion .)
    DO              reduce using rule 127 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> impresion .)
    ELSE            reduce using rule 127 (declaracion -> impresion .)
    ELSEIF          reduce using rule 127 (declaracion -> impresion .)
    END             reduce using rule 127 (declaracion -> impresion .)
    $end            reduce using rule 127 (declaracion -> impresion .)


state 113

    (128) declaracion -> impresion_vacia .

    WHEN            reduce using rule 128 (declaracion -> impresion_vacia .)
    DO              reduce using rule 128 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 128 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 128 (declaracion -> impresion_vacia .)
    END             reduce using rule 128 (declaracion -> impresion_vacia .)
    $end            reduce using rule 128 (declaracion -> impresion_vacia .)


state 114

    (129) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 129 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 129 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 129 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 129 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 129 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 129 (declaracion -> expresiones_booleanas .)


state 115

    (130) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 130 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 130 (declaracion -> solicitudDatosTeclado .)


state 116

    (131) declaracion -> hashes .

    WHEN            reduce using rule 131 (declaracion -> hashes .)
    DO              reduce using rule 131 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> hashes .)
    ELSE            reduce using rule 131 (declaracion -> hashes .)
    ELSEIF          reduce using rule 131 (declaracion -> hashes .)
    END             reduce using rule 131 (declaracion -> hashes .)
    $end            reduce using rule 131 (declaracion -> hashes .)


state 117

    (132) declaracion -> estructura_if .

    WHEN            reduce using rule 132 (declaracion -> estructura_if .)
    DO              reduce using rule 132 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> estructura_if .)
    ELSE            reduce using rule 132 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 132 (declaracion -> estructura_if .)
    END             reduce using rule 132 (declaracion -> estructura_if .)
    $end            reduce using rule 132 (declaracion -> estructura_if .)


state 118

    (133) declaracion -> asignacion_clase .

    WHEN            reduce using rule 133 (declaracion -> asignacion_clase .)
    DO              reduce using rule 133 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 133 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 133 (declaracion -> asignacion_clase .)
    END             reduce using rule 133 (declaracion -> asignacion_clase .)
    $end            reduce using rule 133 (declaracion -> asignacion_clase .)


state 119

    (134) declaracion -> sentencia_while .

    WHEN            reduce using rule 134 (declaracion -> sentencia_while .)
    DO              reduce using rule 134 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 134 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 134 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 134 (declaracion -> sentencia_while .)
    END             reduce using rule 134 (declaracion -> sentencia_while .)
    $end            reduce using rule 134 (declaracion -> sentencia_while .)


state 120

    (135) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 135 (declaracion -> estructura_ifUnaLinea .)


state 121

    (67) asignacion -> VARIABLE . IGUAL CADENA
    (68) asignacion -> VARIABLE . IGUAL expresionNumerica
    (69) asignacion -> VARIABLE . IGUAL hashes
    (70) asignacion -> VARIABLE . IGUAL SIMBOLO
    (71) asignacion -> VARIABLE . IGUAL array
    (72) asignacion -> VARIABLE . IGUAL input_concatenacion
    (73) asignacion -> VARIABLE . IGUAL booleanos
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (66) asignacion_clase -> VARIABLE . IGUAL booleanos
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 182
    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 64

state 122

    (120) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (122) estructura_ifUnaLinea -> IF . condicionIf
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 183
    expresiones_booleanas          shift and go to state 95
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 123

    (61) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (62) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (63) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (64) asignacion_clase -> VARIABLECLASE . IGUAL array
    (65) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 184


state 124

    (140) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 140 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 140 (sentencias_when -> sentencia_when sentencias_when .)


state 125

    (142) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 185


state 126

    (154) definicion_clase -> CLASS ID_CLASE . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 186


state 127

    (32) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 135

    valorCadena                    shift and go to state 187

state 128

    (141) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 188


state 129

    (47) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (47) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

  ! MAS             [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 47 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 53

state 130

    (45) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 45 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 45 (expresionNumerica -> operacionAritmetica .)


state 131

    (25) comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .

    $end            reduce using rule 25 (comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .)
    END             reduce using rule 25 (comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .)


state 132

    (24) valorSimbolo -> VARIABLE .

    $end            reduce using rule 24 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 24 (valorSimbolo -> VARIABLE .)


state 133

    (26) comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .

    $end            reduce using rule 26 (comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .)
    END             reduce using rule 26 (comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .)


state 134

    (33) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 33 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 135

    (31) valorCadena -> VARIABLE .

    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)
    $end            reduce using rule 31 (valorCadena -> VARIABLE .)
    END             reduce using rule 31 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 31 (valorCadena -> VARIABLE .)
    DO              reduce using rule 31 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 31 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 31 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 31 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 31 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 31 (valorCadena -> VARIABLE .)


state 136

    (29) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 189
    MAS             reduce using rule 31 (valorCadena -> VARIABLE .)


state 137

    (67) asignacion -> VARIABLE IGUAL CADENA .
    (30) valorCadena -> CADENA .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 67 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 30 (valorCadena -> CADENA .)


state 138

    (68) asignacion -> VARIABLE IGUAL expresionNumerica .
    (47) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 68 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 139

    (69) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 69 (asignacion -> VARIABLE IGUAL hashes .)


state 140

    (70) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    NEWLINE         reduce using rule 70 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 141

    (71) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 71 (asignacion -> VARIABLE IGUAL array .)


state 142

    (72) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 72 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 143

    (73) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .)


state 144

    (53) booleanos -> TRUE .

    $end            reduce using rule 53 (booleanos -> TRUE .)
    END             reduce using rule 53 (booleanos -> TRUE .)
    WHEN            reduce using rule 53 (booleanos -> TRUE .)
    DO              reduce using rule 53 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 53 (booleanos -> TRUE .)
    ELSE            reduce using rule 53 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 53 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 53 (booleanos -> TRUE .)


state 145

    (54) booleanos -> FALSE .

    $end            reduce using rule 54 (booleanos -> FALSE .)
    END             reduce using rule 54 (booleanos -> FALSE .)
    WHEN            reduce using rule 54 (booleanos -> FALSE .)
    DO              reduce using rule 54 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 54 (booleanos -> FALSE .)
    ELSE            reduce using rule 54 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 54 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 54 (booleanos -> FALSE .)


state 146

    (103) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 147

    (104) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 104 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 148

    (114) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 149

    (115) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 115 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 115 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 150

    (83) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 190


state 151

    (151) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 191


state 152

    (37) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (113) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 37 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 113 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 113 (funcionesNumeros -> TO_F .) ]


state 153

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 192


state 154

    (110) funcionesArray -> SORT .

    $end            reduce using rule 110 (funcionesArray -> SORT .)
    END             reduce using rule 110 (funcionesArray -> SORT .)


state 155

    (111) funcionesArray -> FOR . EACH

    EACH            shift and go to state 193


state 156

    (51) valores -> valor COMA . valores
    (50) valores -> . valor
    (51) valores -> . valor COMA valores
    (52) valores -> . valor estructura_ifUnaLinea
    (55) valor -> . CADENA
    (56) valor -> . valorNumerico
    (57) valor -> . VARIABLE
    (58) valor -> . VARIABLECLASE
    (59) valor -> . SIMBOLO
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 74
    VARIABLE        shift and go to state 76
    VARIABLECLASE   shift and go to state 77
    SIMBOLO         shift and go to state 78
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valor                          shift and go to state 73
    valores                        shift and go to state 194
    valorNumerico                  shift and go to state 75

state 157

    (52) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 52 (valores -> valor estructura_ifUnaLinea .)


state 158

    (122) estructura_ifUnaLinea -> IF . condicionIf
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 195
    expresiones_booleanas          shift and go to state 95
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 159

    (90) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 90 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 160

    (46) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 46 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 161

    (87) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (36) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 176

    soloEnteros                    shift and go to state 196

state 162

    (91) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 91 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 163

    (101) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 164

    (105) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 165

    (102) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 102 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 166

    (107) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 107 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 167

    (112) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)


state 168

    (143) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 143 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 169

    (150) elemento_hash -> claveValor COMA . claveValor
    (145) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (146) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (147) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (148) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93

    claveValor                     shift and go to state 197

state 170

    (145) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (146) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 199
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valorNumerico                  shift and go to state 198

state 171

    (147) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (148) claveValor -> CADENA ASIGNA_HASH . CADENA
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO

    CADENA          shift and go to state 200
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    valorNumerico                  shift and go to state 201

state 172

    (120) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (121) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (123) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (124) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 202
    ELSEIF          shift and go to state 204

    estructura_secundaria_if       shift and go to state 203

state 173

    (119) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    expresiones_booleanas          shift and go to state 205
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 174

    (99) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 99 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 99 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 99 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 99 (funcionesComparacion -> AND .)


state 175

    (100) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 100 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 100 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 100 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 100 (funcionesComparacion -> OR .)


state 176

    (36) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 36 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 36 (soloEnteros -> ENTERO .)


state 177

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (109) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 207
    VARIABLE        shift and go to state 206

    argumentos                     shift and go to state 208

state 178

    (81) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 179

    (74) elementos_array -> elemento_array COMA . elementos_array
    (74) elementos_array -> . elemento_array COMA elementos_array
    (75) elementos_array -> . elemento_array
    (76) elemento_array -> . CADENA
    (77) elemento_array -> . ENTERO
    (78) elemento_array -> . FLOTANTE
    (79) elemento_array -> . array
    (80) elemento_array -> . VARIABLE
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 42

    elemento_array                 shift and go to state 102
    elementos_array                shift and go to state 209
    array                          shift and go to state 106

state 180

    (136) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (137) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 45
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    expresiones_booleanas          shift and go to state 114
    sentencia_while                shift and go to state 210
    declaracion                    shift and go to state 211
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 181

    (138) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 212


state 182

    (67) asignacion -> VARIABLE IGUAL . CADENA
    (68) asignacion -> VARIABLE IGUAL . expresionNumerica
    (69) asignacion -> VARIABLE IGUAL . hashes
    (70) asignacion -> VARIABLE IGUAL . SIMBOLO
    (71) asignacion -> VARIABLE IGUAL . array
    (72) asignacion -> VARIABLE IGUAL . input_concatenacion
    (73) asignacion -> VARIABLE IGUAL . booleanos
    (66) asignacion_clase -> VARIABLE IGUAL . booleanos
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (53) booleanos -> . TRUE
    (54) booleanos -> . FALSE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 137
    SIMBOLO         shift and go to state 140
    PARENTESIS_IZ   shift and go to state 80
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    VARIABLE        shift and go to state 136

    expresionNumerica              shift and go to state 138
    hashes                         shift and go to state 139
    array                          shift and go to state 141
    input_concatenacion            shift and go to state 142
    booleanos                      shift and go to state 213
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 50

state 183

    (120) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (121) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (122) estructura_ifUnaLinea -> IF condicionIf .
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHEN            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 172
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 184

    (61) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (62) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (63) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (64) asignacion_clase -> VARIABLECLASE IGUAL . array
    (65) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 214
    PARENTESIS_IZ   shift and go to state 80
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    VARIABLE        shift and go to state 136

    expresionNumerica              shift and go to state 215
    hashes                         shift and go to state 216
    array                          shift and go to state 217
    input_concatenacion            shift and go to state 218
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 50

state 185

    (142) sentencia_until -> UNTIL declaracion DO . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 219
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 186

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 223

    cuerpoVariables                shift and go to state 220
    asignacion_clase               shift and go to state 221
    asignacion                     shift and go to state 222

state 187

    (32) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 32 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 188

    (141) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 224
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 189

    (29) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 153


state 190

    (83) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 225


state 191

    (151) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 226


state 192

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 29
    VARIABLE        shift and go to state 135

    valorCadena                    shift and go to state 227

state 193

    (111) funcionesArray -> FOR EACH .

    $end            reduce using rule 111 (funcionesArray -> FOR EACH .)
    END             reduce using rule 111 (funcionesArray -> FOR EACH .)


state 194

    (51) valores -> valor COMA valores .

    $end            reduce using rule 51 (valores -> valor COMA valores .)
    WHEN            reduce using rule 51 (valores -> valor COMA valores .)
    DO              reduce using rule 51 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 51 (valores -> valor COMA valores .)
    ELSE            reduce using rule 51 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 51 (valores -> valor COMA valores .)
    END             reduce using rule 51 (valores -> valor COMA valores .)


state 195

    (122) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 122 (estructura_ifUnaLinea -> IF condicionIf .)


state 196

    (87) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 228


state 197

    (150) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 150 (elemento_hash -> claveValor COMA claveValor .)


state 198

    (145) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 145 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 145 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 199

    (146) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 146 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 146 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 200

    (148) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 148 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 148 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 201

    (147) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 147 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 147 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 202

    (120) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 229
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 203

    (121) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 121 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 204

    (123) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (124) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 97
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    PARENTESIS_IZ   shift and go to state 98

    condicionIf                    shift and go to state 230
    expresiones_booleanas          shift and go to state 95
    valorNumerico                  shift and go to state 96
    rangos                         shift and go to state 36

state 205

    (119) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 119 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 206

    (116) argumentos -> VARIABLE .
    (117) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 116 (argumentos -> VARIABLE .)
    COMA            shift and go to state 231


state 207

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 232
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 208

    (109) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 233


state 209

    (74) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 74 (elementos_array -> elemento_array COMA elementos_array .)


state 210

    (136) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (134) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 234

  ! END             [ reduce using rule 134 (declaracion -> sentencia_while .) ]


state 211

    (137) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 235


state 212

    (138) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 138 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 138 (sentencia_case -> CASE declaracion sentencia_when END .)


state 213

    (73) asignacion -> VARIABLE IGUAL booleanos .
    (66) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for WHEN resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! WHEN            [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 214

    (61) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (30) valorCadena -> CADENA .

    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 30 (valorCadena -> CADENA .)


state 215

    (62) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (47) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (38) operadores -> . MAS
    (39) operadores -> . MENOS
    (40) operadores -> . DIVISION
    (41) operadores -> . MULTIPLICACION
    (42) operadores -> . EXPONENCIACION
    (43) operadores -> . MODULO

    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 54
    MENOS           shift and go to state 55
    DIVISION        shift and go to state 56
    MULTIPLICACION  shift and go to state 57
    EXPONENCIACION  shift and go to state 58
    MODULO          shift and go to state 59

    operadores                     shift and go to state 53

state 216

    (63) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 217

    (64) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 218

    (65) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 219

    (142) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 236


state 220

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 237


state 221

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 155 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 238

  ! NEWLINE         [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 222

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 156 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 239

  ! NEWLINE         [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 223

    (66) asignacion_clase -> VARIABLE . IGUAL booleanos
    (67) asignacion -> VARIABLE . IGUAL CADENA
    (68) asignacion -> VARIABLE . IGUAL expresionNumerica
    (69) asignacion -> VARIABLE . IGUAL hashes
    (70) asignacion -> VARIABLE . IGUAL SIMBOLO
    (71) asignacion -> VARIABLE . IGUAL array
    (72) asignacion -> VARIABLE . IGUAL input_concatenacion
    (73) asignacion -> VARIABLE . IGUAL booleanos

    IGUAL           shift and go to state 240


state 224

    (141) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 141 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 141 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 141 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 225

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 241


state 226

    (151) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (152) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (153) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 242

    each_args_hash                 shift and go to state 243

state 227

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 244


state 228

    (87) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 87 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 229

    (120) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 245


state 230

    (123) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (124) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 246
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 231

    (117) argumentos -> VARIABLE COMA . argumentos
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 206

    argumentos                     shift and go to state 247

state 232

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 248


state 233

    (109) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 249
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 234

    (136) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 136 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 235

    (137) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 137 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 236

    (142) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 142 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 142 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 237

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 250


state 238

    (157) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 223

    asignacion_clase               shift and go to state 221
    cuerpoVariables                shift and go to state 251
    asignacion                     shift and go to state 222

state 239

    (158) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 223

    asignacion                     shift and go to state 222
    cuerpoVariables                shift and go to state 252
    asignacion_clase               shift and go to state 221

state 240

    (66) asignacion_clase -> VARIABLE IGUAL . booleanos
    (67) asignacion -> VARIABLE IGUAL . CADENA
    (68) asignacion -> VARIABLE IGUAL . expresionNumerica
    (69) asignacion -> VARIABLE IGUAL . hashes
    (70) asignacion -> VARIABLE IGUAL . SIMBOLO
    (71) asignacion -> VARIABLE IGUAL . array
    (72) asignacion -> VARIABLE IGUAL . input_concatenacion
    (73) asignacion -> VARIABLE IGUAL . booleanos
    (53) booleanos -> . TRUE
    (54) booleanos -> . FALSE
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    CADENA          shift and go to state 137
    SIMBOLO         shift and go to state 140
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    PARENTESIS_IZ   shift and go to state 80
    LLAVE_IZ        shift and go to state 39
    CORCHETE_IZ     shift and go to state 42
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    VARIABLE        shift and go to state 136

    booleanos                      shift and go to state 253
    expresionNumerica              shift and go to state 138
    hashes                         shift and go to state 139
    array                          shift and go to state 141
    input_concatenacion            shift and go to state 142
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 130
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valorCadena                    shift and go to state 50

state 241

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (84) cuerpo_each -> . cuerpo
    (85) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . comparacion_simbolo
    (3) cuerpo -> . input_concatenacion
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . impresion
    (6) cuerpo -> . impresion_vacia
    (7) cuerpo -> . expresiones_booleanas
    (8) cuerpo -> . solicitudDatosTeclado
    (9) cuerpo -> . hashes
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . comentarios
    (16) cuerpo -> . each_hash
    (17) cuerpo -> . sentencia_while
    (18) cuerpo -> . sentencia_case
    (19) cuerpo -> . sentencias_when
    (20) cuerpo -> . sentencia_until
    (21) cuerpo -> . definicion_clase
    (22) cuerpo -> . entero_a_flotante
    (86) vacio -> .
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (25) comparacion_simbolo -> . valorSimbolo IGUAL_DOBLEP valorSimbolo
    (26) comparacion_simbolo -> . valorSimbolo DIFERENTE valorSimbolo
    (27) input_concatenacion -> . concatenacionSimpleCadena
    (28) input_concatenacion -> . concatenacion_funcion
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (109) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (115) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (83) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (88) comentarios -> . COMENTARIO
    (89) comentarios -> . COMENTARIO_MULTI
    (151) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (138) sentencia_case -> . CASE declaracion sentencia_when END
    (139) sentencias_when -> . sentencia_when
    (140) sentencias_when -> . sentencia_when sentencias_when
    (142) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (37) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (23) valorSimbolo -> . SIMBOLO
    (24) valorSimbolo -> . VARIABLE
    (32) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (33) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (29) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (141) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (30) valorCadena -> . CADENA
    (31) valorCadena -> . VARIABLE

    END             reduce using rule 86 (vacio -> .)
    VARIABLE        shift and go to state 28
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 40
    DEF             shift and go to state 41
    CORCHETE_IZ     shift and go to state 42
    COMENTARIO      shift and go to state 43
    COMENTARIO_MULTI shift and go to state 44
    WHILE           shift and go to state 45
    CASE            shift and go to state 46
    UNTIL           shift and go to state 48
    CLASS           shift and go to state 49
    PARENTESIS_IZ   shift and go to state 33
    SIMBOLO         shift and go to state 30
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37
    WHEN            shift and go to state 52
    CADENA          shift and go to state 29

    cuerpo_each                    shift and go to state 254
    cuerpo                         shift and go to state 255
    vacio                          shift and go to state 256
    operacionAritmetica            shift and go to state 2
    comparacion_simbolo            shift and go to state 3
    input_concatenacion            shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    impresion_vacia                shift and go to state 7
    expresiones_booleanas          shift and go to state 8
    solicitudDatosTeclado          shift and go to state 9
    hashes                         shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    comentarios                    shift and go to state 16
    each_hash                      shift and go to state 17
    sentencia_while                shift and go to state 18
    sentencia_case                 shift and go to state 19
    sentencias_when                shift and go to state 20
    sentencia_until                shift and go to state 21
    definicion_clase               shift and go to state 22
    entero_a_flotante              shift and go to state 23
    expresionNumerica              shift and go to state 24
    valorSimbolo                   shift and go to state 25
    concatenacionSimpleCadena      shift and go to state 26
    concatenacion_funcion          shift and go to state 27
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36
    sentencia_when                 shift and go to state 47
    valorCadena                    shift and go to state 50

state 242

    (152) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (153) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 257
    BARRA           shift and go to state 258


state 243

    (151) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 259
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 244

    (29) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 29 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 245

    (120) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 120 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 246

    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (124) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (123) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (124) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 260
    ELSEIF          shift and go to state 204

    estructura_secundaria_if       shift and go to state 261

state 247

    (117) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 117 (argumentos -> VARIABLE COMA argumentos .)


state 248

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 249

    (109) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 262


state 250

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 263


state 251

    (157) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 252

    (158) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 253

    (66) asignacion_clase -> VARIABLE IGUAL booleanos .
    (73) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for NEWLINE resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    NEWLINE         reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! NEWLINE         [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 73 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 254

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 264


state 255

    (84) cuerpo_each -> cuerpo .

    END             reduce using rule 84 (cuerpo_each -> cuerpo .)


state 256

    (85) cuerpo_each -> vacio .

    END             reduce using rule 85 (cuerpo_each -> vacio .)


state 257

    (152) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 265


state 258

    (153) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 153 (each_args_hash -> VARIABLE BARRA .)


state 259

    (151) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 266


state 260

    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 121
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    declaracion                    shift and go to state 267
    operacionAritmetica            shift and go to state 110
    asignacion                     shift and go to state 111
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    asignacion_clase               shift and go to state 118
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 261

    (124) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 124 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 262

    (109) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 109 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 109 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 263

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 268


state 264

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 83 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 83 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 265

    (152) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 269


state 266

    (151) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 151 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 151 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 267

    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 270


state 268

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 206

    argumentos                     shift and go to state 271

state 269

    (152) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 152 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 270

    (123) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 123 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 271

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 272


state 272

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (159) cuerpoClase -> . cuerpoVariables
    (160) cuerpoClase -> . declaracion
    (161) cuerpoClase -> . funciones
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (125) declaracion -> . operacionAritmetica
    (126) declaracion -> . asignacion
    (127) declaracion -> . impresion
    (128) declaracion -> . impresion_vacia
    (129) declaracion -> . expresiones_booleanas
    (130) declaracion -> . solicitudDatosTeclado
    (131) declaracion -> . hashes
    (132) declaracion -> . estructura_if
    (133) declaracion -> . asignacion_clase
    (134) declaracion -> . sentencia_while
    (135) declaracion -> . estructura_ifUnaLinea
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (109) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (61) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (62) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (63) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (64) asignacion_clase -> . VARIABLECLASE IGUAL array
    (65) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (66) asignacion_clase -> . VARIABLE IGUAL booleanos
    (67) asignacion -> . VARIABLE IGUAL CADENA
    (68) asignacion -> . VARIABLE IGUAL expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL hashes
    (70) asignacion -> . VARIABLE IGUAL SIMBOLO
    (71) asignacion -> . VARIABLE IGUAL array
    (72) asignacion -> . VARIABLE IGUAL input_concatenacion
    (73) asignacion -> . VARIABLE IGUAL booleanos
    (47) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (60) impresion -> . valor_print valores
    (90) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (91) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (106) solicitudDatosTeclado -> . GETS
    (107) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (143) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (144) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (121) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (136) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (137) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (122) estructura_ifUnaLinea -> . IF condicionIf
    (44) expresionNumerica -> . valorNumerico
    (45) expresionNumerica -> . operacionAritmetica
    (46) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) valor_print -> . PRINT
    (49) valor_print -> . PUTS
    (34) valorNumerico -> . FLOTANTE
    (35) valorNumerico -> . ENTERO
    (87) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 41
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 279
    PRINT           shift and go to state 32
    PUTS            shift and go to state 34
    GETS            shift and go to state 38
    LLAVE_IZ        shift and go to state 39
    IF              shift and go to state 122
    WHILE           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 33
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 37

    cuerpoVariables                shift and go to state 273
    cuerpoClase                    shift and go to state 274
    declaracion                    shift and go to state 275
    funciones                      shift and go to state 276
    asignacion_clase               shift and go to state 277
    asignacion                     shift and go to state 278
    operacionAritmetica            shift and go to state 110
    impresion                      shift and go to state 112
    impresion_vacia                shift and go to state 113
    expresiones_booleanas          shift and go to state 114
    solicitudDatosTeclado          shift and go to state 115
    hashes                         shift and go to state 116
    estructura_if                  shift and go to state 117
    sentencia_while                shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    expresionNumerica              shift and go to state 24
    valor_print                    shift and go to state 31
    valorNumerico                  shift and go to state 35
    rangos                         shift and go to state 36

state 273

    (159) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 159 (cuerpoClase -> cuerpoVariables .)


state 274

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 280


state 275

    (160) cuerpoClase -> declaracion .

    END             reduce using rule 160 (cuerpoClase -> declaracion .)


state 276

    (161) cuerpoClase -> funciones .

    END             reduce using rule 161 (cuerpoClase -> funciones .)


state 277

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (133) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 133 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 238
    END             reduce using rule 133 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 278

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (126) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 126 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 239
    END             reduce using rule 126 (declaracion -> asignacion .)

  ! END             [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 279

    (66) asignacion_clase -> VARIABLE . IGUAL booleanos
    (67) asignacion -> VARIABLE . IGUAL CADENA
    (68) asignacion -> VARIABLE . IGUAL expresionNumerica
    (69) asignacion -> VARIABLE . IGUAL hashes
    (70) asignacion -> VARIABLE . IGUAL SIMBOLO
    (71) asignacion -> VARIABLE . IGUAL array
    (72) asignacion -> VARIABLE . IGUAL input_concatenacion
    (73) asignacion -> VARIABLE . IGUAL booleanos
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (104) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (93) operadoresComparacion -> . IGUAL_DOBLEP
    (94) operadoresComparacion -> . DIFERENTE
    (95) operadoresComparacion -> . MAYOR_QUE
    (96) operadoresComparacion -> . MENOR_QUE
    (97) operadoresComparacion -> . MENOR_IGUAL_QUE
    (98) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 240
    IGUAL_DOBLEP    shift and go to state 66
    DIFERENTE       shift and go to state 67
    MAYOR_QUE       shift and go to state 68
    MENOR_QUE       shift and go to state 69
    MENOR_IGUAL_QUE shift and go to state 70
    MAYOR_IGUAL_QUE shift and go to state 71

    operadoresComparacion          shift and go to state 64

state 280

    (154) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 154 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 154 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 28 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 28 resolved as shift
WARNING: shift/reduce conflict for MAS in state 129 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 129 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 129 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 129 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 129 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 129 resolved as shift
WARNING: shift/reduce conflict for END in state 210 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 221 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 222 resolved as shift
WARNING: reduce/reduce conflict in state 152 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 152
WARNING: reduce/reduce conflict in state 213 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 213
WARNING: reduce/reduce conflict in state 253 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 253
WARNING: reduce/reduce conflict in state 277 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 277
WARNING: reduce/reduce conflict in state 278 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 278
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
