Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    DOBLE_IGUAL
    EXCLAMACION_ALTO
    IN
    MODULE
    NOT
    OR
    PORCENTAJE
    PREGUNTA
    PRINTF
    RETURN
    SELF
    TRES_PUNTOS
    TRIPLE_IGUAL

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_ifUnaLinea
Rule 10    cuerpo -> estructura_if
Rule 11    cuerpo -> funciones
Rule 12    cuerpo -> funcionesEstructuras
Rule 13    cuerpo -> array
Rule 14    cuerpo -> each_array
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    valorSimbolo -> SIMBOLO
Rule 23    valorSimbolo -> VARIABLE
Rule 24    input_concatenacion -> concatenacionSimpleCadena
Rule 25    input_concatenacion -> concatenacion_funcion
Rule 26    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 27    valorCadena -> CADENA
Rule 28    valorCadena -> VARIABLE
Rule 29    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 30    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 31    valorNumerico -> FLOTANTE
Rule 32    valorNumerico -> ENTERO
Rule 33    soloEnteros -> ENTERO
Rule 34    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 35    operadores -> MAS
Rule 36    operadores -> MENOS
Rule 37    operadores -> DIVISION
Rule 38    operadores -> MULTIPLICACION
Rule 39    operadores -> EXPONENCIACION
Rule 40    operadores -> MODULO
Rule 41    expresionNumerica -> valorNumerico
Rule 42    expresionNumerica -> operacionAritmetica
Rule 43    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 44    expresionNumerica -> VARIABLE
Rule 45    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 46    valor_print -> PRINT
Rule 47    valor_print -> PUTS
Rule 48    valores -> valor
Rule 49    valores -> valor COMA valores
Rule 50    valores -> valor estructura_ifUnaLinea
Rule 51    booleanos -> TRUE
Rule 52    booleanos -> FALSE
Rule 53    valor -> CADENA
Rule 54    valor -> valorNumerico
Rule 55    valor -> VARIABLE
Rule 56    valor -> VARIABLECLASE
Rule 57    valor -> SIMBOLO
Rule 58    impresion -> valor_print valores
Rule 59    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 60    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 61    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 64    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 65    asignacion -> VARIABLE IGUAL CADENA
Rule 66    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 67    asignacion -> VARIABLE IGUAL hashes
Rule 68    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 69    asignacion -> VARIABLE IGUAL array
Rule 70    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 71    asignacion -> VARIABLE IGUAL booleanos
Rule 72    elementos_array -> elemento_array COMA elementos_array
Rule 73    elementos_array -> elemento_array
Rule 74    elemento_array -> CADENA
Rule 75    elemento_array -> ENTERO
Rule 76    elemento_array -> FLOTANTE
Rule 77    elemento_array -> array
Rule 78    elemento_array -> VARIABLE
Rule 79    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 80    array -> CORCHETE_IZ CORCHETE_DER
Rule 81    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 82    cuerpo_each -> cuerpo
Rule 83    cuerpo_each -> vacio
Rule 84    vacio -> <empty>
Rule 85    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 86    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 87    impresion_vacia -> PUTS
Rule 88    operadoresComparacion -> IGUAL_DOBLEP
Rule 89    operadoresComparacion -> NAVE
Rule 90    operadoresComparacion -> DIFERENTE
Rule 91    operadoresComparacion -> MAYOR_QUE
Rule 92    operadoresComparacion -> MENOR_QUE
Rule 93    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 94    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 95    funcionesComparacion -> Y_SIGNO
Rule 96    funcionesComparacion -> O_SIGNO
Rule 97    expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 98    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 99    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 100   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 101   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 102   solicitudDatosTeclado -> GETS
Rule 103   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 104   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 105   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 106   funcionesArray -> SORT
Rule 107   funcionesArray -> FOR EACH
Rule 108   funcionesFormatoImpresion -> CHOMP
Rule 109   funcionesNumeros -> TO_F
Rule 110   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 111   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 112   argumentos -> VARIABLE
Rule 113   argumentos -> VARIABLE COMA argumentos
Rule 114   condicionIf -> expresiones_booleanas
Rule 115   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 116   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 117   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 118   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 119   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 120   estructura_ifUnaLinea -> IF condicionIf declaracion END
Rule 121   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 122   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 123   declaracion -> operacionAritmetica
Rule 124   declaracion -> asignacion
Rule 125   declaracion -> impresion
Rule 126   declaracion -> impresion_vacia
Rule 127   declaracion -> expresiones_booleanas
Rule 128   declaracion -> solicitudDatosTeclado
Rule 129   declaracion -> hashes
Rule 130   declaracion -> estructura_if
Rule 131   declaracion -> asignacion_clase
Rule 132   declaracion -> sentencia_while
Rule 133   declaracion -> estructura_ifUnaLinea
Rule 134   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 135   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 136   sentencia_case -> CASE declaracion sentencia_when END
Rule 137   sentencias_when -> sentencia_when
Rule 138   sentencias_when -> sentencia_when sentencias_when
Rule 139   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 140   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 141   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 142   hashes -> LLAVE_IZ LLAVE_DER
Rule 143   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 144   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 145   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 146   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 147   elemento_hash -> claveValor
Rule 148   elemento_hash -> claveValor COMA claveValor
Rule 149   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 150   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 151   each_args_hash -> VARIABLE BARRA
Rule 152   encabezadoClase -> CLASS ID_CLASE
Rule 153   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 154   definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 155   cuerpoVariables -> asignacion_clase
Rule 156   cuerpoVariables -> asignacion
Rule 157   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 158   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 159   cuerpoClase -> cuerpoVariables
Rule 160   cuerpoClase -> declaracion
Rule 161   cuerpoClase -> funciones

Terminals, with rules where they appear

AND                  : 
ASIGNA_HASH          : 143 144 145 146
BARRA                : 81 81 149 150 151
BEGIN                : 
CADENA               : 27 53 59 65 74 144 145 146 146
CASE                 : 136
CHOMP                : 108
CLASS                : 152 153
COMA                 : 49 72 113 148 150
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 26
CORCHETE_DER         : 79 80
CORCHETE_IZ          : 79 80
DEF                  : 104 105 154
DIFERENTE            : 90
DIVISION             : 37
DO                   : 81 134 135 140 149
DOBLE_IGUAL          : 
EACH                 : 107 149
ELSE                 : 118 121
ELSEIF               : 121 122
END                  : 81 104 105 118 120 121 134 135 136 140 149 154
ENTERO               : 32 33 75
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 115 117
EXPONENCIACION       : 39
FALSE                : 52
FLOTANTE             : 31 76
FOR                  : 107
GETS                 : 102 103
ID_CLASE             : 152 153 153
IF                   : 118 119 120
IGUAL                : 59 60 61 62 63 64 65 66 67 68 69 70 71
IGUAL_DOBLEP         : 88 139
IN                   : 
INITIALIZE           : 154
LLAVE_DER            : 141 142
LLAVE_IZ             : 141 142
MAS                  : 29 30 35
MAYOR_IGUAL_QUE      : 94
MAYOR_QUE            : 91
MENOR_IGUAL_QUE      : 93
MENOR_QUE            : 92 153
MENOS                : 36
MODULE               : 
MODULO               : 40
MULTIPLICACION       : 38
NAVE                 : 89
NEWLINE              : 154 154 157 158
NOT                  : 
OR                   : 
O_SIGNO              : 96
PARENTESIS_DER       : 26 43 85 86 104 105 115 117 154
PARENTESIS_IZ        : 26 43 85 86 104 105 115 117 154
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 46 85
PRINTF               : 
PUNTO                : 26 34 81 103 110 111 149
PUTS                 : 47 86 87
RETURN               : 
SELF                 : 
SIMBOLO              : 22 57 68
SORT                 : 106
TO_F                 : 34 109
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 51
UNTIL                : 140
VARIABLE             : 23 26 28 34 44 55 64 65 66 67 68 69 70 71 78 81 81 99 99 100 101 104 105 110 111 112 113 143 144 149 150 150 151
VARIABLECLASE        : 56 59 60 61 62 63
WHEN                 : 139
WHILE                : 134 135
Y_SIGNO              : 95
error                : 

Nonterminals, with rules where they appear

argumentos           : 105 113 154
array                : 13 62 69 77
asignacion           : 3 124 156 158
asignacion_clase     : 131 155 157
booleanos            : 64 71
claveValor           : 147 148 148
concatenacionSimpleCadena : 24 30
concatenacion_funcion : 25
condicionIf          : 115 116 118 119 120 121 122
cuerpo               : 82 0
cuerpoClase          : 154
cuerpoVariables      : 154 157 158 159
cuerpo_each          : 81
declaracion          : 104 105 118 118 119 120 121 121 122 135 136 139 139 140 140 149 160
definicion_clase     : 20
each_args_hash       : 149
each_array           : 14
each_hash            : 15
elemento_array       : 72 73
elemento_hash        : 141
elementos_array      : 72 79
encabezadoClase      : 154
entero_a_flotante    : 21
estructura_if        : 10 130
estructura_ifUnaLinea : 9 50 133
estructura_secundaria_if : 119 122
expresionNumerica    : 45 45 60 66
expresiones_booleanas : 6 114 115 116 117 127 134 135
funciones            : 11 161
funcionesArray       : 110
funcionesComparacion : 115 116
funcionesEstructuras : 12
funcionesFormatoImpresion : 103
funcionesNumeros     : 111
hashes               : 8 61 67 129
impresion            : 4 125
impresion_vacia      : 5 126
input_concatenacion  : 2 63 70
operacionAritmetica  : 1 42 43 123
operadores           : 45
operadoresComparacion : 97 98 99 100 101
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 136 137 138
sentencia_while      : 16 132 134
sentencias_when      : 18 138
solicitudDatosTeclado : 7 128
soloEnteros          : 
vacio                : 83
valor                : 48 49 50
valorCadena          : 26 29 29 30
valorNumerico        : 41 54 98 98 100 101 143 145
valorSimbolo         : 97 97
valor_print          : 58
valores              : 49 58

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_ifUnaLinea
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (104) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (105) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (110) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (111) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (81) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (136) sentencia_case -> . CASE declaracion sentencia_when END
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (140) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (152) encabezadoClase -> . CLASS ID_CLASE
    (153) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 37
    DEF             shift and go to state 38
    CORCHETE_IZ     shift and go to state 39
    WHILE           shift and go to state 40
    CASE            shift and go to state 41
    UNTIL           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47
    WHEN            shift and go to state 48
    CLASS           shift and go to state 49
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_ifUnaLinea          shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    sentencia_when                 shift and go to state 42
    encabezadoClase                shift and go to state 44
    valorCadena                    shift and go to state 45

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_ifUnaLinea .

    $end            reduce using rule 9 (cuerpo -> estructura_ifUnaLinea .)
    END             reduce using rule 9 (cuerpo -> estructura_ifUnaLinea .)


state 11

    (10) cuerpo -> estructura_if .

    $end            reduce using rule 10 (cuerpo -> estructura_if .)
    END             reduce using rule 10 (cuerpo -> estructura_if .)


state 12

    (11) cuerpo -> funciones .

    $end            reduce using rule 11 (cuerpo -> funciones .)
    END             reduce using rule 11 (cuerpo -> funciones .)


state 13

    (12) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 12 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 12 (cuerpo -> funcionesEstructuras .)


state 14

    (13) cuerpo -> array .

    $end            reduce using rule 13 (cuerpo -> array .)
    END             reduce using rule 13 (cuerpo -> array .)


state 15

    (14) cuerpo -> each_array .

    $end            reduce using rule 14 (cuerpo -> each_array .)
    END             reduce using rule 14 (cuerpo -> each_array .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 24

    (24) input_concatenacion -> concatenacionSimpleCadena .
    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 57


state 25

    (25) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)


state 26

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (99) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (110) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (111) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (81) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (23) valorSimbolo -> VARIABLE .
    (28) valorCadena -> VARIABLE .
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 58
    PUNTO           shift and go to state 60
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 59

state 27

    (27) valorCadena -> CADENA .

    MAS             reduce using rule 27 (valorCadena -> CADENA .)
    $end            reduce using rule 27 (valorCadena -> CADENA .)
    END             reduce using rule 27 (valorCadena -> CADENA .)
    WHEN            reduce using rule 27 (valorCadena -> CADENA .)
    DO              reduce using rule 27 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 27 (valorCadena -> CADENA .)
    ELSE            reduce using rule 27 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 27 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 27 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 27 (valorCadena -> CADENA .)


state 28

    (22) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    NAVE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    Y_SIGNO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    O_SIGNO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_DER  reduce using rule 22 (valorSimbolo -> SIMBOLO .)


state 29

    (58) impresion -> valor_print . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 70
    VARIABLE        shift and go to state 72
    VARIABLECLASE   shift and go to state 73
    SIMBOLO         shift and go to state 74
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valores                        shift and go to state 68
    valor                          shift and go to state 69
    valorNumerico                  shift and go to state 71

state 30

    (85) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (46) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 75
    CADENA          reduce using rule 46 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 46 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 46 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 46 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 46 (valor_print -> PRINT .)
    ENTERO          reduce using rule 46 (valor_print -> PRINT .)


state 31

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 78
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    operacionAritmetica            shift and go to state 76
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 77

state 32

    (86) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> PUTS .
    (47) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 79
    $end            reduce using rule 87 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 87 (impresion_vacia -> PUTS .)
    DO              reduce using rule 87 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 87 (impresion_vacia -> PUTS .)
    END             reduce using rule 87 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 87 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 87 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 47 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 47 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 47 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 47 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 47 (valor_print -> PUTS .)
    ENTERO          reduce using rule 47 (valor_print -> PUTS .)


state 33

    (97) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

    operadoresComparacion          shift and go to state 80

state 34

    (98) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (41) expresionNumerica -> valorNumerico .
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

    operadoresComparacion          shift and go to state 81

state 35

    (102) solicitudDatosTeclado -> GETS .
    (103) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 102 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 82


state 36

    (141) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (142) hashes -> LLAVE_IZ . LLAVE_DER
    (147) elemento_hash -> . claveValor
    (148) elemento_hash -> . claveValor COMA claveValor
    (143) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (144) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (145) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (146) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 84
    VARIABLE        shift and go to state 86
    CADENA          shift and go to state 87

    elemento_hash                  shift and go to state 83
    claveValor                     shift and go to state 85

state 37

    (120) estructura_ifUnaLinea -> IF . condicionIf declaracion END
    (118) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    condicionIf                    shift and go to state 88
    expresiones_booleanas          shift and go to state 89
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 38

    (104) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (105) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 93


state 39

    (79) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (80) array -> CORCHETE_IZ . CORCHETE_DER
    (72) elementos_array -> . elemento_array COMA elementos_array
    (73) elementos_array -> . elemento_array
    (74) elemento_array -> . CADENA
    (75) elemento_array -> . ENTERO
    (76) elemento_array -> . FLOTANTE
    (77) elemento_array -> . array
    (78) elemento_array -> . VARIABLE
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 95
    CADENA          shift and go to state 97
    ENTERO          shift and go to state 98
    FLOTANTE        shift and go to state 99
    VARIABLE        shift and go to state 101
    CORCHETE_IZ     shift and go to state 39

    elementos_array                shift and go to state 94
    elemento_array                 shift and go to state 96
    array                          shift and go to state 100

state 40

    (134) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresiones_booleanas          shift and go to state 102
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 41

    (136) sentencia_case -> CASE . declaracion sentencia_when END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 103
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 42

    (137) sentencias_when -> sentencia_when .
    (138) sentencias_when -> sentencia_when . sentencias_when
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 137 (sentencias_when -> sentencia_when .)
    END             reduce using rule 137 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 42
    sentencias_when                shift and go to state 118

state 43

    (140) sentencia_until -> UNTIL . declaracion DO declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 119
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 44

    (154) definicion_clase -> encabezadoClase . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 120


state 45

    (29) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 121


state 46

    (31) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 31 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 31 (valorNumerico -> FLOTANTE .)


state 47

    (32) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 32 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 32 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 32 (valorNumerico -> ENTERO .)
    IF              reduce using rule 32 (valorNumerico -> ENTERO .)
    $end            reduce using rule 32 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 32 (valorNumerico -> ENTERO .)
    DO              reduce using rule 32 (valorNumerico -> ENTERO .)
    END             reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 32 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 32 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 32 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 32 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 32 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 32 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 32 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 32 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 32 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 32 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 32 (valorNumerico -> ENTERO .)


state 48

    (139) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 122
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 49

    (152) encabezadoClase -> CLASS . ID_CLASE
    (153) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 123


state 50

    (45) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 78
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresionNumerica              shift and go to state 124
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 125

state 51

    (35) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> MAS .)
    VARIABLE        reduce using rule 35 (operadores -> MAS .)
    FLOTANTE        reduce using rule 35 (operadores -> MAS .)
    ENTERO          reduce using rule 35 (operadores -> MAS .)


state 52

    (36) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MENOS .)
    VARIABLE        reduce using rule 36 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 36 (operadores -> MENOS .)
    ENTERO          reduce using rule 36 (operadores -> MENOS .)


state 53

    (37) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 37 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 37 (operadores -> DIVISION .)
    ENTERO          reduce using rule 37 (operadores -> DIVISION .)


state 54

    (38) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 38 (operadores -> MULTIPLICACION .)


state 55

    (39) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 39 (operadores -> EXPONENCIACION .)


state 56

    (40) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MODULO .)
    VARIABLE        reduce using rule 40 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 40 (operadores -> MODULO .)
    ENTERO          reduce using rule 40 (operadores -> MODULO .)


state 57

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 126

state 58

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    SIMBOLO         shift and go to state 132
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 128
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 133
    input_concatenacion            shift and go to state 134
    booleanos                      shift and go to state 135
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 45

state 59

    (99) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (100) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 138
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valorNumerico                  shift and go to state 139

state 60

    (110) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (111) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (81) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (106) funcionesArray -> . SORT
    (107) funcionesArray -> . FOR EACH
    (109) funcionesNumeros -> . TO_F

    DO              shift and go to state 142
    EACH            shift and go to state 143
    TO_F            shift and go to state 144
    CONCAT          shift and go to state 145
    SORT            shift and go to state 146
    FOR             shift and go to state 147

    funcionesArray                 shift and go to state 140
    funcionesNumeros               shift and go to state 141

state 61

    (88) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 88 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 88 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 88 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 88 (operadoresComparacion -> IGUAL_DOBLEP .)


state 62

    (89) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 89 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 89 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 89 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 89 (operadoresComparacion -> NAVE .)


state 63

    (90) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 90 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 90 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 90 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 90 (operadoresComparacion -> DIFERENTE .)


state 64

    (91) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 91 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 91 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 91 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 91 (operadoresComparacion -> MAYOR_QUE .)


state 65

    (92) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 92 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 92 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 92 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 92 (operadoresComparacion -> MENOR_QUE .)


state 66

    (93) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 93 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 93 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 93 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 93 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 67

    (94) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 94 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 68

    (58) impresion -> valor_print valores .

    $end            reduce using rule 58 (impresion -> valor_print valores .)
    WHEN            reduce using rule 58 (impresion -> valor_print valores .)
    DO              reduce using rule 58 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 58 (impresion -> valor_print valores .)
    END             reduce using rule 58 (impresion -> valor_print valores .)
    ELSE            reduce using rule 58 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 58 (impresion -> valor_print valores .)


state 69

    (48) valores -> valor .
    (49) valores -> valor . COMA valores
    (50) valores -> valor . estructura_ifUnaLinea
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END

    $end            reduce using rule 48 (valores -> valor .)
    WHEN            reduce using rule 48 (valores -> valor .)
    DO              reduce using rule 48 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 48 (valores -> valor .)
    END             reduce using rule 48 (valores -> valor .)
    ELSE            reduce using rule 48 (valores -> valor .)
    ELSEIF          reduce using rule 48 (valores -> valor .)
    COMA            shift and go to state 148
    IF              shift and go to state 150

    estructura_ifUnaLinea          shift and go to state 149

state 70

    (53) valor -> CADENA .

    COMA            reduce using rule 53 (valor -> CADENA .)
    IF              reduce using rule 53 (valor -> CADENA .)
    $end            reduce using rule 53 (valor -> CADENA .)
    WHEN            reduce using rule 53 (valor -> CADENA .)
    DO              reduce using rule 53 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> CADENA .)
    END             reduce using rule 53 (valor -> CADENA .)
    ELSE            reduce using rule 53 (valor -> CADENA .)
    ELSEIF          reduce using rule 53 (valor -> CADENA .)


state 71

    (54) valor -> valorNumerico .

    COMA            reduce using rule 54 (valor -> valorNumerico .)
    IF              reduce using rule 54 (valor -> valorNumerico .)
    $end            reduce using rule 54 (valor -> valorNumerico .)
    WHEN            reduce using rule 54 (valor -> valorNumerico .)
    DO              reduce using rule 54 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> valorNumerico .)
    END             reduce using rule 54 (valor -> valorNumerico .)
    ELSE            reduce using rule 54 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 54 (valor -> valorNumerico .)


state 72

    (55) valor -> VARIABLE .

    COMA            reduce using rule 55 (valor -> VARIABLE .)
    IF              reduce using rule 55 (valor -> VARIABLE .)
    $end            reduce using rule 55 (valor -> VARIABLE .)
    WHEN            reduce using rule 55 (valor -> VARIABLE .)
    DO              reduce using rule 55 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> VARIABLE .)
    END             reduce using rule 55 (valor -> VARIABLE .)
    ELSE            reduce using rule 55 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 55 (valor -> VARIABLE .)


state 73

    (56) valor -> VARIABLECLASE .

    COMA            reduce using rule 56 (valor -> VARIABLECLASE .)
    IF              reduce using rule 56 (valor -> VARIABLECLASE .)
    $end            reduce using rule 56 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 56 (valor -> VARIABLECLASE .)
    DO              reduce using rule 56 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> VARIABLECLASE .)
    END             reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 56 (valor -> VARIABLECLASE .)


state 74

    (57) valor -> SIMBOLO .

    COMA            reduce using rule 57 (valor -> SIMBOLO .)
    IF              reduce using rule 57 (valor -> SIMBOLO .)
    $end            reduce using rule 57 (valor -> SIMBOLO .)
    WHEN            reduce using rule 57 (valor -> SIMBOLO .)
    DO              reduce using rule 57 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> SIMBOLO .)
    END             reduce using rule 57 (valor -> SIMBOLO .)
    ELSE            reduce using rule 57 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 57 (valor -> SIMBOLO .)


state 75

    (85) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 151


state 76

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (42) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 152
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 77

    (41) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 41 (expresionNumerica -> valorNumerico .)


state 78

    (44) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    NEWLINE         reduce using rule 44 (expresionNumerica -> VARIABLE .)


state 79

    (86) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 153


state 80

    (97) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 28
    VARIABLE        shift and go to state 155

    valorSimbolo                   shift and go to state 154

state 81

    (98) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (101) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 157
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valorNumerico                  shift and go to state 156

state 82

    (103) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (108) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 159

    funcionesFormatoImpresion      shift and go to state 158

state 83

    (141) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 160


state 84

    (142) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 142 (hashes -> LLAVE_IZ LLAVE_DER .)


state 85

    (147) elemento_hash -> claveValor .
    (148) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 147 (elemento_hash -> claveValor .)
    COMA            shift and go to state 161


state 86

    (143) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (144) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 162


state 87

    (145) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (146) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 163


state 88

    (120) estructura_ifUnaLinea -> IF condicionIf . declaracion END
    (118) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (119) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 164
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 89

    (114) condicionIf -> expresiones_booleanas .
    (116) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (95) funcionesComparacion -> . Y_SIGNO
    (96) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 114 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 166
    O_SIGNO         shift and go to state 167

    funcionesComparacion           shift and go to state 165

state 90

    (115) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (117) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 168


state 91

    (98) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

    operadoresComparacion          shift and go to state 81

state 92

    (99) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (23) valorSimbolo -> VARIABLE .
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 59

state 93

    (104) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (105) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 169


state 94

    (79) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 170


state 95

    (80) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 80 (array -> CORCHETE_IZ CORCHETE_DER .)


state 96

    (72) elementos_array -> elemento_array . COMA elementos_array
    (73) elementos_array -> elemento_array .

    COMA            shift and go to state 171
    CORCHETE_DER    reduce using rule 73 (elementos_array -> elemento_array .)


state 97

    (74) elemento_array -> CADENA .

    COMA            reduce using rule 74 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 74 (elemento_array -> CADENA .)


state 98

    (75) elemento_array -> ENTERO .

    COMA            reduce using rule 75 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 75 (elemento_array -> ENTERO .)


state 99

    (76) elemento_array -> FLOTANTE .

    COMA            reduce using rule 76 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 76 (elemento_array -> FLOTANTE .)


state 100

    (77) elemento_array -> array .

    COMA            reduce using rule 77 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 77 (elemento_array -> array .)


state 101

    (78) elemento_array -> VARIABLE .

    COMA            reduce using rule 78 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 78 (elemento_array -> VARIABLE .)


state 102

    (134) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (135) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 172


state 103

    (136) sentencia_case -> CASE declaracion . sentencia_when END
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 173

state 104

    (123) declaracion -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    WHEN            reduce using rule 123 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 123 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 123 (declaracion -> operacionAritmetica .)
    END             reduce using rule 123 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 123 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 123 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 123 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 105

    (124) declaracion -> asignacion .

    WHEN            reduce using rule 124 (declaracion -> asignacion .)
    DO              reduce using rule 124 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 124 (declaracion -> asignacion .)
    END             reduce using rule 124 (declaracion -> asignacion .)
    ELSE            reduce using rule 124 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 124 (declaracion -> asignacion .)
    $end            reduce using rule 124 (declaracion -> asignacion .)


state 106

    (125) declaracion -> impresion .

    WHEN            reduce using rule 125 (declaracion -> impresion .)
    DO              reduce using rule 125 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 125 (declaracion -> impresion .)
    END             reduce using rule 125 (declaracion -> impresion .)
    ELSE            reduce using rule 125 (declaracion -> impresion .)
    ELSEIF          reduce using rule 125 (declaracion -> impresion .)
    $end            reduce using rule 125 (declaracion -> impresion .)


state 107

    (126) declaracion -> impresion_vacia .

    WHEN            reduce using rule 126 (declaracion -> impresion_vacia .)
    DO              reduce using rule 126 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 126 (declaracion -> impresion_vacia .)
    END             reduce using rule 126 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 126 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 126 (declaracion -> impresion_vacia .)
    $end            reduce using rule 126 (declaracion -> impresion_vacia .)


state 108

    (127) declaracion -> expresiones_booleanas .

    WHEN            reduce using rule 127 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 127 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 127 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 127 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 127 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 127 (declaracion -> expresiones_booleanas .)


state 109

    (128) declaracion -> solicitudDatosTeclado .

    WHEN            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 128 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 128 (declaracion -> solicitudDatosTeclado .)


state 110

    (129) declaracion -> hashes .

    WHEN            reduce using rule 129 (declaracion -> hashes .)
    DO              reduce using rule 129 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> hashes .)
    END             reduce using rule 129 (declaracion -> hashes .)
    ELSE            reduce using rule 129 (declaracion -> hashes .)
    ELSEIF          reduce using rule 129 (declaracion -> hashes .)
    $end            reduce using rule 129 (declaracion -> hashes .)


state 111

    (130) declaracion -> estructura_if .

    WHEN            reduce using rule 130 (declaracion -> estructura_if .)
    DO              reduce using rule 130 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> estructura_if .)
    END             reduce using rule 130 (declaracion -> estructura_if .)
    ELSE            reduce using rule 130 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 130 (declaracion -> estructura_if .)
    $end            reduce using rule 130 (declaracion -> estructura_if .)


state 112

    (131) declaracion -> asignacion_clase .

    WHEN            reduce using rule 131 (declaracion -> asignacion_clase .)
    DO              reduce using rule 131 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> asignacion_clase .)
    END             reduce using rule 131 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 131 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 131 (declaracion -> asignacion_clase .)
    $end            reduce using rule 131 (declaracion -> asignacion_clase .)


state 113

    (132) declaracion -> sentencia_while .

    WHEN            reduce using rule 132 (declaracion -> sentencia_while .)
    DO              reduce using rule 132 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> sentencia_while .)
    END             reduce using rule 132 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 132 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 132 (declaracion -> sentencia_while .)
    $end            reduce using rule 132 (declaracion -> sentencia_while .)


state 114

    (133) declaracion -> estructura_ifUnaLinea .

    WHEN            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 133 (declaracion -> estructura_ifUnaLinea .)


state 115

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (99) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 174
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 59

state 116

    (118) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (120) estructura_ifUnaLinea -> IF . condicionIf declaracion END
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    condicionIf                    shift and go to state 175
    expresiones_booleanas          shift and go to state 89
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 117

    (59) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (60) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (62) asignacion_clase -> VARIABLECLASE . IGUAL array
    (63) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 176


state 118

    (138) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 138 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 138 (sentencias_when -> sentencia_when sentencias_when .)


state 119

    (140) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 177


state 120

    (154) definicion_clase -> encabezadoClase NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 117
    VARIABLE        shift and go to state 181

    cuerpoVariables                shift and go to state 178
    asignacion_clase               shift and go to state 179
    asignacion                     shift and go to state 180

state 121

    (29) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 182

state 122

    (139) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 183


state 123

    (152) encabezadoClase -> CLASS ID_CLASE .
    (153) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    NEWLINE         reduce using rule 152 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 184


state 124

    (45) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

  ! MAS             [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 50

state 125

    (42) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 126

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 127

    (28) valorCadena -> VARIABLE .

    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    $end            reduce using rule 28 (valorCadena -> VARIABLE .)
    END             reduce using rule 28 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 28 (valorCadena -> VARIABLE .)
    DO              reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 28 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 28 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 28 (valorCadena -> VARIABLE .)


state 128

    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    NEWLINE         reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 185
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]


state 129

    (65) asignacion -> VARIABLE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    $end            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 130

    (66) asignacion -> VARIABLE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    $end            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 131

    (67) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)


state 132

    (68) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    NEWLINE         reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 133

    (69) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)


state 134

    (70) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 135

    (71) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)


state 136

    (51) booleanos -> TRUE .

    $end            reduce using rule 51 (booleanos -> TRUE .)
    END             reduce using rule 51 (booleanos -> TRUE .)
    WHEN            reduce using rule 51 (booleanos -> TRUE .)
    DO              reduce using rule 51 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 51 (booleanos -> TRUE .)
    ELSE            reduce using rule 51 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 51 (booleanos -> TRUE .)
    NEWLINE         reduce using rule 51 (booleanos -> TRUE .)


state 137

    (52) booleanos -> FALSE .

    $end            reduce using rule 52 (booleanos -> FALSE .)
    END             reduce using rule 52 (booleanos -> FALSE .)
    WHEN            reduce using rule 52 (booleanos -> FALSE .)
    DO              reduce using rule 52 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 52 (booleanos -> FALSE .)
    ELSE            reduce using rule 52 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 52 (booleanos -> FALSE .)
    NEWLINE         reduce using rule 52 (booleanos -> FALSE .)


state 138

    (99) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 99 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 139

    (100) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 100 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 140

    (110) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 110 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 110 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 141

    (111) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 111 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 111 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 142

    (81) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 186


state 143

    (149) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 187


state 144

    (34) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (109) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 109 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 109 (funcionesNumeros -> TO_F .) ]


state 145

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 188


state 146

    (106) funcionesArray -> SORT .

    $end            reduce using rule 106 (funcionesArray -> SORT .)
    END             reduce using rule 106 (funcionesArray -> SORT .)


state 147

    (107) funcionesArray -> FOR . EACH

    EACH            shift and go to state 189


state 148

    (49) valores -> valor COMA . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 70
    VARIABLE        shift and go to state 72
    VARIABLECLASE   shift and go to state 73
    SIMBOLO         shift and go to state 74
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valor                          shift and go to state 69
    valores                        shift and go to state 190
    valorNumerico                  shift and go to state 71

state 149

    (50) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)


state 150

    (120) estructura_ifUnaLinea -> IF . condicionIf declaracion END
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    condicionIf                    shift and go to state 191
    expresiones_booleanas          shift and go to state 89
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 151

    (85) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 85 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 152

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 153

    (86) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 86 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 154

    (97) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    $end            reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLE        reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 97 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 155

    (23) valorSimbolo -> VARIABLE .

    $end            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 23 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 23 (valorSimbolo -> VARIABLE .)


state 156

    (98) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 98 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 157

    (101) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 158

    (103) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 103 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 159

    (108) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 108 (funcionesFormatoImpresion -> CHOMP .)


state 160

    (141) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 141 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 161

    (148) elemento_hash -> claveValor COMA . claveValor
    (143) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (144) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (145) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (146) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 86
    CADENA          shift and go to state 87

    claveValor                     shift and go to state 192

state 162

    (143) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (144) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 194
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valorNumerico                  shift and go to state 193

state 163

    (145) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (146) claveValor -> CADENA ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 195
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    valorNumerico                  shift and go to state 196

state 164

    (120) estructura_ifUnaLinea -> IF condicionIf declaracion . END
    (118) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (119) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (121) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    END             shift and go to state 197
    ELSE            shift and go to state 198
    ELSEIF          shift and go to state 200

    estructura_secundaria_if       shift and go to state 199

state 165

    (116) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresiones_booleanas          shift and go to state 89
    condicionIf                    shift and go to state 201
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 166

    (95) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 95 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 95 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 95 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 95 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 95 (funcionesComparacion -> Y_SIGNO .)


state 167

    (96) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 96 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 96 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 96 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 96 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 96 (funcionesComparacion -> O_SIGNO .)


state 168

    (115) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (117) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresiones_booleanas          shift and go to state 202
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 169

    (104) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (105) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (112) argumentos -> . VARIABLE
    (113) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 204
    VARIABLE        shift and go to state 203

    argumentos                     shift and go to state 205

state 170

    (79) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 79 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 171

    (72) elementos_array -> elemento_array COMA . elementos_array
    (72) elementos_array -> . elemento_array COMA elementos_array
    (73) elementos_array -> . elemento_array
    (74) elemento_array -> . CADENA
    (75) elemento_array -> . ENTERO
    (76) elemento_array -> . FLOTANTE
    (77) elemento_array -> . array
    (78) elemento_array -> . VARIABLE
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 97
    ENTERO          shift and go to state 98
    FLOTANTE        shift and go to state 99
    VARIABLE        shift and go to state 101
    CORCHETE_IZ     shift and go to state 39

    elemento_array                 shift and go to state 96
    elementos_array                shift and go to state 206
    array                          shift and go to state 100

state 172

    (134) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (135) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    WHILE           shift and go to state 40
    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresiones_booleanas          shift and go to state 108
    sentencia_while                shift and go to state 207
    declaracion                    shift and go to state 208
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 173

    (136) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 209


state 174

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    SIMBOLO         shift and go to state 132
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 128
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 133
    input_concatenacion            shift and go to state 134
    booleanos                      shift and go to state 210
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 45

state 175

    (118) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (119) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (120) estructura_ifUnaLinea -> IF condicionIf . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 211
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 176

    (59) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (60) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (62) asignacion_clase -> VARIABLECLASE IGUAL . array
    (63) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 212
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 128
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresionNumerica              shift and go to state 213
    hashes                         shift and go to state 214
    array                          shift and go to state 215
    input_concatenacion            shift and go to state 216
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 45

state 177

    (140) sentencia_until -> UNTIL declaracion DO . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 217
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 178

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 218


state 179

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 155 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 219

  ! NEWLINE         [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 180

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 156 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 220

  ! NEWLINE         [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 181

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos

    IGUAL           shift and go to state 221


state 182

    (29) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 183

    (139) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 222
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 184

    (153) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 223


state 185

    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 145


state 186

    (81) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 224


state 187

    (149) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 225


state 188

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 127

    valorCadena                    shift and go to state 226

state 189

    (107) funcionesArray -> FOR EACH .

    $end            reduce using rule 107 (funcionesArray -> FOR EACH .)
    END             reduce using rule 107 (funcionesArray -> FOR EACH .)


state 190

    (49) valores -> valor COMA valores .

    $end            reduce using rule 49 (valores -> valor COMA valores .)
    WHEN            reduce using rule 49 (valores -> valor COMA valores .)
    DO              reduce using rule 49 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 49 (valores -> valor COMA valores .)
    END             reduce using rule 49 (valores -> valor COMA valores .)
    ELSE            reduce using rule 49 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 49 (valores -> valor COMA valores .)


state 191

    (120) estructura_ifUnaLinea -> IF condicionIf . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 227
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 192

    (148) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 148 (elemento_hash -> claveValor COMA claveValor .)


state 193

    (143) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 143 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 143 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 194

    (144) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 144 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 195

    (146) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 146 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 196

    (145) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 145 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 145 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 197

    (120) estructura_ifUnaLinea -> IF condicionIf declaracion END .

    $end            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    WHEN            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    DO              reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    IGUAL_DOBLEP    reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    END             reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    ELSE            reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)
    ELSEIF          reduce using rule 120 (estructura_ifUnaLinea -> IF condicionIf declaracion END .)


state 198

    (118) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 228
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 199

    (119) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 119 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 200

    (121) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    condicionIf                    shift and go to state 229
    expresiones_booleanas          shift and go to state 89
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 201

    (116) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 116 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)


state 202

    (115) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (117) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 230


state 203

    (112) argumentos -> VARIABLE .
    (113) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 112 (argumentos -> VARIABLE .)
    COMA            shift and go to state 231


state 204

    (104) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 232
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 205

    (105) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 233


state 206

    (72) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 72 (elementos_array -> elemento_array COMA elementos_array .)


state 207

    (134) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (132) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 234

  ! END             [ reduce using rule 132 (declaracion -> sentencia_while .) ]


state 208

    (135) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 235


state 209

    (136) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 136 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 136 (sentencia_case -> CASE declaracion sentencia_when END .)


state 210

    (71) asignacion -> VARIABLE IGUAL booleanos .
    (64) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for WHEN resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! WHEN            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 211

    (118) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (119) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (120) estructura_ifUnaLinea -> IF condicionIf declaracion . END
    (121) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 198
    END             shift and go to state 197
    ELSEIF          shift and go to state 200

    estructura_secundaria_if       shift and go to state 199

state 212

    (59) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    WHEN            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 213

    (60) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    WHEN            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 51
    MENOS           shift and go to state 52
    DIVISION        shift and go to state 53
    MULTIPLICACION  shift and go to state 54
    EXPONENCIACION  shift and go to state 55
    MODULO          shift and go to state 56

    operadores                     shift and go to state 50

state 214

    (61) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 215

    (62) asignacion_clase -> VARIABLECLASE IGUAL array .

    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 216

    (63) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 217

    (140) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 236


state 218

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 237


state 219

    (157) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 117
    VARIABLE        shift and go to state 181

    asignacion_clase               shift and go to state 179
    cuerpoVariables                shift and go to state 238
    asignacion                     shift and go to state 180

state 220

    (158) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos

    VARIABLECLASE   shift and go to state 117
    VARIABLE        shift and go to state 181

    asignacion                     shift and go to state 180
    cuerpoVariables                shift and go to state 239
    asignacion_clase               shift and go to state 179

state 221

    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 129
    SIMBOLO         shift and go to state 132
    TRUE            shift and go to state 136
    FALSE           shift and go to state 137
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 128
    LLAVE_IZ        shift and go to state 36
    CORCHETE_IZ     shift and go to state 39
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    booleanos                      shift and go to state 240
    expresionNumerica              shift and go to state 130
    hashes                         shift and go to state 131
    array                          shift and go to state 133
    input_concatenacion            shift and go to state 134
    valorNumerico                  shift and go to state 77
    operacionAritmetica            shift and go to state 125
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 45

state 222

    (139) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 139 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 223

    (153) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    NEWLINE         reduce using rule 153 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 224

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 241


state 225

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (150) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (151) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 242

    each_args_hash                 shift and go to state 243

state 226

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 244


state 227

    (120) estructura_ifUnaLinea -> IF condicionIf declaracion . END

    END             shift and go to state 197


state 228

    (118) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 245


state 229

    (121) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 246
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 230

    (115) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (117) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (95) funcionesComparacion -> . Y_SIGNO
    (96) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 117 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 166
    O_SIGNO         shift and go to state 167

    funcionesComparacion           shift and go to state 247

state 231

    (113) argumentos -> VARIABLE COMA . argumentos
    (112) argumentos -> . VARIABLE
    (113) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 203

    argumentos                     shift and go to state 248

state 232

    (104) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 249


state 233

    (105) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 250
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 234

    (134) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 134 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 235

    (135) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 135 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 236

    (140) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 140 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 140 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 237

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 251


state 238

    (157) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 157 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 239

    (158) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 158 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 240

    (64) asignacion_clase -> VARIABLE IGUAL booleanos .
    (71) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for NEWLINE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    NEWLINE         reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! NEWLINE         [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 241

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (82) cuerpo_each -> . cuerpo
    (83) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_ifUnaLinea
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (84) vacio -> .
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (104) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (105) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (110) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (111) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (79) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (80) array -> . CORCHETE_IZ CORCHETE_DER
    (81) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (149) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (136) sentencia_case -> . CASE declaracion sentencia_when END
    (137) sentencias_when -> . sentencia_when
    (138) sentencias_when -> . sentencia_when sentencias_when
    (140) sentencia_until -> . UNTIL declaracion DO declaracion END
    (154) definicion_clase -> . encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (139) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (152) encabezadoClase -> . CLASS ID_CLASE
    (153) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    END             reduce using rule 84 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 37
    DEF             shift and go to state 38
    CORCHETE_IZ     shift and go to state 39
    WHILE           shift and go to state 40
    CASE            shift and go to state 41
    UNTIL           shift and go to state 43
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47
    WHEN            shift and go to state 48
    CLASS           shift and go to state 49
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 252
    cuerpo                         shift and go to state 253
    vacio                          shift and go to state 254
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_ifUnaLinea          shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34
    sentencia_when                 shift and go to state 42
    encabezadoClase                shift and go to state 44
    valorCadena                    shift and go to state 45

state 242

    (150) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (151) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 255
    BARRA           shift and go to state 256


state 243

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 257
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 244

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 245

    (118) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 118 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 246

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (121) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (122) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 258
    ELSEIF          shift and go to state 200

    estructura_secundaria_if       shift and go to state 259

state 247

    (115) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (114) condicionIf -> . expresiones_booleanas
    (115) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (116) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (117) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 90
    VARIABLE        shift and go to state 92
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    expresiones_booleanas          shift and go to state 89
    condicionIf                    shift and go to state 260
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 91

state 248

    (113) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 113 (argumentos -> VARIABLE COMA argumentos .)


state 249

    (104) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 104 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 104 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 250

    (105) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 261


state 251

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 262


state 252

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 263


state 253

    (82) cuerpo_each -> cuerpo .

    END             reduce using rule 82 (cuerpo_each -> cuerpo .)


state 254

    (83) cuerpo_each -> vacio .

    END             reduce using rule 83 (cuerpo_each -> vacio .)


state 255

    (150) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 264


state 256

    (151) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 151 (each_args_hash -> VARIABLE BARRA .)


state 257

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 265


state 258

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    VARIABLECLASE   shift and go to state 117
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    declaracion                    shift and go to state 266
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 259

    (122) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 260

    (115) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 115 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)


state 261

    (105) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 105 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 105 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 262

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (112) argumentos -> . VARIABLE
    (113) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 203

    argumentos                     shift and go to state 267

state 263

    (81) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 81 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 81 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 264

    (150) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 268


state 265

    (149) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 149 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 149 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 266

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 269


state 267

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 270


state 268

    (150) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 150 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 269

    (121) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 121 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 270

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (159) cuerpoClase -> . cuerpoVariables
    (160) cuerpoClase -> . declaracion
    (161) cuerpoClase -> . funciones
    (155) cuerpoVariables -> . asignacion_clase
    (156) cuerpoVariables -> . asignacion
    (157) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (158) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (123) declaracion -> . operacionAritmetica
    (124) declaracion -> . asignacion
    (125) declaracion -> . impresion
    (126) declaracion -> . impresion_vacia
    (127) declaracion -> . expresiones_booleanas
    (128) declaracion -> . solicitudDatosTeclado
    (129) declaracion -> . hashes
    (130) declaracion -> . estructura_if
    (131) declaracion -> . asignacion_clase
    (132) declaracion -> . sentencia_while
    (133) declaracion -> . estructura_ifUnaLinea
    (104) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (105) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (58) impresion -> . valor_print valores
    (85) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (86) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (87) impresion_vacia -> . PUTS
    (97) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (98) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (99) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (102) solicitudDatosTeclado -> . GETS
    (103) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (141) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (142) hashes -> . LLAVE_IZ LLAVE_DER
    (118) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (119) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (134) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (135) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (120) estructura_ifUnaLinea -> . IF condicionIf declaracion END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    DEF             shift and go to state 38
    VARIABLECLASE   shift and go to state 117
    VARIABLE        shift and go to state 277
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    GETS            shift and go to state 35
    LLAVE_IZ        shift and go to state 36
    IF              shift and go to state 116
    WHILE           shift and go to state 40
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 46
    ENTERO          shift and go to state 47

    cuerpoVariables                shift and go to state 271
    cuerpoClase                    shift and go to state 272
    declaracion                    shift and go to state 273
    funciones                      shift and go to state 274
    asignacion_clase               shift and go to state 275
    asignacion                     shift and go to state 276
    operacionAritmetica            shift and go to state 104
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    sentencia_while                shift and go to state 113
    estructura_ifUnaLinea          shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 33
    valorNumerico                  shift and go to state 34

state 271

    (159) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 159 (cuerpoClase -> cuerpoVariables .)


state 272

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 278


state 273

    (160) cuerpoClase -> declaracion .

    END             reduce using rule 160 (cuerpoClase -> declaracion .)


state 274

    (161) cuerpoClase -> funciones .

    END             reduce using rule 161 (cuerpoClase -> funciones .)


state 275

    (155) cuerpoVariables -> asignacion_clase .
    (157) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (131) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 131 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 219
    END             reduce using rule 131 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 155 (cuerpoVariables -> asignacion_clase .) ]


state 276

    (156) cuerpoVariables -> asignacion .
    (158) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (124) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 124 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 220
    END             reduce using rule 124 (declaracion -> asignacion .)

  ! END             [ reduce using rule 156 (cuerpoVariables -> asignacion .) ]


state 277

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (99) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (100) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (88) operadoresComparacion -> . IGUAL_DOBLEP
    (89) operadoresComparacion -> . NAVE
    (90) operadoresComparacion -> . DIFERENTE
    (91) operadoresComparacion -> . MAYOR_QUE
    (92) operadoresComparacion -> . MENOR_QUE
    (93) operadoresComparacion -> . MENOR_IGUAL_QUE
    (94) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 221
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 61
    NAVE            shift and go to state 62
    DIFERENTE       shift and go to state 63
    MAYOR_QUE       shift and go to state 64
    MENOR_QUE       shift and go to state 65
    MENOR_IGUAL_QUE shift and go to state 66
    MAYOR_IGUAL_QUE shift and go to state 67

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 59

state 278

    (154) definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 154 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 154 (definicion_clase -> encabezadoClase NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 26 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 26 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 92 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 92 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 92 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 92 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 92 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 92 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 92 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 115 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 115 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 115 resolved as shift
WARNING: shift/reduce conflict for MAS in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 124 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 124 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 124 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 124 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 179 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 180 resolved as shift
WARNING: shift/reduce conflict for END in state 207 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 277 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 277 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 277 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 277 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 277 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 277 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 277 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 26
WARNING: reduce/reduce conflict in state 128 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 128
WARNING: reduce/reduce conflict in state 144 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 144
WARNING: reduce/reduce conflict in state 210 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 210
WARNING: reduce/reduce conflict in state 240 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 240
WARNING: reduce/reduce conflict in state 275 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 275
WARNING: reduce/reduce conflict in state 276 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 276
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
