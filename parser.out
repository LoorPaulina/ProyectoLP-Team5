Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    DOBLE_IGUAL
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    TRUE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> comparacion_simbolo
Rule 3     cuerpo -> input_concatenacion
Rule 4     cuerpo -> asignacion
Rule 5     cuerpo -> impresion
Rule 6     cuerpo -> impresion_vacia
Rule 7     cuerpo -> expresiones_booleanas
Rule 8     cuerpo -> solicitudDatosTeclado
Rule 9     cuerpo -> hashes
Rule 10    cuerpo -> estructura_if
Rule 11    cuerpo -> funciones
Rule 12    cuerpo -> funcionesEstructuras
Rule 13    cuerpo -> array
Rule 14    cuerpo -> each_array
Rule 15    cuerpo -> comentarios
Rule 16    cuerpo -> each_hash
Rule 17    cuerpo -> sentencia_while
Rule 18    cuerpo -> sentencia_case
Rule 19    cuerpo -> sentencias_when
Rule 20    cuerpo -> sentencia_until
Rule 21    cuerpo -> definicion_clase
Rule 22    valorSimbolo -> SIMBOLO
Rule 23    valorSimbolo -> VARIABLE
Rule 24    comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo
Rule 25    comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo
Rule 26    input_concatenacion -> concatenacionSimpleCadena
Rule 27    input_concatenacion -> concatenacion_funcion
Rule 28    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 29    valorCadena -> CADENA
Rule 30    valorCadena -> VARIABLE
Rule 31    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 32    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 33    valorNumerico -> FLOTANTE
Rule 34    valorNumerico -> ENTERO
Rule 35    soloEnteros -> ENTERO
Rule 36    operadores -> MAS
Rule 37    operadores -> MENOS
Rule 38    operadores -> DIVISION
Rule 39    operadores -> MULTIPLICACION
Rule 40    operadores -> EXPONENCIACION
Rule 41    operadores -> MODULO
Rule 42    expresionNumerica -> valorNumerico
Rule 43    expresionNumerica -> operacionAritmetica
Rule 44    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 45    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 46    valor_print -> PRINT
Rule 47    valor_print -> PUTS
Rule 48    valores -> valor
Rule 49    valores -> valor COMA valores
Rule 50    valores -> valor estructura_ifUnaLinea
Rule 51    valor -> CADENA
Rule 52    valor -> valorNumerico
Rule 53    valor -> VARIABLE
Rule 54    valor -> VARIABLECLASE
Rule 55    valor -> SIMBOLO
Rule 56    impresion -> valor_print valores
Rule 57    asignacion -> VARIABLE IGUAL CADENA
Rule 58    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 59    asignacion -> VARIABLE IGUAL hashes
Rule 60    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 61    asignacion -> VARIABLE IGUAL array
Rule 62    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 63    elementos_array -> elemento_array COMA elementos_array
Rule 64    elementos_array -> elemento_array
Rule 65    elemento_array -> CADENA
Rule 66    elemento_array -> ENTERO
Rule 67    elemento_array -> FLOTANTE
Rule 68    elemento_array -> array
Rule 69    elemento_array -> VARIABLE
Rule 70    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 71    array -> CORCHETE_IZ CORCHETE_DER
Rule 72    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 73    cuerpo_each -> cuerpo
Rule 74    cuerpo_each -> vacio
Rule 75    vacio -> <empty>
Rule 76    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 77    comentarios -> COMENTARIO
Rule 78    comentarios -> COMENTARIO_MULTI
Rule 79    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 80    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 81    impresion_vacia -> PUTS
Rule 82    operadoresComparacion -> IGUAL_DOBLEP
Rule 83    operadoresComparacion -> DIFERENTE
Rule 84    operadoresComparacion -> MAYOR_QUE
Rule 85    operadoresComparacion -> MENOR_QUE
Rule 86    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 87    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 88    funcionesComparacion -> AND
Rule 89    funcionesComparacion -> OR
Rule 90    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 91    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 92    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 93    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 94    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 95    solicitudDatosTeclado -> GETS
Rule 96    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 97    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
Rule 98    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
Rule 99    funcionesArray -> SORT
Rule 100   funcionesArray -> FOR EACH
Rule 101   funcionesFormatoImpresion -> CHOMP
Rule 102   funcionesNumeros -> TO_F
Rule 103   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 104   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 105   argumentos -> VARIABLE
Rule 106   argumentos -> VARIABLE COMA argumentos
Rule 107   condicionIf -> expresiones_booleanas
Rule 108   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 109   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 110   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 111   estructura_ifUnaLinea -> IF condicionIf
Rule 112   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 113   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 114   declaracion -> operacionAritmetica
Rule 115   declaracion -> asignacion
Rule 116   declaracion -> impresion
Rule 117   declaracion -> impresion_vacia
Rule 118   declaracion -> expresiones_booleanas
Rule 119   declaracion -> solicitudDatosTeclado
Rule 120   declaracion -> hashes
Rule 121   declaracion -> estructura_if
Rule 122   sentencia_while -> WHILE declaracion DO sentencia_while END
Rule 123   sentencia_while -> WHILE declaracion DO declaracion END
Rule 124   sentencia_case -> CASE declaracion sentencia_when END
Rule 125   sentencias_when -> sentencia_when
Rule 126   sentencias_when -> sentencia_when sentencias_when
Rule 127   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 128   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 129   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 130   hashes -> LLAVE_IZ LLAVE_DER
Rule 131   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 132   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 133   elemento_hash -> claveValor
Rule 134   elemento_hash -> claveValor COMA claveValor
Rule 135   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 136   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 137   each_args_hash -> VARIABLE BARRA
Rule 138   definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

Terminals, with rules where they appear

ALIAS                : 
AND                  : 88
ASIGNA_HASH          : 131 132
BARRA                : 72 72 135 136 137
BEGIN                : 
BREAK                : 
CADENA               : 29 51 57 65 132
CASE                 : 124
CHOMP                : 101
CLASS                : 138
COMA                 : 49 63 106 134 136
COMENTARIO           : 77
COMENTARIO_MULTI     : 78
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 28
CORCHETE_DER         : 70 71
CORCHETE_IZ          : 70 71
DEF                  : 97 98 138
DEFINED_QUESTION     : 
DIFERENTE            : 25 83
DIVISION             : 38
DO                   : 72 122 123 128 135
DOBLE_IGUAL          : 
EACH                 : 100 135
ELSE                 : 109 112
ELSEIF               : 112 113
END                  : 72 97 98 109 112 122 123 124 128 135
ENSURE               : 
ENTERO               : 34 35 66 91
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 40
FALSE                : 
FLOTANTE             : 33 67
FOR                  : 100
GETS                 : 95 96
ID_CLASE             : 138
IF                   : 109 110 111
IGUAL                : 57 58 59 60 61 62
IGUAL_DOBLEP         : 24 82 127
IN                   : 
INITIALIZE           : 138
LLAVE_DER            : 129 130
LLAVE_IZ             : 129 130
MAS                  : 31 32 36
MAYOR_IGUAL_QUE      : 87
MAYOR_QUE            : 84
MENOR_IGUAL_QUE      : 86
MENOR_QUE            : 85
MENOS                : 37
MODULE               : 
MODULO               : 41
MULTIPLICACION       : 39
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 89
O_SIGNO              : 
PARENTESIS_DER       : 28 44 76 79 80 97 98 138
PARENTESIS_IZ        : 28 44 76 79 80 97 98 138
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 46 79
PRINTF               : 
PUNTO                : 28 72 96 103 104 135
PUTS                 : 47 80 81
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 22 55 60
SORT                 : 99
SUPER                : 
TO_F                 : 102
TRES_PUNTOS          : 76
TRIPLE_IGUAL         : 91
TRUE                 : 
UNTIL                : 128
VARIABLE             : 23 28 30 53 57 58 59 60 61 62 69 72 72 92 92 93 94 97 98 103 104 105 106 131 132 135 136 136 137
VARIABLECLASE        : 54
WHEN                 : 127
WHILE                : 122 123
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 98 106 138
array                : 13 61 68
asignacion           : 4 115
claveValor           : 133 134 134
comentarios          : 15
comparacion_simbolo  : 2
concatenacionSimpleCadena : 26 32
concatenacion_funcion : 27
condicionIf          : 109 110 111 112 113
cuerpo               : 73 0
cuerpo_each          : 72
declaracion          : 109 109 110 112 112 113 122 123 123 124 127 127 128 128 135
definicion_clase     : 21
each_args_hash       : 135
each_array           : 14
each_hash            : 16
elemento_array       : 63 64
elemento_hash        : 129
elementos_array      : 63 70
estructura_if        : 10 121
estructura_ifUnaLinea : 50
estructura_secundaria_if : 110 113
expresionNumerica    : 45 45 58
expresiones_booleanas : 7 107 108 108 118
funciones            : 11
funcionesArray       : 103
funcionesComparacion : 108
funcionesEstructuras : 12
funcionesFormatoImpresion : 96
funcionesNumeros     : 104
hashes               : 9 59 120
impresion            : 5 116
impresion_vacia      : 6 117
input_concatenacion  : 3 62
operacionAritmetica  : 1 43 44 114
operadores           : 45
operadoresComparacion : 90 92 93 94
rangos               : 91
sentencia_case       : 18
sentencia_until      : 20
sentencia_when       : 124 125 126
sentencia_while      : 17 122
sentencias_when      : 19 126
solicitudDatosTeclado : 8 119
soloEnteros          : 76 76
vacio                : 74
valor                : 48 49 50
valorCadena          : 28 31 31 32
valorNumerico        : 42 52 90 90 93 94 131
valorSimbolo         : 24 24 25 25
valor_print          : 56
valores              : 49 56

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . comparacion_simbolo
    (3) cuerpo -> . input_concatenacion
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . impresion
    (6) cuerpo -> . impresion_vacia
    (7) cuerpo -> . expresiones_booleanas
    (8) cuerpo -> . solicitudDatosTeclado
    (9) cuerpo -> . hashes
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . comentarios
    (16) cuerpo -> . each_hash
    (17) cuerpo -> . sentencia_while
    (18) cuerpo -> . sentencia_case
    (19) cuerpo -> . sentencias_when
    (20) cuerpo -> . sentencia_until
    (21) cuerpo -> . definicion_clase
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) comparacion_simbolo -> . valorSimbolo IGUAL_DOBLEP valorSimbolo
    (25) comparacion_simbolo -> . valorSimbolo DIFERENTE valorSimbolo
    (26) input_concatenacion -> . concatenacionSimpleCadena
    (27) input_concatenacion -> . concatenacion_funcion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (97) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (98) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (103) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (104) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (70) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (71) array -> . CORCHETE_IZ CORCHETE_DER
    (72) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (77) comentarios -> . COMENTARIO
    (78) comentarios -> . COMENTARIO_MULTI
    (135) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (122) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (123) sentencia_while -> . WHILE declaracion DO declaracion END
    (124) sentencia_case -> . CASE declaracion sentencia_when END
    (125) sentencias_when -> . sentencia_when
    (126) sentencias_when -> . sentencia_when sentencias_when
    (128) sentencia_until -> . UNTIL declaracion DO declaracion END
    (138) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (32) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (28) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (127) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 27
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    CLASS           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 32
    SIMBOLO         shift and go to state 29
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CADENA          shift and go to state 28

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    comparacion_simbolo            shift and go to state 3
    input_concatenacion            shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    impresion_vacia                shift and go to state 7
    expresiones_booleanas          shift and go to state 8
    solicitudDatosTeclado          shift and go to state 9
    hashes                         shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    comentarios                    shift and go to state 16
    each_hash                      shift and go to state 17
    sentencia_while                shift and go to state 18
    sentencia_case                 shift and go to state 19
    sentencias_when                shift and go to state 20
    sentencia_until                shift and go to state 21
    definicion_clase               shift and go to state 22
    expresionNumerica              shift and go to state 23
    valorSimbolo                   shift and go to state 24
    concatenacionSimpleCadena      shift and go to state 25
    concatenacion_funcion          shift and go to state 26
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    valorCadena                    shift and go to state 49

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (43) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 43 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> comparacion_simbolo .

    $end            reduce using rule 2 (cuerpo -> comparacion_simbolo .)
    END             reduce using rule 2 (cuerpo -> comparacion_simbolo .)


state 4

    (3) cuerpo -> input_concatenacion .

    $end            reduce using rule 3 (cuerpo -> input_concatenacion .)
    END             reduce using rule 3 (cuerpo -> input_concatenacion .)


state 5

    (4) cuerpo -> asignacion .

    $end            reduce using rule 4 (cuerpo -> asignacion .)
    END             reduce using rule 4 (cuerpo -> asignacion .)


state 6

    (5) cuerpo -> impresion .

    $end            reduce using rule 5 (cuerpo -> impresion .)
    END             reduce using rule 5 (cuerpo -> impresion .)


state 7

    (6) cuerpo -> impresion_vacia .

    $end            reduce using rule 6 (cuerpo -> impresion_vacia .)
    END             reduce using rule 6 (cuerpo -> impresion_vacia .)


state 8

    (7) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 7 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 7 (cuerpo -> expresiones_booleanas .)


state 9

    (8) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 8 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 8 (cuerpo -> solicitudDatosTeclado .)


state 10

    (9) cuerpo -> hashes .

    $end            reduce using rule 9 (cuerpo -> hashes .)
    END             reduce using rule 9 (cuerpo -> hashes .)


state 11

    (10) cuerpo -> estructura_if .

    $end            reduce using rule 10 (cuerpo -> estructura_if .)
    END             reduce using rule 10 (cuerpo -> estructura_if .)


state 12

    (11) cuerpo -> funciones .

    $end            reduce using rule 11 (cuerpo -> funciones .)
    END             reduce using rule 11 (cuerpo -> funciones .)


state 13

    (12) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 12 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 12 (cuerpo -> funcionesEstructuras .)


state 14

    (13) cuerpo -> array .

    $end            reduce using rule 13 (cuerpo -> array .)
    END             reduce using rule 13 (cuerpo -> array .)


state 15

    (14) cuerpo -> each_array .

    $end            reduce using rule 14 (cuerpo -> each_array .)
    END             reduce using rule 14 (cuerpo -> each_array .)


state 16

    (15) cuerpo -> comentarios .

    $end            reduce using rule 15 (cuerpo -> comentarios .)
    END             reduce using rule 15 (cuerpo -> comentarios .)


state 17

    (16) cuerpo -> each_hash .

    $end            reduce using rule 16 (cuerpo -> each_hash .)
    END             reduce using rule 16 (cuerpo -> each_hash .)


state 18

    (17) cuerpo -> sentencia_while .

    $end            reduce using rule 17 (cuerpo -> sentencia_while .)
    END             reduce using rule 17 (cuerpo -> sentencia_while .)


state 19

    (18) cuerpo -> sentencia_case .

    $end            reduce using rule 18 (cuerpo -> sentencia_case .)
    END             reduce using rule 18 (cuerpo -> sentencia_case .)


state 20

    (19) cuerpo -> sentencias_when .

    $end            reduce using rule 19 (cuerpo -> sentencias_when .)
    END             reduce using rule 19 (cuerpo -> sentencias_when .)


state 21

    (20) cuerpo -> sentencia_until .

    $end            reduce using rule 20 (cuerpo -> sentencia_until .)
    END             reduce using rule 20 (cuerpo -> sentencia_until .)


state 22

    (21) cuerpo -> definicion_clase .

    $end            reduce using rule 21 (cuerpo -> definicion_clase .)
    END             reduce using rule 21 (cuerpo -> definicion_clase .)


state 23

    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (36) operadores -> . MAS
    (37) operadores -> . MENOS
    (38) operadores -> . DIVISION
    (39) operadores -> . MULTIPLICACION
    (40) operadores -> . EXPONENCIACION
    (41) operadores -> . MODULO

    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

    operadores                     shift and go to state 52

state 24

    (24) comparacion_simbolo -> valorSimbolo . IGUAL_DOBLEP valorSimbolo
    (25) comparacion_simbolo -> valorSimbolo . DIFERENTE valorSimbolo

    IGUAL_DOBLEP    shift and go to state 59
    DIFERENTE       shift and go to state 60


state 25

    (26) input_concatenacion -> concatenacionSimpleCadena .
    (32) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 26 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 61


state 26

    (27) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 27 (input_concatenacion -> concatenacion_funcion .)


state 27

    (57) asignacion -> VARIABLE . IGUAL CADENA
    (58) asignacion -> VARIABLE . IGUAL expresionNumerica
    (59) asignacion -> VARIABLE . IGUAL hashes
    (60) asignacion -> VARIABLE . IGUAL SIMBOLO
    (61) asignacion -> VARIABLE . IGUAL array
    (62) asignacion -> VARIABLE . IGUAL input_concatenacion
    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (103) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (104) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (72) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (135) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (23) valorSimbolo -> VARIABLE .
    (28) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> VARIABLE .
    (82) operadoresComparacion -> . IGUAL_DOBLEP
    (83) operadoresComparacion -> . DIFERENTE
    (84) operadoresComparacion -> . MAYOR_QUE
    (85) operadoresComparacion -> . MENOR_QUE
    (86) operadoresComparacion -> . MENOR_IGUAL_QUE
    (87) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
    IGUAL           shift and go to state 62
    PUNTO           shift and go to state 64
    MAS             reduce using rule 30 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    MENOR_IGUAL_QUE shift and go to state 69
    MAYOR_IGUAL_QUE shift and go to state 70

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 63

state 28

    (29) valorCadena -> CADENA .

    MAS             reduce using rule 29 (valorCadena -> CADENA .)
    $end            reduce using rule 29 (valorCadena -> CADENA .)
    DO              reduce using rule 29 (valorCadena -> CADENA .)
    WHEN            reduce using rule 29 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 29 (valorCadena -> CADENA .)
    ELSE            reduce using rule 29 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 29 (valorCadena -> CADENA .)
    END             reduce using rule 29 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 29 (valorCadena -> CADENA .)


state 29

    (22) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 22 (valorSimbolo -> SIMBOLO .)


state 30

    (56) impresion -> valor_print . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (51) valor -> . CADENA
    (52) valor -> . valorNumerico
    (53) valor -> . VARIABLE
    (54) valor -> . VARIABLECLASE
    (55) valor -> . SIMBOLO
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 75
    VARIABLECLASE   shift and go to state 76
    SIMBOLO         shift and go to state 77
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valores                        shift and go to state 71
    valor                          shift and go to state 72
    valorNumerico                  shift and go to state 74

state 31

    (79) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (46) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 78
    CADENA          reduce using rule 46 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 46 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 46 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 46 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 46 (valor_print -> PRINT .)
    ENTERO          reduce using rule 46 (valor_print -> PRINT .)


state 32

    (44) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (76) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (35) soloEnteros -> . ENTERO
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 82
    PARENTESIS_IZ   shift and go to state 79
    FLOTANTE        shift and go to state 50

    operacionAritmetica            shift and go to state 80
    soloEnteros                    shift and go to state 81
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 83

state 33

    (80) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> PUTS .
    (47) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 84
    $end            reduce using rule 81 (impresion_vacia -> PUTS .)
    DO              reduce using rule 81 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 81 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 81 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 81 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 81 (impresion_vacia -> PUTS .)
    END             reduce using rule 81 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 47 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 47 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 47 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 47 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 47 (valor_print -> PUTS .)
    ENTERO          reduce using rule 47 (valor_print -> PUTS .)


state 34

    (90) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (42) expresionNumerica -> valorNumerico .
    (82) operadoresComparacion -> . IGUAL_DOBLEP
    (83) operadoresComparacion -> . DIFERENTE
    (84) operadoresComparacion -> . MAYOR_QUE
    (85) operadoresComparacion -> . MENOR_QUE
    (86) operadoresComparacion -> . MENOR_IGUAL_QUE
    (87) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 42 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 42 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    MENOR_IGUAL_QUE shift and go to state 69
    MAYOR_IGUAL_QUE shift and go to state 70

    operadoresComparacion          shift and go to state 85

state 35

    (91) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 86


state 36

    (34) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 34 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 34 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 34 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 34 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 34 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 34 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 34 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 34 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 34 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 34 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 34 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 34 (valorNumerico -> ENTERO .)
    IF              reduce using rule 34 (valorNumerico -> ENTERO .)
    $end            reduce using rule 34 (valorNumerico -> ENTERO .)
    DO              reduce using rule 34 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 34 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 34 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 34 (valorNumerico -> ENTERO .)
    END             reduce using rule 34 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 34 (valorNumerico -> ENTERO .)
    AND             reduce using rule 34 (valorNumerico -> ENTERO .)
    OR              reduce using rule 34 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 34 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 34 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 34 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 34 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 34 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 34 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 34 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 34 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 34 (valorNumerico -> ENTERO .)


state 37

    (95) solicitudDatosTeclado -> GETS .
    (96) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 95 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 87


state 38

    (129) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (130) hashes -> LLAVE_IZ . LLAVE_DER
    (133) elemento_hash -> . claveValor
    (134) elemento_hash -> . claveValor COMA claveValor
    (131) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (132) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 89
    VARIABLE        shift and go to state 91

    elemento_hash                  shift and go to state 88
    claveValor                     shift and go to state 90

state 39

    (109) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (107) condicionIf -> . expresiones_booleanas
    (108) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 95
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 96

    condicionIf                    shift and go to state 92
    expresiones_booleanas          shift and go to state 93
    valorNumerico                  shift and go to state 94
    rangos                         shift and go to state 35

state 40

    (97) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (98) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END

    VARIABLE        shift and go to state 97


state 41

    (70) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (71) array -> CORCHETE_IZ . CORCHETE_DER
    (63) elementos_array -> . elemento_array COMA elementos_array
    (64) elementos_array -> . elemento_array
    (65) elemento_array -> . CADENA
    (66) elemento_array -> . ENTERO
    (67) elemento_array -> . FLOTANTE
    (68) elemento_array -> . array
    (69) elemento_array -> . VARIABLE
    (70) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (71) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 99
    CADENA          shift and go to state 101
    ENTERO          shift and go to state 102
    FLOTANTE        shift and go to state 103
    VARIABLE        shift and go to state 105
    CORCHETE_IZ     shift and go to state 41

    elementos_array                shift and go to state 98
    elemento_array                 shift and go to state 100
    array                          shift and go to state 104

state 42

    (77) comentarios -> COMENTARIO .

    $end            reduce using rule 77 (comentarios -> COMENTARIO .)
    END             reduce using rule 77 (comentarios -> COMENTARIO .)


state 43

    (78) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 78 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 78 (comentarios -> COMENTARIO_MULTI .)


state 44

    (122) sentencia_while -> WHILE . declaracion DO sentencia_while END
    (123) sentencia_while -> WHILE . declaracion DO declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 45

    (124) sentencia_case -> CASE . declaracion sentencia_when END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 116
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 46

    (125) sentencias_when -> sentencia_when .
    (126) sentencias_when -> sentencia_when . sentencias_when
    (125) sentencias_when -> . sentencia_when
    (126) sentencias_when -> . sentencia_when sentencias_when
    (127) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 125 (sentencias_when -> sentencia_when .)
    END             reduce using rule 125 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 117

state 47

    (128) sentencia_until -> UNTIL . declaracion DO declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 118
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 48

    (138) definicion_clase -> CLASS . ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    ID_CLASE        shift and go to state 119


state 49

    (31) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 120


state 50

    (33) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 33 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 33 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 33 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 33 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 33 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 33 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 33 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 33 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 33 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 33 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 33 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 33 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 33 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 33 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 33 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 33 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 33 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 33 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 33 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 33 (valorNumerico -> FLOTANTE .)


state 51

    (127) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 121
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 52

    (45) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 79
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    expresionNumerica              shift and go to state 122
    valorNumerico                  shift and go to state 83
    operacionAritmetica            shift and go to state 123

state 53

    (36) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MAS .)
    FLOTANTE        reduce using rule 36 (operadores -> MAS .)
    ENTERO          reduce using rule 36 (operadores -> MAS .)


state 54

    (37) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 37 (operadores -> MENOS .)
    ENTERO          reduce using rule 37 (operadores -> MENOS .)


state 55

    (38) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 38 (operadores -> DIVISION .)
    ENTERO          reduce using rule 38 (operadores -> DIVISION .)


state 56

    (39) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 39 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 39 (operadores -> MULTIPLICACION .)


state 57

    (40) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 40 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 40 (operadores -> EXPONENCIACION .)


state 58

    (41) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 41 (operadores -> MODULO .)
    ENTERO          reduce using rule 41 (operadores -> MODULO .)


state 59

    (24) comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 29
    VARIABLE        shift and go to state 125

    valorSimbolo                   shift and go to state 124

state 60

    (25) comparacion_simbolo -> valorSimbolo DIFERENTE . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 29
    VARIABLE        shift and go to state 125

    valorSimbolo                   shift and go to state 126

state 61

    (32) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    CADENA          shift and go to state 28
    VARIABLE        shift and go to state 128

    valorCadena                    shift and go to state 127

state 62

    (57) asignacion -> VARIABLE IGUAL . CADENA
    (58) asignacion -> VARIABLE IGUAL . expresionNumerica
    (59) asignacion -> VARIABLE IGUAL . hashes
    (60) asignacion -> VARIABLE IGUAL . SIMBOLO
    (61) asignacion -> VARIABLE IGUAL . array
    (62) asignacion -> VARIABLE IGUAL . input_concatenacion
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (70) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (71) array -> . CORCHETE_IZ CORCHETE_DER
    (26) input_concatenacion -> . concatenacionSimpleCadena
    (27) input_concatenacion -> . concatenacion_funcion
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (31) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (32) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (28) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    CADENA          shift and go to state 130
    SIMBOLO         shift and go to state 133
    PARENTESIS_IZ   shift and go to state 79
    LLAVE_IZ        shift and go to state 38
    CORCHETE_IZ     shift and go to state 41
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    VARIABLE        shift and go to state 129

    expresionNumerica              shift and go to state 131
    hashes                         shift and go to state 132
    array                          shift and go to state 134
    input_concatenacion            shift and go to state 135
    valorNumerico                  shift and go to state 83
    operacionAritmetica            shift and go to state 123
    concatenacionSimpleCadena      shift and go to state 25
    concatenacion_funcion          shift and go to state 26
    valorCadena                    shift and go to state 49

state 63

    (92) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (93) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 136
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 137

state 64

    (103) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (104) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (72) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (135) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (28) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (99) funcionesArray -> . SORT
    (100) funcionesArray -> . FOR EACH
    (102) funcionesNumeros -> . TO_F

    DO              shift and go to state 140
    EACH            shift and go to state 141
    CONCAT          shift and go to state 142
    SORT            shift and go to state 143
    FOR             shift and go to state 144
    TO_F            shift and go to state 145

    funcionesArray                 shift and go to state 138
    funcionesNumeros               shift and go to state 139

state 65

    (82) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 82 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 82 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 82 (operadoresComparacion -> IGUAL_DOBLEP .)


state 66

    (83) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 83 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 83 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 83 (operadoresComparacion -> DIFERENTE .)


state 67

    (84) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 84 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 84 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 84 (operadoresComparacion -> MAYOR_QUE .)


state 68

    (85) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 85 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 85 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 85 (operadoresComparacion -> MENOR_QUE .)


state 69

    (86) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 86 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 86 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 86 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 70

    (87) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 87 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 87 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 87 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 71

    (56) impresion -> valor_print valores .

    $end            reduce using rule 56 (impresion -> valor_print valores .)
    DO              reduce using rule 56 (impresion -> valor_print valores .)
    WHEN            reduce using rule 56 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 56 (impresion -> valor_print valores .)
    ELSE            reduce using rule 56 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 56 (impresion -> valor_print valores .)
    END             reduce using rule 56 (impresion -> valor_print valores .)


state 72

    (48) valores -> valor .
    (49) valores -> valor . COMA valores
    (50) valores -> valor . estructura_ifUnaLinea
    (111) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 48 (valores -> valor .)
    DO              reduce using rule 48 (valores -> valor .)
    WHEN            reduce using rule 48 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 48 (valores -> valor .)
    ELSE            reduce using rule 48 (valores -> valor .)
    ELSEIF          reduce using rule 48 (valores -> valor .)
    END             reduce using rule 48 (valores -> valor .)
    COMA            shift and go to state 146
    IF              shift and go to state 148

    estructura_ifUnaLinea          shift and go to state 147

state 73

    (51) valor -> CADENA .

    COMA            reduce using rule 51 (valor -> CADENA .)
    IF              reduce using rule 51 (valor -> CADENA .)
    $end            reduce using rule 51 (valor -> CADENA .)
    DO              reduce using rule 51 (valor -> CADENA .)
    WHEN            reduce using rule 51 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 51 (valor -> CADENA .)
    ELSE            reduce using rule 51 (valor -> CADENA .)
    ELSEIF          reduce using rule 51 (valor -> CADENA .)
    END             reduce using rule 51 (valor -> CADENA .)


state 74

    (52) valor -> valorNumerico .

    COMA            reduce using rule 52 (valor -> valorNumerico .)
    IF              reduce using rule 52 (valor -> valorNumerico .)
    $end            reduce using rule 52 (valor -> valorNumerico .)
    DO              reduce using rule 52 (valor -> valorNumerico .)
    WHEN            reduce using rule 52 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 52 (valor -> valorNumerico .)
    ELSE            reduce using rule 52 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 52 (valor -> valorNumerico .)
    END             reduce using rule 52 (valor -> valorNumerico .)


state 75

    (53) valor -> VARIABLE .

    COMA            reduce using rule 53 (valor -> VARIABLE .)
    IF              reduce using rule 53 (valor -> VARIABLE .)
    $end            reduce using rule 53 (valor -> VARIABLE .)
    DO              reduce using rule 53 (valor -> VARIABLE .)
    WHEN            reduce using rule 53 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> VARIABLE .)
    ELSE            reduce using rule 53 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 53 (valor -> VARIABLE .)
    END             reduce using rule 53 (valor -> VARIABLE .)


state 76

    (54) valor -> VARIABLECLASE .

    COMA            reduce using rule 54 (valor -> VARIABLECLASE .)
    IF              reduce using rule 54 (valor -> VARIABLECLASE .)
    $end            reduce using rule 54 (valor -> VARIABLECLASE .)
    DO              reduce using rule 54 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 54 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 54 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 54 (valor -> VARIABLECLASE .)
    END             reduce using rule 54 (valor -> VARIABLECLASE .)


state 77

    (55) valor -> SIMBOLO .

    COMA            reduce using rule 55 (valor -> SIMBOLO .)
    IF              reduce using rule 55 (valor -> SIMBOLO .)
    $end            reduce using rule 55 (valor -> SIMBOLO .)
    DO              reduce using rule 55 (valor -> SIMBOLO .)
    WHEN            reduce using rule 55 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> SIMBOLO .)
    ELSE            reduce using rule 55 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 55 (valor -> SIMBOLO .)
    END             reduce using rule 55 (valor -> SIMBOLO .)


state 78

    (79) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 149


state 79

    (44) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 79
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    operacionAritmetica            shift and go to state 80
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 83

state 80

    (44) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (43) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 150
    MAS             reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 43 (expresionNumerica -> operacionAritmetica .)


state 81

    (76) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 151


state 82

    (35) soloEnteros -> ENTERO .
    (34) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 35 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 34 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 34 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 34 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 34 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 34 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 34 (valorNumerico -> ENTERO .)


state 83

    (42) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 42 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 42 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 42 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 42 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 42 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 42 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 42 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 42 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 42 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 42 (expresionNumerica -> valorNumerico .)


state 84

    (80) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 152


state 85

    (90) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (94) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 154
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 153

state 86

    (91) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 155


state 87

    (96) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (101) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 157

    funcionesFormatoImpresion      shift and go to state 156

state 88

    (129) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 158


state 89

    (130) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 130 (hashes -> LLAVE_IZ LLAVE_DER .)


state 90

    (133) elemento_hash -> claveValor .
    (134) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 133 (elemento_hash -> claveValor .)
    COMA            shift and go to state 159


state 91

    (131) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (132) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 160


state 92

    (109) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (110) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 161
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 93

    (107) condicionIf -> expresiones_booleanas .
    (108) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (88) funcionesComparacion -> . AND
    (89) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 107 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 163
    OR              shift and go to state 164

    funcionesComparacion           shift and go to state 162

state 94

    (90) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (82) operadoresComparacion -> . IGUAL_DOBLEP
    (83) operadoresComparacion -> . DIFERENTE
    (84) operadoresComparacion -> . MAYOR_QUE
    (85) operadoresComparacion -> . MENOR_QUE
    (86) operadoresComparacion -> . MENOR_IGUAL_QUE
    (87) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    MENOR_IGUAL_QUE shift and go to state 69
    MAYOR_IGUAL_QUE shift and go to state 70

    operadoresComparacion          shift and go to state 85

state 95

    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (82) operadoresComparacion -> . IGUAL_DOBLEP
    (83) operadoresComparacion -> . DIFERENTE
    (84) operadoresComparacion -> . MAYOR_QUE
    (85) operadoresComparacion -> . MENOR_QUE
    (86) operadoresComparacion -> . MENOR_IGUAL_QUE
    (87) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    MENOR_IGUAL_QUE shift and go to state 69
    MAYOR_IGUAL_QUE shift and go to state 70

    operadoresComparacion          shift and go to state 63

state 96

    (76) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (35) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 165

    soloEnteros                    shift and go to state 81

state 97

    (97) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER END
    (98) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER END

    PARENTESIS_IZ   shift and go to state 166


state 98

    (70) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 167


state 99

    (71) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 71 (array -> CORCHETE_IZ CORCHETE_DER .)


state 100

    (63) elementos_array -> elemento_array . COMA elementos_array
    (64) elementos_array -> elemento_array .

    COMA            shift and go to state 168
    CORCHETE_DER    reduce using rule 64 (elementos_array -> elemento_array .)


state 101

    (65) elemento_array -> CADENA .

    COMA            reduce using rule 65 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 65 (elemento_array -> CADENA .)


state 102

    (66) elemento_array -> ENTERO .

    COMA            reduce using rule 66 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 66 (elemento_array -> ENTERO .)


state 103

    (67) elemento_array -> FLOTANTE .

    COMA            reduce using rule 67 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 67 (elemento_array -> FLOTANTE .)


state 104

    (68) elemento_array -> array .

    COMA            reduce using rule 68 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 68 (elemento_array -> array .)


state 105

    (69) elemento_array -> VARIABLE .

    COMA            reduce using rule 69 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 69 (elemento_array -> VARIABLE .)


state 106

    (122) sentencia_while -> WHILE declaracion . DO sentencia_while END
    (123) sentencia_while -> WHILE declaracion . DO declaracion END

    DO              shift and go to state 169


state 107

    (114) declaracion -> operacionAritmetica .
    (43) expresionNumerica -> operacionAritmetica .

    DO              reduce using rule 114 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 114 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 114 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 114 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 114 (declaracion -> operacionAritmetica .)
    END             reduce using rule 114 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 114 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 43 (expresionNumerica -> operacionAritmetica .)


state 108

    (115) declaracion -> asignacion .

    DO              reduce using rule 115 (declaracion -> asignacion .)
    WHEN            reduce using rule 115 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 115 (declaracion -> asignacion .)
    ELSE            reduce using rule 115 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 115 (declaracion -> asignacion .)
    END             reduce using rule 115 (declaracion -> asignacion .)
    $end            reduce using rule 115 (declaracion -> asignacion .)


state 109

    (116) declaracion -> impresion .

    DO              reduce using rule 116 (declaracion -> impresion .)
    WHEN            reduce using rule 116 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 116 (declaracion -> impresion .)
    ELSE            reduce using rule 116 (declaracion -> impresion .)
    ELSEIF          reduce using rule 116 (declaracion -> impresion .)
    END             reduce using rule 116 (declaracion -> impresion .)
    $end            reduce using rule 116 (declaracion -> impresion .)


state 110

    (117) declaracion -> impresion_vacia .

    DO              reduce using rule 117 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 117 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 117 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 117 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 117 (declaracion -> impresion_vacia .)
    END             reduce using rule 117 (declaracion -> impresion_vacia .)
    $end            reduce using rule 117 (declaracion -> impresion_vacia .)


state 111

    (118) declaracion -> expresiones_booleanas .

    DO              reduce using rule 118 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 118 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 118 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 118 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 118 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 118 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 118 (declaracion -> expresiones_booleanas .)


state 112

    (119) declaracion -> solicitudDatosTeclado .

    DO              reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 119 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 119 (declaracion -> solicitudDatosTeclado .)


state 113

    (120) declaracion -> hashes .

    DO              reduce using rule 120 (declaracion -> hashes .)
    WHEN            reduce using rule 120 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 120 (declaracion -> hashes .)
    ELSE            reduce using rule 120 (declaracion -> hashes .)
    ELSEIF          reduce using rule 120 (declaracion -> hashes .)
    END             reduce using rule 120 (declaracion -> hashes .)
    $end            reduce using rule 120 (declaracion -> hashes .)


state 114

    (121) declaracion -> estructura_if .

    DO              reduce using rule 121 (declaracion -> estructura_if .)
    WHEN            reduce using rule 121 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 121 (declaracion -> estructura_if .)
    ELSE            reduce using rule 121 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 121 (declaracion -> estructura_if .)
    END             reduce using rule 121 (declaracion -> estructura_if .)
    $end            reduce using rule 121 (declaracion -> estructura_if .)


state 115

    (57) asignacion -> VARIABLE . IGUAL CADENA
    (58) asignacion -> VARIABLE . IGUAL expresionNumerica
    (59) asignacion -> VARIABLE . IGUAL hashes
    (60) asignacion -> VARIABLE . IGUAL SIMBOLO
    (61) asignacion -> VARIABLE . IGUAL array
    (62) asignacion -> VARIABLE . IGUAL input_concatenacion
    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (82) operadoresComparacion -> . IGUAL_DOBLEP
    (83) operadoresComparacion -> . DIFERENTE
    (84) operadoresComparacion -> . MAYOR_QUE
    (85) operadoresComparacion -> . MENOR_QUE
    (86) operadoresComparacion -> . MENOR_IGUAL_QUE
    (87) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 62
    IGUAL_DOBLEP    shift and go to state 65
    DIFERENTE       shift and go to state 66
    MAYOR_QUE       shift and go to state 67
    MENOR_QUE       shift and go to state 68
    MENOR_IGUAL_QUE shift and go to state 69
    MAYOR_IGUAL_QUE shift and go to state 70

    operadoresComparacion          shift and go to state 63

state 116

    (124) sentencia_case -> CASE declaracion . sentencia_when END
    (127) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 51

    sentencia_when                 shift and go to state 170

state 117

    (126) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 126 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 126 (sentencias_when -> sentencia_when sentencias_when .)


state 118

    (128) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 171


state 119

    (138) definicion_clase -> CLASS ID_CLASE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    DEF             shift and go to state 172


state 120

    (31) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    CADENA          shift and go to state 28
    VARIABLE        shift and go to state 128

    valorCadena                    shift and go to state 173

state 121

    (127) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 174


state 122

    (45) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (36) operadores -> . MAS
    (37) operadores -> . MENOS
    (38) operadores -> . DIVISION
    (39) operadores -> . MULTIPLICACION
    (40) operadores -> . EXPONENCIACION
    (41) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

  ! MAS             [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 52

state 123

    (43) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 43 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 43 (expresionNumerica -> operacionAritmetica .)


state 124

    (24) comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .

    $end            reduce using rule 24 (comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .)
    END             reduce using rule 24 (comparacion_simbolo -> valorSimbolo IGUAL_DOBLEP valorSimbolo .)


state 125

    (23) valorSimbolo -> VARIABLE .

    $end            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 23 (valorSimbolo -> VARIABLE .)


state 126

    (25) comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .

    $end            reduce using rule 25 (comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .)
    END             reduce using rule 25 (comparacion_simbolo -> valorSimbolo DIFERENTE valorSimbolo .)


state 127

    (32) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 32 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 128

    (30) valorCadena -> VARIABLE .

    MAS             reduce using rule 30 (valorCadena -> VARIABLE .)
    $end            reduce using rule 30 (valorCadena -> VARIABLE .)
    DO              reduce using rule 30 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 30 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 30 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 30 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 30 (valorCadena -> VARIABLE .)
    END             reduce using rule 30 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 30 (valorCadena -> VARIABLE .)


state 129

    (28) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (30) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 175
    MAS             reduce using rule 30 (valorCadena -> VARIABLE .)


state 130

    (57) asignacion -> VARIABLE IGUAL CADENA .
    (29) valorCadena -> CADENA .

    $end            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 29 (valorCadena -> CADENA .)


state 131

    (58) asignacion -> VARIABLE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (36) operadores -> . MAS
    (37) operadores -> . MENOS
    (38) operadores -> . DIVISION
    (39) operadores -> . MULTIPLICACION
    (40) operadores -> . EXPONENCIACION
    (41) operadores -> . MODULO

    $end            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 53
    MENOS           shift and go to state 54
    DIVISION        shift and go to state 55
    MULTIPLICACION  shift and go to state 56
    EXPONENCIACION  shift and go to state 57
    MODULO          shift and go to state 58

    operadores                     shift and go to state 52

state 132

    (59) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)


state 133

    (60) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 60 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 134

    (61) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 61 (asignacion -> VARIABLE IGUAL array .)


state 135

    (62) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 62 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 136

    (92) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 137

    (93) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 93 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 138

    (103) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 103 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 103 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 139

    (104) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 104 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 104 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 140

    (72) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 176


state 141

    (135) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 177


state 142

    (28) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 178


state 143

    (99) funcionesArray -> SORT .

    $end            reduce using rule 99 (funcionesArray -> SORT .)
    END             reduce using rule 99 (funcionesArray -> SORT .)


state 144

    (100) funcionesArray -> FOR . EACH

    EACH            shift and go to state 179


state 145

    (102) funcionesNumeros -> TO_F .

    $end            reduce using rule 102 (funcionesNumeros -> TO_F .)
    END             reduce using rule 102 (funcionesNumeros -> TO_F .)


state 146

    (49) valores -> valor COMA . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (51) valor -> . CADENA
    (52) valor -> . valorNumerico
    (53) valor -> . VARIABLE
    (54) valor -> . VARIABLECLASE
    (55) valor -> . SIMBOLO
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    CADENA          shift and go to state 73
    VARIABLE        shift and go to state 75
    VARIABLECLASE   shift and go to state 76
    SIMBOLO         shift and go to state 77
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valor                          shift and go to state 72
    valores                        shift and go to state 180
    valorNumerico                  shift and go to state 74

state 147

    (50) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)


state 148

    (111) estructura_ifUnaLinea -> IF . condicionIf
    (107) condicionIf -> . expresiones_booleanas
    (108) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 95
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 96

    condicionIf                    shift and go to state 181
    expresiones_booleanas          shift and go to state 93
    valorNumerico                  shift and go to state 94
    rangos                         shift and go to state 35

state 149

    (79) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 79 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 150

    (44) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 44 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 151

    (76) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (35) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 165

    soloEnteros                    shift and go to state 182

state 152

    (80) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 80 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 153

    (90) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 90 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 154

    (94) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 94 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 155

    (91) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 91 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 156

    (96) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 96 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 157

    (101) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 101 (funcionesFormatoImpresion -> CHOMP .)


state 158

    (129) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 129 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 159

    (134) elemento_hash -> claveValor COMA . claveValor
    (131) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (132) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 91

    claveValor                     shift and go to state 183

state 160

    (131) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (132) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO

    CADENA          shift and go to state 185
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    valorNumerico                  shift and go to state 184

state 161

    (109) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (110) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (112) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (113) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 186
    ELSEIF          shift and go to state 188

    estructura_secundaria_if       shift and go to state 187

state 162

    (108) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 95
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 96

    expresiones_booleanas          shift and go to state 189
    valorNumerico                  shift and go to state 94
    rangos                         shift and go to state 35

state 163

    (88) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 88 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 88 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 88 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 88 (funcionesComparacion -> AND .)


state 164

    (89) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 89 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 89 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 89 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 89 (funcionesComparacion -> OR .)


state 165

    (35) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 35 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 35 (soloEnteros -> ENTERO .)


state 166

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER END
    (98) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER END
    (105) argumentos -> . VARIABLE
    (106) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 191
    VARIABLE        shift and go to state 190

    argumentos                     shift and go to state 192

state 167

    (70) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 70 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 168

    (63) elementos_array -> elemento_array COMA . elementos_array
    (63) elementos_array -> . elemento_array COMA elementos_array
    (64) elementos_array -> . elemento_array
    (65) elemento_array -> . CADENA
    (66) elemento_array -> . ENTERO
    (67) elemento_array -> . FLOTANTE
    (68) elemento_array -> . array
    (69) elemento_array -> . VARIABLE
    (70) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (71) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 101
    ENTERO          shift and go to state 102
    FLOTANTE        shift and go to state 103
    VARIABLE        shift and go to state 105
    CORCHETE_IZ     shift and go to state 41

    elemento_array                 shift and go to state 100
    elementos_array                shift and go to state 193
    array                          shift and go to state 104

state 169

    (122) sentencia_while -> WHILE declaracion DO . sentencia_while END
    (123) sentencia_while -> WHILE declaracion DO . declaracion END
    (122) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (123) sentencia_while -> . WHILE declaracion DO declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 194
    sentencia_while                shift and go to state 195
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 170

    (124) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 196


state 171

    (128) sentencia_until -> UNTIL declaracion DO . declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 197
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 172

    (138) definicion_clase -> CLASS ID_CLASE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER

    INITIALIZE      shift and go to state 198


state 173

    (31) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 31 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 174

    (127) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 199
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 175

    (28) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 142


state 176

    (72) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 200


state 177

    (135) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 201


state 178

    (28) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    CADENA          shift and go to state 28
    VARIABLE        shift and go to state 128

    valorCadena                    shift and go to state 202

state 179

    (100) funcionesArray -> FOR EACH .

    $end            reduce using rule 100 (funcionesArray -> FOR EACH .)
    END             reduce using rule 100 (funcionesArray -> FOR EACH .)


state 180

    (49) valores -> valor COMA valores .

    $end            reduce using rule 49 (valores -> valor COMA valores .)
    DO              reduce using rule 49 (valores -> valor COMA valores .)
    WHEN            reduce using rule 49 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 49 (valores -> valor COMA valores .)
    ELSE            reduce using rule 49 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 49 (valores -> valor COMA valores .)
    END             reduce using rule 49 (valores -> valor COMA valores .)


state 181

    (111) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 111 (estructura_ifUnaLinea -> IF condicionIf .)


state 182

    (76) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 203


state 183

    (134) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 134 (elemento_hash -> claveValor COMA claveValor .)


state 184

    (131) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 131 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 131 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 185

    (132) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 132 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 132 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 186

    (109) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 204
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 187

    (110) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 110 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 188

    (112) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (113) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (107) condicionIf -> . expresiones_booleanas
    (108) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 95
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    PARENTESIS_IZ   shift and go to state 96

    condicionIf                    shift and go to state 205
    expresiones_booleanas          shift and go to state 93
    valorNumerico                  shift and go to state 94
    rangos                         shift and go to state 35

state 189

    (108) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 108 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 190

    (105) argumentos -> VARIABLE .
    (106) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 105 (argumentos -> VARIABLE .)
    COMA            shift and go to state 206


state 191

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . END

    END             shift and go to state 207


state 192

    (98) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER END

    PARENTESIS_DER  shift and go to state 208


state 193

    (63) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 63 (elementos_array -> elemento_array COMA elementos_array .)


state 194

    (123) sentencia_while -> WHILE declaracion DO declaracion . END

    END             shift and go to state 209


state 195

    (122) sentencia_while -> WHILE declaracion DO sentencia_while . END

    END             shift and go to state 210


state 196

    (124) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 124 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 124 (sentencia_case -> CASE declaracion sentencia_when END .)


state 197

    (128) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 211


state 198

    (138) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 212


state 199

    (127) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 127 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 127 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 127 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 200

    (72) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 213


state 201

    (135) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (136) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (137) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 214

    each_args_hash                 shift and go to state 215

state 202

    (28) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 216


state 203

    (76) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 76 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 204

    (109) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 217


state 205

    (112) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (113) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 218
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 206

    (106) argumentos -> VARIABLE COMA . argumentos
    (105) argumentos -> . VARIABLE
    (106) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 190

    argumentos                     shift and go to state 219

state 207

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .

    $end            reduce using rule 97 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)
    END             reduce using rule 97 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)


state 208

    (98) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . END

    END             shift and go to state 220


state 209

    (123) sentencia_while -> WHILE declaracion DO declaracion END .

    $end            reduce using rule 123 (sentencia_while -> WHILE declaracion DO declaracion END .)
    END             reduce using rule 123 (sentencia_while -> WHILE declaracion DO declaracion END .)


state 210

    (122) sentencia_while -> WHILE declaracion DO sentencia_while END .

    $end            reduce using rule 122 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    END             reduce using rule 122 (sentencia_while -> WHILE declaracion DO sentencia_while END .)


state 211

    (128) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 128 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 128 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 212

    (138) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER
    (105) argumentos -> . VARIABLE
    (106) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 190

    argumentos                     shift and go to state 221

state 213

    (72) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (73) cuerpo_each -> . cuerpo
    (74) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . comparacion_simbolo
    (3) cuerpo -> . input_concatenacion
    (4) cuerpo -> . asignacion
    (5) cuerpo -> . impresion
    (6) cuerpo -> . impresion_vacia
    (7) cuerpo -> . expresiones_booleanas
    (8) cuerpo -> . solicitudDatosTeclado
    (9) cuerpo -> . hashes
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . comentarios
    (16) cuerpo -> . each_hash
    (17) cuerpo -> . sentencia_while
    (18) cuerpo -> . sentencia_case
    (19) cuerpo -> . sentencias_when
    (20) cuerpo -> . sentencia_until
    (21) cuerpo -> . definicion_clase
    (75) vacio -> .
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) comparacion_simbolo -> . valorSimbolo IGUAL_DOBLEP valorSimbolo
    (25) comparacion_simbolo -> . valorSimbolo DIFERENTE valorSimbolo
    (26) input_concatenacion -> . concatenacionSimpleCadena
    (27) input_concatenacion -> . concatenacion_funcion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (97) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (98) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (103) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (104) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (70) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (71) array -> . CORCHETE_IZ CORCHETE_DER
    (72) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (77) comentarios -> . COMENTARIO
    (78) comentarios -> . COMENTARIO_MULTI
    (135) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (122) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (123) sentencia_while -> . WHILE declaracion DO declaracion END
    (124) sentencia_case -> . CASE declaracion sentencia_when END
    (125) sentencias_when -> . sentencia_when
    (126) sentencias_when -> . sentencia_when sentencias_when
    (128) sentencia_until -> . UNTIL declaracion DO declaracion END
    (138) definicion_clase -> . CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (32) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (28) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (127) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (29) valorCadena -> . CADENA
    (30) valorCadena -> . VARIABLE

    END             reduce using rule 75 (vacio -> .)
    VARIABLE        shift and go to state 27
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    DEF             shift and go to state 40
    CORCHETE_IZ     shift and go to state 41
    COMENTARIO      shift and go to state 42
    COMENTARIO_MULTI shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    CLASS           shift and go to state 48
    PARENTESIS_IZ   shift and go to state 32
    SIMBOLO         shift and go to state 29
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36
    WHEN            shift and go to state 51
    CADENA          shift and go to state 28

    cuerpo_each                    shift and go to state 222
    cuerpo                         shift and go to state 223
    vacio                          shift and go to state 224
    operacionAritmetica            shift and go to state 2
    comparacion_simbolo            shift and go to state 3
    input_concatenacion            shift and go to state 4
    asignacion                     shift and go to state 5
    impresion                      shift and go to state 6
    impresion_vacia                shift and go to state 7
    expresiones_booleanas          shift and go to state 8
    solicitudDatosTeclado          shift and go to state 9
    hashes                         shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    comentarios                    shift and go to state 16
    each_hash                      shift and go to state 17
    sentencia_while                shift and go to state 18
    sentencia_case                 shift and go to state 19
    sentencias_when                shift and go to state 20
    sentencia_until                shift and go to state 21
    definicion_clase               shift and go to state 22
    expresionNumerica              shift and go to state 23
    valorSimbolo                   shift and go to state 24
    concatenacionSimpleCadena      shift and go to state 25
    concatenacion_funcion          shift and go to state 26
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35
    sentencia_when                 shift and go to state 46
    valorCadena                    shift and go to state 49

state 214

    (136) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (137) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 225
    BARRA           shift and go to state 226


state 215

    (135) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 227
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 216

    (28) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 28 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 217

    (109) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 109 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 218

    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (113) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (112) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (113) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 228
    ELSEIF          shift and go to state 188

    estructura_secundaria_if       shift and go to state 229

state 219

    (106) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 106 (argumentos -> VARIABLE COMA argumentos .)


state 220

    (98) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .

    $end            reduce using rule 98 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)
    END             reduce using rule 98 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)


state 221

    (138) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 230


state 222

    (72) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 231


state 223

    (73) cuerpo_each -> cuerpo .

    END             reduce using rule 73 (cuerpo_each -> cuerpo .)


state 224

    (74) cuerpo_each -> vacio .

    END             reduce using rule 74 (cuerpo_each -> vacio .)


state 225

    (136) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 232


state 226

    (137) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 137 (each_args_hash -> VARIABLE BARRA .)


state 227

    (135) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 233


state 228

    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (114) declaracion -> . operacionAritmetica
    (115) declaracion -> . asignacion
    (116) declaracion -> . impresion
    (117) declaracion -> . impresion_vacia
    (118) declaracion -> . expresiones_booleanas
    (119) declaracion -> . solicitudDatosTeclado
    (120) declaracion -> . hashes
    (121) declaracion -> . estructura_if
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL SIMBOLO
    (61) asignacion -> . VARIABLE IGUAL array
    (62) asignacion -> . VARIABLE IGUAL input_concatenacion
    (56) impresion -> . valor_print valores
    (79) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (81) impresion_vacia -> . PUTS
    (90) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (91) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (93) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (94) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (95) solicitudDatosTeclado -> . GETS
    (96) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (129) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (130) hashes -> . LLAVE_IZ LLAVE_DER
    (109) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (110) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (42) expresionNumerica -> . valorNumerico
    (43) expresionNumerica -> . operacionAritmetica
    (44) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (33) valorNumerico -> . FLOTANTE
    (34) valorNumerico -> . ENTERO
    (76) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 115
    PRINT           shift and go to state 31
    PUTS            shift and go to state 33
    GETS            shift and go to state 37
    LLAVE_IZ        shift and go to state 38
    IF              shift and go to state 39
    PARENTESIS_IZ   shift and go to state 32
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 36

    declaracion                    shift and go to state 234
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 30
    valorNumerico                  shift and go to state 34
    rangos                         shift and go to state 35

state 229

    (113) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 113 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 230

    (138) definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .

    $end            reduce using rule 138 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)
    END             reduce using rule 138 (definicion_clase -> CLASS ID_CLASE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER .)


state 231

    (72) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 72 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 72 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 232

    (136) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 235


state 233

    (135) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 135 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 135 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 234

    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 236


state 235

    (136) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 136 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 236

    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 27 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 27 resolved as shift
WARNING: shift/reduce conflict for MAS in state 122 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 122 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 122 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 122 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 122 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 122 resolved as shift
