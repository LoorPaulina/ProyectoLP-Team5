Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    DOBLE_IGUAL
    EXCLAMACION_ALTO
    IN
    INITIALIZE
    MODULE
    NOT
    OR
    PORCENTAJE
    PREGUNTA
    RETURN
    SELF
    TRES_PUNTOS
    TRIPLE_IGUAL

Grammar

Rule 0     S' -> instruccion
Rule 1     instruccion -> cuerpoInstruccion
Rule 2     cuerpoInstruccion -> cuerpo
Rule 3     cuerpoInstruccion -> cuerpo cuerpoInstruccion
Rule 4     cuerpo -> operacionAritmetica
Rule 5     cuerpo -> input_concatenacion
Rule 6     cuerpo -> asignacion
Rule 7     cuerpo -> impresion
Rule 8     cuerpo -> impresion_vacia
Rule 9     cuerpo -> expresiones_booleanas
Rule 10    cuerpo -> solicitudDatosTeclado
Rule 11    cuerpo -> hashes
Rule 12    cuerpo -> estructura_ifUnaLinea
Rule 13    cuerpo -> estructura_if
Rule 14    cuerpo -> funciones
Rule 15    cuerpo -> funcionesEstructuras
Rule 16    cuerpo -> array
Rule 17    cuerpo -> each_array
Rule 18    cuerpo -> each_hash
Rule 19    cuerpo -> sentencia_while
<<<<<<< HEAD
Rule 20    cuerpo -> sentencia_case
Rule 21    cuerpo -> sentencias_when
Rule 22    cuerpo -> sentencia_until
Rule 23    cuerpo -> definicion_clase
Rule 24    cuerpo -> entero_a_flotante
Rule 25    cuerpo -> declaracion
=======
Rule 20    cuerpo -> sentencia_while_bool
Rule 21    cuerpo -> sentencia_case
Rule 22    cuerpo -> sentencias_when
Rule 23    cuerpo -> sentencia_until
Rule 24    cuerpo -> definicion_clase
Rule 25    cuerpo -> entero_a_flotante
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
Rule 26    valorSimbolo -> SIMBOLO
Rule 27    valorSimbolo -> VARIABLE
Rule 28    input_concatenacion -> concatenacionSimpleCadena
Rule 29    input_concatenacion -> concatenacion_funcion
Rule 30    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 31    valorCadena -> CADENA
Rule 32    valorCadena -> VARIABLE
Rule 33    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 34    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 35    valorNumerico -> FLOTANTE
Rule 36    valorNumerico -> ENTERO
Rule 37    soloEnteros -> ENTERO
Rule 38    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 39    operadores -> MAS
Rule 40    operadores -> MENOS
Rule 41    operadores -> DIVISION
Rule 42    operadores -> MULTIPLICACION
Rule 43    operadores -> EXPONENCIACION
Rule 44    operadores -> MODULO
Rule 45    expresionNumerica -> valorNumerico
Rule 46    expresionNumerica -> operacionAritmetica
Rule 47    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 48    expresionNumerica -> VARIABLE
Rule 49    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 50    valor_print -> PRINT
Rule 51    valor_print -> PUTS
Rule 52    valores -> valor
Rule 53    valores -> valor COMA valores
Rule 54    valores -> valor estructura_ifUnaLinea
<<<<<<< HEAD
Rule 55    booleanos -> TRUE
Rule 56    booleanos -> FALSE
Rule 57    valor -> CADENA
Rule 58    valor -> valorNumerico
Rule 59    valor -> VARIABLE
Rule 60    valor -> VARIABLECLASE
Rule 61    valor -> SIMBOLO
Rule 62    impresion -> valor_print valores
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 64    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 65    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 66    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 67    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 68    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 69    asignacion -> VARIABLE IGUAL CADENA
Rule 70    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 71    asignacion -> VARIABLE IGUAL hashes
Rule 72    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 73    asignacion -> VARIABLE IGUAL array
Rule 74    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 75    asignacion -> VARIABLE IGUAL booleanos
Rule 76    asignacion -> VARIABLE IGUAL solicitudDatosTeclado
Rule 77    asignacion -> VARIABLE IGUAL entero_a_flotante
Rule 78    elementos_array -> elemento_array COMA elementos_array
Rule 79    elementos_array -> elemento_array
Rule 80    elemento_array -> CADENA
Rule 81    elemento_array -> ENTERO
Rule 82    elemento_array -> FLOTANTE
Rule 83    elemento_array -> array
Rule 84    elemento_array -> VARIABLE
Rule 85    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 86    array -> CORCHETE_IZ CORCHETE_DER
Rule 87    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 88    cuerpo_each -> cuerpo
Rule 89    cuerpo_each -> vacio
Rule 90    vacio -> <empty>
Rule 91    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 92    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 93    impresion_vacia -> PUTS
Rule 94    impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER
Rule 95    operadoresComparacion -> IGUAL_DOBLEP
Rule 96    operadoresComparacion -> NAVE
Rule 97    operadoresComparacion -> DIFERENTE
Rule 98    operadoresComparacion -> MAYOR_QUE
Rule 99    operadoresComparacion -> MENOR_QUE
Rule 100   operadoresComparacion -> MENOR_IGUAL_QUE
Rule 101   operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 102   funcionesComparacion -> Y_SIGNO
Rule 103   funcionesComparacion -> O_SIGNO
Rule 104   expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 105   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 106   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 107   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 108   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 109   solicitudDatosTeclado -> GETS
Rule 110   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 111   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
Rule 112   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
Rule 113   funciones -> DEF VARIABLE declaraciones END
Rule 114   funcionesArray -> SORT
Rule 115   funcionesArray -> FOR EACH
Rule 116   funcionesFormatoImpresion -> CHOMP
Rule 117   funcionesNumeros -> TO_F
Rule 118   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 119   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 120   argumentos -> VARIABLE
Rule 121   argumentos -> VARIABLE COMA argumentos
Rule 122   condicionIf -> expresiones_booleanas
Rule 123   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 124   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 125   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 126   estructura_if -> IF condicionIf declaraciones ELSE declaraciones END
Rule 127   estructura_if -> IF condicionIf declaraciones estructura_secundaria_if
Rule 128   estructura_ifUnaLinea -> IF condicionIf declaraciones END
Rule 129   estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END
Rule 130   estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if
Rule 131   declaracion -> operacionAritmetica
Rule 132   declaracion -> asignacion
Rule 133   declaracion -> impresion
Rule 134   declaracion -> impresion_vacia
Rule 135   declaracion -> expresiones_booleanas
Rule 136   declaracion -> solicitudDatosTeclado
Rule 137   declaracion -> hashes
Rule 138   declaracion -> estructura_if
Rule 139   declaracion -> asignacion_clase
Rule 140   declaracion -> sentencia_while
Rule 141   declaracion -> estructura_ifUnaLinea
Rule 142   declaracion -> funciones
Rule 143   declaraciones -> declaracion
Rule 144   declaraciones -> declaracion declaraciones
Rule 145   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 146   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 147   sentencia_case -> CASE declaraciones sentencia_when END
Rule 148   sentencias_when -> sentencia_when
Rule 149   sentencias_when -> sentencia_when sentencias_when
Rule 150   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 151   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 152   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 153   hashes -> LLAVE_IZ LLAVE_DER
Rule 154   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 155   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 156   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 157   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 158   elemento_hash -> claveValor
Rule 159   elemento_hash -> claveValor COMA elemento_hash
Rule 160   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 161   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 162   each_args_hash -> VARIABLE BARRA
Rule 163   encabezadoClase -> CLASS ID_CLASE
Rule 164   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 165   definicion_clase -> encabezadoClase declaraciones END
Rule 166   cuerpoVariables -> asignacion_clase
Rule 167   cuerpoVariables -> asignacion
Rule 168   cuerpoVariables -> asignacion_clase cuerpoVariables
Rule 169   cuerpoVariables -> asignacion cuerpoVariables
Rule 170   cuerpoClase -> cuerpoVariables
Rule 171   cuerpoClase -> declaracion
Rule 172   cuerpoClase -> funciones
Rule 173   cuerpoClaseE -> cuerpoClase
Rule 174   cuerpoClaseE -> cuerpoClase cuerpoClaseE
=======
Rule 55    valores -> valor sentencia_while_bool
Rule 56    booleanos -> TRUE
Rule 57    booleanos -> FALSE
Rule 58    valor -> CADENA
Rule 59    valor -> valorNumerico
Rule 60    valor -> VARIABLE
Rule 61    valor -> VARIABLECLASE
Rule 62    valor -> SIMBOLO
Rule 63    impresion -> valor_print valores
Rule 64    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 65    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 66    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 67    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 68    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 69    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 70    asignacion -> VARIABLE IGUAL CADENA
Rule 71    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 72    asignacion -> VARIABLE IGUAL hashes
Rule 73    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 74    asignacion -> VARIABLE IGUAL array
Rule 75    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 76    asignacion -> VARIABLE IGUAL booleanos
Rule 77    asignacion -> VARIABLE IGUAL solicitudDatosTeclado
Rule 78    asignacion -> VARIABLE IGUAL entero_a_flotante
Rule 79    elementos_array -> elemento_array COMA elementos_array
Rule 80    elementos_array -> elemento_array
Rule 81    elemento_array -> CADENA
Rule 82    elemento_array -> ENTERO
Rule 83    elemento_array -> FLOTANTE
Rule 84    elemento_array -> array
Rule 85    elemento_array -> VARIABLE
Rule 86    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 87    array -> CORCHETE_IZ CORCHETE_DER
Rule 88    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 89    cuerpo_each -> cuerpo
Rule 90    cuerpo_each -> vacio
Rule 91    vacio -> <empty>
Rule 92    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 93    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 94    impresion_vacia -> PUTS
Rule 95    impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER
Rule 96    operadoresComparacion -> IGUAL_DOBLEP
Rule 97    operadoresComparacion -> NAVE
Rule 98    operadoresComparacion -> DIFERENTE
Rule 99    operadoresComparacion -> MAYOR_QUE
Rule 100   operadoresComparacion -> MENOR_QUE
Rule 101   operadoresComparacion -> MENOR_IGUAL_QUE
Rule 102   operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 103   funcionesComparacion -> Y_SIGNO
Rule 104   funcionesComparacion -> O_SIGNO
Rule 105   expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 106   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 107   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 108   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 109   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 110   solicitudDatosTeclado -> GETS
Rule 111   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 112   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
Rule 113   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
Rule 114   funciones -> DEF VARIABLE declaraciones END
Rule 115   funcionesArray -> SORT
Rule 116   funcionesArray -> FOR EACH
Rule 117   funcionesFormatoImpresion -> CHOMP
Rule 118   funcionesNumeros -> TO_F
Rule 119   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 120   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 121   argumentos -> VARIABLE
Rule 122   argumentos -> VARIABLE COMA argumentos
Rule 123   condicionIf -> expresiones_booleanas
Rule 124   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 125   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 126   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 127   estructura_if -> IF condicionIf declaraciones ELSE declaraciones END
Rule 128   estructura_if -> IF condicionIf declaraciones estructura_secundaria_if
Rule 129   estructura_ifUnaLinea -> IF condicionIf declaraciones END
Rule 130   estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END
Rule 131   estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if
Rule 132   declaracion -> operacionAritmetica
Rule 133   declaracion -> asignacion
Rule 134   declaracion -> impresion
Rule 135   declaracion -> impresion_vacia
Rule 136   declaracion -> expresiones_booleanas
Rule 137   declaracion -> solicitudDatosTeclado
Rule 138   declaracion -> hashes
Rule 139   declaracion -> estructura_if
Rule 140   declaracion -> asignacion_clase
Rule 141   declaracion -> estructura_ifUnaLinea
Rule 142   declaracion -> sentencia_while
Rule 143   declaracion -> sentencia_while_bool
Rule 144   declaraciones -> declaracion
Rule 145   declaraciones -> declaracion declaraciones
Rule 146   sentencia_while_bool -> WHILE declaracion declaraciones END
Rule 147   sentencia_while_bool -> WHILE VARIABLE declaraciones END
Rule 148   sentencia_while -> WHILE expresiones_booleanas sentencia_while END
Rule 149   sentencia_while -> WHILE expresiones_booleanas declaracion END
Rule 150   sentencia_case -> CASE VARIABLE sentencia_when END
Rule 151   sentencia_when -> WHEN declaracion declaracion
Rule 152   sentencias_when -> sentencia_when
Rule 153   sentencias_when -> sentencia_when sentencias_when
Rule 154   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 155   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 156   hashes -> LLAVE_IZ LLAVE_DER
Rule 157   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 158   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 159   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 160   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 161   elemento_hash -> claveValor
Rule 162   elemento_hash -> claveValor COMA elemento_hash
Rule 163   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 164   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 165   each_args_hash -> VARIABLE BARRA
Rule 166   encabezadoClase -> CLASS ID_CLASE
Rule 167   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 168   definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
Rule 169   cuerpoVariables -> asignacion_clase
Rule 170   cuerpoVariables -> asignacion
Rule 171   cuerpoVariables -> asignacion_clase cuerpoVariables
Rule 172   cuerpoVariables -> asignacion cuerpoVariables
Rule 173   cuerpoClase -> cuerpoVariables
Rule 174   cuerpoClase -> declaracion
Rule 175   cuerpoClase -> funciones
Rule 176   cuerpoClaseE -> cuerpoClase
Rule 177   cuerpoClaseE -> cuerpoClase cuerpoClaseE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

Terminals, with rules where they appear

AND                  : 
<<<<<<< HEAD
ASIGNA_HASH          : 154 155 156 157
BARRA                : 87 87 160 161 162
BEGIN                : 
CADENA               : 31 57 63 69 80 155 156 157 157
CASE                 : 147
CHOMP                : 116
CLASS                : 163 164
COMA                 : 53 78 121 159 161
=======
ASIGNA_HASH          : 157 158 159 160
BARRA                : 88 88 163 164 165
BEGIN                : 
CADENA               : 31 58 64 70 81 158 159 160 160
CASE                 : 150
CHOMP                : 117
CLASS                : 166 167
COMA                 : 53 79 122 162 164
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 30
<<<<<<< HEAD
CORCHETE_DER         : 85 86
CORCHETE_IZ          : 85 86
DEF                  : 111 112 113
DIFERENTE            : 97
DIVISION             : 41
DO                   : 87 145 146 151 160
DOBLE_IGUAL          : 
EACH                 : 115 160
ELSE                 : 126 129
ELSEIF               : 129 130
END                  : 87 111 112 113 126 128 129 145 146 147 151 160 165
ENTERO               : 36 37 81
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 123 125
EXPONENCIACION       : 43
FALSE                : 56
FLOTANTE             : 35 82
FOR                  : 115
GETS                 : 109 110
ID_CLASE             : 163 164 164
IF                   : 126 127 128
IGUAL                : 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
IGUAL_DOBLEP         : 95 150
IN                   : 
INITIALIZE           : 
LLAVE_DER            : 152 153
LLAVE_IZ             : 152 153
MAS                  : 33 34 39
MAYOR_IGUAL_QUE      : 101
MAYOR_QUE            : 98
MENOR_IGUAL_QUE      : 100
MENOR_QUE            : 99 164
=======
CORCHETE_DER         : 86 87
CORCHETE_IZ          : 86 87
DEF                  : 112 113 114 168
DIFERENTE            : 98
DIVISION             : 41
DO                   : 88 154 163
DOBLE_IGUAL          : 
EACH                 : 116 163
ELSE                 : 127 130
ELSEIF               : 130 131
END                  : 88 112 113 114 127 129 130 146 147 148 149 150 154 163 168
ENTERO               : 36 37 82
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 124 126
EXPONENCIACION       : 43
FALSE                : 57
FLOTANTE             : 35 83
FOR                  : 116
GETS                 : 110 111
ID_CLASE             : 166 167 167
IF                   : 127 128 129
IGUAL                : 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
IGUAL_DOBLEP         : 96
IN                   : 
INITIALIZE           : 168
LLAVE_DER            : 155 156
LLAVE_IZ             : 155 156
MAS                  : 33 34 39
MAYOR_IGUAL_QUE      : 102
MAYOR_QUE            : 99
MENOR_IGUAL_QUE      : 101
MENOR_QUE            : 100 167
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
MENOS                : 40
MODULE               : 
MODULO               : 44
MULTIPLICACION       : 42
<<<<<<< HEAD
NAVE                 : 96
NOT                  : 
OR                   : 
O_SIGNO              : 103
PARENTESIS_DER       : 30 47 91 92 94 111 112 123 125
PARENTESIS_IZ        : 30 47 91 92 94 111 112 123 125
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 50 91
PRINTF               : 94
PUNTO                : 30 38 87 110 118 119 160
PUTS                 : 51 92 93
RETURN               : 
SELF                 : 
SIMBOLO              : 26 61 72
SORT                 : 114
TO_F                 : 38 117
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 55
UNTIL                : 151
VARIABLE             : 27 30 32 38 48 59 68 69 70 71 72 73 74 75 76 77 84 87 87 106 106 107 108 111 112 113 118 119 120 121 154 155 160 161 161 162
VARIABLECLASE        : 60 63 64 65 66 67
WHEN                 : 150
WHILE                : 145 146
Y_SIGNO              : 102
=======
NAVE                 : 97
NOT                  : 
OR                   : 
O_SIGNO              : 104
PARENTESIS_DER       : 30 47 92 93 95 112 113 124 126 168
PARENTESIS_IZ        : 30 47 92 93 95 112 113 124 126 168
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 50 92
PRINTF               : 95
PUNTO                : 30 38 88 111 119 120 163
PUTS                 : 51 93 94
RETURN               : 
SELF                 : 
SIMBOLO              : 26 62 73
SORT                 : 115
TO_F                 : 38 118
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 56
UNTIL                : 154
VARIABLE             : 27 30 32 38 48 60 69 70 71 72 73 74 75 76 77 78 85 88 88 107 107 108 109 112 113 114 119 120 121 122 147 150 157 158 163 164 164 165
VARIABLECLASE        : 61 64 65 66 67 68
WHEN                 : 151
WHILE                : 146 147 148 149
Y_SIGNO              : 103
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
error                : 

Nonterminals, with rules where they appear

<<<<<<< HEAD
argumentos           : 112 121
array                : 16 66 73 83
asignacion           : 6 132 167 169
asignacion_clase     : 139 166 168
booleanos            : 68 75
claveValor           : 158 159
concatenacionSimpleCadena : 28 34
concatenacion_funcion : 29
condicionIf          : 123 124 126 127 128 129 130
cuerpo               : 2 3 88
cuerpoClase          : 173 174
cuerpoClaseE         : 174
cuerpoInstruccion    : 1 3
cuerpoVariables      : 168 169 170
cuerpo_each          : 87
declaracion          : 25 143 144 146 150 150 151 151 160 171
declaraciones        : 111 112 113 126 126 127 128 129 129 130 144 147 165
definicion_clase     : 23
each_args_hash       : 160
each_array           : 17
each_hash            : 18
elemento_array       : 78 79
elemento_hash        : 152 159
elementos_array      : 78 85
encabezadoClase      : 165
entero_a_flotante    : 24 77
estructura_if        : 13 138
estructura_ifUnaLinea : 12 54 141
estructura_secundaria_if : 127 130
expresionNumerica    : 49 49 64 70
expresiones_booleanas : 9 122 123 124 125 135 145 146
funciones            : 14 142 172
funcionesArray       : 118
funcionesComparacion : 123 124
funcionesEstructuras : 15
funcionesFormatoImpresion : 110
funcionesNumeros     : 119
hashes               : 11 65 71 137
impresion            : 7 133
impresion_vacia      : 8 134
input_concatenacion  : 5 67 74
instruccion          : 0
operacionAritmetica  : 4 46 47 131
operadores           : 49
operadoresComparacion : 104 105 106 107 108
sentencia_case       : 20
sentencia_until      : 22
sentencia_when       : 147 148 149
sentencia_while      : 19 140 145
sentencias_when      : 21 149
solicitudDatosTeclado : 10 76 136
soloEnteros          : 
vacio                : 89
valor                : 52 53 54
valorCadena          : 30 33 33 34
valorNumerico        : 45 58 105 105 107 108 154 156
valorSimbolo         : 104 104
valor_print          : 62
valores              : 53 62
=======
argumentos           : 113 122 168
array                : 16 67 74 84
asignacion           : 6 133 170 172
asignacion_clase     : 140 169 171
booleanos            : 69 76
claveValor           : 161 162
concatenacionSimpleCadena : 28 34
concatenacion_funcion : 29
condicionIf          : 124 125 127 128 129 130 131
cuerpo               : 2 3 89
cuerpoClase          : 176 177
cuerpoClaseE         : 168 177
cuerpoInstruccion    : 1 3
cuerpoVariables      : 168 171 172 173
cuerpo_each          : 88
declaracion          : 144 145 146 149 151 151 154 154 163 174
declaraciones        : 112 113 114 127 127 128 129 130 130 131 145 146 147
definicion_clase     : 24
each_args_hash       : 163
each_array           : 17
each_hash            : 18
elemento_array       : 79 80
elemento_hash        : 155 162
elementos_array      : 79 86
encabezadoClase      : 168
entero_a_flotante    : 25 78
estructura_if        : 13 139
estructura_ifUnaLinea : 12 54 141
estructura_secundaria_if : 128 131
expresionNumerica    : 49 49 65 71
expresiones_booleanas : 9 123 124 125 126 136 148 149
funciones            : 14 175
funcionesArray       : 119
funcionesComparacion : 124 125
funcionesEstructuras : 15
funcionesFormatoImpresion : 111
funcionesNumeros     : 120
hashes               : 11 66 72 138
impresion            : 7 134
impresion_vacia      : 8 135
input_concatenacion  : 5 68 75
instruccion          : 0
operacionAritmetica  : 4 46 47 132
operadores           : 49
operadoresComparacion : 105 106 107 108 109
sentencia_case       : 21
sentencia_until      : 23
sentencia_when       : 150 152 153
sentencia_while      : 19 142 148
sentencia_while_bool : 20 55 143
sentencias_when      : 22 153
solicitudDatosTeclado : 10 77 137
soloEnteros          : 
vacio                : 90
valor                : 52 53 54 55
valorCadena          : 30 33 33 34
valorNumerico        : 45 59 106 106 108 109 157 159
valorSimbolo         : 105 105
valor_print          : 63
valores              : 53 63
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

Parsing method: LALR

state 0

    (0) S' -> . instruccion
    (1) instruccion -> . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
<<<<<<< HEAD
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (25) cuerpo -> . declaracion
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER
    (87) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (160) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (147) sentencia_case -> . CASE declaraciones sentencia_when END
    (148) sentencias_when -> . sentencia_when
    (149) sentencias_when -> . sentencia_when sentencias_when
    (151) sentencia_until -> . UNTIL declaracion DO declaracion END
    (165) definicion_clase -> . encabezadoClase declaraciones END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
=======
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE declaraciones END
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (88) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (163) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (150) sentencia_case -> . CASE VARIABLE sentencia_when END
    (152) sentencias_when -> . sentencia_when
    (153) sentencias_when -> . sentencia_when sentencias_when
    (154) sentencia_until -> . UNTIL declaracion DO declaracion END
    (168) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
<<<<<<< HEAD
    (150) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (163) encabezadoClase -> . CLASS ID_CLASE
    (164) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
=======
    (151) sentencia_when -> . WHEN declaracion declaracion
    (166) encabezadoClase -> . CLASS ID_CLASE
    (167) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 29
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 41
    DEF             shift and go to state 42
    CORCHETE_IZ     shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
<<<<<<< HEAD
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
    WHEN            shift and go to state 53
    CLASS           shift and go to state 54
    VARIABLECLASE   shift and go to state 55
=======
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
    WHEN            shift and go to state 52
    CLASS           shift and go to state 53
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    CADENA          shift and go to state 30

    instruccion                    shift and go to state 1
    cuerpoInstruccion              shift and go to state 2
    cuerpo                         shift and go to state 3
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
<<<<<<< HEAD
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    declaracion                    shift and go to state 25
=======
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
<<<<<<< HEAD
    asignacion_clase               shift and go to state 49
    valorCadena                    shift and go to state 50
=======
    valorCadena                    shift and go to state 49
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 1

    (0) S' -> instruccion .



state 2

    (1) instruccion -> cuerpoInstruccion .

    $end            reduce using rule 1 (instruccion -> cuerpoInstruccion .)


state 3

    (2) cuerpoInstruccion -> cuerpo .
    (3) cuerpoInstruccion -> cuerpo . cuerpoInstruccion
    (2) cuerpoInstruccion -> . cuerpo
    (3) cuerpoInstruccion -> . cuerpo cuerpoInstruccion
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
<<<<<<< HEAD
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (25) cuerpo -> . declaracion
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER
    (87) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (160) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (147) sentencia_case -> . CASE declaraciones sentencia_when END
    (148) sentencias_when -> . sentencia_when
    (149) sentencias_when -> . sentencia_when sentencias_when
    (151) sentencia_until -> . UNTIL declaracion DO declaracion END
    (165) definicion_clase -> . encabezadoClase declaraciones END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
=======
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE declaraciones END
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (88) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (163) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (150) sentencia_case -> . CASE VARIABLE sentencia_when END
    (152) sentencias_when -> . sentencia_when
    (153) sentencias_when -> . sentencia_when sentencias_when
    (154) sentencia_until -> . UNTIL declaracion DO declaracion END
    (168) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
<<<<<<< HEAD
    (150) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (163) encabezadoClase -> . CLASS ID_CLASE
    (164) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
=======
    (151) sentencia_when -> . WHEN declaracion declaracion
    (166) encabezadoClase -> . CLASS ID_CLASE
    (167) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    $end            reduce using rule 2 (cuerpoInstruccion -> cuerpo .)
    VARIABLE        shift and go to state 29
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 41
    DEF             shift and go to state 42
    CORCHETE_IZ     shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
<<<<<<< HEAD
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
    WHEN            shift and go to state 53
    CLASS           shift and go to state 54
    VARIABLECLASE   shift and go to state 55
    CADENA          shift and go to state 30

    cuerpo                         shift and go to state 3
    cuerpoInstruccion              shift and go to state 56
=======
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
    WHEN            shift and go to state 52
    CLASS           shift and go to state 53
    CADENA          shift and go to state 30

    cuerpo                         shift and go to state 3
    cuerpoInstruccion              shift and go to state 54
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
<<<<<<< HEAD
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    declaracion                    shift and go to state 25
=======
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
<<<<<<< HEAD
    asignacion_clase               shift and go to state 49
    valorCadena                    shift and go to state 50
=======
    valorCadena                    shift and go to state 49
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 4

    (4) cuerpo -> operacionAritmetica .
<<<<<<< HEAD
    (131) declaracion -> operacionAritmetica .
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (46) expresionNumerica -> operacionAritmetica .

  ! reduce/reduce conflict for VARIABLE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PRINT resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PUTS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PRINTF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for GETS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for IF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for DEF resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for WHILE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CASE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for UNTIL resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for ENTERO resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for WHEN resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CLASS resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for CADENA resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for $end resolved using rule 4 (cuerpo -> operacionAritmetica .)
  ! reduce/reduce conflict for END resolved using rule 4 (cuerpo -> operacionAritmetica .)
    VARIABLE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINT           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PUTS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PRINTF          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    GETS            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    IF              reduce using rule 4 (cuerpo -> operacionAritmetica .)
    DEF             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHILE           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CASE            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    UNTIL           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 4 (cuerpo -> operacionAritmetica .)
    SIMBOLO         reduce using rule 4 (cuerpo -> operacionAritmetica .)
    FLOTANTE        reduce using rule 4 (cuerpo -> operacionAritmetica .)
    ENTERO          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    WHEN            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CLASS           reduce using rule 4 (cuerpo -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 4 (cuerpo -> operacionAritmetica .)
    CADENA          reduce using rule 4 (cuerpo -> operacionAritmetica .)
    $end            reduce using rule 4 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 4 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
<<<<<<< HEAD

  ! VARIABLE        [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! PRINT           [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! PUTS            [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! PRINTF          [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! GETS            [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! LLAVE_IZ        [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! IF              [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! DEF             [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! CORCHETE_IZ     [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! WHILE           [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! CASE            [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! UNTIL           [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! PARENTESIS_IZ   [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! SIMBOLO         [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! FLOTANTE        [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! ENTERO          [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! WHEN            [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! CLASS           [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! VARIABLECLASE   [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! CADENA          [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! $end            [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
  ! END             [ reduce using rule 131 (declaracion -> operacionAritmetica .) ]
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 5

    (5) cuerpo -> input_concatenacion .

    VARIABLE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINT           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PUTS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    PRINTF          reduce using rule 5 (cuerpo -> input_concatenacion .)
    GETS            reduce using rule 5 (cuerpo -> input_concatenacion .)
    LLAVE_IZ        reduce using rule 5 (cuerpo -> input_concatenacion .)
    IF              reduce using rule 5 (cuerpo -> input_concatenacion .)
    DEF             reduce using rule 5 (cuerpo -> input_concatenacion .)
    CORCHETE_IZ     reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHILE           reduce using rule 5 (cuerpo -> input_concatenacion .)
    CASE            reduce using rule 5 (cuerpo -> input_concatenacion .)
    UNTIL           reduce using rule 5 (cuerpo -> input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 5 (cuerpo -> input_concatenacion .)
    SIMBOLO         reduce using rule 5 (cuerpo -> input_concatenacion .)
    FLOTANTE        reduce using rule 5 (cuerpo -> input_concatenacion .)
    ENTERO          reduce using rule 5 (cuerpo -> input_concatenacion .)
    WHEN            reduce using rule 5 (cuerpo -> input_concatenacion .)
    CLASS           reduce using rule 5 (cuerpo -> input_concatenacion .)
    VARIABLECLASE   reduce using rule 5 (cuerpo -> input_concatenacion .)
    CADENA          reduce using rule 5 (cuerpo -> input_concatenacion .)
    $end            reduce using rule 5 (cuerpo -> input_concatenacion .)
    END             reduce using rule 5 (cuerpo -> input_concatenacion .)


state 6

    (6) cuerpo -> asignacion .
    (132) declaracion -> asignacion .

  ! reduce/reduce conflict for VARIABLE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PRINT resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for GETS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for DEF resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CASE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for UNTIL resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for WHEN resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CLASS resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for CADENA resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for $end resolved using rule 6 (cuerpo -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 6 (cuerpo -> asignacion .)
    VARIABLE        reduce using rule 6 (cuerpo -> asignacion .)
    PRINT           reduce using rule 6 (cuerpo -> asignacion .)
    PUTS            reduce using rule 6 (cuerpo -> asignacion .)
    PRINTF          reduce using rule 6 (cuerpo -> asignacion .)
    GETS            reduce using rule 6 (cuerpo -> asignacion .)
    LLAVE_IZ        reduce using rule 6 (cuerpo -> asignacion .)
    IF              reduce using rule 6 (cuerpo -> asignacion .)
    DEF             reduce using rule 6 (cuerpo -> asignacion .)
    CORCHETE_IZ     reduce using rule 6 (cuerpo -> asignacion .)
    WHILE           reduce using rule 6 (cuerpo -> asignacion .)
    CASE            reduce using rule 6 (cuerpo -> asignacion .)
    UNTIL           reduce using rule 6 (cuerpo -> asignacion .)
    PARENTESIS_IZ   reduce using rule 6 (cuerpo -> asignacion .)
    SIMBOLO         reduce using rule 6 (cuerpo -> asignacion .)
    FLOTANTE        reduce using rule 6 (cuerpo -> asignacion .)
    ENTERO          reduce using rule 6 (cuerpo -> asignacion .)
    WHEN            reduce using rule 6 (cuerpo -> asignacion .)
    CLASS           reduce using rule 6 (cuerpo -> asignacion .)
    VARIABLECLASE   reduce using rule 6 (cuerpo -> asignacion .)
    CADENA          reduce using rule 6 (cuerpo -> asignacion .)
    $end            reduce using rule 6 (cuerpo -> asignacion .)
    END             reduce using rule 6 (cuerpo -> asignacion .)

  ! VARIABLE        [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! PRINT           [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! PUTS            [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! PRINTF          [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! GETS            [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! LLAVE_IZ        [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! IF              [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! DEF             [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! CORCHETE_IZ     [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! WHILE           [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! CASE            [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! UNTIL           [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! SIMBOLO         [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! FLOTANTE        [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! ENTERO          [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! WHEN            [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! CLASS           [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! CADENA          [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! $end            [ reduce using rule 132 (declaracion -> asignacion .) ]
  ! END             [ reduce using rule 132 (declaracion -> asignacion .) ]


state 7

    (7) cuerpo -> impresion .
    (133) declaracion -> impresion .

  ! reduce/reduce conflict for VARIABLE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PRINT resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PUTS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for GETS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for IF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for DEF resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for WHILE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CASE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for UNTIL resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for WHEN resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CLASS resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for CADENA resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for $end resolved using rule 7 (cuerpo -> impresion .)
  ! reduce/reduce conflict for END resolved using rule 7 (cuerpo -> impresion .)
    VARIABLE        reduce using rule 7 (cuerpo -> impresion .)
    PRINT           reduce using rule 7 (cuerpo -> impresion .)
    PUTS            reduce using rule 7 (cuerpo -> impresion .)
    PRINTF          reduce using rule 7 (cuerpo -> impresion .)
    GETS            reduce using rule 7 (cuerpo -> impresion .)
    LLAVE_IZ        reduce using rule 7 (cuerpo -> impresion .)
    IF              reduce using rule 7 (cuerpo -> impresion .)
    DEF             reduce using rule 7 (cuerpo -> impresion .)
    CORCHETE_IZ     reduce using rule 7 (cuerpo -> impresion .)
    WHILE           reduce using rule 7 (cuerpo -> impresion .)
    CASE            reduce using rule 7 (cuerpo -> impresion .)
    UNTIL           reduce using rule 7 (cuerpo -> impresion .)
    PARENTESIS_IZ   reduce using rule 7 (cuerpo -> impresion .)
    SIMBOLO         reduce using rule 7 (cuerpo -> impresion .)
    FLOTANTE        reduce using rule 7 (cuerpo -> impresion .)
    ENTERO          reduce using rule 7 (cuerpo -> impresion .)
    WHEN            reduce using rule 7 (cuerpo -> impresion .)
    CLASS           reduce using rule 7 (cuerpo -> impresion .)
    VARIABLECLASE   reduce using rule 7 (cuerpo -> impresion .)
    CADENA          reduce using rule 7 (cuerpo -> impresion .)
    $end            reduce using rule 7 (cuerpo -> impresion .)
    END             reduce using rule 7 (cuerpo -> impresion .)

  ! VARIABLE        [ reduce using rule 133 (declaracion -> impresion .) ]
  ! PRINT           [ reduce using rule 133 (declaracion -> impresion .) ]
  ! PUTS            [ reduce using rule 133 (declaracion -> impresion .) ]
  ! PRINTF          [ reduce using rule 133 (declaracion -> impresion .) ]
  ! GETS            [ reduce using rule 133 (declaracion -> impresion .) ]
  ! LLAVE_IZ        [ reduce using rule 133 (declaracion -> impresion .) ]
  ! IF              [ reduce using rule 133 (declaracion -> impresion .) ]
  ! DEF             [ reduce using rule 133 (declaracion -> impresion .) ]
  ! CORCHETE_IZ     [ reduce using rule 133 (declaracion -> impresion .) ]
  ! WHILE           [ reduce using rule 133 (declaracion -> impresion .) ]
  ! CASE            [ reduce using rule 133 (declaracion -> impresion .) ]
  ! UNTIL           [ reduce using rule 133 (declaracion -> impresion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 133 (declaracion -> impresion .) ]
  ! SIMBOLO         [ reduce using rule 133 (declaracion -> impresion .) ]
  ! FLOTANTE        [ reduce using rule 133 (declaracion -> impresion .) ]
  ! ENTERO          [ reduce using rule 133 (declaracion -> impresion .) ]
  ! WHEN            [ reduce using rule 133 (declaracion -> impresion .) ]
  ! CLASS           [ reduce using rule 133 (declaracion -> impresion .) ]
  ! VARIABLECLASE   [ reduce using rule 133 (declaracion -> impresion .) ]
  ! CADENA          [ reduce using rule 133 (declaracion -> impresion .) ]
  ! $end            [ reduce using rule 133 (declaracion -> impresion .) ]
  ! END             [ reduce using rule 133 (declaracion -> impresion .) ]


state 8

    (8) cuerpo -> impresion_vacia .
    (134) declaracion -> impresion_vacia .

  ! reduce/reduce conflict for VARIABLE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PRINT resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PUTS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PRINTF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for GETS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for IF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for DEF resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for WHILE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CASE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for UNTIL resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for ENTERO resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for WHEN resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CLASS resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for CADENA resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for $end resolved using rule 8 (cuerpo -> impresion_vacia .)
  ! reduce/reduce conflict for END resolved using rule 8 (cuerpo -> impresion_vacia .)
    VARIABLE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINT           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PUTS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    PRINTF          reduce using rule 8 (cuerpo -> impresion_vacia .)
    GETS            reduce using rule 8 (cuerpo -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 8 (cuerpo -> impresion_vacia .)
    IF              reduce using rule 8 (cuerpo -> impresion_vacia .)
    DEF             reduce using rule 8 (cuerpo -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHILE           reduce using rule 8 (cuerpo -> impresion_vacia .)
    CASE            reduce using rule 8 (cuerpo -> impresion_vacia .)
    UNTIL           reduce using rule 8 (cuerpo -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 8 (cuerpo -> impresion_vacia .)
    SIMBOLO         reduce using rule 8 (cuerpo -> impresion_vacia .)
    FLOTANTE        reduce using rule 8 (cuerpo -> impresion_vacia .)
    ENTERO          reduce using rule 8 (cuerpo -> impresion_vacia .)
    WHEN            reduce using rule 8 (cuerpo -> impresion_vacia .)
    CLASS           reduce using rule 8 (cuerpo -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 8 (cuerpo -> impresion_vacia .)
    CADENA          reduce using rule 8 (cuerpo -> impresion_vacia .)
    $end            reduce using rule 8 (cuerpo -> impresion_vacia .)
    END             reduce using rule 8 (cuerpo -> impresion_vacia .)

  ! VARIABLE        [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! PRINT           [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! PUTS            [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! PRINTF          [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! GETS            [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! LLAVE_IZ        [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! IF              [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! DEF             [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! CORCHETE_IZ     [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! WHILE           [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! CASE            [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! UNTIL           [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! PARENTESIS_IZ   [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! SIMBOLO         [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! FLOTANTE        [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! ENTERO          [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! WHEN            [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! CLASS           [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! VARIABLECLASE   [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! CADENA          [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! $end            [ reduce using rule 134 (declaracion -> impresion_vacia .) ]
  ! END             [ reduce using rule 134 (declaracion -> impresion_vacia .) ]


state 9

    (9) cuerpo -> expresiones_booleanas .
    (135) declaracion -> expresiones_booleanas .

  ! reduce/reduce conflict for VARIABLE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PRINT resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PUTS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PRINTF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for GETS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for IF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for DEF resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for WHILE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CASE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for UNTIL resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for ENTERO resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for WHEN resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CLASS resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for CADENA resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for $end resolved using rule 9 (cuerpo -> expresiones_booleanas .)
  ! reduce/reduce conflict for END resolved using rule 9 (cuerpo -> expresiones_booleanas .)
    VARIABLE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINT           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PUTS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PRINTF          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    GETS            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    IF              reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    DEF             reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHILE           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CASE            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    UNTIL           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    ENTERO          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    WHEN            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CLASS           reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    CADENA          reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    $end            reduce using rule 9 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 9 (cuerpo -> expresiones_booleanas .)

  ! VARIABLE        [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! PRINT           [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! PUTS            [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! PRINTF          [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! GETS            [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! LLAVE_IZ        [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! IF              [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! DEF             [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! CORCHETE_IZ     [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! WHILE           [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! CASE            [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! UNTIL           [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! PARENTESIS_IZ   [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! SIMBOLO         [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! FLOTANTE        [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! ENTERO          [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! WHEN            [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! CLASS           [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! VARIABLECLASE   [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! CADENA          [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! $end            [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]
  ! END             [ reduce using rule 135 (declaracion -> expresiones_booleanas .) ]


state 10

    (10) cuerpo -> solicitudDatosTeclado .
    (136) declaracion -> solicitudDatosTeclado .

  ! reduce/reduce conflict for VARIABLE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PRINT resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PUTS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PRINTF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for GETS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for IF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for DEF resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for WHILE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CASE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for UNTIL resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for ENTERO resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for WHEN resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CLASS resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for CADENA resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for $end resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
  ! reduce/reduce conflict for END resolved using rule 10 (cuerpo -> solicitudDatosTeclado .)
    VARIABLE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINT           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PUTS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    GETS            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    IF              reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    DEF             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHILE           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CASE            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    WHEN            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CLASS           reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    CADENA          reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    $end            reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 10 (cuerpo -> solicitudDatosTeclado .)

  ! VARIABLE        [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! PRINT           [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! PUTS            [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! PRINTF          [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! GETS            [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! LLAVE_IZ        [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! IF              [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! DEF             [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! CORCHETE_IZ     [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! WHILE           [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! CASE            [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! UNTIL           [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! PARENTESIS_IZ   [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! SIMBOLO         [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! FLOTANTE        [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! ENTERO          [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! WHEN            [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! CLASS           [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! VARIABLECLASE   [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! CADENA          [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! $end            [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]
  ! END             [ reduce using rule 136 (declaracion -> solicitudDatosTeclado .) ]


state 11

    (11) cuerpo -> hashes .
    (137) declaracion -> hashes .

  ! reduce/reduce conflict for VARIABLE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PRINT resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PUTS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PRINTF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for GETS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for IF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for DEF resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for WHILE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CASE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for UNTIL resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for ENTERO resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for WHEN resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CLASS resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for CADENA resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for $end resolved using rule 11 (cuerpo -> hashes .)
  ! reduce/reduce conflict for END resolved using rule 11 (cuerpo -> hashes .)
    VARIABLE        reduce using rule 11 (cuerpo -> hashes .)
    PRINT           reduce using rule 11 (cuerpo -> hashes .)
    PUTS            reduce using rule 11 (cuerpo -> hashes .)
    PRINTF          reduce using rule 11 (cuerpo -> hashes .)
    GETS            reduce using rule 11 (cuerpo -> hashes .)
    LLAVE_IZ        reduce using rule 11 (cuerpo -> hashes .)
    IF              reduce using rule 11 (cuerpo -> hashes .)
    DEF             reduce using rule 11 (cuerpo -> hashes .)
    CORCHETE_IZ     reduce using rule 11 (cuerpo -> hashes .)
    WHILE           reduce using rule 11 (cuerpo -> hashes .)
    CASE            reduce using rule 11 (cuerpo -> hashes .)
    UNTIL           reduce using rule 11 (cuerpo -> hashes .)
    PARENTESIS_IZ   reduce using rule 11 (cuerpo -> hashes .)
    SIMBOLO         reduce using rule 11 (cuerpo -> hashes .)
    FLOTANTE        reduce using rule 11 (cuerpo -> hashes .)
    ENTERO          reduce using rule 11 (cuerpo -> hashes .)
    WHEN            reduce using rule 11 (cuerpo -> hashes .)
    CLASS           reduce using rule 11 (cuerpo -> hashes .)
    VARIABLECLASE   reduce using rule 11 (cuerpo -> hashes .)
    CADENA          reduce using rule 11 (cuerpo -> hashes .)
    $end            reduce using rule 11 (cuerpo -> hashes .)
    END             reduce using rule 11 (cuerpo -> hashes .)

  ! VARIABLE        [ reduce using rule 137 (declaracion -> hashes .) ]
  ! PRINT           [ reduce using rule 137 (declaracion -> hashes .) ]
  ! PUTS            [ reduce using rule 137 (declaracion -> hashes .) ]
  ! PRINTF          [ reduce using rule 137 (declaracion -> hashes .) ]
  ! GETS            [ reduce using rule 137 (declaracion -> hashes .) ]
  ! LLAVE_IZ        [ reduce using rule 137 (declaracion -> hashes .) ]
  ! IF              [ reduce using rule 137 (declaracion -> hashes .) ]
  ! DEF             [ reduce using rule 137 (declaracion -> hashes .) ]
  ! CORCHETE_IZ     [ reduce using rule 137 (declaracion -> hashes .) ]
  ! WHILE           [ reduce using rule 137 (declaracion -> hashes .) ]
  ! CASE            [ reduce using rule 137 (declaracion -> hashes .) ]
  ! UNTIL           [ reduce using rule 137 (declaracion -> hashes .) ]
  ! PARENTESIS_IZ   [ reduce using rule 137 (declaracion -> hashes .) ]
  ! SIMBOLO         [ reduce using rule 137 (declaracion -> hashes .) ]
  ! FLOTANTE        [ reduce using rule 137 (declaracion -> hashes .) ]
  ! ENTERO          [ reduce using rule 137 (declaracion -> hashes .) ]
  ! WHEN            [ reduce using rule 137 (declaracion -> hashes .) ]
  ! CLASS           [ reduce using rule 137 (declaracion -> hashes .) ]
  ! VARIABLECLASE   [ reduce using rule 137 (declaracion -> hashes .) ]
  ! CADENA          [ reduce using rule 137 (declaracion -> hashes .) ]
  ! $end            [ reduce using rule 137 (declaracion -> hashes .) ]
  ! END             [ reduce using rule 137 (declaracion -> hashes .) ]


state 12

    (12) cuerpo -> estructura_ifUnaLinea .
    (141) declaracion -> estructura_ifUnaLinea .

  ! reduce/reduce conflict for VARIABLE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PRINT resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PUTS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PRINTF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for GETS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for IF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for DEF resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for WHILE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CASE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for UNTIL resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for ENTERO resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for WHEN resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CLASS resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for CADENA resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for $end resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
  ! reduce/reduce conflict for END resolved using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    VARIABLE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    GETS            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    IF              reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    DEF             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CASE            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    $end            reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)
    END             reduce using rule 12 (cuerpo -> estructura_ifUnaLinea .)

  ! VARIABLE        [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! PRINT           [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! PUTS            [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! PRINTF          [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! GETS            [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! LLAVE_IZ        [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! IF              [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! DEF             [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! CORCHETE_IZ     [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! WHILE           [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! CASE            [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! UNTIL           [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! PARENTESIS_IZ   [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! SIMBOLO         [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! FLOTANTE        [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! ENTERO          [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! WHEN            [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! CLASS           [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! VARIABLECLASE   [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! CADENA          [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! $end            [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]
  ! END             [ reduce using rule 141 (declaracion -> estructura_ifUnaLinea .) ]


state 13

    (13) cuerpo -> estructura_if .
    (138) declaracion -> estructura_if .

  ! reduce/reduce conflict for VARIABLE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PUTS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PRINTF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for GETS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for IF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for DEF resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CASE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for UNTIL resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for ENTERO resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for WHEN resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CLASS resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for CADENA resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for $end resolved using rule 13 (cuerpo -> estructura_if .)
  ! reduce/reduce conflict for END resolved using rule 13 (cuerpo -> estructura_if .)
    VARIABLE        reduce using rule 13 (cuerpo -> estructura_if .)
    PRINT           reduce using rule 13 (cuerpo -> estructura_if .)
    PUTS            reduce using rule 13 (cuerpo -> estructura_if .)
    PRINTF          reduce using rule 13 (cuerpo -> estructura_if .)
    GETS            reduce using rule 13 (cuerpo -> estructura_if .)
    LLAVE_IZ        reduce using rule 13 (cuerpo -> estructura_if .)
    IF              reduce using rule 13 (cuerpo -> estructura_if .)
    DEF             reduce using rule 13 (cuerpo -> estructura_if .)
    CORCHETE_IZ     reduce using rule 13 (cuerpo -> estructura_if .)
    WHILE           reduce using rule 13 (cuerpo -> estructura_if .)
    CASE            reduce using rule 13 (cuerpo -> estructura_if .)
    UNTIL           reduce using rule 13 (cuerpo -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 13 (cuerpo -> estructura_if .)
    SIMBOLO         reduce using rule 13 (cuerpo -> estructura_if .)
    FLOTANTE        reduce using rule 13 (cuerpo -> estructura_if .)
    ENTERO          reduce using rule 13 (cuerpo -> estructura_if .)
    WHEN            reduce using rule 13 (cuerpo -> estructura_if .)
    CLASS           reduce using rule 13 (cuerpo -> estructura_if .)
    VARIABLECLASE   reduce using rule 13 (cuerpo -> estructura_if .)
    CADENA          reduce using rule 13 (cuerpo -> estructura_if .)
    $end            reduce using rule 13 (cuerpo -> estructura_if .)
    END             reduce using rule 13 (cuerpo -> estructura_if .)

  ! VARIABLE        [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! PRINT           [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! PUTS            [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! PRINTF          [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! GETS            [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! LLAVE_IZ        [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! IF              [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! DEF             [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! CORCHETE_IZ     [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! WHILE           [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! CASE            [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! UNTIL           [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! PARENTESIS_IZ   [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! SIMBOLO         [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! FLOTANTE        [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! ENTERO          [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! WHEN            [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! CLASS           [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! VARIABLECLASE   [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! CADENA          [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! $end            [ reduce using rule 138 (declaracion -> estructura_if .) ]
  ! END             [ reduce using rule 138 (declaracion -> estructura_if .) ]


state 14

    (14) cuerpo -> funciones .
    (142) declaracion -> funciones .

  ! reduce/reduce conflict for VARIABLE resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for PRINT resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for PUTS resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for PRINTF resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for GETS resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for IF resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for DEF resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for WHILE resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for CASE resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for UNTIL resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for ENTERO resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for WHEN resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for CLASS resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for CADENA resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for $end resolved using rule 14 (cuerpo -> funciones .)
  ! reduce/reduce conflict for END resolved using rule 14 (cuerpo -> funciones .)
    VARIABLE        reduce using rule 14 (cuerpo -> funciones .)
    PRINT           reduce using rule 14 (cuerpo -> funciones .)
    PUTS            reduce using rule 14 (cuerpo -> funciones .)
    PRINTF          reduce using rule 14 (cuerpo -> funciones .)
    GETS            reduce using rule 14 (cuerpo -> funciones .)
    LLAVE_IZ        reduce using rule 14 (cuerpo -> funciones .)
    IF              reduce using rule 14 (cuerpo -> funciones .)
    DEF             reduce using rule 14 (cuerpo -> funciones .)
    CORCHETE_IZ     reduce using rule 14 (cuerpo -> funciones .)
    WHILE           reduce using rule 14 (cuerpo -> funciones .)
    CASE            reduce using rule 14 (cuerpo -> funciones .)
    UNTIL           reduce using rule 14 (cuerpo -> funciones .)
    PARENTESIS_IZ   reduce using rule 14 (cuerpo -> funciones .)
    SIMBOLO         reduce using rule 14 (cuerpo -> funciones .)
    FLOTANTE        reduce using rule 14 (cuerpo -> funciones .)
    ENTERO          reduce using rule 14 (cuerpo -> funciones .)
    WHEN            reduce using rule 14 (cuerpo -> funciones .)
    CLASS           reduce using rule 14 (cuerpo -> funciones .)
    VARIABLECLASE   reduce using rule 14 (cuerpo -> funciones .)
    CADENA          reduce using rule 14 (cuerpo -> funciones .)
    $end            reduce using rule 14 (cuerpo -> funciones .)
    END             reduce using rule 14 (cuerpo -> funciones .)

  ! VARIABLE        [ reduce using rule 142 (declaracion -> funciones .) ]
  ! PRINT           [ reduce using rule 142 (declaracion -> funciones .) ]
  ! PUTS            [ reduce using rule 142 (declaracion -> funciones .) ]
  ! PRINTF          [ reduce using rule 142 (declaracion -> funciones .) ]
  ! GETS            [ reduce using rule 142 (declaracion -> funciones .) ]
  ! LLAVE_IZ        [ reduce using rule 142 (declaracion -> funciones .) ]
  ! IF              [ reduce using rule 142 (declaracion -> funciones .) ]
  ! DEF             [ reduce using rule 142 (declaracion -> funciones .) ]
  ! CORCHETE_IZ     [ reduce using rule 142 (declaracion -> funciones .) ]
  ! WHILE           [ reduce using rule 142 (declaracion -> funciones .) ]
  ! CASE            [ reduce using rule 142 (declaracion -> funciones .) ]
  ! UNTIL           [ reduce using rule 142 (declaracion -> funciones .) ]
  ! PARENTESIS_IZ   [ reduce using rule 142 (declaracion -> funciones .) ]
  ! SIMBOLO         [ reduce using rule 142 (declaracion -> funciones .) ]
  ! FLOTANTE        [ reduce using rule 142 (declaracion -> funciones .) ]
  ! ENTERO          [ reduce using rule 142 (declaracion -> funciones .) ]
  ! WHEN            [ reduce using rule 142 (declaracion -> funciones .) ]
  ! CLASS           [ reduce using rule 142 (declaracion -> funciones .) ]
  ! VARIABLECLASE   [ reduce using rule 142 (declaracion -> funciones .) ]
  ! CADENA          [ reduce using rule 142 (declaracion -> funciones .) ]
  ! $end            [ reduce using rule 142 (declaracion -> funciones .) ]
  ! END             [ reduce using rule 142 (declaracion -> funciones .) ]


state 15

    (15) cuerpo -> funcionesEstructuras .

    VARIABLE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINT           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PUTS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PRINTF          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    GETS            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    LLAVE_IZ        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    IF              reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    DEF             reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CORCHETE_IZ     reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHILE           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CASE            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    UNTIL           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    PARENTESIS_IZ   reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    SIMBOLO         reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    FLOTANTE        reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    ENTERO          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    WHEN            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CLASS           reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    VARIABLECLASE   reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    CADENA          reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    $end            reduce using rule 15 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 15 (cuerpo -> funcionesEstructuras .)


state 16

    (16) cuerpo -> array .

    VARIABLE        reduce using rule 16 (cuerpo -> array .)
    PRINT           reduce using rule 16 (cuerpo -> array .)
    PUTS            reduce using rule 16 (cuerpo -> array .)
    PRINTF          reduce using rule 16 (cuerpo -> array .)
    GETS            reduce using rule 16 (cuerpo -> array .)
    LLAVE_IZ        reduce using rule 16 (cuerpo -> array .)
    IF              reduce using rule 16 (cuerpo -> array .)
    DEF             reduce using rule 16 (cuerpo -> array .)
    CORCHETE_IZ     reduce using rule 16 (cuerpo -> array .)
    WHILE           reduce using rule 16 (cuerpo -> array .)
    CASE            reduce using rule 16 (cuerpo -> array .)
    UNTIL           reduce using rule 16 (cuerpo -> array .)
    PARENTESIS_IZ   reduce using rule 16 (cuerpo -> array .)
    SIMBOLO         reduce using rule 16 (cuerpo -> array .)
    FLOTANTE        reduce using rule 16 (cuerpo -> array .)
    ENTERO          reduce using rule 16 (cuerpo -> array .)
    WHEN            reduce using rule 16 (cuerpo -> array .)
    CLASS           reduce using rule 16 (cuerpo -> array .)
    VARIABLECLASE   reduce using rule 16 (cuerpo -> array .)
    CADENA          reduce using rule 16 (cuerpo -> array .)
    $end            reduce using rule 16 (cuerpo -> array .)
    END             reduce using rule 16 (cuerpo -> array .)


state 17

    (17) cuerpo -> each_array .

    VARIABLE        reduce using rule 17 (cuerpo -> each_array .)
    PRINT           reduce using rule 17 (cuerpo -> each_array .)
    PUTS            reduce using rule 17 (cuerpo -> each_array .)
    PRINTF          reduce using rule 17 (cuerpo -> each_array .)
    GETS            reduce using rule 17 (cuerpo -> each_array .)
    LLAVE_IZ        reduce using rule 17 (cuerpo -> each_array .)
    IF              reduce using rule 17 (cuerpo -> each_array .)
    DEF             reduce using rule 17 (cuerpo -> each_array .)
    CORCHETE_IZ     reduce using rule 17 (cuerpo -> each_array .)
    WHILE           reduce using rule 17 (cuerpo -> each_array .)
    CASE            reduce using rule 17 (cuerpo -> each_array .)
    UNTIL           reduce using rule 17 (cuerpo -> each_array .)
    PARENTESIS_IZ   reduce using rule 17 (cuerpo -> each_array .)
    SIMBOLO         reduce using rule 17 (cuerpo -> each_array .)
    FLOTANTE        reduce using rule 17 (cuerpo -> each_array .)
    ENTERO          reduce using rule 17 (cuerpo -> each_array .)
    WHEN            reduce using rule 17 (cuerpo -> each_array .)
    CLASS           reduce using rule 17 (cuerpo -> each_array .)
    VARIABLECLASE   reduce using rule 17 (cuerpo -> each_array .)
    CADENA          reduce using rule 17 (cuerpo -> each_array .)
    $end            reduce using rule 17 (cuerpo -> each_array .)
    END             reduce using rule 17 (cuerpo -> each_array .)


state 18

    (18) cuerpo -> each_hash .

    VARIABLE        reduce using rule 18 (cuerpo -> each_hash .)
    PRINT           reduce using rule 18 (cuerpo -> each_hash .)
    PUTS            reduce using rule 18 (cuerpo -> each_hash .)
    PRINTF          reduce using rule 18 (cuerpo -> each_hash .)
    GETS            reduce using rule 18 (cuerpo -> each_hash .)
    LLAVE_IZ        reduce using rule 18 (cuerpo -> each_hash .)
    IF              reduce using rule 18 (cuerpo -> each_hash .)
    DEF             reduce using rule 18 (cuerpo -> each_hash .)
    CORCHETE_IZ     reduce using rule 18 (cuerpo -> each_hash .)
    WHILE           reduce using rule 18 (cuerpo -> each_hash .)
    CASE            reduce using rule 18 (cuerpo -> each_hash .)
    UNTIL           reduce using rule 18 (cuerpo -> each_hash .)
    PARENTESIS_IZ   reduce using rule 18 (cuerpo -> each_hash .)
    SIMBOLO         reduce using rule 18 (cuerpo -> each_hash .)
    FLOTANTE        reduce using rule 18 (cuerpo -> each_hash .)
    ENTERO          reduce using rule 18 (cuerpo -> each_hash .)
    WHEN            reduce using rule 18 (cuerpo -> each_hash .)
    CLASS           reduce using rule 18 (cuerpo -> each_hash .)
    VARIABLECLASE   reduce using rule 18 (cuerpo -> each_hash .)
    CADENA          reduce using rule 18 (cuerpo -> each_hash .)
    $end            reduce using rule 18 (cuerpo -> each_hash .)
    END             reduce using rule 18 (cuerpo -> each_hash .)


state 19

    (19) cuerpo -> sentencia_while .
    (140) declaracion -> sentencia_while .

  ! reduce/reduce conflict for VARIABLE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PRINT resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PUTS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PRINTF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for GETS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for IF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for DEF resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for WHILE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CASE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for UNTIL resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for ENTERO resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for WHEN resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CLASS resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for CADENA resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for $end resolved using rule 19 (cuerpo -> sentencia_while .)
  ! reduce/reduce conflict for END resolved using rule 19 (cuerpo -> sentencia_while .)
    VARIABLE        reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINT           reduce using rule 19 (cuerpo -> sentencia_while .)
    PUTS            reduce using rule 19 (cuerpo -> sentencia_while .)
    PRINTF          reduce using rule 19 (cuerpo -> sentencia_while .)
    GETS            reduce using rule 19 (cuerpo -> sentencia_while .)
    LLAVE_IZ        reduce using rule 19 (cuerpo -> sentencia_while .)
    IF              reduce using rule 19 (cuerpo -> sentencia_while .)
    DEF             reduce using rule 19 (cuerpo -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 19 (cuerpo -> sentencia_while .)
    WHILE           reduce using rule 19 (cuerpo -> sentencia_while .)
    CASE            reduce using rule 19 (cuerpo -> sentencia_while .)
    UNTIL           reduce using rule 19 (cuerpo -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 19 (cuerpo -> sentencia_while .)
    SIMBOLO         reduce using rule 19 (cuerpo -> sentencia_while .)
    FLOTANTE        reduce using rule 19 (cuerpo -> sentencia_while .)
    ENTERO          reduce using rule 19 (cuerpo -> sentencia_while .)
    WHEN            reduce using rule 19 (cuerpo -> sentencia_while .)
    CLASS           reduce using rule 19 (cuerpo -> sentencia_while .)
    VARIABLECLASE   reduce using rule 19 (cuerpo -> sentencia_while .)
    CADENA          reduce using rule 19 (cuerpo -> sentencia_while .)
    $end            reduce using rule 19 (cuerpo -> sentencia_while .)
    END             reduce using rule 19 (cuerpo -> sentencia_while .)

  ! VARIABLE        [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! PRINT           [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! PUTS            [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! PRINTF          [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! GETS            [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! LLAVE_IZ        [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! IF              [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! DEF             [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! CORCHETE_IZ     [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! WHILE           [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! CASE            [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! UNTIL           [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! PARENTESIS_IZ   [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! SIMBOLO         [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! FLOTANTE        [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! ENTERO          [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! WHEN            [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! CLASS           [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! VARIABLECLASE   [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! CADENA          [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! $end            [ reduce using rule 140 (declaracion -> sentencia_while .) ]
  ! END             [ reduce using rule 140 (declaracion -> sentencia_while .) ]


state 20

    (20) cuerpo -> sentencia_while_bool .

<<<<<<< HEAD
    VARIABLE        reduce using rule 20 (cuerpo -> sentencia_case .)
    PRINT           reduce using rule 20 (cuerpo -> sentencia_case .)
    PUTS            reduce using rule 20 (cuerpo -> sentencia_case .)
    PRINTF          reduce using rule 20 (cuerpo -> sentencia_case .)
    GETS            reduce using rule 20 (cuerpo -> sentencia_case .)
    LLAVE_IZ        reduce using rule 20 (cuerpo -> sentencia_case .)
    IF              reduce using rule 20 (cuerpo -> sentencia_case .)
    DEF             reduce using rule 20 (cuerpo -> sentencia_case .)
    CORCHETE_IZ     reduce using rule 20 (cuerpo -> sentencia_case .)
    WHILE           reduce using rule 20 (cuerpo -> sentencia_case .)
    CASE            reduce using rule 20 (cuerpo -> sentencia_case .)
    UNTIL           reduce using rule 20 (cuerpo -> sentencia_case .)
    PARENTESIS_IZ   reduce using rule 20 (cuerpo -> sentencia_case .)
    SIMBOLO         reduce using rule 20 (cuerpo -> sentencia_case .)
    FLOTANTE        reduce using rule 20 (cuerpo -> sentencia_case .)
    ENTERO          reduce using rule 20 (cuerpo -> sentencia_case .)
    WHEN            reduce using rule 20 (cuerpo -> sentencia_case .)
    CLASS           reduce using rule 20 (cuerpo -> sentencia_case .)
    VARIABLECLASE   reduce using rule 20 (cuerpo -> sentencia_case .)
    CADENA          reduce using rule 20 (cuerpo -> sentencia_case .)
    $end            reduce using rule 20 (cuerpo -> sentencia_case .)
    END             reduce using rule 20 (cuerpo -> sentencia_case .)
=======
    VARIABLE        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PRINT           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PUTS            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PRINTF          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    GETS            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    IF              reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    DEF             reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    WHILE           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CASE            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    UNTIL           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    SIMBOLO         reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    FLOTANTE        reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    ENTERO          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    WHEN            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CLASS           reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    CADENA          reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    $end            reduce using rule 20 (cuerpo -> sentencia_while_bool .)
    END             reduce using rule 20 (cuerpo -> sentencia_while_bool .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 21

    (21) cuerpo -> sentencia_case .

<<<<<<< HEAD
    VARIABLE        reduce using rule 21 (cuerpo -> sentencias_when .)
    PRINT           reduce using rule 21 (cuerpo -> sentencias_when .)
    PUTS            reduce using rule 21 (cuerpo -> sentencias_when .)
    PRINTF          reduce using rule 21 (cuerpo -> sentencias_when .)
    GETS            reduce using rule 21 (cuerpo -> sentencias_when .)
    LLAVE_IZ        reduce using rule 21 (cuerpo -> sentencias_when .)
    IF              reduce using rule 21 (cuerpo -> sentencias_when .)
    DEF             reduce using rule 21 (cuerpo -> sentencias_when .)
    CORCHETE_IZ     reduce using rule 21 (cuerpo -> sentencias_when .)
    WHILE           reduce using rule 21 (cuerpo -> sentencias_when .)
    CASE            reduce using rule 21 (cuerpo -> sentencias_when .)
    UNTIL           reduce using rule 21 (cuerpo -> sentencias_when .)
    PARENTESIS_IZ   reduce using rule 21 (cuerpo -> sentencias_when .)
    SIMBOLO         reduce using rule 21 (cuerpo -> sentencias_when .)
    FLOTANTE        reduce using rule 21 (cuerpo -> sentencias_when .)
    ENTERO          reduce using rule 21 (cuerpo -> sentencias_when .)
    WHEN            reduce using rule 21 (cuerpo -> sentencias_when .)
    CLASS           reduce using rule 21 (cuerpo -> sentencias_when .)
    VARIABLECLASE   reduce using rule 21 (cuerpo -> sentencias_when .)
    CADENA          reduce using rule 21 (cuerpo -> sentencias_when .)
    $end            reduce using rule 21 (cuerpo -> sentencias_when .)
    END             reduce using rule 21 (cuerpo -> sentencias_when .)
=======
    VARIABLE        reduce using rule 21 (cuerpo -> sentencia_case .)
    PRINT           reduce using rule 21 (cuerpo -> sentencia_case .)
    PUTS            reduce using rule 21 (cuerpo -> sentencia_case .)
    PRINTF          reduce using rule 21 (cuerpo -> sentencia_case .)
    GETS            reduce using rule 21 (cuerpo -> sentencia_case .)
    LLAVE_IZ        reduce using rule 21 (cuerpo -> sentencia_case .)
    IF              reduce using rule 21 (cuerpo -> sentencia_case .)
    DEF             reduce using rule 21 (cuerpo -> sentencia_case .)
    CORCHETE_IZ     reduce using rule 21 (cuerpo -> sentencia_case .)
    WHILE           reduce using rule 21 (cuerpo -> sentencia_case .)
    CASE            reduce using rule 21 (cuerpo -> sentencia_case .)
    UNTIL           reduce using rule 21 (cuerpo -> sentencia_case .)
    PARENTESIS_IZ   reduce using rule 21 (cuerpo -> sentencia_case .)
    SIMBOLO         reduce using rule 21 (cuerpo -> sentencia_case .)
    FLOTANTE        reduce using rule 21 (cuerpo -> sentencia_case .)
    ENTERO          reduce using rule 21 (cuerpo -> sentencia_case .)
    WHEN            reduce using rule 21 (cuerpo -> sentencia_case .)
    CLASS           reduce using rule 21 (cuerpo -> sentencia_case .)
    CADENA          reduce using rule 21 (cuerpo -> sentencia_case .)
    $end            reduce using rule 21 (cuerpo -> sentencia_case .)
    END             reduce using rule 21 (cuerpo -> sentencia_case .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 22

    (22) cuerpo -> sentencias_when .

<<<<<<< HEAD
    VARIABLE        reduce using rule 22 (cuerpo -> sentencia_until .)
    PRINT           reduce using rule 22 (cuerpo -> sentencia_until .)
    PUTS            reduce using rule 22 (cuerpo -> sentencia_until .)
    PRINTF          reduce using rule 22 (cuerpo -> sentencia_until .)
    GETS            reduce using rule 22 (cuerpo -> sentencia_until .)
    LLAVE_IZ        reduce using rule 22 (cuerpo -> sentencia_until .)
    IF              reduce using rule 22 (cuerpo -> sentencia_until .)
    DEF             reduce using rule 22 (cuerpo -> sentencia_until .)
    CORCHETE_IZ     reduce using rule 22 (cuerpo -> sentencia_until .)
    WHILE           reduce using rule 22 (cuerpo -> sentencia_until .)
    CASE            reduce using rule 22 (cuerpo -> sentencia_until .)
    UNTIL           reduce using rule 22 (cuerpo -> sentencia_until .)
    PARENTESIS_IZ   reduce using rule 22 (cuerpo -> sentencia_until .)
    SIMBOLO         reduce using rule 22 (cuerpo -> sentencia_until .)
    FLOTANTE        reduce using rule 22 (cuerpo -> sentencia_until .)
    ENTERO          reduce using rule 22 (cuerpo -> sentencia_until .)
    WHEN            reduce using rule 22 (cuerpo -> sentencia_until .)
    CLASS           reduce using rule 22 (cuerpo -> sentencia_until .)
    VARIABLECLASE   reduce using rule 22 (cuerpo -> sentencia_until .)
    CADENA          reduce using rule 22 (cuerpo -> sentencia_until .)
    $end            reduce using rule 22 (cuerpo -> sentencia_until .)
    END             reduce using rule 22 (cuerpo -> sentencia_until .)
=======
    VARIABLE        reduce using rule 22 (cuerpo -> sentencias_when .)
    PRINT           reduce using rule 22 (cuerpo -> sentencias_when .)
    PUTS            reduce using rule 22 (cuerpo -> sentencias_when .)
    PRINTF          reduce using rule 22 (cuerpo -> sentencias_when .)
    GETS            reduce using rule 22 (cuerpo -> sentencias_when .)
    LLAVE_IZ        reduce using rule 22 (cuerpo -> sentencias_when .)
    IF              reduce using rule 22 (cuerpo -> sentencias_when .)
    DEF             reduce using rule 22 (cuerpo -> sentencias_when .)
    CORCHETE_IZ     reduce using rule 22 (cuerpo -> sentencias_when .)
    WHILE           reduce using rule 22 (cuerpo -> sentencias_when .)
    CASE            reduce using rule 22 (cuerpo -> sentencias_when .)
    UNTIL           reduce using rule 22 (cuerpo -> sentencias_when .)
    PARENTESIS_IZ   reduce using rule 22 (cuerpo -> sentencias_when .)
    SIMBOLO         reduce using rule 22 (cuerpo -> sentencias_when .)
    FLOTANTE        reduce using rule 22 (cuerpo -> sentencias_when .)
    ENTERO          reduce using rule 22 (cuerpo -> sentencias_when .)
    WHEN            reduce using rule 22 (cuerpo -> sentencias_when .)
    CLASS           reduce using rule 22 (cuerpo -> sentencias_when .)
    CADENA          reduce using rule 22 (cuerpo -> sentencias_when .)
    $end            reduce using rule 22 (cuerpo -> sentencias_when .)
    END             reduce using rule 22 (cuerpo -> sentencias_when .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 23

    (23) cuerpo -> sentencia_until .

<<<<<<< HEAD
    VARIABLE        reduce using rule 23 (cuerpo -> definicion_clase .)
    PRINT           reduce using rule 23 (cuerpo -> definicion_clase .)
    PUTS            reduce using rule 23 (cuerpo -> definicion_clase .)
    PRINTF          reduce using rule 23 (cuerpo -> definicion_clase .)
    GETS            reduce using rule 23 (cuerpo -> definicion_clase .)
    LLAVE_IZ        reduce using rule 23 (cuerpo -> definicion_clase .)
    IF              reduce using rule 23 (cuerpo -> definicion_clase .)
    DEF             reduce using rule 23 (cuerpo -> definicion_clase .)
    CORCHETE_IZ     reduce using rule 23 (cuerpo -> definicion_clase .)
    WHILE           reduce using rule 23 (cuerpo -> definicion_clase .)
    CASE            reduce using rule 23 (cuerpo -> definicion_clase .)
    UNTIL           reduce using rule 23 (cuerpo -> definicion_clase .)
    PARENTESIS_IZ   reduce using rule 23 (cuerpo -> definicion_clase .)
    SIMBOLO         reduce using rule 23 (cuerpo -> definicion_clase .)
    FLOTANTE        reduce using rule 23 (cuerpo -> definicion_clase .)
    ENTERO          reduce using rule 23 (cuerpo -> definicion_clase .)
    WHEN            reduce using rule 23 (cuerpo -> definicion_clase .)
    CLASS           reduce using rule 23 (cuerpo -> definicion_clase .)
    VARIABLECLASE   reduce using rule 23 (cuerpo -> definicion_clase .)
    CADENA          reduce using rule 23 (cuerpo -> definicion_clase .)
    $end            reduce using rule 23 (cuerpo -> definicion_clase .)
    END             reduce using rule 23 (cuerpo -> definicion_clase .)
=======
    VARIABLE        reduce using rule 23 (cuerpo -> sentencia_until .)
    PRINT           reduce using rule 23 (cuerpo -> sentencia_until .)
    PUTS            reduce using rule 23 (cuerpo -> sentencia_until .)
    PRINTF          reduce using rule 23 (cuerpo -> sentencia_until .)
    GETS            reduce using rule 23 (cuerpo -> sentencia_until .)
    LLAVE_IZ        reduce using rule 23 (cuerpo -> sentencia_until .)
    IF              reduce using rule 23 (cuerpo -> sentencia_until .)
    DEF             reduce using rule 23 (cuerpo -> sentencia_until .)
    CORCHETE_IZ     reduce using rule 23 (cuerpo -> sentencia_until .)
    WHILE           reduce using rule 23 (cuerpo -> sentencia_until .)
    CASE            reduce using rule 23 (cuerpo -> sentencia_until .)
    UNTIL           reduce using rule 23 (cuerpo -> sentencia_until .)
    PARENTESIS_IZ   reduce using rule 23 (cuerpo -> sentencia_until .)
    SIMBOLO         reduce using rule 23 (cuerpo -> sentencia_until .)
    FLOTANTE        reduce using rule 23 (cuerpo -> sentencia_until .)
    ENTERO          reduce using rule 23 (cuerpo -> sentencia_until .)
    WHEN            reduce using rule 23 (cuerpo -> sentencia_until .)
    CLASS           reduce using rule 23 (cuerpo -> sentencia_until .)
    CADENA          reduce using rule 23 (cuerpo -> sentencia_until .)
    $end            reduce using rule 23 (cuerpo -> sentencia_until .)
    END             reduce using rule 23 (cuerpo -> sentencia_until .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 24

    (24) cuerpo -> definicion_clase .

<<<<<<< HEAD
    VARIABLE        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PRINT           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PUTS            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PRINTF          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    GETS            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    LLAVE_IZ        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    IF              reduce using rule 24 (cuerpo -> entero_a_flotante .)
    DEF             reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 24 (cuerpo -> entero_a_flotante .)
    WHILE           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CASE            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    UNTIL           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 24 (cuerpo -> entero_a_flotante .)
    SIMBOLO         reduce using rule 24 (cuerpo -> entero_a_flotante .)
    FLOTANTE        reduce using rule 24 (cuerpo -> entero_a_flotante .)
    ENTERO          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    WHEN            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CLASS           reduce using rule 24 (cuerpo -> entero_a_flotante .)
    VARIABLECLASE   reduce using rule 24 (cuerpo -> entero_a_flotante .)
    CADENA          reduce using rule 24 (cuerpo -> entero_a_flotante .)
    $end            reduce using rule 24 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 24 (cuerpo -> entero_a_flotante .)
=======
    VARIABLE        reduce using rule 24 (cuerpo -> definicion_clase .)
    PRINT           reduce using rule 24 (cuerpo -> definicion_clase .)
    PUTS            reduce using rule 24 (cuerpo -> definicion_clase .)
    PRINTF          reduce using rule 24 (cuerpo -> definicion_clase .)
    GETS            reduce using rule 24 (cuerpo -> definicion_clase .)
    LLAVE_IZ        reduce using rule 24 (cuerpo -> definicion_clase .)
    IF              reduce using rule 24 (cuerpo -> definicion_clase .)
    DEF             reduce using rule 24 (cuerpo -> definicion_clase .)
    CORCHETE_IZ     reduce using rule 24 (cuerpo -> definicion_clase .)
    WHILE           reduce using rule 24 (cuerpo -> definicion_clase .)
    CASE            reduce using rule 24 (cuerpo -> definicion_clase .)
    UNTIL           reduce using rule 24 (cuerpo -> definicion_clase .)
    PARENTESIS_IZ   reduce using rule 24 (cuerpo -> definicion_clase .)
    SIMBOLO         reduce using rule 24 (cuerpo -> definicion_clase .)
    FLOTANTE        reduce using rule 24 (cuerpo -> definicion_clase .)
    ENTERO          reduce using rule 24 (cuerpo -> definicion_clase .)
    WHEN            reduce using rule 24 (cuerpo -> definicion_clase .)
    CLASS           reduce using rule 24 (cuerpo -> definicion_clase .)
    CADENA          reduce using rule 24 (cuerpo -> definicion_clase .)
    $end            reduce using rule 24 (cuerpo -> definicion_clase .)
    END             reduce using rule 24 (cuerpo -> definicion_clase .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 25

<<<<<<< HEAD
    (25) cuerpo -> declaracion .

    VARIABLE        reduce using rule 25 (cuerpo -> declaracion .)
    PRINT           reduce using rule 25 (cuerpo -> declaracion .)
    PUTS            reduce using rule 25 (cuerpo -> declaracion .)
    PRINTF          reduce using rule 25 (cuerpo -> declaracion .)
    GETS            reduce using rule 25 (cuerpo -> declaracion .)
    LLAVE_IZ        reduce using rule 25 (cuerpo -> declaracion .)
    IF              reduce using rule 25 (cuerpo -> declaracion .)
    DEF             reduce using rule 25 (cuerpo -> declaracion .)
    CORCHETE_IZ     reduce using rule 25 (cuerpo -> declaracion .)
    WHILE           reduce using rule 25 (cuerpo -> declaracion .)
    CASE            reduce using rule 25 (cuerpo -> declaracion .)
    UNTIL           reduce using rule 25 (cuerpo -> declaracion .)
    PARENTESIS_IZ   reduce using rule 25 (cuerpo -> declaracion .)
    SIMBOLO         reduce using rule 25 (cuerpo -> declaracion .)
    FLOTANTE        reduce using rule 25 (cuerpo -> declaracion .)
    ENTERO          reduce using rule 25 (cuerpo -> declaracion .)
    WHEN            reduce using rule 25 (cuerpo -> declaracion .)
    CLASS           reduce using rule 25 (cuerpo -> declaracion .)
    VARIABLECLASE   reduce using rule 25 (cuerpo -> declaracion .)
    CADENA          reduce using rule 25 (cuerpo -> declaracion .)
    $end            reduce using rule 25 (cuerpo -> declaracion .)
    END             reduce using rule 25 (cuerpo -> declaracion .)
=======
    (25) cuerpo -> entero_a_flotante .

    VARIABLE        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PRINT           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PUTS            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PRINTF          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    GETS            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    LLAVE_IZ        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    IF              reduce using rule 25 (cuerpo -> entero_a_flotante .)
    DEF             reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 25 (cuerpo -> entero_a_flotante .)
    WHILE           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CASE            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    UNTIL           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 25 (cuerpo -> entero_a_flotante .)
    SIMBOLO         reduce using rule 25 (cuerpo -> entero_a_flotante .)
    FLOTANTE        reduce using rule 25 (cuerpo -> entero_a_flotante .)
    ENTERO          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    WHEN            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CLASS           reduce using rule 25 (cuerpo -> entero_a_flotante .)
    CADENA          reduce using rule 25 (cuerpo -> entero_a_flotante .)
    $end            reduce using rule 25 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 25 (cuerpo -> entero_a_flotante .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 26

    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

<<<<<<< HEAD
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    DIVISION        shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    EXPONENCIACION  shift and go to state 62
    MODULO          shift and go to state 63

    operadores                     shift and go to state 57
=======
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    DIVISION        shift and go to state 58
    MULTIPLICACION  shift and go to state 59
    EXPONENCIACION  shift and go to state 60
    MODULO          shift and go to state 61

    operadores                     shift and go to state 55
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 27

    (28) input_concatenacion -> concatenacionSimpleCadena .
    (34) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    VARIABLE        reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINT           reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    PUTS            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINTF          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    GETS            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    LLAVE_IZ        reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    IF              reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    DEF             reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    CORCHETE_IZ     reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    WHILE           reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    CASE            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    UNTIL           reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    PARENTESIS_IZ   reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    SIMBOLO         reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    FLOTANTE        reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    ENTERO          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    CLASS           reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
<<<<<<< HEAD
    VARIABLECLASE   reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    CADENA          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    $end            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 64
=======
    CADENA          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    $end            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    VARIABLECLASE   reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 28 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 62
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 28

    (29) input_concatenacion -> concatenacion_funcion .

    VARIABLE        reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    PRINT           reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    PUTS            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    PRINTF          reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    GETS            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    LLAVE_IZ        reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    IF              reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    DEF             reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    CORCHETE_IZ     reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    WHILE           reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    CASE            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    UNTIL           reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    PARENTESIS_IZ   reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    SIMBOLO         reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    FLOTANTE        reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    ENTERO          reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    CLASS           reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
<<<<<<< HEAD
    VARIABLECLASE   reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    CADENA          reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    $end            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
=======
    CADENA          reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    $end            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    VARIABLECLASE   reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    ELSE            reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 29 (input_concatenacion -> concatenacion_funcion .)


state 29

<<<<<<< HEAD
    (69) asignacion -> VARIABLE . IGUAL CADENA
    (70) asignacion -> VARIABLE . IGUAL expresionNumerica
    (71) asignacion -> VARIABLE . IGUAL hashes
    (72) asignacion -> VARIABLE . IGUAL SIMBOLO
    (73) asignacion -> VARIABLE . IGUAL array
    (74) asignacion -> VARIABLE . IGUAL input_concatenacion
    (75) asignacion -> VARIABLE . IGUAL booleanos
    (76) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (77) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (118) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (119) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (87) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (160) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
=======
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (119) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (120) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (88) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (163) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (38) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (48) expresionNumerica -> VARIABLE .
    (30) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorSimbolo -> VARIABLE .
<<<<<<< HEAD
    (68) asignacion_clase -> VARIABLE . IGUAL booleanos
    (32) valorCadena -> VARIABLE .
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE
=======
    (32) valorCadena -> VARIABLE .
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! reduce/reduce conflict for MAS resolved using rule 32 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
<<<<<<< HEAD
    IGUAL           shift and go to state 65
    PUNTO           shift and go to state 67
=======
    IGUAL           shift and go to state 63
    PUNTO           shift and go to state 65
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)
<<<<<<< HEAD
    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74
=======
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! MAS             [ reduce using rule 48 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]

<<<<<<< HEAD
    operadoresComparacion          shift and go to state 66
=======
    operadoresComparacion          shift and go to state 64
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 30

    (31) valorCadena -> CADENA .

    MAS             reduce using rule 31 (valorCadena -> CADENA .)
    VARIABLE        reduce using rule 31 (valorCadena -> CADENA .)
    PRINT           reduce using rule 31 (valorCadena -> CADENA .)
    PUTS            reduce using rule 31 (valorCadena -> CADENA .)
    PRINTF          reduce using rule 31 (valorCadena -> CADENA .)
    GETS            reduce using rule 31 (valorCadena -> CADENA .)
    LLAVE_IZ        reduce using rule 31 (valorCadena -> CADENA .)
    IF              reduce using rule 31 (valorCadena -> CADENA .)
    DEF             reduce using rule 31 (valorCadena -> CADENA .)
    CORCHETE_IZ     reduce using rule 31 (valorCadena -> CADENA .)
    WHILE           reduce using rule 31 (valorCadena -> CADENA .)
    CASE            reduce using rule 31 (valorCadena -> CADENA .)
    UNTIL           reduce using rule 31 (valorCadena -> CADENA .)
    PARENTESIS_IZ   reduce using rule 31 (valorCadena -> CADENA .)
    SIMBOLO         reduce using rule 31 (valorCadena -> CADENA .)
    FLOTANTE        reduce using rule 31 (valorCadena -> CADENA .)
    ENTERO          reduce using rule 31 (valorCadena -> CADENA .)
    WHEN            reduce using rule 31 (valorCadena -> CADENA .)
    CLASS           reduce using rule 31 (valorCadena -> CADENA .)
<<<<<<< HEAD
    VARIABLECLASE   reduce using rule 31 (valorCadena -> CADENA .)
    CADENA          reduce using rule 31 (valorCadena -> CADENA .)
    $end            reduce using rule 31 (valorCadena -> CADENA .)
    DO              reduce using rule 31 (valorCadena -> CADENA .)
    END             reduce using rule 31 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 31 (valorCadena -> CADENA .)
=======
    CADENA          reduce using rule 31 (valorCadena -> CADENA .)
    $end            reduce using rule 31 (valorCadena -> CADENA .)
    END             reduce using rule 31 (valorCadena -> CADENA .)
    VARIABLECLASE   reduce using rule 31 (valorCadena -> CADENA .)
    DO              reduce using rule 31 (valorCadena -> CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    ELSE            reduce using rule 31 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 31 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 31 (valorCadena -> CADENA .)


state 31

    (26) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    NAVE            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    PRINTF          reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    DEF             reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    CASE            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    UNTIL           reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    CLASS           reduce using rule 26 (valorSimbolo -> SIMBOLO .)
<<<<<<< HEAD
    VARIABLECLASE   reduce using rule 26 (valorSimbolo -> SIMBOLO .)
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    CADENA          reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    Y_SIGNO         reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    O_SIGNO         reduce using rule 26 (valorSimbolo -> SIMBOLO .)
<<<<<<< HEAD
=======
    VARIABLECLASE   reduce using rule 26 (valorSimbolo -> SIMBOLO .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    DO              reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 26 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_DER  reduce using rule 26 (valorSimbolo -> SIMBOLO .)


state 32

<<<<<<< HEAD
    (62) impresion -> valor_print . valores
    (52) valores -> . valor
    (53) valores -> . valor COMA valores
    (54) valores -> . valor estructura_ifUnaLinea
    (57) valor -> . CADENA
    (58) valor -> . valorNumerico
    (59) valor -> . VARIABLE
    (60) valor -> . VARIABLECLASE
    (61) valor -> . SIMBOLO
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 77
    VARIABLE        shift and go to state 79
    VARIABLECLASE   shift and go to state 80
    SIMBOLO         shift and go to state 81
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    valores                        shift and go to state 75
    valor                          shift and go to state 76
    valorNumerico                  shift and go to state 78

state 33

    (91) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (50) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 82
=======
    (63) impresion -> valor_print . valores
    (52) valores -> . valor
    (53) valores -> . valor COMA valores
    (54) valores -> . valor estructura_ifUnaLinea
    (55) valores -> . valor sentencia_while_bool
    (58) valor -> . CADENA
    (59) valor -> . valorNumerico
    (60) valor -> . VARIABLE
    (61) valor -> . VARIABLECLASE
    (62) valor -> . SIMBOLO
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 75
    VARIABLE        shift and go to state 77
    VARIABLECLASE   shift and go to state 78
    SIMBOLO         shift and go to state 79
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    valores                        shift and go to state 73
    valor                          shift and go to state 74
    valorNumerico                  shift and go to state 76

state 33

    (92) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (50) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 80
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    CADENA          reduce using rule 50 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 50 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 50 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 50 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 50 (valor_print -> PRINT .)
    ENTERO          reduce using rule 50 (valor_print -> PRINT .)


state 34

    (47) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 34
<<<<<<< HEAD
    VARIABLE        shift and go to state 85
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    operacionAritmetica            shift and go to state 83
    expresionNumerica              shift and go to state 26
    valorNumerico                  shift and go to state 84

state 35

    (92) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> PUTS .
=======
    VARIABLE        shift and go to state 83
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    operacionAritmetica            shift and go to state 81
    expresionNumerica              shift and go to state 26
    valorNumerico                  shift and go to state 82

state 35

    (93) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> PUTS .
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (51) valor_print -> PUTS .

  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! reduce/reduce conflict for CADENA resolved using rule 51 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 51 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 51 (valor_print -> PUTS .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 51 (valor_print -> PUTS .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 51 (valor_print -> PUTS .)
  ! reduce/reduce conflict for ENTERO resolved using rule 51 (valor_print -> PUTS .)
<<<<<<< HEAD
    PARENTESIS_IZ   shift and go to state 86
    PRINT           reduce using rule 93 (impresion_vacia -> PUTS .)
    PUTS            reduce using rule 93 (impresion_vacia -> PUTS .)
    PRINTF          reduce using rule 93 (impresion_vacia -> PUTS .)
    GETS            reduce using rule 93 (impresion_vacia -> PUTS .)
    LLAVE_IZ        reduce using rule 93 (impresion_vacia -> PUTS .)
    IF              reduce using rule 93 (impresion_vacia -> PUTS .)
    DEF             reduce using rule 93 (impresion_vacia -> PUTS .)
    CORCHETE_IZ     reduce using rule 93 (impresion_vacia -> PUTS .)
    WHILE           reduce using rule 93 (impresion_vacia -> PUTS .)
    CASE            reduce using rule 93 (impresion_vacia -> PUTS .)
    UNTIL           reduce using rule 93 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 93 (impresion_vacia -> PUTS .)
    CLASS           reduce using rule 93 (impresion_vacia -> PUTS .)
    $end            reduce using rule 93 (impresion_vacia -> PUTS .)
    DO              reduce using rule 93 (impresion_vacia -> PUTS .)
    END             reduce using rule 93 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 93 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 93 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 93 (impresion_vacia -> PUTS .)
=======
    PARENTESIS_IZ   shift and go to state 84
    PRINT           reduce using rule 94 (impresion_vacia -> PUTS .)
    PUTS            reduce using rule 94 (impresion_vacia -> PUTS .)
    PRINTF          reduce using rule 94 (impresion_vacia -> PUTS .)
    GETS            reduce using rule 94 (impresion_vacia -> PUTS .)
    LLAVE_IZ        reduce using rule 94 (impresion_vacia -> PUTS .)
    IF              reduce using rule 94 (impresion_vacia -> PUTS .)
    DEF             reduce using rule 94 (impresion_vacia -> PUTS .)
    CORCHETE_IZ     reduce using rule 94 (impresion_vacia -> PUTS .)
    WHILE           reduce using rule 94 (impresion_vacia -> PUTS .)
    CASE            reduce using rule 94 (impresion_vacia -> PUTS .)
    UNTIL           reduce using rule 94 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 94 (impresion_vacia -> PUTS .)
    CLASS           reduce using rule 94 (impresion_vacia -> PUTS .)
    $end            reduce using rule 94 (impresion_vacia -> PUTS .)
    DO              reduce using rule 94 (impresion_vacia -> PUTS .)
    END             reduce using rule 94 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 94 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 94 (impresion_vacia -> PUTS .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    CADENA          reduce using rule 51 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 51 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 51 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 51 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 51 (valor_print -> PUTS .)
    ENTERO          reduce using rule 51 (valor_print -> PUTS .)

<<<<<<< HEAD
  ! VARIABLE        [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! PARENTESIS_IZ   [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! SIMBOLO         [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! FLOTANTE        [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! ENTERO          [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! VARIABLECLASE   [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
  ! CADENA          [ reduce using rule 93 (impresion_vacia -> PUTS .) ]
=======
  ! VARIABLE        [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! PARENTESIS_IZ   [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! SIMBOLO         [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! FLOTANTE        [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! ENTERO          [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! CADENA          [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
  ! VARIABLECLASE   [ reduce using rule 94 (impresion_vacia -> PUTS .) ]
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 36

<<<<<<< HEAD
    (94) impresion_vacia -> PRINTF . PARENTESIS_IZ PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 87
=======
    (95) impresion_vacia -> PRINTF . PARENTESIS_IZ PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 85
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 37

<<<<<<< HEAD
    (104) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74
=======
    (105) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    operadoresComparacion          shift and go to state 88

state 38

<<<<<<< HEAD
    (105) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (45) expresionNumerica -> valorNumerico .
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE
=======
    (106) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (45) expresionNumerica -> valorNumerico .
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    MAS             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 45 (expresionNumerica -> valorNumerico .)
<<<<<<< HEAD
    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74

    operadoresComparacion          shift and go to state 89

state 39

    (109) solicitudDatosTeclado -> GETS .
    (110) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    VARIABLE        reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    PRINT           reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    PUTS            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    PRINTF          reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    GETS            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    LLAVE_IZ        reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    IF              reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    DEF             reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    CORCHETE_IZ     reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    WHILE           reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    CASE            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    UNTIL           reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    PARENTESIS_IZ   reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    SIMBOLO         reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    FLOTANTE        reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    ENTERO          reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    CLASS           reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    VARIABLECLASE   reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    CADENA          reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    $end            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 109 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 90
=======
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72

    operadoresComparacion          shift and go to state 87

state 39

    (110) solicitudDatosTeclado -> GETS .
    (111) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    VARIABLE        reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    PRINT           reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    PUTS            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    PRINTF          reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    GETS            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    LLAVE_IZ        reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    IF              reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    DEF             reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    CORCHETE_IZ     reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    WHILE           reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    CASE            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    UNTIL           reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    PARENTESIS_IZ   reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    SIMBOLO         reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    FLOTANTE        reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    ENTERO          reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    CLASS           reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    CADENA          reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    $end            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    VARIABLECLASE   reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 110 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 88
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 40

<<<<<<< HEAD
    (152) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (153) hashes -> LLAVE_IZ . LLAVE_DER
    (158) elemento_hash -> . claveValor
    (159) elemento_hash -> . claveValor COMA elemento_hash
    (154) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (155) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (156) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (157) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 92
    VARIABLE        shift and go to state 94
    CADENA          shift and go to state 95

    elemento_hash                  shift and go to state 91
    claveValor                     shift and go to state 93

state 41

    (128) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (126) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
=======
    (155) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (156) hashes -> LLAVE_IZ . LLAVE_DER
    (161) elemento_hash -> . claveValor
    (162) elemento_hash -> . claveValor COMA elemento_hash
    (157) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (158) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (159) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (160) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 90
    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93

    elemento_hash                  shift and go to state 89
    claveValor                     shift and go to state 91

state 41

    (129) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (127) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

<<<<<<< HEAD
    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    condicionIf                    shift and go to state 96
    expresiones_booleanas          shift and go to state 97
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 42

    (111) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> DEF . VARIABLE declaraciones END

    VARIABLE        shift and go to state 101
=======
    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    condicionIf                    shift and go to state 94
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 42

    (112) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> DEF . VARIABLE declaraciones END

    VARIABLE        shift and go to state 99
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 43

<<<<<<< HEAD
    (85) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (86) array -> CORCHETE_IZ . CORCHETE_DER
    (78) elementos_array -> . elemento_array COMA elementos_array
    (79) elementos_array -> . elemento_array
    (80) elemento_array -> . CADENA
    (81) elemento_array -> . ENTERO
    (82) elemento_array -> . FLOTANTE
    (83) elemento_array -> . array
    (84) elemento_array -> . VARIABLE
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 103
    CADENA          shift and go to state 105
    ENTERO          shift and go to state 106
    FLOTANTE        shift and go to state 107
    VARIABLE        shift and go to state 109
    CORCHETE_IZ     shift and go to state 43

    elementos_array                shift and go to state 102
    elemento_array                 shift and go to state 104
    array                          shift and go to state 108

state 44

    (145) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
=======
    (86) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (87) array -> CORCHETE_IZ . CORCHETE_DER
    (79) elementos_array -> . elemento_array COMA elementos_array
    (80) elementos_array -> . elemento_array
    (81) elemento_array -> . CADENA
    (82) elemento_array -> . ENTERO
    (83) elemento_array -> . FLOTANTE
    (84) elemento_array -> . array
    (85) elemento_array -> . VARIABLE
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 101
    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 43

    elementos_array                shift and go to state 100
    elemento_array                 shift and go to state 102
    array                          shift and go to state 106

state 44

    (148) sentencia_while -> WHILE . expresiones_booleanas sentencia_while END
    (149) sentencia_while -> WHILE . expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> WHILE . declaracion declaraciones END
    (147) sentencia_while_bool -> WHILE . VARIABLE declaraciones END
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
<<<<<<< HEAD

    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresiones_booleanas          shift and go to state 110
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 45

    (147) sentencia_case -> CASE . declaraciones sentencia_when END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 111
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 46

    (148) sentencias_when -> sentencia_when .
    (149) sentencias_when -> sentencia_when . sentencias_when
    (148) sentencias_when -> . sentencia_when
    (149) sentencias_when -> . sentencia_when sentencias_when
    (150) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

  ! shift/reduce conflict for WHEN resolved as shift
    VARIABLE        reduce using rule 148 (sentencias_when -> sentencia_when .)
    PRINT           reduce using rule 148 (sentencias_when -> sentencia_when .)
    PUTS            reduce using rule 148 (sentencias_when -> sentencia_when .)
    PRINTF          reduce using rule 148 (sentencias_when -> sentencia_when .)
    GETS            reduce using rule 148 (sentencias_when -> sentencia_when .)
    LLAVE_IZ        reduce using rule 148 (sentencias_when -> sentencia_when .)
    IF              reduce using rule 148 (sentencias_when -> sentencia_when .)
    DEF             reduce using rule 148 (sentencias_when -> sentencia_when .)
    CORCHETE_IZ     reduce using rule 148 (sentencias_when -> sentencia_when .)
    WHILE           reduce using rule 148 (sentencias_when -> sentencia_when .)
    CASE            reduce using rule 148 (sentencias_when -> sentencia_when .)
    UNTIL           reduce using rule 148 (sentencias_when -> sentencia_when .)
    PARENTESIS_IZ   reduce using rule 148 (sentencias_when -> sentencia_when .)
    SIMBOLO         reduce using rule 148 (sentencias_when -> sentencia_when .)
    FLOTANTE        reduce using rule 148 (sentencias_when -> sentencia_when .)
    ENTERO          reduce using rule 148 (sentencias_when -> sentencia_when .)
    CLASS           reduce using rule 148 (sentencias_when -> sentencia_when .)
    VARIABLECLASE   reduce using rule 148 (sentencias_when -> sentencia_when .)
    CADENA          reduce using rule 148 (sentencias_when -> sentencia_when .)
    $end            reduce using rule 148 (sentencias_when -> sentencia_when .)
    END             reduce using rule 148 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 53

  ! WHEN            [ reduce using rule 148 (sentencias_when -> sentencia_when .) ]

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 126

state 47

    (151) sentencia_until -> UNTIL . declaracion DO declaracion END
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
=======
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS

    VARIABLE        shift and go to state 111
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34

    expresiones_booleanas          shift and go to state 108
    sentencia_while                shift and go to state 109
    declaracion                    shift and go to state 110
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32

state 45

    (150) sentencia_case -> CASE . VARIABLE sentencia_when END

    VARIABLE        shift and go to state 124


state 46

    (152) sentencias_when -> sentencia_when .
    (153) sentencias_when -> sentencia_when . sentencias_when
    (152) sentencias_when -> . sentencia_when
    (153) sentencias_when -> . sentencia_when sentencias_when
    (151) sentencia_when -> . WHEN declaracion declaracion

  ! shift/reduce conflict for WHEN resolved as shift
    VARIABLE        reduce using rule 152 (sentencias_when -> sentencia_when .)
    PRINT           reduce using rule 152 (sentencias_when -> sentencia_when .)
    PUTS            reduce using rule 152 (sentencias_when -> sentencia_when .)
    PRINTF          reduce using rule 152 (sentencias_when -> sentencia_when .)
    GETS            reduce using rule 152 (sentencias_when -> sentencia_when .)
    LLAVE_IZ        reduce using rule 152 (sentencias_when -> sentencia_when .)
    IF              reduce using rule 152 (sentencias_when -> sentencia_when .)
    DEF             reduce using rule 152 (sentencias_when -> sentencia_when .)
    CORCHETE_IZ     reduce using rule 152 (sentencias_when -> sentencia_when .)
    WHILE           reduce using rule 152 (sentencias_when -> sentencia_when .)
    CASE            reduce using rule 152 (sentencias_when -> sentencia_when .)
    UNTIL           reduce using rule 152 (sentencias_when -> sentencia_when .)
    PARENTESIS_IZ   reduce using rule 152 (sentencias_when -> sentencia_when .)
    SIMBOLO         reduce using rule 152 (sentencias_when -> sentencia_when .)
    FLOTANTE        reduce using rule 152 (sentencias_when -> sentencia_when .)
    ENTERO          reduce using rule 152 (sentencias_when -> sentencia_when .)
    CLASS           reduce using rule 152 (sentencias_when -> sentencia_when .)
    CADENA          reduce using rule 152 (sentencias_when -> sentencia_when .)
    $end            reduce using rule 152 (sentencias_when -> sentencia_when .)
    END             reduce using rule 152 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 52

  ! WHEN            [ reduce using rule 152 (sentencias_when -> sentencia_when .) ]

    sentencia_when                 shift and go to state 46
    sentencias_when                shift and go to state 125

state 47

    (154) sentencia_until -> UNTIL . declaracion DO declaracion END
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

<<<<<<< HEAD
    VARIABLE        shift and go to state 124
=======
    VARIABLE        shift and go to state 128
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
<<<<<<< HEAD
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaracion                    shift and go to state 127
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
=======
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaracion                    shift and go to state 126
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 48

<<<<<<< HEAD
    (165) definicion_clase -> encabezadoClase . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 128
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 49

    (139) declaracion -> asignacion_clase .

    VARIABLE        reduce using rule 139 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 139 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 139 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 139 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 139 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 139 (declaracion -> asignacion_clase .)
    IF              reduce using rule 139 (declaracion -> asignacion_clase .)
    DEF             reduce using rule 139 (declaracion -> asignacion_clase .)
    CORCHETE_IZ     reduce using rule 139 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 139 (declaracion -> asignacion_clase .)
    CASE            reduce using rule 139 (declaracion -> asignacion_clase .)
    UNTIL           reduce using rule 139 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 139 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 139 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 139 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 139 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 139 (declaracion -> asignacion_clase .)
    CLASS           reduce using rule 139 (declaracion -> asignacion_clase .)
    VARIABLECLASE   reduce using rule 139 (declaracion -> asignacion_clase .)
    CADENA          reduce using rule 139 (declaracion -> asignacion_clase .)
    $end            reduce using rule 139 (declaracion -> asignacion_clase .)
    DO              reduce using rule 139 (declaracion -> asignacion_clase .)
    END             reduce using rule 139 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 139 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 139 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 139 (declaracion -> asignacion_clase .)
=======
    (168) definicion_clase -> encabezadoClase . cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante

    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 132

    cuerpoVariables                shift and go to state 129
    asignacion_clase               shift and go to state 130
    asignacion                     shift and go to state 131

state 49

    (33) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 133
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 50

<<<<<<< HEAD
    (33) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 129
=======
    (35) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 35 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 35 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PRINTF          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DEF             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CORCHETE_IZ     reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CASE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    UNTIL           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 35 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CLASS           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CADENA          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 35 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 35 (valorNumerico -> FLOTANTE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 51

<<<<<<< HEAD
    (35) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 35 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 35 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PRINTF          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DEF             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CORCHETE_IZ     reduce using rule 35 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CASE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    UNTIL           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 35 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CLASS           reduce using rule 35 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 35 (valorNumerico -> FLOTANTE .)
    CADENA          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 35 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 35 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 35 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 35 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 35 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 35 (valorNumerico -> FLOTANTE .)
=======
    (36) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 36 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 36 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 36 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 36 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 36 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 36 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 36 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 36 (valorNumerico -> ENTERO .)
    IF              reduce using rule 36 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 36 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 36 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 36 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 36 (valorNumerico -> ENTERO .)
    PRINTF          reduce using rule 36 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 36 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 36 (valorNumerico -> ENTERO .)
    DEF             reduce using rule 36 (valorNumerico -> ENTERO .)
    CORCHETE_IZ     reduce using rule 36 (valorNumerico -> ENTERO .)
    CASE            reduce using rule 36 (valorNumerico -> ENTERO .)
    UNTIL           reduce using rule 36 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 36 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 36 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 36 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 36 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 36 (valorNumerico -> ENTERO .)
    CLASS           reduce using rule 36 (valorNumerico -> ENTERO .)
    CADENA          reduce using rule 36 (valorNumerico -> ENTERO .)
    $end            reduce using rule 36 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 36 (valorNumerico -> ENTERO .)
    DO              reduce using rule 36 (valorNumerico -> ENTERO .)
    END             reduce using rule 36 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 36 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 36 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 36 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 36 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 36 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 36 (valorNumerico -> ENTERO .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 52

<<<<<<< HEAD
    (36) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 36 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 36 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 36 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 36 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 36 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 36 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 36 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 36 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 36 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 36 (valorNumerico -> ENTERO .)
    IF              reduce using rule 36 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 36 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 36 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 36 (valorNumerico -> ENTERO .)
    PRINTF          reduce using rule 36 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 36 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 36 (valorNumerico -> ENTERO .)
    DEF             reduce using rule 36 (valorNumerico -> ENTERO .)
    CORCHETE_IZ     reduce using rule 36 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 36 (valorNumerico -> ENTERO .)
    CASE            reduce using rule 36 (valorNumerico -> ENTERO .)
    UNTIL           reduce using rule 36 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 36 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 36 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 36 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 36 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 36 (valorNumerico -> ENTERO .)
    CLASS           reduce using rule 36 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 36 (valorNumerico -> ENTERO .)
    CADENA          reduce using rule 36 (valorNumerico -> ENTERO .)
    $end            reduce using rule 36 (valorNumerico -> ENTERO .)
    DO              reduce using rule 36 (valorNumerico -> ENTERO .)
    END             reduce using rule 36 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 36 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 36 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 36 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 36 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 36 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 36 (valorNumerico -> ENTERO .)
=======
    (151) sentencia_when -> WHEN . declaracion declaracion
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 134
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 53

<<<<<<< HEAD
    (150) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaracion                    shift and go to state 130
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 54

    (163) encabezadoClase -> CLASS . ID_CLASE
    (164) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 131


state 55

    (63) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (64) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (65) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (66) asignacion_clase -> VARIABLECLASE . IGUAL array
    (67) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 132


state 56

=======
    (166) encabezadoClase -> CLASS . ID_CLASE
    (167) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 135


state 54

>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (3) cuerpoInstruccion -> cuerpo cuerpoInstruccion .

    $end            reduce using rule 3 (cuerpoInstruccion -> cuerpo cuerpoInstruccion .)


<<<<<<< HEAD
state 57

    (49) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 85
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
state 55

    (49) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 83
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    expresionNumerica              shift and go to state 136
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 137

state 56

    (39) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> MAS .)
    VARIABLE        reduce using rule 39 (operadores -> MAS .)
    FLOTANTE        reduce using rule 39 (operadores -> MAS .)
    ENTERO          reduce using rule 39 (operadores -> MAS .)


state 57

    (40) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MENOS .)
    VARIABLE        reduce using rule 40 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 40 (operadores -> MENOS .)
    ENTERO          reduce using rule 40 (operadores -> MENOS .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresionNumerica              shift and go to state 133
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 134

state 58

<<<<<<< HEAD
    (39) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> MAS .)
    VARIABLE        reduce using rule 39 (operadores -> MAS .)
    FLOTANTE        reduce using rule 39 (operadores -> MAS .)
    ENTERO          reduce using rule 39 (operadores -> MAS .)
=======
    (41) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 41 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 41 (operadores -> DIVISION .)
    ENTERO          reduce using rule 41 (operadores -> DIVISION .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 59

<<<<<<< HEAD
    (40) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MENOS .)
    VARIABLE        reduce using rule 40 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 40 (operadores -> MENOS .)
    ENTERO          reduce using rule 40 (operadores -> MENOS .)
=======
    (42) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 42 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 42 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 42 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 42 (operadores -> MULTIPLICACION .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 60

<<<<<<< HEAD
    (41) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 41 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 41 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 41 (operadores -> DIVISION .)
    ENTERO          reduce using rule 41 (operadores -> DIVISION .)
=======
    (43) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 43 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 43 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 43 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 43 (operadores -> EXPONENCIACION .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 61

<<<<<<< HEAD
    (42) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 42 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 42 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 42 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 42 (operadores -> MULTIPLICACION .)


state 62

    (43) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 43 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 43 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 43 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 43 (operadores -> EXPONENCIACION .)


state 63

    (44) operadores -> MODULO .

=======
    (44) operadores -> MODULO .

>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PARENTESIS_IZ   reduce using rule 44 (operadores -> MODULO .)
    VARIABLE        reduce using rule 44 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 44 (operadores -> MODULO .)
    ENTERO          reduce using rule 44 (operadores -> MODULO .)
<<<<<<< HEAD


state 64

    (34) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 136
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 65

<<<<<<< HEAD
    (69) asignacion -> VARIABLE IGUAL . CADENA
    (70) asignacion -> VARIABLE IGUAL . expresionNumerica
    (71) asignacion -> VARIABLE IGUAL . hashes
    (72) asignacion -> VARIABLE IGUAL . SIMBOLO
    (73) asignacion -> VARIABLE IGUAL . array
    (74) asignacion -> VARIABLE IGUAL . input_concatenacion
    (75) asignacion -> VARIABLE IGUAL . booleanos
    (76) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (77) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (68) asignacion_clase -> VARIABLE IGUAL . booleanos
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (55) booleanos -> . TRUE
    (56) booleanos -> . FALSE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 138
    SIMBOLO         shift and go to state 141
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 137
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    TRUE            shift and go to state 147
    FALSE           shift and go to state 148
    GETS            shift and go to state 39
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresionNumerica              shift and go to state 139
    hashes                         shift and go to state 140
    array                          shift and go to state 142
    input_concatenacion            shift and go to state 143
    booleanos                      shift and go to state 144
    solicitudDatosTeclado          shift and go to state 145
    entero_a_flotante              shift and go to state 146
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 50
=======
    (34) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 139

    valorCadena                    shift and go to state 138
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 66

<<<<<<< HEAD
    (106) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (107) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 149
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (70) asignacion -> VARIABLE IGUAL . CADENA
    (71) asignacion -> VARIABLE IGUAL . expresionNumerica
    (72) asignacion -> VARIABLE IGUAL . hashes
    (73) asignacion -> VARIABLE IGUAL . SIMBOLO
    (74) asignacion -> VARIABLE IGUAL . array
    (75) asignacion -> VARIABLE IGUAL . input_concatenacion
    (76) asignacion -> VARIABLE IGUAL . booleanos
    (77) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (78) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (56) booleanos -> . TRUE
    (57) booleanos -> . FALSE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 141
    SIMBOLO         shift and go to state 144
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 140
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    TRUE            shift and go to state 150
    FALSE           shift and go to state 151
    GETS            shift and go to state 39
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresionNumerica              shift and go to state 142
    hashes                         shift and go to state 143
    array                          shift and go to state 145
    input_concatenacion            shift and go to state 146
    booleanos                      shift and go to state 147
    solicitudDatosTeclado          shift and go to state 148
    entero_a_flotante              shift and go to state 149
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 49

state 67

<<<<<<< HEAD
    (118) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (119) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (87) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (160) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (38) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (114) funcionesArray -> . SORT
    (115) funcionesArray -> . FOR EACH
    (117) funcionesNumeros -> . TO_F
=======
    (107) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (108) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    VARIABLE        shift and go to state 152
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    valorNumerico                  shift and go to state 153

<<<<<<< HEAD
state 68

    (95) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 95 (operadoresComparacion -> IGUAL_DOBLEP .)
=======
state 65

    (119) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (120) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (88) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (163) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (38) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (115) funcionesArray -> . SORT
    (116) funcionesArray -> . FOR EACH
    (118) funcionesNumeros -> . TO_F

    DO              shift and go to state 156
    EACH            shift and go to state 157
    TO_F            shift and go to state 158
    CONCAT          shift and go to state 159
    SORT            shift and go to state 160
    FOR             shift and go to state 161

    funcionesArray                 shift and go to state 154
    funcionesNumeros               shift and go to state 155

state 66

    (96) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 96 (operadoresComparacion -> IGUAL_DOBLEP .)


state 67

    (97) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 97 (operadoresComparacion -> NAVE .)


state 68

    (98) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 98 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 98 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 98 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 98 (operadoresComparacion -> DIFERENTE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 69

<<<<<<< HEAD
    (96) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 96 (operadoresComparacion -> NAVE .)
=======
    (99) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 99 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 99 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 99 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 99 (operadoresComparacion -> MAYOR_QUE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 70

<<<<<<< HEAD
    (97) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 97 (operadoresComparacion -> DIFERENTE .)
=======
    (100) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 100 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 100 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 100 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 100 (operadoresComparacion -> MENOR_QUE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 71

<<<<<<< HEAD
    (98) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 98 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 98 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 98 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 98 (operadoresComparacion -> MAYOR_QUE .)
=======
    (101) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 101 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 101 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 101 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 101 (operadoresComparacion -> MENOR_IGUAL_QUE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 72

<<<<<<< HEAD
    (99) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 99 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 99 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 99 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 99 (operadoresComparacion -> MENOR_QUE .)
=======
    (102) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 102 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 102 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 102 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 102 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 73

<<<<<<< HEAD
    (100) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 100 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 100 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 100 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 100 (operadoresComparacion -> MENOR_IGUAL_QUE .)
=======
    (63) impresion -> valor_print valores .

    VARIABLE        reduce using rule 63 (impresion -> valor_print valores .)
    PRINT           reduce using rule 63 (impresion -> valor_print valores .)
    PUTS            reduce using rule 63 (impresion -> valor_print valores .)
    PRINTF          reduce using rule 63 (impresion -> valor_print valores .)
    GETS            reduce using rule 63 (impresion -> valor_print valores .)
    LLAVE_IZ        reduce using rule 63 (impresion -> valor_print valores .)
    IF              reduce using rule 63 (impresion -> valor_print valores .)
    DEF             reduce using rule 63 (impresion -> valor_print valores .)
    CORCHETE_IZ     reduce using rule 63 (impresion -> valor_print valores .)
    WHILE           reduce using rule 63 (impresion -> valor_print valores .)
    CASE            reduce using rule 63 (impresion -> valor_print valores .)
    UNTIL           reduce using rule 63 (impresion -> valor_print valores .)
    PARENTESIS_IZ   reduce using rule 63 (impresion -> valor_print valores .)
    SIMBOLO         reduce using rule 63 (impresion -> valor_print valores .)
    FLOTANTE        reduce using rule 63 (impresion -> valor_print valores .)
    ENTERO          reduce using rule 63 (impresion -> valor_print valores .)
    WHEN            reduce using rule 63 (impresion -> valor_print valores .)
    CLASS           reduce using rule 63 (impresion -> valor_print valores .)
    CADENA          reduce using rule 63 (impresion -> valor_print valores .)
    $end            reduce using rule 63 (impresion -> valor_print valores .)
    VARIABLECLASE   reduce using rule 63 (impresion -> valor_print valores .)
    DO              reduce using rule 63 (impresion -> valor_print valores .)
    END             reduce using rule 63 (impresion -> valor_print valores .)
    ELSE            reduce using rule 63 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 63 (impresion -> valor_print valores .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 74

<<<<<<< HEAD
    (101) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 101 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 101 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 101 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 101 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
=======
    (52) valores -> valor .
    (53) valores -> valor . COMA valores
    (54) valores -> valor . estructura_ifUnaLinea
    (55) valores -> valor . sentencia_while_bool
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END

  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
    VARIABLE        reduce using rule 52 (valores -> valor .)
    PRINT           reduce using rule 52 (valores -> valor .)
    PUTS            reduce using rule 52 (valores -> valor .)
    PRINTF          reduce using rule 52 (valores -> valor .)
    GETS            reduce using rule 52 (valores -> valor .)
    LLAVE_IZ        reduce using rule 52 (valores -> valor .)
    DEF             reduce using rule 52 (valores -> valor .)
    CORCHETE_IZ     reduce using rule 52 (valores -> valor .)
    CASE            reduce using rule 52 (valores -> valor .)
    UNTIL           reduce using rule 52 (valores -> valor .)
    PARENTESIS_IZ   reduce using rule 52 (valores -> valor .)
    SIMBOLO         reduce using rule 52 (valores -> valor .)
    FLOTANTE        reduce using rule 52 (valores -> valor .)
    ENTERO          reduce using rule 52 (valores -> valor .)
    WHEN            reduce using rule 52 (valores -> valor .)
    CLASS           reduce using rule 52 (valores -> valor .)
    CADENA          reduce using rule 52 (valores -> valor .)
    $end            reduce using rule 52 (valores -> valor .)
    VARIABLECLASE   reduce using rule 52 (valores -> valor .)
    DO              reduce using rule 52 (valores -> valor .)
    END             reduce using rule 52 (valores -> valor .)
    ELSE            reduce using rule 52 (valores -> valor .)
    ELSEIF          reduce using rule 52 (valores -> valor .)
    COMA            shift and go to state 162
    IF              shift and go to state 165
    WHILE           shift and go to state 166
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! IF              [ reduce using rule 52 (valores -> valor .) ]
  ! WHILE           [ reduce using rule 52 (valores -> valor .) ]

    estructura_ifUnaLinea          shift and go to state 163
    sentencia_while_bool           shift and go to state 164

state 75

<<<<<<< HEAD
    (62) impresion -> valor_print valores .

    VARIABLE        reduce using rule 62 (impresion -> valor_print valores .)
    PRINT           reduce using rule 62 (impresion -> valor_print valores .)
    PUTS            reduce using rule 62 (impresion -> valor_print valores .)
    PRINTF          reduce using rule 62 (impresion -> valor_print valores .)
    GETS            reduce using rule 62 (impresion -> valor_print valores .)
    LLAVE_IZ        reduce using rule 62 (impresion -> valor_print valores .)
    IF              reduce using rule 62 (impresion -> valor_print valores .)
    DEF             reduce using rule 62 (impresion -> valor_print valores .)
    CORCHETE_IZ     reduce using rule 62 (impresion -> valor_print valores .)
    WHILE           reduce using rule 62 (impresion -> valor_print valores .)
    CASE            reduce using rule 62 (impresion -> valor_print valores .)
    UNTIL           reduce using rule 62 (impresion -> valor_print valores .)
    PARENTESIS_IZ   reduce using rule 62 (impresion -> valor_print valores .)
    SIMBOLO         reduce using rule 62 (impresion -> valor_print valores .)
    FLOTANTE        reduce using rule 62 (impresion -> valor_print valores .)
    ENTERO          reduce using rule 62 (impresion -> valor_print valores .)
    WHEN            reduce using rule 62 (impresion -> valor_print valores .)
    CLASS           reduce using rule 62 (impresion -> valor_print valores .)
    VARIABLECLASE   reduce using rule 62 (impresion -> valor_print valores .)
    CADENA          reduce using rule 62 (impresion -> valor_print valores .)
    $end            reduce using rule 62 (impresion -> valor_print valores .)
    DO              reduce using rule 62 (impresion -> valor_print valores .)
    END             reduce using rule 62 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 62 (impresion -> valor_print valores .)
    ELSE            reduce using rule 62 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 62 (impresion -> valor_print valores .)
=======
    (58) valor -> CADENA .

    COMA            reduce using rule 58 (valor -> CADENA .)
    IF              reduce using rule 58 (valor -> CADENA .)
    WHILE           reduce using rule 58 (valor -> CADENA .)
    VARIABLE        reduce using rule 58 (valor -> CADENA .)
    PRINT           reduce using rule 58 (valor -> CADENA .)
    PUTS            reduce using rule 58 (valor -> CADENA .)
    PRINTF          reduce using rule 58 (valor -> CADENA .)
    GETS            reduce using rule 58 (valor -> CADENA .)
    LLAVE_IZ        reduce using rule 58 (valor -> CADENA .)
    DEF             reduce using rule 58 (valor -> CADENA .)
    CORCHETE_IZ     reduce using rule 58 (valor -> CADENA .)
    CASE            reduce using rule 58 (valor -> CADENA .)
    UNTIL           reduce using rule 58 (valor -> CADENA .)
    PARENTESIS_IZ   reduce using rule 58 (valor -> CADENA .)
    SIMBOLO         reduce using rule 58 (valor -> CADENA .)
    FLOTANTE        reduce using rule 58 (valor -> CADENA .)
    ENTERO          reduce using rule 58 (valor -> CADENA .)
    WHEN            reduce using rule 58 (valor -> CADENA .)
    CLASS           reduce using rule 58 (valor -> CADENA .)
    CADENA          reduce using rule 58 (valor -> CADENA .)
    $end            reduce using rule 58 (valor -> CADENA .)
    VARIABLECLASE   reduce using rule 58 (valor -> CADENA .)
    DO              reduce using rule 58 (valor -> CADENA .)
    END             reduce using rule 58 (valor -> CADENA .)
    ELSE            reduce using rule 58 (valor -> CADENA .)
    ELSEIF          reduce using rule 58 (valor -> CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 76

<<<<<<< HEAD
    (52) valores -> valor .
    (53) valores -> valor . COMA valores
    (54) valores -> valor . estructura_ifUnaLinea
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END

  ! shift/reduce conflict for IF resolved as shift
    VARIABLE        reduce using rule 52 (valores -> valor .)
    PRINT           reduce using rule 52 (valores -> valor .)
    PUTS            reduce using rule 52 (valores -> valor .)
    PRINTF          reduce using rule 52 (valores -> valor .)
    GETS            reduce using rule 52 (valores -> valor .)
    LLAVE_IZ        reduce using rule 52 (valores -> valor .)
    DEF             reduce using rule 52 (valores -> valor .)
    CORCHETE_IZ     reduce using rule 52 (valores -> valor .)
    WHILE           reduce using rule 52 (valores -> valor .)
    CASE            reduce using rule 52 (valores -> valor .)
    UNTIL           reduce using rule 52 (valores -> valor .)
    PARENTESIS_IZ   reduce using rule 52 (valores -> valor .)
    SIMBOLO         reduce using rule 52 (valores -> valor .)
    FLOTANTE        reduce using rule 52 (valores -> valor .)
    ENTERO          reduce using rule 52 (valores -> valor .)
    WHEN            reduce using rule 52 (valores -> valor .)
    CLASS           reduce using rule 52 (valores -> valor .)
    VARIABLECLASE   reduce using rule 52 (valores -> valor .)
    CADENA          reduce using rule 52 (valores -> valor .)
    $end            reduce using rule 52 (valores -> valor .)
    DO              reduce using rule 52 (valores -> valor .)
    END             reduce using rule 52 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 52 (valores -> valor .)
    ELSE            reduce using rule 52 (valores -> valor .)
    ELSEIF          reduce using rule 52 (valores -> valor .)
    COMA            shift and go to state 159
    IF              shift and go to state 161
=======
    (59) valor -> valorNumerico .

    COMA            reduce using rule 59 (valor -> valorNumerico .)
    IF              reduce using rule 59 (valor -> valorNumerico .)
    WHILE           reduce using rule 59 (valor -> valorNumerico .)
    VARIABLE        reduce using rule 59 (valor -> valorNumerico .)
    PRINT           reduce using rule 59 (valor -> valorNumerico .)
    PUTS            reduce using rule 59 (valor -> valorNumerico .)
    PRINTF          reduce using rule 59 (valor -> valorNumerico .)
    GETS            reduce using rule 59 (valor -> valorNumerico .)
    LLAVE_IZ        reduce using rule 59 (valor -> valorNumerico .)
    DEF             reduce using rule 59 (valor -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 59 (valor -> valorNumerico .)
    CASE            reduce using rule 59 (valor -> valorNumerico .)
    UNTIL           reduce using rule 59 (valor -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 59 (valor -> valorNumerico .)
    SIMBOLO         reduce using rule 59 (valor -> valorNumerico .)
    FLOTANTE        reduce using rule 59 (valor -> valorNumerico .)
    ENTERO          reduce using rule 59 (valor -> valorNumerico .)
    WHEN            reduce using rule 59 (valor -> valorNumerico .)
    CLASS           reduce using rule 59 (valor -> valorNumerico .)
    CADENA          reduce using rule 59 (valor -> valorNumerico .)
    $end            reduce using rule 59 (valor -> valorNumerico .)
    VARIABLECLASE   reduce using rule 59 (valor -> valorNumerico .)
    DO              reduce using rule 59 (valor -> valorNumerico .)
    END             reduce using rule 59 (valor -> valorNumerico .)
    ELSE            reduce using rule 59 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 59 (valor -> valorNumerico .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! IF              [ reduce using rule 52 (valores -> valor .) ]

    estructura_ifUnaLinea          shift and go to state 160

state 77

<<<<<<< HEAD
    (57) valor -> CADENA .

    COMA            reduce using rule 57 (valor -> CADENA .)
    IF              reduce using rule 57 (valor -> CADENA .)
    VARIABLE        reduce using rule 57 (valor -> CADENA .)
    PRINT           reduce using rule 57 (valor -> CADENA .)
    PUTS            reduce using rule 57 (valor -> CADENA .)
    PRINTF          reduce using rule 57 (valor -> CADENA .)
    GETS            reduce using rule 57 (valor -> CADENA .)
    LLAVE_IZ        reduce using rule 57 (valor -> CADENA .)
    DEF             reduce using rule 57 (valor -> CADENA .)
    CORCHETE_IZ     reduce using rule 57 (valor -> CADENA .)
    WHILE           reduce using rule 57 (valor -> CADENA .)
    CASE            reduce using rule 57 (valor -> CADENA .)
    UNTIL           reduce using rule 57 (valor -> CADENA .)
    PARENTESIS_IZ   reduce using rule 57 (valor -> CADENA .)
    SIMBOLO         reduce using rule 57 (valor -> CADENA .)
    FLOTANTE        reduce using rule 57 (valor -> CADENA .)
    ENTERO          reduce using rule 57 (valor -> CADENA .)
    WHEN            reduce using rule 57 (valor -> CADENA .)
    CLASS           reduce using rule 57 (valor -> CADENA .)
    VARIABLECLASE   reduce using rule 57 (valor -> CADENA .)
    CADENA          reduce using rule 57 (valor -> CADENA .)
    $end            reduce using rule 57 (valor -> CADENA .)
    DO              reduce using rule 57 (valor -> CADENA .)
    END             reduce using rule 57 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> CADENA .)
    ELSE            reduce using rule 57 (valor -> CADENA .)
    ELSEIF          reduce using rule 57 (valor -> CADENA .)
=======
    (60) valor -> VARIABLE .

    COMA            reduce using rule 60 (valor -> VARIABLE .)
    IF              reduce using rule 60 (valor -> VARIABLE .)
    WHILE           reduce using rule 60 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 60 (valor -> VARIABLE .)
    PRINT           reduce using rule 60 (valor -> VARIABLE .)
    PUTS            reduce using rule 60 (valor -> VARIABLE .)
    PRINTF          reduce using rule 60 (valor -> VARIABLE .)
    GETS            reduce using rule 60 (valor -> VARIABLE .)
    LLAVE_IZ        reduce using rule 60 (valor -> VARIABLE .)
    DEF             reduce using rule 60 (valor -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 60 (valor -> VARIABLE .)
    CASE            reduce using rule 60 (valor -> VARIABLE .)
    UNTIL           reduce using rule 60 (valor -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 60 (valor -> VARIABLE .)
    SIMBOLO         reduce using rule 60 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 60 (valor -> VARIABLE .)
    ENTERO          reduce using rule 60 (valor -> VARIABLE .)
    WHEN            reduce using rule 60 (valor -> VARIABLE .)
    CLASS           reduce using rule 60 (valor -> VARIABLE .)
    CADENA          reduce using rule 60 (valor -> VARIABLE .)
    $end            reduce using rule 60 (valor -> VARIABLE .)
    VARIABLECLASE   reduce using rule 60 (valor -> VARIABLE .)
    DO              reduce using rule 60 (valor -> VARIABLE .)
    END             reduce using rule 60 (valor -> VARIABLE .)
    ELSE            reduce using rule 60 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 60 (valor -> VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 78

<<<<<<< HEAD
    (58) valor -> valorNumerico .

    COMA            reduce using rule 58 (valor -> valorNumerico .)
    IF              reduce using rule 58 (valor -> valorNumerico .)
    VARIABLE        reduce using rule 58 (valor -> valorNumerico .)
    PRINT           reduce using rule 58 (valor -> valorNumerico .)
    PUTS            reduce using rule 58 (valor -> valorNumerico .)
    PRINTF          reduce using rule 58 (valor -> valorNumerico .)
    GETS            reduce using rule 58 (valor -> valorNumerico .)
    LLAVE_IZ        reduce using rule 58 (valor -> valorNumerico .)
    DEF             reduce using rule 58 (valor -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 58 (valor -> valorNumerico .)
    WHILE           reduce using rule 58 (valor -> valorNumerico .)
    CASE            reduce using rule 58 (valor -> valorNumerico .)
    UNTIL           reduce using rule 58 (valor -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 58 (valor -> valorNumerico .)
    SIMBOLO         reduce using rule 58 (valor -> valorNumerico .)
    FLOTANTE        reduce using rule 58 (valor -> valorNumerico .)
    ENTERO          reduce using rule 58 (valor -> valorNumerico .)
    WHEN            reduce using rule 58 (valor -> valorNumerico .)
    CLASS           reduce using rule 58 (valor -> valorNumerico .)
    VARIABLECLASE   reduce using rule 58 (valor -> valorNumerico .)
    CADENA          reduce using rule 58 (valor -> valorNumerico .)
    $end            reduce using rule 58 (valor -> valorNumerico .)
    DO              reduce using rule 58 (valor -> valorNumerico .)
    END             reduce using rule 58 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 58 (valor -> valorNumerico .)
    ELSE            reduce using rule 58 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 58 (valor -> valorNumerico .)
=======
    (61) valor -> VARIABLECLASE .

    COMA            reduce using rule 61 (valor -> VARIABLECLASE .)
    IF              reduce using rule 61 (valor -> VARIABLECLASE .)
    WHILE           reduce using rule 61 (valor -> VARIABLECLASE .)
    VARIABLE        reduce using rule 61 (valor -> VARIABLECLASE .)
    PRINT           reduce using rule 61 (valor -> VARIABLECLASE .)
    PUTS            reduce using rule 61 (valor -> VARIABLECLASE .)
    PRINTF          reduce using rule 61 (valor -> VARIABLECLASE .)
    GETS            reduce using rule 61 (valor -> VARIABLECLASE .)
    LLAVE_IZ        reduce using rule 61 (valor -> VARIABLECLASE .)
    DEF             reduce using rule 61 (valor -> VARIABLECLASE .)
    CORCHETE_IZ     reduce using rule 61 (valor -> VARIABLECLASE .)
    CASE            reduce using rule 61 (valor -> VARIABLECLASE .)
    UNTIL           reduce using rule 61 (valor -> VARIABLECLASE .)
    PARENTESIS_IZ   reduce using rule 61 (valor -> VARIABLECLASE .)
    SIMBOLO         reduce using rule 61 (valor -> VARIABLECLASE .)
    FLOTANTE        reduce using rule 61 (valor -> VARIABLECLASE .)
    ENTERO          reduce using rule 61 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 61 (valor -> VARIABLECLASE .)
    CLASS           reduce using rule 61 (valor -> VARIABLECLASE .)
    CADENA          reduce using rule 61 (valor -> VARIABLECLASE .)
    $end            reduce using rule 61 (valor -> VARIABLECLASE .)
    VARIABLECLASE   reduce using rule 61 (valor -> VARIABLECLASE .)
    DO              reduce using rule 61 (valor -> VARIABLECLASE .)
    END             reduce using rule 61 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 61 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 61 (valor -> VARIABLECLASE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 79

<<<<<<< HEAD
    (59) valor -> VARIABLE .

    COMA            reduce using rule 59 (valor -> VARIABLE .)
    IF              reduce using rule 59 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 59 (valor -> VARIABLE .)
    PRINT           reduce using rule 59 (valor -> VARIABLE .)
    PUTS            reduce using rule 59 (valor -> VARIABLE .)
    PRINTF          reduce using rule 59 (valor -> VARIABLE .)
    GETS            reduce using rule 59 (valor -> VARIABLE .)
    LLAVE_IZ        reduce using rule 59 (valor -> VARIABLE .)
    DEF             reduce using rule 59 (valor -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 59 (valor -> VARIABLE .)
    WHILE           reduce using rule 59 (valor -> VARIABLE .)
    CASE            reduce using rule 59 (valor -> VARIABLE .)
    UNTIL           reduce using rule 59 (valor -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 59 (valor -> VARIABLE .)
    SIMBOLO         reduce using rule 59 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 59 (valor -> VARIABLE .)
    ENTERO          reduce using rule 59 (valor -> VARIABLE .)
    WHEN            reduce using rule 59 (valor -> VARIABLE .)
    CLASS           reduce using rule 59 (valor -> VARIABLE .)
    VARIABLECLASE   reduce using rule 59 (valor -> VARIABLE .)
    CADENA          reduce using rule 59 (valor -> VARIABLE .)
    $end            reduce using rule 59 (valor -> VARIABLE .)
    DO              reduce using rule 59 (valor -> VARIABLE .)
    END             reduce using rule 59 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 59 (valor -> VARIABLE .)
    ELSE            reduce using rule 59 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 59 (valor -> VARIABLE .)
=======
    (62) valor -> SIMBOLO .

    COMA            reduce using rule 62 (valor -> SIMBOLO .)
    IF              reduce using rule 62 (valor -> SIMBOLO .)
    WHILE           reduce using rule 62 (valor -> SIMBOLO .)
    VARIABLE        reduce using rule 62 (valor -> SIMBOLO .)
    PRINT           reduce using rule 62 (valor -> SIMBOLO .)
    PUTS            reduce using rule 62 (valor -> SIMBOLO .)
    PRINTF          reduce using rule 62 (valor -> SIMBOLO .)
    GETS            reduce using rule 62 (valor -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 62 (valor -> SIMBOLO .)
    DEF             reduce using rule 62 (valor -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 62 (valor -> SIMBOLO .)
    CASE            reduce using rule 62 (valor -> SIMBOLO .)
    UNTIL           reduce using rule 62 (valor -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 62 (valor -> SIMBOLO .)
    SIMBOLO         reduce using rule 62 (valor -> SIMBOLO .)
    FLOTANTE        reduce using rule 62 (valor -> SIMBOLO .)
    ENTERO          reduce using rule 62 (valor -> SIMBOLO .)
    WHEN            reduce using rule 62 (valor -> SIMBOLO .)
    CLASS           reduce using rule 62 (valor -> SIMBOLO .)
    CADENA          reduce using rule 62 (valor -> SIMBOLO .)
    $end            reduce using rule 62 (valor -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 62 (valor -> SIMBOLO .)
    DO              reduce using rule 62 (valor -> SIMBOLO .)
    END             reduce using rule 62 (valor -> SIMBOLO .)
    ELSE            reduce using rule 62 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 62 (valor -> SIMBOLO .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 80

<<<<<<< HEAD
    (60) valor -> VARIABLECLASE .

    COMA            reduce using rule 60 (valor -> VARIABLECLASE .)
    IF              reduce using rule 60 (valor -> VARIABLECLASE .)
    VARIABLE        reduce using rule 60 (valor -> VARIABLECLASE .)
    PRINT           reduce using rule 60 (valor -> VARIABLECLASE .)
    PUTS            reduce using rule 60 (valor -> VARIABLECLASE .)
    PRINTF          reduce using rule 60 (valor -> VARIABLECLASE .)
    GETS            reduce using rule 60 (valor -> VARIABLECLASE .)
    LLAVE_IZ        reduce using rule 60 (valor -> VARIABLECLASE .)
    DEF             reduce using rule 60 (valor -> VARIABLECLASE .)
    CORCHETE_IZ     reduce using rule 60 (valor -> VARIABLECLASE .)
    WHILE           reduce using rule 60 (valor -> VARIABLECLASE .)
    CASE            reduce using rule 60 (valor -> VARIABLECLASE .)
    UNTIL           reduce using rule 60 (valor -> VARIABLECLASE .)
    PARENTESIS_IZ   reduce using rule 60 (valor -> VARIABLECLASE .)
    SIMBOLO         reduce using rule 60 (valor -> VARIABLECLASE .)
    FLOTANTE        reduce using rule 60 (valor -> VARIABLECLASE .)
    ENTERO          reduce using rule 60 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 60 (valor -> VARIABLECLASE .)
    CLASS           reduce using rule 60 (valor -> VARIABLECLASE .)
    VARIABLECLASE   reduce using rule 60 (valor -> VARIABLECLASE .)
    CADENA          reduce using rule 60 (valor -> VARIABLECLASE .)
    $end            reduce using rule 60 (valor -> VARIABLECLASE .)
    DO              reduce using rule 60 (valor -> VARIABLECLASE .)
    END             reduce using rule 60 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 60 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 60 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 60 (valor -> VARIABLECLASE .)
=======
    (92) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 167
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 81

<<<<<<< HEAD
    (61) valor -> SIMBOLO .

    COMA            reduce using rule 61 (valor -> SIMBOLO .)
    IF              reduce using rule 61 (valor -> SIMBOLO .)
    VARIABLE        reduce using rule 61 (valor -> SIMBOLO .)
    PRINT           reduce using rule 61 (valor -> SIMBOLO .)
    PUTS            reduce using rule 61 (valor -> SIMBOLO .)
    PRINTF          reduce using rule 61 (valor -> SIMBOLO .)
    GETS            reduce using rule 61 (valor -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 61 (valor -> SIMBOLO .)
    DEF             reduce using rule 61 (valor -> SIMBOLO .)
    CORCHETE_IZ     reduce using rule 61 (valor -> SIMBOLO .)
    WHILE           reduce using rule 61 (valor -> SIMBOLO .)
    CASE            reduce using rule 61 (valor -> SIMBOLO .)
    UNTIL           reduce using rule 61 (valor -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 61 (valor -> SIMBOLO .)
    SIMBOLO         reduce using rule 61 (valor -> SIMBOLO .)
    FLOTANTE        reduce using rule 61 (valor -> SIMBOLO .)
    ENTERO          reduce using rule 61 (valor -> SIMBOLO .)
    WHEN            reduce using rule 61 (valor -> SIMBOLO .)
    CLASS           reduce using rule 61 (valor -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 61 (valor -> SIMBOLO .)
    CADENA          reduce using rule 61 (valor -> SIMBOLO .)
    $end            reduce using rule 61 (valor -> SIMBOLO .)
    DO              reduce using rule 61 (valor -> SIMBOLO .)
    END             reduce using rule 61 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 61 (valor -> SIMBOLO .)
    ELSE            reduce using rule 61 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 61 (valor -> SIMBOLO .)
=======
    (47) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (46) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 168
    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 82

<<<<<<< HEAD
    (91) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 162
=======
    (45) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    VARIABLE        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PRINT           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PUTS            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PRINTF          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    GETS            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    LLAVE_IZ        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    IF              reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DEF             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 45 (expresionNumerica -> valorNumerico .)
    WHILE           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CASE            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    UNTIL           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 45 (expresionNumerica -> valorNumerico .)
    SIMBOLO         reduce using rule 45 (expresionNumerica -> valorNumerico .)
    FLOTANTE        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ENTERO          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CLASS           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CADENA          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    VARIABLECLASE   reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 45 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 45 (expresionNumerica -> valorNumerico .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 83

<<<<<<< HEAD
    (47) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (46) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 163
    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
=======
    (48) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 84

<<<<<<< HEAD
    (45) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    VARIABLE        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PRINT           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PUTS            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PRINTF          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    GETS            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    LLAVE_IZ        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    IF              reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DEF             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CORCHETE_IZ     reduce using rule 45 (expresionNumerica -> valorNumerico .)
    WHILE           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CASE            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    UNTIL           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 45 (expresionNumerica -> valorNumerico .)
    SIMBOLO         reduce using rule 45 (expresionNumerica -> valorNumerico .)
    FLOTANTE        reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ENTERO          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CLASS           reduce using rule 45 (expresionNumerica -> valorNumerico .)
    VARIABLECLASE   reduce using rule 45 (expresionNumerica -> valorNumerico .)
    CADENA          reduce using rule 45 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 45 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 45 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 45 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 45 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 45 (expresionNumerica -> valorNumerico .)
=======
    (93) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 169
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 85

<<<<<<< HEAD
    (48) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)


state 86

    (92) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 164


state 87

    (94) impresion_vacia -> PRINTF PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 165


state 88

    (104) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 31
    VARIABLE        shift and go to state 167
=======
    (95) impresion_vacia -> PRINTF PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 170
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 89

<<<<<<< HEAD
    (105) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (108) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 169
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (105) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 31
    VARIABLE        shift and go to state 172
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    valorSimbolo                   shift and go to state 171

state 90

<<<<<<< HEAD
    (110) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (116) funcionesFormatoImpresion -> . CHOMP
=======
    (106) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (109) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    VARIABLE        shift and go to state 174
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    valorNumerico                  shift and go to state 173

state 91

<<<<<<< HEAD
    (152) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER
=======
    (111) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (117) funcionesFormatoImpresion -> . CHOMP
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    CHOMP           shift and go to state 176

    funcionesFormatoImpresion      shift and go to state 175

<<<<<<< HEAD
state 92

    (153) hashes -> LLAVE_IZ LLAVE_DER .

    VARIABLE        reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINT           reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    PUTS            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINTF          reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    GETS            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    LLAVE_IZ        reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    IF              reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    DEF             reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHILE           reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    CASE            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    UNTIL           reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    SIMBOLO         reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    FLOTANTE        reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    ENTERO          reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    CLASS           reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLECLASE   reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    CADENA          reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    $end            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 153 (hashes -> LLAVE_IZ LLAVE_DER .)
=======
state 89

    (155) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 177


state 90

    (156) hashes -> LLAVE_IZ LLAVE_DER .

    VARIABLE        reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINT           reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    PUTS            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINTF          reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    GETS            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    LLAVE_IZ        reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    IF              reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    DEF             reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHILE           reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    CASE            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    UNTIL           reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    SIMBOLO         reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    FLOTANTE        reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    ENTERO          reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    CLASS           reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    CADENA          reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    $end            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLECLASE   reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 156 (hashes -> LLAVE_IZ LLAVE_DER .)


state 91

    (161) elemento_hash -> claveValor .
    (162) elemento_hash -> claveValor . COMA elemento_hash

    LLAVE_DER       reduce using rule 161 (elemento_hash -> claveValor .)
    COMA            shift and go to state 178


state 92

    (157) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (158) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 179
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 93

<<<<<<< HEAD
    (158) elemento_hash -> claveValor .
    (159) elemento_hash -> claveValor . COMA elemento_hash

    LLAVE_DER       reduce using rule 158 (elemento_hash -> claveValor .)
    COMA            shift and go to state 173
=======
    (159) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (160) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 180
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 94

<<<<<<< HEAD
    (154) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (155) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 174


state 95

    (156) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (157) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 175


state 96

    (128) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (126) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (127) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
=======
    (129) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (127) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (128) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
<<<<<<< HEAD
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 176
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 97

    (122) condicionIf -> expresiones_booleanas .
    (124) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (102) funcionesComparacion -> . Y_SIGNO
    (103) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    PRINTF          reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    DEF             reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 122 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 178
    O_SIGNO         shift and go to state 179
=======
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaraciones                  shift and go to state 181
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 98

<<<<<<< HEAD
    (123) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
=======
    (123) condicionIf -> expresiones_booleanas .
    (125) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (103) funcionesComparacion -> . Y_SIGNO
    (104) funcionesComparacion -> . O_SIGNO
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    VARIABLE        reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    PRINTF          reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 123 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 184
    O_SIGNO         shift and go to state 185

    funcionesComparacion           shift and go to state 183

state 99

<<<<<<< HEAD
    (105) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74

    operadoresComparacion          shift and go to state 89
=======
    (124) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 186

>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 100

<<<<<<< HEAD
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (27) valorSimbolo -> VARIABLE .
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE
=======
    (106) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72

    operadoresComparacion          shift and go to state 87

state 98

    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (27) valorSimbolo -> VARIABLE .
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
<<<<<<< HEAD
    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74
=======
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]

<<<<<<< HEAD
    operadoresComparacion          shift and go to state 66

state 101

    (111) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> DEF VARIABLE . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 181
    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 182
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38
=======
    operadoresComparacion          shift and go to state 64
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

state 102

<<<<<<< HEAD
    (85) array -> CORCHETE_IZ elementos_array . CORCHETE_DER
=======
    (112) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> DEF VARIABLE . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    PARENTESIS_IZ   shift and go to state 187
    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 188
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

<<<<<<< HEAD
state 103

    (86) array -> CORCHETE_IZ CORCHETE_DER .

    VARIABLE        reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINT           reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    PUTS            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINTF          reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    GETS            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    IF              reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    DEF             reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHILE           reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    CASE            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    UNTIL           reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    SIMBOLO         reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    FLOTANTE        reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    ENTERO          reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    CLASS           reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    CADENA          reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    $end            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 86 (array -> CORCHETE_IZ CORCHETE_DER .)
=======
state 100

    (86) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 189


state 101

    (87) array -> CORCHETE_IZ CORCHETE_DER .

    VARIABLE        reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINT           reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    PUTS            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINTF          reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    GETS            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    IF              reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    DEF             reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHILE           reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    CASE            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    UNTIL           reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    SIMBOLO         reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    FLOTANTE        reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    ENTERO          reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    CLASS           reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    CADENA          reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    $end            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 87 (array -> CORCHETE_IZ CORCHETE_DER .)


state 102

    (79) elementos_array -> elemento_array . COMA elementos_array
    (80) elementos_array -> elemento_array .

    COMA            shift and go to state 190
    CORCHETE_DER    reduce using rule 80 (elementos_array -> elemento_array .)


state 103

    (81) elemento_array -> CADENA .

    COMA            reduce using rule 81 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 81 (elemento_array -> CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 104

<<<<<<< HEAD
    (78) elementos_array -> elemento_array . COMA elementos_array
    (79) elementos_array -> elemento_array .

    COMA            shift and go to state 184
    CORCHETE_DER    reduce using rule 79 (elementos_array -> elemento_array .)
=======
    (82) elemento_array -> ENTERO .

    COMA            reduce using rule 82 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 82 (elemento_array -> ENTERO .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 105

<<<<<<< HEAD
    (80) elemento_array -> CADENA .

    COMA            reduce using rule 80 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 80 (elemento_array -> CADENA .)
=======
    (83) elemento_array -> FLOTANTE .

    COMA            reduce using rule 83 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 83 (elemento_array -> FLOTANTE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 106

<<<<<<< HEAD
    (81) elemento_array -> ENTERO .

    COMA            reduce using rule 81 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 81 (elemento_array -> ENTERO .)
=======
    (84) elemento_array -> array .

    COMA            reduce using rule 84 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 84 (elemento_array -> array .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 107

<<<<<<< HEAD
    (82) elemento_array -> FLOTANTE .

    COMA            reduce using rule 82 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 82 (elemento_array -> FLOTANTE .)
=======
    (85) elemento_array -> VARIABLE .

    COMA            reduce using rule 85 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 85 (elemento_array -> VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 108

<<<<<<< HEAD
    (83) elemento_array -> array .

    COMA            reduce using rule 83 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 83 (elemento_array -> array .)


state 109

    (84) elemento_array -> VARIABLE .

    COMA            reduce using rule 84 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 84 (elemento_array -> VARIABLE .)
=======
    (148) sentencia_while -> WHILE expresiones_booleanas . sentencia_while END
    (149) sentencia_while -> WHILE expresiones_booleanas . declaracion END
    (136) declaracion -> expresiones_booleanas .
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for PRINTF resolved as shift
  ! shift/reduce conflict for GETS resolved as shift
  ! shift/reduce conflict for LLAVE_IZ resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! shift/reduce conflict for SIMBOLO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

  ! VARIABLE        [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! PRINT           [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! PUTS            [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! PRINTF          [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! GETS            [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! LLAVE_IZ        [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! IF              [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! VARIABLECLASE   [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! WHILE           [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! PARENTESIS_IZ   [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! SIMBOLO         [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! FLOTANTE        [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]
  ! ENTERO          [ reduce using rule 136 (declaracion -> expresiones_booleanas .) ]

    expresiones_booleanas          shift and go to state 127
    sentencia_while                shift and go to state 191
    declaracion                    shift and go to state 192
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 109

    (142) declaracion -> sentencia_while .

    VARIABLE        reduce using rule 142 (declaracion -> sentencia_while .)
    PRINT           reduce using rule 142 (declaracion -> sentencia_while .)
    PUTS            reduce using rule 142 (declaracion -> sentencia_while .)
    PRINTF          reduce using rule 142 (declaracion -> sentencia_while .)
    GETS            reduce using rule 142 (declaracion -> sentencia_while .)
    LLAVE_IZ        reduce using rule 142 (declaracion -> sentencia_while .)
    IF              reduce using rule 142 (declaracion -> sentencia_while .)
    VARIABLECLASE   reduce using rule 142 (declaracion -> sentencia_while .)
    WHILE           reduce using rule 142 (declaracion -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 142 (declaracion -> sentencia_while .)
    SIMBOLO         reduce using rule 142 (declaracion -> sentencia_while .)
    FLOTANTE        reduce using rule 142 (declaracion -> sentencia_while .)
    ENTERO          reduce using rule 142 (declaracion -> sentencia_while .)
    DO              reduce using rule 142 (declaracion -> sentencia_while .)
    END             reduce using rule 142 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 142 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 142 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 142 (declaracion -> sentencia_while .)
    DEF             reduce using rule 142 (declaracion -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 142 (declaracion -> sentencia_while .)
    CASE            reduce using rule 142 (declaracion -> sentencia_while .)
    UNTIL           reduce using rule 142 (declaracion -> sentencia_while .)
    CLASS           reduce using rule 142 (declaracion -> sentencia_while .)
    CADENA          reduce using rule 142 (declaracion -> sentencia_while .)
    $end            reduce using rule 142 (declaracion -> sentencia_while .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 110

<<<<<<< HEAD
    (145) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (146) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 185
=======
    (146) sentencia_while_bool -> WHILE declaracion . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 182
    declaraciones                  shift and go to state 193
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 111

<<<<<<< HEAD
    (147) sentencia_case -> CASE declaraciones . sentencia_when END
    (150) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 53

    sentencia_when                 shift and go to state 186

state 112

    (143) declaraciones -> declaracion .
    (144) declaraciones -> declaracion . declaraciones
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
=======
    (147) sentencia_while_bool -> WHILE VARIABLE . declaraciones END
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (27) valorSimbolo -> VARIABLE .
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (69) asignacion_clase -> VARIABLE . IGUAL booleanos
    (48) expresionNumerica -> VARIABLE .
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
<<<<<<< HEAD

    WHEN            reduce using rule 143 (declaraciones -> declaracion .)
    END             reduce using rule 143 (declaraciones -> declaracion .)
    ELSE            reduce using rule 143 (declaraciones -> declaracion .)
    ELSEIF          reduce using rule 143 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaracion                    shift and go to state 112
    declaraciones                  shift and go to state 187
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 113

    (131) declaracion -> operacionAritmetica .
    (46) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 131 (declaracion -> operacionAritmetica .)
    PRINT           reduce using rule 131 (declaracion -> operacionAritmetica .)
    PUTS            reduce using rule 131 (declaracion -> operacionAritmetica .)
    PRINTF          reduce using rule 131 (declaracion -> operacionAritmetica .)
    GETS            reduce using rule 131 (declaracion -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 131 (declaracion -> operacionAritmetica .)
    IF              reduce using rule 131 (declaracion -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 131 (declaracion -> operacionAritmetica .)
    WHILE           reduce using rule 131 (declaracion -> operacionAritmetica .)
    DEF             reduce using rule 131 (declaracion -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 131 (declaracion -> operacionAritmetica .)
    SIMBOLO         reduce using rule 131 (declaracion -> operacionAritmetica .)
    FLOTANTE        reduce using rule 131 (declaracion -> operacionAritmetica .)
    ENTERO          reduce using rule 131 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 131 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 131 (declaracion -> operacionAritmetica .)
    END             reduce using rule 131 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 131 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 131 (declaracion -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 131 (declaracion -> operacionAritmetica .)
    CASE            reduce using rule 131 (declaracion -> operacionAritmetica .)
    UNTIL           reduce using rule 131 (declaracion -> operacionAritmetica .)
    CLASS           reduce using rule 131 (declaracion -> operacionAritmetica .)
    CADENA          reduce using rule 131 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 131 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)


state 114

    (132) declaracion -> asignacion .

    VARIABLE        reduce using rule 132 (declaracion -> asignacion .)
    PRINT           reduce using rule 132 (declaracion -> asignacion .)
    PUTS            reduce using rule 132 (declaracion -> asignacion .)
    PRINTF          reduce using rule 132 (declaracion -> asignacion .)
    GETS            reduce using rule 132 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 132 (declaracion -> asignacion .)
    IF              reduce using rule 132 (declaracion -> asignacion .)
    VARIABLECLASE   reduce using rule 132 (declaracion -> asignacion .)
    WHILE           reduce using rule 132 (declaracion -> asignacion .)
    DEF             reduce using rule 132 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 132 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 132 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 132 (declaracion -> asignacion .)
    ENTERO          reduce using rule 132 (declaracion -> asignacion .)
    WHEN            reduce using rule 132 (declaracion -> asignacion .)
    DO              reduce using rule 132 (declaracion -> asignacion .)
    END             reduce using rule 132 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> asignacion .)
    ELSE            reduce using rule 132 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 132 (declaracion -> asignacion .)
    CORCHETE_IZ     reduce using rule 132 (declaracion -> asignacion .)
    CASE            reduce using rule 132 (declaracion -> asignacion .)
    UNTIL           reduce using rule 132 (declaracion -> asignacion .)
    CLASS           reduce using rule 132 (declaracion -> asignacion .)
    CADENA          reduce using rule 132 (declaracion -> asignacion .)
    $end            reduce using rule 132 (declaracion -> asignacion .)


state 115

    (133) declaracion -> impresion .

    VARIABLE        reduce using rule 133 (declaracion -> impresion .)
    PRINT           reduce using rule 133 (declaracion -> impresion .)
    PUTS            reduce using rule 133 (declaracion -> impresion .)
    PRINTF          reduce using rule 133 (declaracion -> impresion .)
    GETS            reduce using rule 133 (declaracion -> impresion .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> impresion .)
    IF              reduce using rule 133 (declaracion -> impresion .)
    VARIABLECLASE   reduce using rule 133 (declaracion -> impresion .)
    WHILE           reduce using rule 133 (declaracion -> impresion .)
    DEF             reduce using rule 133 (declaracion -> impresion .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> impresion .)
    SIMBOLO         reduce using rule 133 (declaracion -> impresion .)
    FLOTANTE        reduce using rule 133 (declaracion -> impresion .)
    ENTERO          reduce using rule 133 (declaracion -> impresion .)
    WHEN            reduce using rule 133 (declaracion -> impresion .)
    DO              reduce using rule 133 (declaracion -> impresion .)
    END             reduce using rule 133 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> impresion .)
    ELSE            reduce using rule 133 (declaracion -> impresion .)
    ELSEIF          reduce using rule 133 (declaracion -> impresion .)
    CORCHETE_IZ     reduce using rule 133 (declaracion -> impresion .)
    CASE            reduce using rule 133 (declaracion -> impresion .)
    UNTIL           reduce using rule 133 (declaracion -> impresion .)
    CLASS           reduce using rule 133 (declaracion -> impresion .)
    CADENA          reduce using rule 133 (declaracion -> impresion .)
    $end            reduce using rule 133 (declaracion -> impresion .)


state 116

    (134) declaracion -> impresion_vacia .

    VARIABLE        reduce using rule 134 (declaracion -> impresion_vacia .)
    PRINT           reduce using rule 134 (declaracion -> impresion_vacia .)
    PUTS            reduce using rule 134 (declaracion -> impresion_vacia .)
    PRINTF          reduce using rule 134 (declaracion -> impresion_vacia .)
    GETS            reduce using rule 134 (declaracion -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 134 (declaracion -> impresion_vacia .)
    IF              reduce using rule 134 (declaracion -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 134 (declaracion -> impresion_vacia .)
    WHILE           reduce using rule 134 (declaracion -> impresion_vacia .)
    DEF             reduce using rule 134 (declaracion -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 134 (declaracion -> impresion_vacia .)
    SIMBOLO         reduce using rule 134 (declaracion -> impresion_vacia .)
    FLOTANTE        reduce using rule 134 (declaracion -> impresion_vacia .)
    ENTERO          reduce using rule 134 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 134 (declaracion -> impresion_vacia .)
    DO              reduce using rule 134 (declaracion -> impresion_vacia .)
    END             reduce using rule 134 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 134 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 134 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 134 (declaracion -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 134 (declaracion -> impresion_vacia .)
    CASE            reduce using rule 134 (declaracion -> impresion_vacia .)
    UNTIL           reduce using rule 134 (declaracion -> impresion_vacia .)
    CLASS           reduce using rule 134 (declaracion -> impresion_vacia .)
    CADENA          reduce using rule 134 (declaracion -> impresion_vacia .)
    $end            reduce using rule 134 (declaracion -> impresion_vacia .)


state 117

    (135) declaracion -> expresiones_booleanas .

    VARIABLE        reduce using rule 135 (declaracion -> expresiones_booleanas .)
    PRINT           reduce using rule 135 (declaracion -> expresiones_booleanas .)
    PUTS            reduce using rule 135 (declaracion -> expresiones_booleanas .)
    PRINTF          reduce using rule 135 (declaracion -> expresiones_booleanas .)
    GETS            reduce using rule 135 (declaracion -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> expresiones_booleanas .)
    IF              reduce using rule 135 (declaracion -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 135 (declaracion -> expresiones_booleanas .)
    WHILE           reduce using rule 135 (declaracion -> expresiones_booleanas .)
    DEF             reduce using rule 135 (declaracion -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 135 (declaracion -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 135 (declaracion -> expresiones_booleanas .)
    ENTERO          reduce using rule 135 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 135 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 135 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 135 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 135 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 135 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 135 (declaracion -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 135 (declaracion -> expresiones_booleanas .)
    CASE            reduce using rule 135 (declaracion -> expresiones_booleanas .)
    UNTIL           reduce using rule 135 (declaracion -> expresiones_booleanas .)
    CLASS           reduce using rule 135 (declaracion -> expresiones_booleanas .)
    CADENA          reduce using rule 135 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 135 (declaracion -> expresiones_booleanas .)


state 118

    (136) declaracion -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    PRINT           reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    PUTS            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    GETS            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    IF              reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    WHILE           reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    DEF             reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    CASE            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    CLASS           reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    CADENA          reduce using rule 136 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 136 (declaracion -> solicitudDatosTeclado .)


state 119

    (137) declaracion -> hashes .

    VARIABLE        reduce using rule 137 (declaracion -> hashes .)
    PRINT           reduce using rule 137 (declaracion -> hashes .)
    PUTS            reduce using rule 137 (declaracion -> hashes .)
    PRINTF          reduce using rule 137 (declaracion -> hashes .)
    GETS            reduce using rule 137 (declaracion -> hashes .)
    LLAVE_IZ        reduce using rule 137 (declaracion -> hashes .)
    IF              reduce using rule 137 (declaracion -> hashes .)
    VARIABLECLASE   reduce using rule 137 (declaracion -> hashes .)
    WHILE           reduce using rule 137 (declaracion -> hashes .)
    DEF             reduce using rule 137 (declaracion -> hashes .)
    PARENTESIS_IZ   reduce using rule 137 (declaracion -> hashes .)
    SIMBOLO         reduce using rule 137 (declaracion -> hashes .)
    FLOTANTE        reduce using rule 137 (declaracion -> hashes .)
    ENTERO          reduce using rule 137 (declaracion -> hashes .)
    WHEN            reduce using rule 137 (declaracion -> hashes .)
    DO              reduce using rule 137 (declaracion -> hashes .)
    END             reduce using rule 137 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 137 (declaracion -> hashes .)
    ELSE            reduce using rule 137 (declaracion -> hashes .)
    ELSEIF          reduce using rule 137 (declaracion -> hashes .)
    CORCHETE_IZ     reduce using rule 137 (declaracion -> hashes .)
    CASE            reduce using rule 137 (declaracion -> hashes .)
    UNTIL           reduce using rule 137 (declaracion -> hashes .)
    CLASS           reduce using rule 137 (declaracion -> hashes .)
    CADENA          reduce using rule 137 (declaracion -> hashes .)
    $end            reduce using rule 137 (declaracion -> hashes .)


state 120

    (138) declaracion -> estructura_if .

    VARIABLE        reduce using rule 138 (declaracion -> estructura_if .)
    PRINT           reduce using rule 138 (declaracion -> estructura_if .)
    PUTS            reduce using rule 138 (declaracion -> estructura_if .)
    PRINTF          reduce using rule 138 (declaracion -> estructura_if .)
    GETS            reduce using rule 138 (declaracion -> estructura_if .)
    LLAVE_IZ        reduce using rule 138 (declaracion -> estructura_if .)
    IF              reduce using rule 138 (declaracion -> estructura_if .)
    VARIABLECLASE   reduce using rule 138 (declaracion -> estructura_if .)
    WHILE           reduce using rule 138 (declaracion -> estructura_if .)
    DEF             reduce using rule 138 (declaracion -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 138 (declaracion -> estructura_if .)
    SIMBOLO         reduce using rule 138 (declaracion -> estructura_if .)
    FLOTANTE        reduce using rule 138 (declaracion -> estructura_if .)
    ENTERO          reduce using rule 138 (declaracion -> estructura_if .)
    WHEN            reduce using rule 138 (declaracion -> estructura_if .)
    DO              reduce using rule 138 (declaracion -> estructura_if .)
    END             reduce using rule 138 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 138 (declaracion -> estructura_if .)
    ELSE            reduce using rule 138 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 138 (declaracion -> estructura_if .)
    CORCHETE_IZ     reduce using rule 138 (declaracion -> estructura_if .)
    CASE            reduce using rule 138 (declaracion -> estructura_if .)
    UNTIL           reduce using rule 138 (declaracion -> estructura_if .)
    CLASS           reduce using rule 138 (declaracion -> estructura_if .)
    CADENA          reduce using rule 138 (declaracion -> estructura_if .)
    $end            reduce using rule 138 (declaracion -> estructura_if .)


state 121

    (140) declaracion -> sentencia_while .

    VARIABLE        reduce using rule 140 (declaracion -> sentencia_while .)
    PRINT           reduce using rule 140 (declaracion -> sentencia_while .)
    PUTS            reduce using rule 140 (declaracion -> sentencia_while .)
    PRINTF          reduce using rule 140 (declaracion -> sentencia_while .)
    GETS            reduce using rule 140 (declaracion -> sentencia_while .)
    LLAVE_IZ        reduce using rule 140 (declaracion -> sentencia_while .)
    IF              reduce using rule 140 (declaracion -> sentencia_while .)
    VARIABLECLASE   reduce using rule 140 (declaracion -> sentencia_while .)
    WHILE           reduce using rule 140 (declaracion -> sentencia_while .)
    DEF             reduce using rule 140 (declaracion -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 140 (declaracion -> sentencia_while .)
    SIMBOLO         reduce using rule 140 (declaracion -> sentencia_while .)
    FLOTANTE        reduce using rule 140 (declaracion -> sentencia_while .)
    ENTERO          reduce using rule 140 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 140 (declaracion -> sentencia_while .)
    DO              reduce using rule 140 (declaracion -> sentencia_while .)
    END             reduce using rule 140 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 140 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 140 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 140 (declaracion -> sentencia_while .)
    CORCHETE_IZ     reduce using rule 140 (declaracion -> sentencia_while .)
    CASE            reduce using rule 140 (declaracion -> sentencia_while .)
    UNTIL           reduce using rule 140 (declaracion -> sentencia_while .)
    CLASS           reduce using rule 140 (declaracion -> sentencia_while .)
    CADENA          reduce using rule 140 (declaracion -> sentencia_while .)
    $end            reduce using rule 140 (declaracion -> sentencia_while .)


state 122

    (141) declaracion -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    GETS            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    IF              reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    DEF             reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CASE            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)


state 123

    (142) declaracion -> funciones .

    VARIABLE        reduce using rule 142 (declaracion -> funciones .)
    PRINT           reduce using rule 142 (declaracion -> funciones .)
    PUTS            reduce using rule 142 (declaracion -> funciones .)
    PRINTF          reduce using rule 142 (declaracion -> funciones .)
    GETS            reduce using rule 142 (declaracion -> funciones .)
    LLAVE_IZ        reduce using rule 142 (declaracion -> funciones .)
    IF              reduce using rule 142 (declaracion -> funciones .)
    VARIABLECLASE   reduce using rule 142 (declaracion -> funciones .)
    WHILE           reduce using rule 142 (declaracion -> funciones .)
    DEF             reduce using rule 142 (declaracion -> funciones .)
    PARENTESIS_IZ   reduce using rule 142 (declaracion -> funciones .)
    SIMBOLO         reduce using rule 142 (declaracion -> funciones .)
    FLOTANTE        reduce using rule 142 (declaracion -> funciones .)
    ENTERO          reduce using rule 142 (declaracion -> funciones .)
    WHEN            reduce using rule 142 (declaracion -> funciones .)
    DO              reduce using rule 142 (declaracion -> funciones .)
    END             reduce using rule 142 (declaracion -> funciones .)
    IGUAL_DOBLEP    reduce using rule 142 (declaracion -> funciones .)
    ELSE            reduce using rule 142 (declaracion -> funciones .)
    ELSEIF          reduce using rule 142 (declaracion -> funciones .)
    CORCHETE_IZ     reduce using rule 142 (declaracion -> funciones .)
    CASE            reduce using rule 142 (declaracion -> funciones .)
    UNTIL           reduce using rule 142 (declaracion -> funciones .)
    CLASS           reduce using rule 142 (declaracion -> funciones .)
    CADENA          reduce using rule 142 (declaracion -> funciones .)
    $end            reduce using rule 142 (declaracion -> funciones .)


state 124

    (69) asignacion -> VARIABLE . IGUAL CADENA
    (70) asignacion -> VARIABLE . IGUAL expresionNumerica
    (71) asignacion -> VARIABLE . IGUAL hashes
    (72) asignacion -> VARIABLE . IGUAL SIMBOLO
    (73) asignacion -> VARIABLE . IGUAL array
    (74) asignacion -> VARIABLE . IGUAL input_concatenacion
    (75) asignacion -> VARIABLE . IGUAL booleanos
    (76) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (77) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (106) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (68) asignacion_clase -> VARIABLE . IGUAL booleanos
    (48) expresionNumerica -> VARIABLE .
    (27) valorSimbolo -> VARIABLE .
    (95) operadoresComparacion -> . IGUAL_DOBLEP
    (96) operadoresComparacion -> . NAVE
    (97) operadoresComparacion -> . DIFERENTE
    (98) operadoresComparacion -> . MAYOR_QUE
    (99) operadoresComparacion -> . MENOR_QUE
    (100) operadoresComparacion -> . MENOR_IGUAL_QUE
    (101) operadoresComparacion -> . MAYOR_IGUAL_QUE
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
<<<<<<< HEAD
    IGUAL           shift and go to state 65
=======
    IGUAL           shift and go to state 195
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
<<<<<<< HEAD
    IGUAL_DOBLEP    shift and go to state 68
    NAVE            shift and go to state 69
    DIFERENTE       shift and go to state 70
    MAYOR_QUE       shift and go to state 71
    MENOR_QUE       shift and go to state 72
    MENOR_IGUAL_QUE shift and go to state 73
    MAYOR_IGUAL_QUE shift and go to state 74
=======
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72
    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
<<<<<<< HEAD

    operadoresComparacion          shift and go to state 66

state 125

    (126) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (128) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======

    declaraciones                  shift and go to state 194
    operadoresComparacion          shift and go to state 64
    valorNumerico                  shift and go to state 38
    expresionNumerica              shift and go to state 26
    hashes                         shift and go to state 117
    solicitudDatosTeclado          shift and go to state 116
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37

state 112

    (132) declaracion -> operacionAritmetica .
    (46) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 132 (declaracion -> operacionAritmetica .)
    PRINT           reduce using rule 132 (declaracion -> operacionAritmetica .)
    PUTS            reduce using rule 132 (declaracion -> operacionAritmetica .)
    PRINTF          reduce using rule 132 (declaracion -> operacionAritmetica .)
    GETS            reduce using rule 132 (declaracion -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 132 (declaracion -> operacionAritmetica .)
    IF              reduce using rule 132 (declaracion -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 132 (declaracion -> operacionAritmetica .)
    WHILE           reduce using rule 132 (declaracion -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 132 (declaracion -> operacionAritmetica .)
    SIMBOLO         reduce using rule 132 (declaracion -> operacionAritmetica .)
    FLOTANTE        reduce using rule 132 (declaracion -> operacionAritmetica .)
    ENTERO          reduce using rule 132 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 132 (declaracion -> operacionAritmetica .)
    END             reduce using rule 132 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 132 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 132 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 132 (declaracion -> operacionAritmetica .)
    DEF             reduce using rule 132 (declaracion -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 132 (declaracion -> operacionAritmetica .)
    CASE            reduce using rule 132 (declaracion -> operacionAritmetica .)
    UNTIL           reduce using rule 132 (declaracion -> operacionAritmetica .)
    CLASS           reduce using rule 132 (declaracion -> operacionAritmetica .)
    CADENA          reduce using rule 132 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 132 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)


state 113

    (133) declaracion -> asignacion .

    VARIABLE        reduce using rule 133 (declaracion -> asignacion .)
    PRINT           reduce using rule 133 (declaracion -> asignacion .)
    PUTS            reduce using rule 133 (declaracion -> asignacion .)
    PRINTF          reduce using rule 133 (declaracion -> asignacion .)
    GETS            reduce using rule 133 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> asignacion .)
    IF              reduce using rule 133 (declaracion -> asignacion .)
    VARIABLECLASE   reduce using rule 133 (declaracion -> asignacion .)
    WHILE           reduce using rule 133 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 133 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 133 (declaracion -> asignacion .)
    ENTERO          reduce using rule 133 (declaracion -> asignacion .)
    DO              reduce using rule 133 (declaracion -> asignacion .)
    END             reduce using rule 133 (declaracion -> asignacion .)
    ELSE            reduce using rule 133 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 133 (declaracion -> asignacion .)
    WHEN            reduce using rule 133 (declaracion -> asignacion .)
    DEF             reduce using rule 133 (declaracion -> asignacion .)
    CORCHETE_IZ     reduce using rule 133 (declaracion -> asignacion .)
    CASE            reduce using rule 133 (declaracion -> asignacion .)
    UNTIL           reduce using rule 133 (declaracion -> asignacion .)
    CLASS           reduce using rule 133 (declaracion -> asignacion .)
    CADENA          reduce using rule 133 (declaracion -> asignacion .)
    $end            reduce using rule 133 (declaracion -> asignacion .)


state 114

    (134) declaracion -> impresion .

    VARIABLE        reduce using rule 134 (declaracion -> impresion .)
    PRINT           reduce using rule 134 (declaracion -> impresion .)
    PUTS            reduce using rule 134 (declaracion -> impresion .)
    PRINTF          reduce using rule 134 (declaracion -> impresion .)
    GETS            reduce using rule 134 (declaracion -> impresion .)
    LLAVE_IZ        reduce using rule 134 (declaracion -> impresion .)
    IF              reduce using rule 134 (declaracion -> impresion .)
    VARIABLECLASE   reduce using rule 134 (declaracion -> impresion .)
    WHILE           reduce using rule 134 (declaracion -> impresion .)
    PARENTESIS_IZ   reduce using rule 134 (declaracion -> impresion .)
    SIMBOLO         reduce using rule 134 (declaracion -> impresion .)
    FLOTANTE        reduce using rule 134 (declaracion -> impresion .)
    ENTERO          reduce using rule 134 (declaracion -> impresion .)
    DO              reduce using rule 134 (declaracion -> impresion .)
    END             reduce using rule 134 (declaracion -> impresion .)
    ELSE            reduce using rule 134 (declaracion -> impresion .)
    ELSEIF          reduce using rule 134 (declaracion -> impresion .)
    WHEN            reduce using rule 134 (declaracion -> impresion .)
    DEF             reduce using rule 134 (declaracion -> impresion .)
    CORCHETE_IZ     reduce using rule 134 (declaracion -> impresion .)
    CASE            reduce using rule 134 (declaracion -> impresion .)
    UNTIL           reduce using rule 134 (declaracion -> impresion .)
    CLASS           reduce using rule 134 (declaracion -> impresion .)
    CADENA          reduce using rule 134 (declaracion -> impresion .)
    $end            reduce using rule 134 (declaracion -> impresion .)


state 115

    (135) declaracion -> impresion_vacia .

    VARIABLE        reduce using rule 135 (declaracion -> impresion_vacia .)
    PRINT           reduce using rule 135 (declaracion -> impresion_vacia .)
    PUTS            reduce using rule 135 (declaracion -> impresion_vacia .)
    PRINTF          reduce using rule 135 (declaracion -> impresion_vacia .)
    GETS            reduce using rule 135 (declaracion -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> impresion_vacia .)
    IF              reduce using rule 135 (declaracion -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 135 (declaracion -> impresion_vacia .)
    WHILE           reduce using rule 135 (declaracion -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> impresion_vacia .)
    SIMBOLO         reduce using rule 135 (declaracion -> impresion_vacia .)
    FLOTANTE        reduce using rule 135 (declaracion -> impresion_vacia .)
    ENTERO          reduce using rule 135 (declaracion -> impresion_vacia .)
    DO              reduce using rule 135 (declaracion -> impresion_vacia .)
    END             reduce using rule 135 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 135 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 135 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 135 (declaracion -> impresion_vacia .)
    DEF             reduce using rule 135 (declaracion -> impresion_vacia .)
    CORCHETE_IZ     reduce using rule 135 (declaracion -> impresion_vacia .)
    CASE            reduce using rule 135 (declaracion -> impresion_vacia .)
    UNTIL           reduce using rule 135 (declaracion -> impresion_vacia .)
    CLASS           reduce using rule 135 (declaracion -> impresion_vacia .)
    CADENA          reduce using rule 135 (declaracion -> impresion_vacia .)
    $end            reduce using rule 135 (declaracion -> impresion_vacia .)


state 116

    (137) declaracion -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    PRINT           reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    PUTS            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    GETS            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    IF              reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    WHILE           reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    DEF             reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    CASE            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    UNTIL           reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    CLASS           reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    CADENA          reduce using rule 137 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 137 (declaracion -> solicitudDatosTeclado .)


state 117

    (138) declaracion -> hashes .

    VARIABLE        reduce using rule 138 (declaracion -> hashes .)
    PRINT           reduce using rule 138 (declaracion -> hashes .)
    PUTS            reduce using rule 138 (declaracion -> hashes .)
    PRINTF          reduce using rule 138 (declaracion -> hashes .)
    GETS            reduce using rule 138 (declaracion -> hashes .)
    LLAVE_IZ        reduce using rule 138 (declaracion -> hashes .)
    IF              reduce using rule 138 (declaracion -> hashes .)
    VARIABLECLASE   reduce using rule 138 (declaracion -> hashes .)
    WHILE           reduce using rule 138 (declaracion -> hashes .)
    PARENTESIS_IZ   reduce using rule 138 (declaracion -> hashes .)
    SIMBOLO         reduce using rule 138 (declaracion -> hashes .)
    FLOTANTE        reduce using rule 138 (declaracion -> hashes .)
    ENTERO          reduce using rule 138 (declaracion -> hashes .)
    DO              reduce using rule 138 (declaracion -> hashes .)
    END             reduce using rule 138 (declaracion -> hashes .)
    ELSE            reduce using rule 138 (declaracion -> hashes .)
    ELSEIF          reduce using rule 138 (declaracion -> hashes .)
    WHEN            reduce using rule 138 (declaracion -> hashes .)
    DEF             reduce using rule 138 (declaracion -> hashes .)
    CORCHETE_IZ     reduce using rule 138 (declaracion -> hashes .)
    CASE            reduce using rule 138 (declaracion -> hashes .)
    UNTIL           reduce using rule 138 (declaracion -> hashes .)
    CLASS           reduce using rule 138 (declaracion -> hashes .)
    CADENA          reduce using rule 138 (declaracion -> hashes .)
    $end            reduce using rule 138 (declaracion -> hashes .)


state 118

    (139) declaracion -> estructura_if .

    VARIABLE        reduce using rule 139 (declaracion -> estructura_if .)
    PRINT           reduce using rule 139 (declaracion -> estructura_if .)
    PUTS            reduce using rule 139 (declaracion -> estructura_if .)
    PRINTF          reduce using rule 139 (declaracion -> estructura_if .)
    GETS            reduce using rule 139 (declaracion -> estructura_if .)
    LLAVE_IZ        reduce using rule 139 (declaracion -> estructura_if .)
    IF              reduce using rule 139 (declaracion -> estructura_if .)
    VARIABLECLASE   reduce using rule 139 (declaracion -> estructura_if .)
    WHILE           reduce using rule 139 (declaracion -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 139 (declaracion -> estructura_if .)
    SIMBOLO         reduce using rule 139 (declaracion -> estructura_if .)
    FLOTANTE        reduce using rule 139 (declaracion -> estructura_if .)
    ENTERO          reduce using rule 139 (declaracion -> estructura_if .)
    DO              reduce using rule 139 (declaracion -> estructura_if .)
    END             reduce using rule 139 (declaracion -> estructura_if .)
    ELSE            reduce using rule 139 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 139 (declaracion -> estructura_if .)
    WHEN            reduce using rule 139 (declaracion -> estructura_if .)
    DEF             reduce using rule 139 (declaracion -> estructura_if .)
    CORCHETE_IZ     reduce using rule 139 (declaracion -> estructura_if .)
    CASE            reduce using rule 139 (declaracion -> estructura_if .)
    UNTIL           reduce using rule 139 (declaracion -> estructura_if .)
    CLASS           reduce using rule 139 (declaracion -> estructura_if .)
    CADENA          reduce using rule 139 (declaracion -> estructura_if .)
    $end            reduce using rule 139 (declaracion -> estructura_if .)


state 119

    (140) declaracion -> asignacion_clase .

    VARIABLE        reduce using rule 140 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 140 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 140 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 140 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 140 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 140 (declaracion -> asignacion_clase .)
    IF              reduce using rule 140 (declaracion -> asignacion_clase .)
    VARIABLECLASE   reduce using rule 140 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 140 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 140 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 140 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 140 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 140 (declaracion -> asignacion_clase .)
    DO              reduce using rule 140 (declaracion -> asignacion_clase .)
    END             reduce using rule 140 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 140 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 140 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 140 (declaracion -> asignacion_clase .)
    DEF             reduce using rule 140 (declaracion -> asignacion_clase .)
    CORCHETE_IZ     reduce using rule 140 (declaracion -> asignacion_clase .)
    CASE            reduce using rule 140 (declaracion -> asignacion_clase .)
    UNTIL           reduce using rule 140 (declaracion -> asignacion_clase .)
    CLASS           reduce using rule 140 (declaracion -> asignacion_clase .)
    CADENA          reduce using rule 140 (declaracion -> asignacion_clase .)
    $end            reduce using rule 140 (declaracion -> asignacion_clase .)


state 120

    (141) declaracion -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    GETS            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    IF              reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    DEF             reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CASE            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    UNTIL           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CLASS           reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    CADENA          reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 141 (declaracion -> estructura_ifUnaLinea .)


state 121

    (143) declaracion -> sentencia_while_bool .

    VARIABLE        reduce using rule 143 (declaracion -> sentencia_while_bool .)
    PRINT           reduce using rule 143 (declaracion -> sentencia_while_bool .)
    PUTS            reduce using rule 143 (declaracion -> sentencia_while_bool .)
    PRINTF          reduce using rule 143 (declaracion -> sentencia_while_bool .)
    GETS            reduce using rule 143 (declaracion -> sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 143 (declaracion -> sentencia_while_bool .)
    IF              reduce using rule 143 (declaracion -> sentencia_while_bool .)
    VARIABLECLASE   reduce using rule 143 (declaracion -> sentencia_while_bool .)
    WHILE           reduce using rule 143 (declaracion -> sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 143 (declaracion -> sentencia_while_bool .)
    SIMBOLO         reduce using rule 143 (declaracion -> sentencia_while_bool .)
    FLOTANTE        reduce using rule 143 (declaracion -> sentencia_while_bool .)
    ENTERO          reduce using rule 143 (declaracion -> sentencia_while_bool .)
    DO              reduce using rule 143 (declaracion -> sentencia_while_bool .)
    END             reduce using rule 143 (declaracion -> sentencia_while_bool .)
    ELSE            reduce using rule 143 (declaracion -> sentencia_while_bool .)
    ELSEIF          reduce using rule 143 (declaracion -> sentencia_while_bool .)
    WHEN            reduce using rule 143 (declaracion -> sentencia_while_bool .)
    DEF             reduce using rule 143 (declaracion -> sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 143 (declaracion -> sentencia_while_bool .)
    CASE            reduce using rule 143 (declaracion -> sentencia_while_bool .)
    UNTIL           reduce using rule 143 (declaracion -> sentencia_while_bool .)
    CLASS           reduce using rule 143 (declaracion -> sentencia_while_bool .)
    CADENA          reduce using rule 143 (declaracion -> sentencia_while_bool .)
    $end            reduce using rule 143 (declaracion -> sentencia_while_bool .)


state 122

    (127) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (129) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    condicionIf                    shift and go to state 196
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 123

    (64) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (65) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (66) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (67) asignacion_clase -> VARIABLECLASE . IGUAL array
    (68) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 197


state 124

    (150) sentencia_case -> CASE VARIABLE . sentencia_when END
    (151) sentencia_when -> . WHEN declaracion declaracion

    WHEN            shift and go to state 52

    sentencia_when                 shift and go to state 198

state 125

    (153) sentencias_when -> sentencia_when sentencias_when .

    VARIABLE        reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    PRINT           reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    PUTS            reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    PRINTF          reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    GETS            reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    LLAVE_IZ        reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    IF              reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    DEF             reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    CORCHETE_IZ     reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    WHILE           reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    CASE            reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    UNTIL           reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    PARENTESIS_IZ   reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    SIMBOLO         reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    FLOTANTE        reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    ENTERO          reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    WHEN            reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    CLASS           reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    CADENA          reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    $end            reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 153 (sentencias_when -> sentencia_when sentencias_when .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    condicionIf                    shift and go to state 188
    expresiones_booleanas          shift and go to state 97
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 126

<<<<<<< HEAD
    (149) sentencias_when -> sentencia_when sentencias_when .

    VARIABLE        reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    PRINT           reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    PUTS            reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    PRINTF          reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    GETS            reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    LLAVE_IZ        reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    IF              reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    DEF             reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    CORCHETE_IZ     reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    WHILE           reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    CASE            reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    UNTIL           reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    PARENTESIS_IZ   reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    SIMBOLO         reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    FLOTANTE        reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    ENTERO          reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    WHEN            reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    CLASS           reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    VARIABLECLASE   reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    CADENA          reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    $end            reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 149 (sentencias_when -> sentencia_when sentencias_when .)
=======
    (154) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 199
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 127

<<<<<<< HEAD
    (151) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 189
=======
    (136) declaracion -> expresiones_booleanas .

    DO              reduce using rule 136 (declaracion -> expresiones_booleanas .)
    VARIABLE        reduce using rule 136 (declaracion -> expresiones_booleanas .)
    PRINT           reduce using rule 136 (declaracion -> expresiones_booleanas .)
    PUTS            reduce using rule 136 (declaracion -> expresiones_booleanas .)
    PRINTF          reduce using rule 136 (declaracion -> expresiones_booleanas .)
    GETS            reduce using rule 136 (declaracion -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 136 (declaracion -> expresiones_booleanas .)
    IF              reduce using rule 136 (declaracion -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 136 (declaracion -> expresiones_booleanas .)
    WHILE           reduce using rule 136 (declaracion -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 136 (declaracion -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 136 (declaracion -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 136 (declaracion -> expresiones_booleanas .)
    ENTERO          reduce using rule 136 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 136 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 136 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 136 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 136 (declaracion -> expresiones_booleanas .)
    DEF             reduce using rule 136 (declaracion -> expresiones_booleanas .)
    CORCHETE_IZ     reduce using rule 136 (declaracion -> expresiones_booleanas .)
    CASE            reduce using rule 136 (declaracion -> expresiones_booleanas .)
    UNTIL           reduce using rule 136 (declaracion -> expresiones_booleanas .)
    CLASS           reduce using rule 136 (declaracion -> expresiones_booleanas .)
    CADENA          reduce using rule 136 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 136 (declaracion -> expresiones_booleanas .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 128

<<<<<<< HEAD
    (165) definicion_clase -> encabezadoClase declaraciones . END

    END             shift and go to state 190


state 129

    (33) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 136
=======
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (69) asignacion_clase -> VARIABLE . IGUAL booleanos
    (48) expresionNumerica -> VARIABLE .
    (27) valorSimbolo -> VARIABLE .
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 195
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72

  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 64

state 129

    (168) definicion_clase -> encabezadoClase cuerpoVariables . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    DEF             shift and go to state 200
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    valorCadena                    shift and go to state 191

state 130

<<<<<<< HEAD
    (150) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 192


state 131

    (163) encabezadoClase -> CLASS ID_CLASE .
    (164) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    VARIABLE        reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    PRINT           reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    PUTS            reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    PRINTF          reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    GETS            reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    LLAVE_IZ        reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    IF              reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    VARIABLECLASE   reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    WHILE           reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    DEF             reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    PARENTESIS_IZ   reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    SIMBOLO         reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    FLOTANTE        reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    ENTERO          reduce using rule 163 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 193
=======
    (169) cuerpoVariables -> asignacion_clase .
    (171) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    PRINT           reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    PUTS            reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    PRINTF          reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    GETS            reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    IF              reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    WHILE           reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    SIMBOLO         reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    FLOTANTE        reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    ENTERO          reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    END             reduce using rule 169 (cuerpoVariables -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 132

  ! VARIABLECLASE   [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 130
    cuerpoVariables                shift and go to state 201
    asignacion                     shift and go to state 131

state 131

    (170) cuerpoVariables -> asignacion .
    (172) cuerpoVariables -> asignacion . cuerpoVariables
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 170 (cuerpoVariables -> asignacion .)
    PRINT           reduce using rule 170 (cuerpoVariables -> asignacion .)
    PUTS            reduce using rule 170 (cuerpoVariables -> asignacion .)
    PRINTF          reduce using rule 170 (cuerpoVariables -> asignacion .)
    GETS            reduce using rule 170 (cuerpoVariables -> asignacion .)
    LLAVE_IZ        reduce using rule 170 (cuerpoVariables -> asignacion .)
    IF              reduce using rule 170 (cuerpoVariables -> asignacion .)
    WHILE           reduce using rule 170 (cuerpoVariables -> asignacion .)
    PARENTESIS_IZ   reduce using rule 170 (cuerpoVariables -> asignacion .)
    SIMBOLO         reduce using rule 170 (cuerpoVariables -> asignacion .)
    FLOTANTE        reduce using rule 170 (cuerpoVariables -> asignacion .)
    ENTERO          reduce using rule 170 (cuerpoVariables -> asignacion .)
    END             reduce using rule 170 (cuerpoVariables -> asignacion .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 132
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! VARIABLECLASE   [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]

    asignacion                     shift and go to state 131
    cuerpoVariables                shift and go to state 202
    asignacion_clase               shift and go to state 130

state 132

<<<<<<< HEAD
    (63) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (64) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (65) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (66) asignacion_clase -> VARIABLECLASE IGUAL . array
    (67) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 194
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 199
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (69) asignacion_clase -> VARIABLE . IGUAL booleanos
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante

    IGUAL           shift and go to state 203
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresionNumerica              shift and go to state 195
    hashes                         shift and go to state 196
    array                          shift and go to state 197
    input_concatenacion            shift and go to state 198
    valorNumerico                  shift and go to state 84
    operacionAritmetica            shift and go to state 134
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 50

state 133

<<<<<<< HEAD
=======
    (33) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 139

    valorCadena                    shift and go to state 204

state 134

    (151) sentencia_when -> WHEN declaracion . declaracion
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaracion                    shift and go to state 205
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 135

    (166) encabezadoClase -> CLASS ID_CLASE .
    (167) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    VARIABLECLASE   reduce using rule 166 (encabezadoClase -> CLASS ID_CLASE .)
    VARIABLE        reduce using rule 166 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 206


state 136

>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (49) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    VARIABLE        reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINT           reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PUTS            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINTF          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    GETS            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    LLAVE_IZ        reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IF              reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DEF             reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CORCHETE_IZ     reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHILE           reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CASE            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    UNTIL           reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    SIMBOLO         reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    FLOTANTE        reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ENTERO          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CLASS           reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
<<<<<<< HEAD
    VARIABLECLASE   reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    CADENA          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    $end            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    DIVISION        shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    EXPONENCIACION  shift and go to state 62
    MODULO          shift and go to state 63
=======
    CADENA          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    $end            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    VARIABLECLASE   reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    DIVISION        shift and go to state 58
    MULTIPLICACION  shift and go to state 59
    EXPONENCIACION  shift and go to state 60
    MODULO          shift and go to state 61
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

  ! MAS             [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 49 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
<<<<<<< HEAD

    operadores                     shift and go to state 57

state 134

    (46) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    VARIABLE        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PRINT           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PUTS            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PRINTF          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    GETS            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    IF              reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DEF             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    WHILE           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CASE            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    UNTIL           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    SIMBOLO         reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    FLOTANTE        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ENTERO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CLASS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CADENA          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)


state 135

    (34) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLE        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINT           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PUTS            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINTF          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    GETS            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IF              reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DEF             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHILE           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CASE            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    UNTIL           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ENTERO          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CLASS           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CADENA          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 136

    (32) valorCadena -> VARIABLE .

    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)
    VARIABLE        reduce using rule 32 (valorCadena -> VARIABLE .)
    PRINT           reduce using rule 32 (valorCadena -> VARIABLE .)
    PUTS            reduce using rule 32 (valorCadena -> VARIABLE .)
    PRINTF          reduce using rule 32 (valorCadena -> VARIABLE .)
    GETS            reduce using rule 32 (valorCadena -> VARIABLE .)
    LLAVE_IZ        reduce using rule 32 (valorCadena -> VARIABLE .)
    IF              reduce using rule 32 (valorCadena -> VARIABLE .)
    DEF             reduce using rule 32 (valorCadena -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 32 (valorCadena -> VARIABLE .)
    WHILE           reduce using rule 32 (valorCadena -> VARIABLE .)
    CASE            reduce using rule 32 (valorCadena -> VARIABLE .)
    UNTIL           reduce using rule 32 (valorCadena -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 32 (valorCadena -> VARIABLE .)
    SIMBOLO         reduce using rule 32 (valorCadena -> VARIABLE .)
    FLOTANTE        reduce using rule 32 (valorCadena -> VARIABLE .)
    ENTERO          reduce using rule 32 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 32 (valorCadena -> VARIABLE .)
    CLASS           reduce using rule 32 (valorCadena -> VARIABLE .)
    VARIABLECLASE   reduce using rule 32 (valorCadena -> VARIABLE .)
    CADENA          reduce using rule 32 (valorCadena -> VARIABLE .)
    $end            reduce using rule 32 (valorCadena -> VARIABLE .)
    DO              reduce using rule 32 (valorCadena -> VARIABLE .)
    END             reduce using rule 32 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 32 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 32 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 32 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 32 (valorCadena -> VARIABLE .)
=======
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    operadores                     shift and go to state 55

state 137

<<<<<<< HEAD
    (48) expresionNumerica -> VARIABLE .
    (38) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (30) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 32 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 200
    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 48 (expresionNumerica -> VARIABLE .) ]
=======
    (46) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    VARIABLE        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PRINT           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PUTS            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PRINTF          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    GETS            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    IF              reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DEF             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CORCHETE_IZ     reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    WHILE           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CASE            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    UNTIL           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    SIMBOLO         reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    FLOTANTE        reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ENTERO          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CLASS           reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    CADENA          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 46 (expresionNumerica -> operacionAritmetica .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 138

<<<<<<< HEAD
    (69) asignacion -> VARIABLE IGUAL CADENA .
    (31) valorCadena -> CADENA .

    VARIABLE        reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINT           reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    PUTS            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINTF          reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    GETS            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    IF              reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    DEF             reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    WHILE           reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    CASE            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    UNTIL           reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    SIMBOLO         reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    FLOTANTE        reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    ENTERO          reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    CLASS           reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    CADENA          reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 31 (valorCadena -> CADENA .)
=======
    (34) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLE        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINT           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PUTS            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINTF          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    GETS            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IF              reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DEF             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHILE           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CASE            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    UNTIL           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ENTERO          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CLASS           reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    CADENA          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 34 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 139

<<<<<<< HEAD
    (70) asignacion -> VARIABLE IGUAL expresionNumerica .
    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

    VARIABLE        reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINT           reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PUTS            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    GETS            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IF              reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DEF             reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHILE           reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CASE            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CLASS           reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CADENA          reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    DIVISION        shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    EXPONENCIACION  shift and go to state 62
    MODULO          shift and go to state 63

    operadores                     shift and go to state 57

state 140

    (71) asignacion -> VARIABLE IGUAL hashes .

    VARIABLE        reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    PRINT           reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    PUTS            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    PRINTF          reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    GETS            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    IF              reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    DEF             reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    WHILE           reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    CASE            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    UNTIL           reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    SIMBOLO         reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    FLOTANTE        reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    ENTERO          reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    CLASS           reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    CADENA          reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 71 (asignacion -> VARIABLE IGUAL hashes .)
=======
    (32) valorCadena -> VARIABLE .

    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)
    VARIABLE        reduce using rule 32 (valorCadena -> VARIABLE .)
    PRINT           reduce using rule 32 (valorCadena -> VARIABLE .)
    PUTS            reduce using rule 32 (valorCadena -> VARIABLE .)
    PRINTF          reduce using rule 32 (valorCadena -> VARIABLE .)
    GETS            reduce using rule 32 (valorCadena -> VARIABLE .)
    LLAVE_IZ        reduce using rule 32 (valorCadena -> VARIABLE .)
    IF              reduce using rule 32 (valorCadena -> VARIABLE .)
    DEF             reduce using rule 32 (valorCadena -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 32 (valorCadena -> VARIABLE .)
    WHILE           reduce using rule 32 (valorCadena -> VARIABLE .)
    CASE            reduce using rule 32 (valorCadena -> VARIABLE .)
    UNTIL           reduce using rule 32 (valorCadena -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 32 (valorCadena -> VARIABLE .)
    SIMBOLO         reduce using rule 32 (valorCadena -> VARIABLE .)
    FLOTANTE        reduce using rule 32 (valorCadena -> VARIABLE .)
    ENTERO          reduce using rule 32 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 32 (valorCadena -> VARIABLE .)
    CLASS           reduce using rule 32 (valorCadena -> VARIABLE .)
    CADENA          reduce using rule 32 (valorCadena -> VARIABLE .)
    $end            reduce using rule 32 (valorCadena -> VARIABLE .)
    END             reduce using rule 32 (valorCadena -> VARIABLE .)
    VARIABLECLASE   reduce using rule 32 (valorCadena -> VARIABLE .)
    DO              reduce using rule 32 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 32 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 32 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 32 (valorCadena -> VARIABLE .)


state 140

    (48) expresionNumerica -> VARIABLE .
    (38) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (30) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 32 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 207
    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 48 (expresionNumerica -> VARIABLE .) ]
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 141

<<<<<<< HEAD
    (72) asignacion -> VARIABLE IGUAL SIMBOLO .

    VARIABLE        reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINT           reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PUTS            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINTF          reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    GETS            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    LLAVE_IZ        reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IF              reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DEF             reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CORCHETE_IZ     reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHILE           reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CASE            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    UNTIL           reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    SIMBOLO         reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    FLOTANTE        reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ENTERO          reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CLASS           reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLECLASE   reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CADENA          reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL SIMBOLO .)
=======
    (70) asignacion -> VARIABLE IGUAL CADENA .
    (31) valorCadena -> CADENA .

    VARIABLE        reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINT           reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    PUTS            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINTF          reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    GETS            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    IF              reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    DEF             reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    WHILE           reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    CASE            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    UNTIL           reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    SIMBOLO         reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    FLOTANTE        reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    ENTERO          reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    CLASS           reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    CADENA          reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 31 (valorCadena -> CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 142

<<<<<<< HEAD
    (73) asignacion -> VARIABLE IGUAL array .

    VARIABLE        reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    PRINT           reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    PUTS            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    PRINTF          reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    GETS            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    LLAVE_IZ        reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    IF              reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    DEF             reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    CORCHETE_IZ     reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    WHILE           reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    CASE            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    UNTIL           reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    SIMBOLO         reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    FLOTANTE        reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    ENTERO          reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    CLASS           reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    VARIABLECLASE   reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    CADENA          reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 73 (asignacion -> VARIABLE IGUAL array .)
=======
    (71) asignacion -> VARIABLE IGUAL expresionNumerica .
    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

    VARIABLE        reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINT           reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PUTS            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    GETS            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IF              reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DEF             reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHILE           reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CASE            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CLASS           reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    CADENA          reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 71 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    DIVISION        shift and go to state 58
    MULTIPLICACION  shift and go to state 59
    EXPONENCIACION  shift and go to state 60
    MODULO          shift and go to state 61
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    operadores                     shift and go to state 55

state 143

<<<<<<< HEAD
    (74) asignacion -> VARIABLE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINT           reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PUTS            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    GETS            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IF              reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DEF             reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHILE           reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CASE            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CLASS           reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CADENA          reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    $end            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 74 (asignacion -> VARIABLE IGUAL input_concatenacion .)
=======
    (72) asignacion -> VARIABLE IGUAL hashes .

    VARIABLE        reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    PRINT           reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    PUTS            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    PRINTF          reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    GETS            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    IF              reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    DEF             reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    WHILE           reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    CASE            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    UNTIL           reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    SIMBOLO         reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    FLOTANTE        reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    ENTERO          reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    CLASS           reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    CADENA          reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL hashes .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 144

<<<<<<< HEAD
    (75) asignacion -> VARIABLE IGUAL booleanos .
    (68) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CASE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for UNTIL resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHEN resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CLASS resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CADENA resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 68 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLE        [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CORCHETE_IZ     [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CASE            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! UNTIL           [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHEN            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CLASS           [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLECLASE   [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CADENA          [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 75 (asignacion -> VARIABLE IGUAL booleanos .) ]
=======
    (73) asignacion -> VARIABLE IGUAL SIMBOLO .

    VARIABLE        reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINT           reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PUTS            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINTF          reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    GETS            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    LLAVE_IZ        reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IF              reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DEF             reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CORCHETE_IZ     reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHILE           reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CASE            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    UNTIL           reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    SIMBOLO         reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    FLOTANTE        reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ENTERO          reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CLASS           reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    CADENA          reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLECLASE   reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 73 (asignacion -> VARIABLE IGUAL SIMBOLO .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 145

<<<<<<< HEAD
    (76) asignacion -> VARIABLE IGUAL solicitudDatosTeclado .

    VARIABLE        reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINT           reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PUTS            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINTF          reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    GETS            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IF              reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DEF             reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHILE           reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CASE            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    UNTIL           reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ENTERO          reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHEN            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CLASS           reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CADENA          reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    $end            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DO              reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    END             reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSE            reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSEIF          reduce using rule 76 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
=======
    (74) asignacion -> VARIABLE IGUAL array .

    VARIABLE        reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    PRINT           reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    PUTS            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    PRINTF          reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    GETS            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    LLAVE_IZ        reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    IF              reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    DEF             reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    CORCHETE_IZ     reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    WHILE           reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    CASE            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    UNTIL           reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    SIMBOLO         reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    FLOTANTE        reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    ENTERO          reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    CLASS           reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    CADENA          reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    $end            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    VARIABLECLASE   reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 74 (asignacion -> VARIABLE IGUAL array .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 146

<<<<<<< HEAD
    (77) asignacion -> VARIABLE IGUAL entero_a_flotante .

    VARIABLE        reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINT           reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PUTS            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINTF          reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    GETS            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    LLAVE_IZ        reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IF              reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DEF             reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHILE           reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CASE            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    UNTIL           reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    SIMBOLO         reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    FLOTANTE        reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ENTERO          reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHEN            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CLASS           reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLECLASE   reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CADENA          reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    $end            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DO              reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    END             reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IGUAL_DOBLEP    reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSE            reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSEIF          reduce using rule 77 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
=======
    (75) asignacion -> VARIABLE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINT           reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PUTS            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    GETS            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IF              reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DEF             reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHILE           reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CASE            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CLASS           reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    CADENA          reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    $end            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 75 (asignacion -> VARIABLE IGUAL input_concatenacion .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 147

<<<<<<< HEAD
    (55) booleanos -> TRUE .

    VARIABLE        reduce using rule 55 (booleanos -> TRUE .)
    PRINT           reduce using rule 55 (booleanos -> TRUE .)
    PUTS            reduce using rule 55 (booleanos -> TRUE .)
    PRINTF          reduce using rule 55 (booleanos -> TRUE .)
    GETS            reduce using rule 55 (booleanos -> TRUE .)
    LLAVE_IZ        reduce using rule 55 (booleanos -> TRUE .)
    IF              reduce using rule 55 (booleanos -> TRUE .)
    DEF             reduce using rule 55 (booleanos -> TRUE .)
    CORCHETE_IZ     reduce using rule 55 (booleanos -> TRUE .)
    WHILE           reduce using rule 55 (booleanos -> TRUE .)
    CASE            reduce using rule 55 (booleanos -> TRUE .)
    UNTIL           reduce using rule 55 (booleanos -> TRUE .)
    PARENTESIS_IZ   reduce using rule 55 (booleanos -> TRUE .)
    SIMBOLO         reduce using rule 55 (booleanos -> TRUE .)
    FLOTANTE        reduce using rule 55 (booleanos -> TRUE .)
    ENTERO          reduce using rule 55 (booleanos -> TRUE .)
    WHEN            reduce using rule 55 (booleanos -> TRUE .)
    CLASS           reduce using rule 55 (booleanos -> TRUE .)
    VARIABLECLASE   reduce using rule 55 (booleanos -> TRUE .)
    CADENA          reduce using rule 55 (booleanos -> TRUE .)
    $end            reduce using rule 55 (booleanos -> TRUE .)
    DO              reduce using rule 55 (booleanos -> TRUE .)
    END             reduce using rule 55 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 55 (booleanos -> TRUE .)
    ELSE            reduce using rule 55 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 55 (booleanos -> TRUE .)
=======
    (76) asignacion -> VARIABLE IGUAL booleanos .

    VARIABLE        reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 148

<<<<<<< HEAD
    (56) booleanos -> FALSE .

    VARIABLE        reduce using rule 56 (booleanos -> FALSE .)
    PRINT           reduce using rule 56 (booleanos -> FALSE .)
    PUTS            reduce using rule 56 (booleanos -> FALSE .)
    PRINTF          reduce using rule 56 (booleanos -> FALSE .)
    GETS            reduce using rule 56 (booleanos -> FALSE .)
    LLAVE_IZ        reduce using rule 56 (booleanos -> FALSE .)
    IF              reduce using rule 56 (booleanos -> FALSE .)
    DEF             reduce using rule 56 (booleanos -> FALSE .)
    CORCHETE_IZ     reduce using rule 56 (booleanos -> FALSE .)
    WHILE           reduce using rule 56 (booleanos -> FALSE .)
    CASE            reduce using rule 56 (booleanos -> FALSE .)
    UNTIL           reduce using rule 56 (booleanos -> FALSE .)
    PARENTESIS_IZ   reduce using rule 56 (booleanos -> FALSE .)
    SIMBOLO         reduce using rule 56 (booleanos -> FALSE .)
    FLOTANTE        reduce using rule 56 (booleanos -> FALSE .)
    ENTERO          reduce using rule 56 (booleanos -> FALSE .)
    WHEN            reduce using rule 56 (booleanos -> FALSE .)
    CLASS           reduce using rule 56 (booleanos -> FALSE .)
    VARIABLECLASE   reduce using rule 56 (booleanos -> FALSE .)
    CADENA          reduce using rule 56 (booleanos -> FALSE .)
    $end            reduce using rule 56 (booleanos -> FALSE .)
    DO              reduce using rule 56 (booleanos -> FALSE .)
    END             reduce using rule 56 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 56 (booleanos -> FALSE .)
    ELSE            reduce using rule 56 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 56 (booleanos -> FALSE .)
=======
    (77) asignacion -> VARIABLE IGUAL solicitudDatosTeclado .

    VARIABLE        reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINT           reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PUTS            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINTF          reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    GETS            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IF              reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DEF             reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CORCHETE_IZ     reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHILE           reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CASE            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    UNTIL           reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ENTERO          reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHEN            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CLASS           reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    CADENA          reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    $end            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DO              reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    END             reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSE            reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSEIF          reduce using rule 77 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 149

<<<<<<< HEAD
    (106) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DEF             reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CASE            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    $end            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 106 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
=======
    (78) asignacion -> VARIABLE IGUAL entero_a_flotante .

    VARIABLE        reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINT           reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PUTS            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINTF          reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    GETS            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    LLAVE_IZ        reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IF              reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DEF             reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CORCHETE_IZ     reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHILE           reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CASE            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    UNTIL           reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    SIMBOLO         reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    FLOTANTE        reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ENTERO          reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHEN            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CLASS           reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    CADENA          reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    $end            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLECLASE   reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DO              reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    END             reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSE            reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSEIF          reduce using rule 78 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 150

<<<<<<< HEAD
    (107) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DEF             reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CASE            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    $end            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
=======
    (56) booleanos -> TRUE .

    VARIABLE        reduce using rule 56 (booleanos -> TRUE .)
    PRINT           reduce using rule 56 (booleanos -> TRUE .)
    PUTS            reduce using rule 56 (booleanos -> TRUE .)
    PRINTF          reduce using rule 56 (booleanos -> TRUE .)
    GETS            reduce using rule 56 (booleanos -> TRUE .)
    LLAVE_IZ        reduce using rule 56 (booleanos -> TRUE .)
    IF              reduce using rule 56 (booleanos -> TRUE .)
    DEF             reduce using rule 56 (booleanos -> TRUE .)
    CORCHETE_IZ     reduce using rule 56 (booleanos -> TRUE .)
    WHILE           reduce using rule 56 (booleanos -> TRUE .)
    CASE            reduce using rule 56 (booleanos -> TRUE .)
    UNTIL           reduce using rule 56 (booleanos -> TRUE .)
    PARENTESIS_IZ   reduce using rule 56 (booleanos -> TRUE .)
    SIMBOLO         reduce using rule 56 (booleanos -> TRUE .)
    FLOTANTE        reduce using rule 56 (booleanos -> TRUE .)
    ENTERO          reduce using rule 56 (booleanos -> TRUE .)
    WHEN            reduce using rule 56 (booleanos -> TRUE .)
    CLASS           reduce using rule 56 (booleanos -> TRUE .)
    CADENA          reduce using rule 56 (booleanos -> TRUE .)
    $end            reduce using rule 56 (booleanos -> TRUE .)
    END             reduce using rule 56 (booleanos -> TRUE .)
    VARIABLECLASE   reduce using rule 56 (booleanos -> TRUE .)
    DO              reduce using rule 56 (booleanos -> TRUE .)
    ELSE            reduce using rule 56 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 56 (booleanos -> TRUE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 151

<<<<<<< HEAD
    (118) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    VARIABLE        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINT           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PUTS            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINTF          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    GETS            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    LLAVE_IZ        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    IF              reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    DEF             reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CORCHETE_IZ     reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHILE           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CASE            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    UNTIL           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PARENTESIS_IZ   reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    SIMBOLO         reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    FLOTANTE        reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    ENTERO          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHEN            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CLASS           reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    VARIABLECLASE   reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CADENA          reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    $end            reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 118 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
=======
    (57) booleanos -> FALSE .

    VARIABLE        reduce using rule 57 (booleanos -> FALSE .)
    PRINT           reduce using rule 57 (booleanos -> FALSE .)
    PUTS            reduce using rule 57 (booleanos -> FALSE .)
    PRINTF          reduce using rule 57 (booleanos -> FALSE .)
    GETS            reduce using rule 57 (booleanos -> FALSE .)
    LLAVE_IZ        reduce using rule 57 (booleanos -> FALSE .)
    IF              reduce using rule 57 (booleanos -> FALSE .)
    DEF             reduce using rule 57 (booleanos -> FALSE .)
    CORCHETE_IZ     reduce using rule 57 (booleanos -> FALSE .)
    WHILE           reduce using rule 57 (booleanos -> FALSE .)
    CASE            reduce using rule 57 (booleanos -> FALSE .)
    UNTIL           reduce using rule 57 (booleanos -> FALSE .)
    PARENTESIS_IZ   reduce using rule 57 (booleanos -> FALSE .)
    SIMBOLO         reduce using rule 57 (booleanos -> FALSE .)
    FLOTANTE        reduce using rule 57 (booleanos -> FALSE .)
    ENTERO          reduce using rule 57 (booleanos -> FALSE .)
    WHEN            reduce using rule 57 (booleanos -> FALSE .)
    CLASS           reduce using rule 57 (booleanos -> FALSE .)
    CADENA          reduce using rule 57 (booleanos -> FALSE .)
    $end            reduce using rule 57 (booleanos -> FALSE .)
    END             reduce using rule 57 (booleanos -> FALSE .)
    VARIABLECLASE   reduce using rule 57 (booleanos -> FALSE .)
    DO              reduce using rule 57 (booleanos -> FALSE .)
    ELSE            reduce using rule 57 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 57 (booleanos -> FALSE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 152

<<<<<<< HEAD
    (119) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    VARIABLE        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINT           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PUTS            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINTF          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    GETS            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    LLAVE_IZ        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    IF              reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    DEF             reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CORCHETE_IZ     reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHILE           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CASE            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    UNTIL           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PARENTESIS_IZ   reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    SIMBOLO         reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    FLOTANTE        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    ENTERO          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHEN            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CLASS           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    VARIABLECLASE   reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CADENA          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    $end            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
=======
    (107) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DEF             reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CASE            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    $end            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 107 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 153

<<<<<<< HEAD
    (87) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 201
=======
    (108) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DEF             reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CASE            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    $end            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 108 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 154

<<<<<<< HEAD
    (160) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 202
=======
    (119) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    VARIABLE        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINT           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PUTS            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PRINTF          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    GETS            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    LLAVE_IZ        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    IF              reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    DEF             reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CORCHETE_IZ     reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHILE           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CASE            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    UNTIL           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    PARENTESIS_IZ   reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    SIMBOLO         reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    FLOTANTE        reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    ENTERO          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    WHEN            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CLASS           reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    CADENA          reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    $end            reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 119 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 155

<<<<<<< HEAD
    (38) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (117) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for VARIABLE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINT resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PUTS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINTF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for GETS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for IF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for DEF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CASE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for UNTIL resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for ENTERO resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHEN resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CLASS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CADENA resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for $end resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! VARIABLE        [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! PRINT           [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! PUTS            [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! PRINTF          [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! GETS            [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! LLAVE_IZ        [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! IF              [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! DEF             [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! CORCHETE_IZ     [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! WHILE           [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! CASE            [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! UNTIL           [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! PARENTESIS_IZ   [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! SIMBOLO         [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! FLOTANTE        [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! ENTERO          [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! WHEN            [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! CLASS           [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! VARIABLECLASE   [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! CADENA          [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! $end            [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 117 (funcionesNumeros -> TO_F .) ]
=======
    (120) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    VARIABLE        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINT           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PUTS            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PRINTF          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    GETS            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    LLAVE_IZ        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    IF              reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    DEF             reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CORCHETE_IZ     reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHILE           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CASE            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    UNTIL           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    PARENTESIS_IZ   reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    SIMBOLO         reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    FLOTANTE        reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    ENTERO          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    WHEN            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CLASS           reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    CADENA          reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    $end            reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 120 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 156

<<<<<<< HEAD
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 203
=======
    (88) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 208
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 157

<<<<<<< HEAD
    (114) funcionesArray -> SORT .

    VARIABLE        reduce using rule 114 (funcionesArray -> SORT .)
    PRINT           reduce using rule 114 (funcionesArray -> SORT .)
    PUTS            reduce using rule 114 (funcionesArray -> SORT .)
    PRINTF          reduce using rule 114 (funcionesArray -> SORT .)
    GETS            reduce using rule 114 (funcionesArray -> SORT .)
    LLAVE_IZ        reduce using rule 114 (funcionesArray -> SORT .)
    IF              reduce using rule 114 (funcionesArray -> SORT .)
    DEF             reduce using rule 114 (funcionesArray -> SORT .)
    CORCHETE_IZ     reduce using rule 114 (funcionesArray -> SORT .)
    WHILE           reduce using rule 114 (funcionesArray -> SORT .)
    CASE            reduce using rule 114 (funcionesArray -> SORT .)
    UNTIL           reduce using rule 114 (funcionesArray -> SORT .)
    PARENTESIS_IZ   reduce using rule 114 (funcionesArray -> SORT .)
    SIMBOLO         reduce using rule 114 (funcionesArray -> SORT .)
    FLOTANTE        reduce using rule 114 (funcionesArray -> SORT .)
    ENTERO          reduce using rule 114 (funcionesArray -> SORT .)
    WHEN            reduce using rule 114 (funcionesArray -> SORT .)
    CLASS           reduce using rule 114 (funcionesArray -> SORT .)
    VARIABLECLASE   reduce using rule 114 (funcionesArray -> SORT .)
    CADENA          reduce using rule 114 (funcionesArray -> SORT .)
    $end            reduce using rule 114 (funcionesArray -> SORT .)
    END             reduce using rule 114 (funcionesArray -> SORT .)
=======
    (163) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 209
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 158

<<<<<<< HEAD
    (115) funcionesArray -> FOR . EACH

    EACH            shift and go to state 204
=======
    (38) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (118) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for VARIABLE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINT resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PUTS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PRINTF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for GETS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for IF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for DEF resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHILE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CASE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for UNTIL resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for ENTERO resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for WHEN resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CLASS resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for CADENA resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for $end resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! VARIABLE        [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! PRINT           [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! PUTS            [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! PRINTF          [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! GETS            [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! LLAVE_IZ        [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! IF              [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! DEF             [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! CORCHETE_IZ     [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! WHILE           [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! CASE            [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! UNTIL           [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! PARENTESIS_IZ   [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! SIMBOLO         [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! FLOTANTE        [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! ENTERO          [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! WHEN            [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! CLASS           [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! CADENA          [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! $end            [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 118 (funcionesNumeros -> TO_F .) ]
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 159

<<<<<<< HEAD
    (53) valores -> valor COMA . valores
    (52) valores -> . valor
    (53) valores -> . valor COMA valores
    (54) valores -> . valor estructura_ifUnaLinea
    (57) valor -> . CADENA
    (58) valor -> . valorNumerico
    (59) valor -> . VARIABLE
    (60) valor -> . VARIABLECLASE
    (61) valor -> . SIMBOLO
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 77
    VARIABLE        shift and go to state 79
    VARIABLECLASE   shift and go to state 80
    SIMBOLO         shift and go to state 81
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    valor                          shift and go to state 76
    valores                        shift and go to state 205
    valorNumerico                  shift and go to state 78

state 160

    (54) valores -> valor estructura_ifUnaLinea .

    VARIABLE        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PRINT           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PUTS            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PRINTF          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    GETS            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    IF              reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    DEF             reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    WHILE           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CASE            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    UNTIL           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ENTERO          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CLASS           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CADENA          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    $end            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
=======
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 210


state 160

    (115) funcionesArray -> SORT .

    VARIABLE        reduce using rule 115 (funcionesArray -> SORT .)
    PRINT           reduce using rule 115 (funcionesArray -> SORT .)
    PUTS            reduce using rule 115 (funcionesArray -> SORT .)
    PRINTF          reduce using rule 115 (funcionesArray -> SORT .)
    GETS            reduce using rule 115 (funcionesArray -> SORT .)
    LLAVE_IZ        reduce using rule 115 (funcionesArray -> SORT .)
    IF              reduce using rule 115 (funcionesArray -> SORT .)
    DEF             reduce using rule 115 (funcionesArray -> SORT .)
    CORCHETE_IZ     reduce using rule 115 (funcionesArray -> SORT .)
    WHILE           reduce using rule 115 (funcionesArray -> SORT .)
    CASE            reduce using rule 115 (funcionesArray -> SORT .)
    UNTIL           reduce using rule 115 (funcionesArray -> SORT .)
    PARENTESIS_IZ   reduce using rule 115 (funcionesArray -> SORT .)
    SIMBOLO         reduce using rule 115 (funcionesArray -> SORT .)
    FLOTANTE        reduce using rule 115 (funcionesArray -> SORT .)
    ENTERO          reduce using rule 115 (funcionesArray -> SORT .)
    WHEN            reduce using rule 115 (funcionesArray -> SORT .)
    CLASS           reduce using rule 115 (funcionesArray -> SORT .)
    CADENA          reduce using rule 115 (funcionesArray -> SORT .)
    $end            reduce using rule 115 (funcionesArray -> SORT .)
    END             reduce using rule 115 (funcionesArray -> SORT .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 161

<<<<<<< HEAD
    (128) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    condicionIf                    shift and go to state 206
    expresiones_booleanas          shift and go to state 97
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 162

    (91) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 91 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
=======
    (116) funcionesArray -> FOR . EACH

    EACH            shift and go to state 211


state 162

    (53) valores -> valor COMA . valores
    (52) valores -> . valor
    (53) valores -> . valor COMA valores
    (54) valores -> . valor estructura_ifUnaLinea
    (55) valores -> . valor sentencia_while_bool
    (58) valor -> . CADENA
    (59) valor -> . valorNumerico
    (60) valor -> . VARIABLE
    (61) valor -> . VARIABLECLASE
    (62) valor -> . SIMBOLO
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 75
    VARIABLE        shift and go to state 77
    VARIABLECLASE   shift and go to state 78
    SIMBOLO         shift and go to state 79
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    valor                          shift and go to state 74
    valores                        shift and go to state 212
    valorNumerico                  shift and go to state 76

state 163

<<<<<<< HEAD
    (47) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINT           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PUTS            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINTF          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    GETS            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IF              reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DEF             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHILE           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CASE            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    UNTIL           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ENTERO          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CLASS           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CADENA          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
=======
    (54) valores -> valor estructura_ifUnaLinea .

    VARIABLE        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PRINT           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PUTS            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PRINTF          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    GETS            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    IF              reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    DEF             reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CORCHETE_IZ     reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    WHILE           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CASE            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    UNTIL           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ENTERO          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CLASS           reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    CADENA          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    $end            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 54 (valores -> valor estructura_ifUnaLinea .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 164

<<<<<<< HEAD
    (92) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 92 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
=======
    (55) valores -> valor sentencia_while_bool .

    VARIABLE        reduce using rule 55 (valores -> valor sentencia_while_bool .)
    PRINT           reduce using rule 55 (valores -> valor sentencia_while_bool .)
    PUTS            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    PRINTF          reduce using rule 55 (valores -> valor sentencia_while_bool .)
    GETS            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    LLAVE_IZ        reduce using rule 55 (valores -> valor sentencia_while_bool .)
    IF              reduce using rule 55 (valores -> valor sentencia_while_bool .)
    DEF             reduce using rule 55 (valores -> valor sentencia_while_bool .)
    CORCHETE_IZ     reduce using rule 55 (valores -> valor sentencia_while_bool .)
    WHILE           reduce using rule 55 (valores -> valor sentencia_while_bool .)
    CASE            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    UNTIL           reduce using rule 55 (valores -> valor sentencia_while_bool .)
    PARENTESIS_IZ   reduce using rule 55 (valores -> valor sentencia_while_bool .)
    SIMBOLO         reduce using rule 55 (valores -> valor sentencia_while_bool .)
    FLOTANTE        reduce using rule 55 (valores -> valor sentencia_while_bool .)
    ENTERO          reduce using rule 55 (valores -> valor sentencia_while_bool .)
    WHEN            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    CLASS           reduce using rule 55 (valores -> valor sentencia_while_bool .)
    CADENA          reduce using rule 55 (valores -> valor sentencia_while_bool .)
    $end            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    VARIABLECLASE   reduce using rule 55 (valores -> valor sentencia_while_bool .)
    DO              reduce using rule 55 (valores -> valor sentencia_while_bool .)
    END             reduce using rule 55 (valores -> valor sentencia_while_bool .)
    ELSE            reduce using rule 55 (valores -> valor sentencia_while_bool .)
    ELSEIF          reduce using rule 55 (valores -> valor sentencia_while_bool .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 165

<<<<<<< HEAD
    (94) impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 94 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
=======
    (129) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    condicionIf                    shift and go to state 213
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 166

<<<<<<< HEAD
    (104) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    VARIABLE        reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINTF          reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DEF             reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CORCHETE_IZ     reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CASE            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    UNTIL           reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CLASS           reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CADENA          reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    $end            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 104 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
=======
    (146) sentencia_while_bool -> WHILE . declaracion declaraciones END
    (147) sentencia_while_bool -> WHILE . VARIABLE declaraciones END
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 214
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 110
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 167

<<<<<<< HEAD
    (27) valorSimbolo -> VARIABLE .

    VARIABLE        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PRINTF          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 27 (valorSimbolo -> VARIABLE .)
    DEF             reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 27 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CASE            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    UNTIL           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 27 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CLASS           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CADENA          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    $end            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 27 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 27 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 27 (valorSimbolo -> VARIABLE .)
=======
    (92) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 92 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 168

<<<<<<< HEAD
    (105) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DEF             reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CASE            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    $end            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 105 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
=======
    (47) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLE        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINT           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PUTS            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINTF          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    GETS            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IF              reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DEF             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHILE           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CASE            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    UNTIL           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    SIMBOLO         reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    FLOTANTE        reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ENTERO          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CLASS           reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    CADENA          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 47 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 169

<<<<<<< HEAD
    (108) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DEF             reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CASE            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    $end            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 108 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
=======
    (93) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 93 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 170

<<<<<<< HEAD
    (110) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    VARIABLE        reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINT           reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PUTS            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINTF          reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    GETS            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    LLAVE_IZ        reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IF              reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DEF             reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CORCHETE_IZ     reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHILE           reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CASE            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    UNTIL           reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PARENTESIS_IZ   reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    SIMBOLO         reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    FLOTANTE        reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ENTERO          reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CLASS           reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLECLASE   reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CADENA          reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    $end            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 110 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
=======
    (95) impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .

    VARIABLE        reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CASE            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    UNTIL           reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CLASS           reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    CADENA          reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    $end            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 95 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 171

<<<<<<< HEAD
    (116) funcionesFormatoImpresion -> CHOMP .

    VARIABLE        reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    PRINT           reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    PUTS            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    PRINTF          reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    GETS            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    LLAVE_IZ        reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    IF              reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    DEF             reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    CORCHETE_IZ     reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    WHILE           reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    CASE            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    UNTIL           reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    PARENTESIS_IZ   reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    SIMBOLO         reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    FLOTANTE        reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    ENTERO          reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    CLASS           reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLECLASE   reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    CADENA          reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    $end            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 116 (funcionesFormatoImpresion -> CHOMP .)
=======
    (105) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    VARIABLE        reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINTF          reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DEF             reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CORCHETE_IZ     reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CASE            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    UNTIL           reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CLASS           reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    CADENA          reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    $end            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 105 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 172

<<<<<<< HEAD
    (152) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    VARIABLE        reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINT           reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PUTS            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINTF          reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    GETS            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    LLAVE_IZ        reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IF              reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DEF             reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHILE           reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CASE            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    UNTIL           reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    SIMBOLO         reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    FLOTANTE        reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ENTERO          reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CLASS           reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLECLASE   reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CADENA          reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    $end            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 152 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
=======
    (27) valorSimbolo -> VARIABLE .

    VARIABLE        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PRINTF          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 27 (valorSimbolo -> VARIABLE .)
    DEF             reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 27 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CASE            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    UNTIL           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 27 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CLASS           reduce using rule 27 (valorSimbolo -> VARIABLE .)
    CADENA          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    $end            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 27 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 27 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 27 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 27 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 27 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 27 (valorSimbolo -> VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 173

<<<<<<< HEAD
    (159) elemento_hash -> claveValor COMA . elemento_hash
    (158) elemento_hash -> . claveValor
    (159) elemento_hash -> . claveValor COMA elemento_hash
    (154) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (155) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (156) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (157) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 94
    CADENA          shift and go to state 95

    claveValor                     shift and go to state 93
    elemento_hash                  shift and go to state 207

state 174

    (154) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (155) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 209
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    valorNumerico                  shift and go to state 208

state 175

    (156) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (157) claveValor -> CADENA ASIGNA_HASH . CADENA
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 210
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    valorNumerico                  shift and go to state 211

state 176

    (128) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (126) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (127) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    END             shift and go to state 212
    ELSE            shift and go to state 213
    ELSEIF          shift and go to state 215

    estructura_secundaria_if       shift and go to state 214

state 177

    (124) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresiones_booleanas          shift and go to state 97
    condicionIf                    shift and go to state 216
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 178

    (102) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 102 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 102 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 102 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 102 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 102 (funcionesComparacion -> Y_SIGNO .)
=======
    (106) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    VARIABLE        reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DEF             reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CORCHETE_IZ     reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CASE            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    UNTIL           reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CLASS           reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    CADENA          reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    $end            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 106 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 174

    (109) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    VARIABLE        reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DEF             reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CORCHETE_IZ     reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CASE            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    UNTIL           reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CLASS           reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    CADENA          reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    $end            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 109 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 175

    (111) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    VARIABLE        reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINT           reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PUTS            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINTF          reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    GETS            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    LLAVE_IZ        reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IF              reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DEF             reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CORCHETE_IZ     reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHILE           reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CASE            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    UNTIL           reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PARENTESIS_IZ   reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    SIMBOLO         reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    FLOTANTE        reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ENTERO          reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CLASS           reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    CADENA          reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    $end            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLECLASE   reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 111 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 176

    (117) funcionesFormatoImpresion -> CHOMP .

    VARIABLE        reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    PRINT           reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    PUTS            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    PRINTF          reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    GETS            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    LLAVE_IZ        reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    IF              reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    DEF             reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    CORCHETE_IZ     reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    WHILE           reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    CASE            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    UNTIL           reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    PARENTESIS_IZ   reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    SIMBOLO         reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    FLOTANTE        reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    ENTERO          reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    CLASS           reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    CADENA          reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    $end            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLECLASE   reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 117 (funcionesFormatoImpresion -> CHOMP .)


state 177

    (155) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    VARIABLE        reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINT           reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PUTS            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINTF          reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    GETS            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    LLAVE_IZ        reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IF              reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DEF             reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CORCHETE_IZ     reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHILE           reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CASE            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    UNTIL           reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    SIMBOLO         reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    FLOTANTE        reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ENTERO          reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CLASS           reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    CADENA          reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    $end            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLECLASE   reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 155 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 178

    (162) elemento_hash -> claveValor COMA . elemento_hash
    (161) elemento_hash -> . claveValor
    (162) elemento_hash -> . claveValor COMA elemento_hash
    (157) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (158) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (159) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (160) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 92
    CADENA          shift and go to state 93
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    claveValor                     shift and go to state 91
    elemento_hash                  shift and go to state 215

state 179

<<<<<<< HEAD
    (103) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 103 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 103 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 103 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 103 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 103 (funcionesComparacion -> O_SIGNO .)
=======
    (157) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (158) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 217
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    valorNumerico                  shift and go to state 216

state 180

<<<<<<< HEAD
    (123) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresiones_booleanas          shift and go to state 217
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 181

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaraciones END
    (112) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaraciones END
    (47) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (120) argumentos -> . VARIABLE
    (121) argumentos -> . VARIABLE COMA argumentos
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    PARENTESIS_DER  shift and go to state 219
    VARIABLE        shift and go to state 218
    PARENTESIS_IZ   shift and go to state 34
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    argumentos                     shift and go to state 220
    operacionAritmetica            shift and go to state 83
    expresionNumerica              shift and go to state 26
    valorNumerico                  shift and go to state 84

state 182

    (113) funciones -> DEF VARIABLE declaraciones . END

    END             shift and go to state 221
=======
    (159) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (160) claveValor -> CADENA ASIGNA_HASH . CADENA
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    CADENA          shift and go to state 218
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    valorNumerico                  shift and go to state 219

state 181

    (129) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (127) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (128) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    END             shift and go to state 220
    ELSE            shift and go to state 221
    ELSEIF          shift and go to state 223

    estructura_secundaria_if       shift and go to state 222

state 182

    (144) declaraciones -> declaracion .
    (145) declaraciones -> declaracion . declaraciones
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    END             reduce using rule 144 (declaraciones -> declaracion .)
    ELSE            reduce using rule 144 (declaraciones -> declaracion .)
    ELSEIF          reduce using rule 144 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 182
    declaraciones                  shift and go to state 224
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 183

<<<<<<< HEAD
    (85) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    VARIABLE        reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINT           reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PUTS            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINTF          reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    GETS            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IF              reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DEF             reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHILE           reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CASE            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    UNTIL           reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    SIMBOLO         reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    FLOTANTE        reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ENTERO          reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CLASS           reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CADENA          reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    $end            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 85 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
=======
    (125) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresiones_booleanas          shift and go to state 95
    condicionIf                    shift and go to state 225
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 184

<<<<<<< HEAD
    (78) elementos_array -> elemento_array COMA . elementos_array
    (78) elementos_array -> . elemento_array COMA elementos_array
    (79) elementos_array -> . elemento_array
    (80) elemento_array -> . CADENA
    (81) elemento_array -> . ENTERO
    (82) elemento_array -> . FLOTANTE
    (83) elemento_array -> . array
    (84) elemento_array -> . VARIABLE
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 105
    ENTERO          shift and go to state 106
    FLOTANTE        shift and go to state 107
    VARIABLE        shift and go to state 109
    CORCHETE_IZ     shift and go to state 43

    elemento_array                 shift and go to state 104
    elementos_array                shift and go to state 222
    array                          shift and go to state 108

state 185

    (145) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (146) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    WHILE           shift and go to state 44
    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresiones_booleanas          shift and go to state 117
    sentencia_while                shift and go to state 223
    declaracion                    shift and go to state 224
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 186

    (147) sentencia_case -> CASE declaraciones sentencia_when . END

    END             shift and go to state 225
=======
    (103) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 103 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 103 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 103 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 103 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 103 (funcionesComparacion -> Y_SIGNO .)


state 185

    (104) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 104 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 104 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 104 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 104 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 104 (funcionesComparacion -> O_SIGNO .)


state 186

    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresiones_booleanas          shift and go to state 226
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 187

<<<<<<< HEAD
    (144) declaraciones -> declaracion declaraciones .

    WHEN            reduce using rule 144 (declaraciones -> declaracion declaraciones .)
    END             reduce using rule 144 (declaraciones -> declaracion declaraciones .)
    ELSE            reduce using rule 144 (declaraciones -> declaracion declaraciones .)
    ELSEIF          reduce using rule 144 (declaraciones -> declaracion declaraciones .)
=======
    (112) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaraciones END
    (113) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaraciones END
    (47) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (121) argumentos -> . VARIABLE
    (122) argumentos -> . VARIABLE COMA argumentos
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    PARENTESIS_DER  shift and go to state 228
    VARIABLE        shift and go to state 227
    PARENTESIS_IZ   shift and go to state 34
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    argumentos                     shift and go to state 229
    operacionAritmetica            shift and go to state 81
    expresionNumerica              shift and go to state 26
    valorNumerico                  shift and go to state 82

state 188

<<<<<<< HEAD
    (126) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (127) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (128) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 226
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 189

    (151) sentencia_until -> UNTIL declaracion DO . declaracion END
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaracion                    shift and go to state 227
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 190

    (165) definicion_clase -> encabezadoClase declaraciones END .

    VARIABLE        reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    PRINT           reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    PUTS            reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    PRINTF          reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    GETS            reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    LLAVE_IZ        reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    IF              reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    DEF             reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    CORCHETE_IZ     reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    WHILE           reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    CASE            reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    UNTIL           reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    PARENTESIS_IZ   reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    SIMBOLO         reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    FLOTANTE        reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    ENTERO          reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    WHEN            reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    CLASS           reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    VARIABLECLASE   reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    CADENA          reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    $end            reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)
    END             reduce using rule 165 (definicion_clase -> encabezadoClase declaraciones END .)


state 191

    (33) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLE        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINT           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PUTS            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINTF          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    GETS            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IF              reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DEF             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHILE           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CASE            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    UNTIL           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ENTERO          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CLASS           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CADENA          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
=======
    (114) funciones -> DEF VARIABLE declaraciones . END

    END             shift and go to state 230


state 189

    (86) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    VARIABLE        reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINT           reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PUTS            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINTF          reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    GETS            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IF              reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DEF             reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_IZ     reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHILE           reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CASE            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    UNTIL           reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    SIMBOLO         reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    FLOTANTE        reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ENTERO          reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CLASS           reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CADENA          reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    $end            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 86 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 190

    (79) elementos_array -> elemento_array COMA . elementos_array
    (79) elementos_array -> . elemento_array COMA elementos_array
    (80) elementos_array -> . elemento_array
    (81) elemento_array -> . CADENA
    (82) elemento_array -> . ENTERO
    (83) elemento_array -> . FLOTANTE
    (84) elemento_array -> . array
    (85) elemento_array -> . VARIABLE
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 103
    ENTERO          shift and go to state 104
    FLOTANTE        shift and go to state 105
    VARIABLE        shift and go to state 107
    CORCHETE_IZ     shift and go to state 43

    elemento_array                 shift and go to state 102
    elementos_array                shift and go to state 231
    array                          shift and go to state 106

state 191

    (148) sentencia_while -> WHILE expresiones_booleanas sentencia_while . END
    (142) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 232

  ! END             [ reduce using rule 142 (declaracion -> sentencia_while .) ]
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 192

<<<<<<< HEAD
    (150) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (149) sentencia_while -> WHILE expresiones_booleanas declaracion . END

    END             shift and go to state 233
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 228
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 193

<<<<<<< HEAD
    (164) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 229
=======
    (146) sentencia_while_bool -> WHILE declaracion declaraciones . END

    END             shift and go to state 234
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 194

<<<<<<< HEAD
    (63) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (31) valorCadena -> CADENA .

    VARIABLE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINT           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PUTS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINTF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    GETS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IF              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DEF             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHILE           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CASE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    UNTIL           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    SIMBOLO         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    FLOTANTE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ENTERO          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CLASS           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CADENA          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 31 (valorCadena -> CADENA .)
=======
    (147) sentencia_while_bool -> WHILE VARIABLE declaraciones . END

    END             shift and go to state 235
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 195

<<<<<<< HEAD
    (64) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

    VARIABLE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINT           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PUTS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    GETS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IF              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DEF             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHILE           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CASE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CLASS           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CADENA          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 58
    MENOS           shift and go to state 59
    DIVISION        shift and go to state 60
    MULTIPLICACION  shift and go to state 61
    EXPONENCIACION  shift and go to state 62
    MODULO          shift and go to state 63

    operadores                     shift and go to state 57

state 196

    (65) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    VARIABLE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINT           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PUTS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINTF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    GETS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IF              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DEF             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHILE           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CASE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    UNTIL           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    SIMBOLO         reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    FLOTANTE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ENTERO          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CLASS           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CADENA          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
=======
    (70) asignacion -> VARIABLE IGUAL . CADENA
    (71) asignacion -> VARIABLE IGUAL . expresionNumerica
    (72) asignacion -> VARIABLE IGUAL . hashes
    (73) asignacion -> VARIABLE IGUAL . SIMBOLO
    (74) asignacion -> VARIABLE IGUAL . array
    (75) asignacion -> VARIABLE IGUAL . input_concatenacion
    (76) asignacion -> VARIABLE IGUAL . booleanos
    (77) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (78) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (69) asignacion_clase -> VARIABLE IGUAL . booleanos
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (56) booleanos -> . TRUE
    (57) booleanos -> . FALSE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 141
    SIMBOLO         shift and go to state 144
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 140
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    TRUE            shift and go to state 150
    FALSE           shift and go to state 151
    GETS            shift and go to state 39
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    expresionNumerica              shift and go to state 142
    hashes                         shift and go to state 143
    array                          shift and go to state 145
    input_concatenacion            shift and go to state 146
    booleanos                      shift and go to state 236
    solicitudDatosTeclado          shift and go to state 148
    entero_a_flotante              shift and go to state 149
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 49

state 196

    (127) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (128) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (129) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaraciones                  shift and go to state 237
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 197

<<<<<<< HEAD
    (66) asignacion_clase -> VARIABLECLASE IGUAL array .

    VARIABLE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINT           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PUTS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINTF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    GETS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    LLAVE_IZ        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IF              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DEF             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CORCHETE_IZ     reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHILE           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CASE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    UNTIL           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    SIMBOLO         reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    FLOTANTE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ENTERO          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CLASS           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    VARIABLECLASE   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CADENA          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 198

    (67) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINT           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PUTS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    GETS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IF              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DEF             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHILE           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CASE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CLASS           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CADENA          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
=======
    (64) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (65) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (66) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (67) asignacion_clase -> VARIABLECLASE IGUAL . array
    (68) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 238
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 243
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    expresionNumerica              shift and go to state 239
    hashes                         shift and go to state 240
    array                          shift and go to state 241
    input_concatenacion            shift and go to state 242
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 49

state 198

    (150) sentencia_case -> CASE VARIABLE sentencia_when . END

    END             shift and go to state 244
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 199

<<<<<<< HEAD
    (48) expresionNumerica -> VARIABLE .
    (30) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 32 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 230
    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 48 (expresionNumerica -> VARIABLE .) ]
=======
    (154) sentencia_until -> UNTIL declaracion DO . declaracion END
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 245
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 200

<<<<<<< HEAD
    (38) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    TO_F            shift and go to state 231
    CONCAT          shift and go to state 156
=======
    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    INITIALIZE      shift and go to state 246
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 201

<<<<<<< HEAD
    (87) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 232
=======
    (171) cuerpoVariables -> asignacion_clase cuerpoVariables .

    DEF             reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLECLASE   reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLE        reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINT           reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PUTS            reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINTF          reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    GETS            reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    LLAVE_IZ        reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    IF              reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    WHILE           reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    SIMBOLO         reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    FLOTANTE        reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    ENTERO          reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    END             reduce using rule 171 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 202

<<<<<<< HEAD
    (160) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 233
=======
    (172) cuerpoVariables -> asignacion cuerpoVariables .

    DEF             reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLECLASE   reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLE        reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINT           reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    PUTS            reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINTF          reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    GETS            reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    LLAVE_IZ        reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    IF              reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    WHILE           reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    SIMBOLO         reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    FLOTANTE        reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    ENTERO          reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
    END             reduce using rule 172 (cuerpoVariables -> asignacion cuerpoVariables .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 203

<<<<<<< HEAD
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 136

    valorCadena                    shift and go to state 234

state 204

    (115) funcionesArray -> FOR EACH .

    VARIABLE        reduce using rule 115 (funcionesArray -> FOR EACH .)
    PRINT           reduce using rule 115 (funcionesArray -> FOR EACH .)
    PUTS            reduce using rule 115 (funcionesArray -> FOR EACH .)
    PRINTF          reduce using rule 115 (funcionesArray -> FOR EACH .)
    GETS            reduce using rule 115 (funcionesArray -> FOR EACH .)
    LLAVE_IZ        reduce using rule 115 (funcionesArray -> FOR EACH .)
    IF              reduce using rule 115 (funcionesArray -> FOR EACH .)
    DEF             reduce using rule 115 (funcionesArray -> FOR EACH .)
    CORCHETE_IZ     reduce using rule 115 (funcionesArray -> FOR EACH .)
    WHILE           reduce using rule 115 (funcionesArray -> FOR EACH .)
    CASE            reduce using rule 115 (funcionesArray -> FOR EACH .)
    UNTIL           reduce using rule 115 (funcionesArray -> FOR EACH .)
    PARENTESIS_IZ   reduce using rule 115 (funcionesArray -> FOR EACH .)
    SIMBOLO         reduce using rule 115 (funcionesArray -> FOR EACH .)
    FLOTANTE        reduce using rule 115 (funcionesArray -> FOR EACH .)
    ENTERO          reduce using rule 115 (funcionesArray -> FOR EACH .)
    WHEN            reduce using rule 115 (funcionesArray -> FOR EACH .)
    CLASS           reduce using rule 115 (funcionesArray -> FOR EACH .)
    VARIABLECLASE   reduce using rule 115 (funcionesArray -> FOR EACH .)
    CADENA          reduce using rule 115 (funcionesArray -> FOR EACH .)
    $end            reduce using rule 115 (funcionesArray -> FOR EACH .)
    END             reduce using rule 115 (funcionesArray -> FOR EACH .)
=======
    (69) asignacion_clase -> VARIABLE IGUAL . booleanos
    (70) asignacion -> VARIABLE IGUAL . CADENA
    (71) asignacion -> VARIABLE IGUAL . expresionNumerica
    (72) asignacion -> VARIABLE IGUAL . hashes
    (73) asignacion -> VARIABLE IGUAL . SIMBOLO
    (74) asignacion -> VARIABLE IGUAL . array
    (75) asignacion -> VARIABLE IGUAL . input_concatenacion
    (76) asignacion -> VARIABLE IGUAL . booleanos
    (77) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (78) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (56) booleanos -> . TRUE
    (57) booleanos -> . FALSE
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 141
    SIMBOLO         shift and go to state 144
    TRUE            shift and go to state 150
    FALSE           shift and go to state 151
    PARENTESIS_IZ   shift and go to state 34
    VARIABLE        shift and go to state 140
    LLAVE_IZ        shift and go to state 40
    CORCHETE_IZ     shift and go to state 43
    GETS            shift and go to state 39
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    booleanos                      shift and go to state 247
    expresionNumerica              shift and go to state 142
    hashes                         shift and go to state 143
    array                          shift and go to state 145
    input_concatenacion            shift and go to state 146
    solicitudDatosTeclado          shift and go to state 148
    entero_a_flotante              shift and go to state 149
    valorNumerico                  shift and go to state 82
    operacionAritmetica            shift and go to state 137
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valorCadena                    shift and go to state 49

state 204

    (33) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLE        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINT           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PUTS            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINTF          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    GETS            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IF              reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DEF             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CORCHETE_IZ     reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHILE           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CASE            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    UNTIL           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ENTERO          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CLASS           reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    CADENA          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 33 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 205

<<<<<<< HEAD
    (53) valores -> valor COMA valores .

    VARIABLE        reduce using rule 53 (valores -> valor COMA valores .)
    PRINT           reduce using rule 53 (valores -> valor COMA valores .)
    PUTS            reduce using rule 53 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 53 (valores -> valor COMA valores .)
    GETS            reduce using rule 53 (valores -> valor COMA valores .)
    LLAVE_IZ        reduce using rule 53 (valores -> valor COMA valores .)
    IF              reduce using rule 53 (valores -> valor COMA valores .)
    DEF             reduce using rule 53 (valores -> valor COMA valores .)
    CORCHETE_IZ     reduce using rule 53 (valores -> valor COMA valores .)
    WHILE           reduce using rule 53 (valores -> valor COMA valores .)
    CASE            reduce using rule 53 (valores -> valor COMA valores .)
    UNTIL           reduce using rule 53 (valores -> valor COMA valores .)
    PARENTESIS_IZ   reduce using rule 53 (valores -> valor COMA valores .)
    SIMBOLO         reduce using rule 53 (valores -> valor COMA valores .)
    FLOTANTE        reduce using rule 53 (valores -> valor COMA valores .)
    ENTERO          reduce using rule 53 (valores -> valor COMA valores .)
    WHEN            reduce using rule 53 (valores -> valor COMA valores .)
    CLASS           reduce using rule 53 (valores -> valor COMA valores .)
    VARIABLECLASE   reduce using rule 53 (valores -> valor COMA valores .)
    CADENA          reduce using rule 53 (valores -> valor COMA valores .)
    $end            reduce using rule 53 (valores -> valor COMA valores .)
    DO              reduce using rule 53 (valores -> valor COMA valores .)
    END             reduce using rule 53 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 53 (valores -> valor COMA valores .)
    ELSE            reduce using rule 53 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 53 (valores -> valor COMA valores .)
=======
    (151) sentencia_when -> WHEN declaracion declaracion .

    WHEN            reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    VARIABLE        reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    PRINT           reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    PUTS            reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    PRINTF          reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    GETS            reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    LLAVE_IZ        reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    IF              reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    DEF             reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    CORCHETE_IZ     reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    WHILE           reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    CASE            reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    UNTIL           reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    PARENTESIS_IZ   reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    SIMBOLO         reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    FLOTANTE        reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    ENTERO          reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    CLASS           reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    CADENA          reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    $end            reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
    END             reduce using rule 151 (sentencia_when -> WHEN declaracion declaracion .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 206

<<<<<<< HEAD
    (128) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (167) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 248
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaraciones                  shift and go to state 235
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 207

<<<<<<< HEAD
    (159) elemento_hash -> claveValor COMA elemento_hash .

    LLAVE_DER       reduce using rule 159 (elemento_hash -> claveValor COMA elemento_hash .)
=======
    (38) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    TO_F            shift and go to state 249
    CONCAT          shift and go to state 159
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 208

<<<<<<< HEAD
    (154) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 154 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 154 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
=======
    (88) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 250
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 209

<<<<<<< HEAD
    (155) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 155 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 155 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
=======
    (163) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 251
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 210

<<<<<<< HEAD
    (157) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 157 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 157 (claveValor -> CADENA ASIGNA_HASH CADENA .)
=======
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    CADENA          shift and go to state 30
    VARIABLE        shift and go to state 139
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    valorCadena                    shift and go to state 252

state 211

<<<<<<< HEAD
    (156) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 156 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 156 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
=======
    (116) funcionesArray -> FOR EACH .

    VARIABLE        reduce using rule 116 (funcionesArray -> FOR EACH .)
    PRINT           reduce using rule 116 (funcionesArray -> FOR EACH .)
    PUTS            reduce using rule 116 (funcionesArray -> FOR EACH .)
    PRINTF          reduce using rule 116 (funcionesArray -> FOR EACH .)
    GETS            reduce using rule 116 (funcionesArray -> FOR EACH .)
    LLAVE_IZ        reduce using rule 116 (funcionesArray -> FOR EACH .)
    IF              reduce using rule 116 (funcionesArray -> FOR EACH .)
    DEF             reduce using rule 116 (funcionesArray -> FOR EACH .)
    CORCHETE_IZ     reduce using rule 116 (funcionesArray -> FOR EACH .)
    WHILE           reduce using rule 116 (funcionesArray -> FOR EACH .)
    CASE            reduce using rule 116 (funcionesArray -> FOR EACH .)
    UNTIL           reduce using rule 116 (funcionesArray -> FOR EACH .)
    PARENTESIS_IZ   reduce using rule 116 (funcionesArray -> FOR EACH .)
    SIMBOLO         reduce using rule 116 (funcionesArray -> FOR EACH .)
    FLOTANTE        reduce using rule 116 (funcionesArray -> FOR EACH .)
    ENTERO          reduce using rule 116 (funcionesArray -> FOR EACH .)
    WHEN            reduce using rule 116 (funcionesArray -> FOR EACH .)
    CLASS           reduce using rule 116 (funcionesArray -> FOR EACH .)
    CADENA          reduce using rule 116 (funcionesArray -> FOR EACH .)
    $end            reduce using rule 116 (funcionesArray -> FOR EACH .)
    END             reduce using rule 116 (funcionesArray -> FOR EACH .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 212

<<<<<<< HEAD
    (128) estructura_ifUnaLinea -> IF condicionIf declaraciones END .

    VARIABLE        reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINT           reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PUTS            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINTF          reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    GETS            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    LLAVE_IZ        reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IF              reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DEF             reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CORCHETE_IZ     reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHILE           reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CASE            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    UNTIL           reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PARENTESIS_IZ   reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    SIMBOLO         reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    FLOTANTE        reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ENTERO          reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHEN            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CLASS           reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLECLASE   reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CADENA          reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    $end            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DO              reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    END             reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSE            reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSEIF          reduce using rule 128 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
=======
    (53) valores -> valor COMA valores .

    VARIABLE        reduce using rule 53 (valores -> valor COMA valores .)
    PRINT           reduce using rule 53 (valores -> valor COMA valores .)
    PUTS            reduce using rule 53 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 53 (valores -> valor COMA valores .)
    GETS            reduce using rule 53 (valores -> valor COMA valores .)
    LLAVE_IZ        reduce using rule 53 (valores -> valor COMA valores .)
    IF              reduce using rule 53 (valores -> valor COMA valores .)
    DEF             reduce using rule 53 (valores -> valor COMA valores .)
    CORCHETE_IZ     reduce using rule 53 (valores -> valor COMA valores .)
    WHILE           reduce using rule 53 (valores -> valor COMA valores .)
    CASE            reduce using rule 53 (valores -> valor COMA valores .)
    UNTIL           reduce using rule 53 (valores -> valor COMA valores .)
    PARENTESIS_IZ   reduce using rule 53 (valores -> valor COMA valores .)
    SIMBOLO         reduce using rule 53 (valores -> valor COMA valores .)
    FLOTANTE        reduce using rule 53 (valores -> valor COMA valores .)
    ENTERO          reduce using rule 53 (valores -> valor COMA valores .)
    WHEN            reduce using rule 53 (valores -> valor COMA valores .)
    CLASS           reduce using rule 53 (valores -> valor COMA valores .)
    CADENA          reduce using rule 53 (valores -> valor COMA valores .)
    $end            reduce using rule 53 (valores -> valor COMA valores .)
    VARIABLECLASE   reduce using rule 53 (valores -> valor COMA valores .)
    DO              reduce using rule 53 (valores -> valor COMA valores .)
    END             reduce using rule 53 (valores -> valor COMA valores .)
    ELSE            reduce using rule 53 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 53 (valores -> valor COMA valores .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 213

<<<<<<< HEAD
    (126) estructura_if -> IF condicionIf declaraciones ELSE . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
=======
    (129) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

<<<<<<< HEAD
    VARIABLE        shift and go to state 124
=======
    VARIABLE        shift and go to state 128
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
<<<<<<< HEAD
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 236
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
=======
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 253
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 214

<<<<<<< HEAD
    (127) estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)


state 215

    (129) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones ELSE declaraciones END
    (130) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones estructura_secundaria_if
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (147) sentencia_while_bool -> WHILE VARIABLE . declaraciones END
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (69) asignacion_clase -> VARIABLE . IGUAL booleanos
    (48) expresionNumerica -> VARIABLE .
    (27) valorSimbolo -> VARIABLE .
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 195
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72
    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]

    declaraciones                  shift and go to state 194
    expresionNumerica              shift and go to state 26
    hashes                         shift and go to state 117
    solicitudDatosTeclado          shift and go to state 116
    operadoresComparacion          shift and go to state 64
    valorNumerico                  shift and go to state 38
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37

state 215

    (162) elemento_hash -> claveValor COMA elemento_hash .

    LLAVE_DER       reduce using rule 162 (elemento_hash -> claveValor COMA elemento_hash .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    condicionIf                    shift and go to state 237
    expresiones_booleanas          shift and go to state 97
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 216

<<<<<<< HEAD
    (124) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    DEF             reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 124 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
=======
    (157) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 157 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 157 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 217

<<<<<<< HEAD
    (123) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 238
=======
    (158) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 158 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 158 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 218

<<<<<<< HEAD
    (120) argumentos -> VARIABLE .
    (121) argumentos -> VARIABLE . COMA argumentos
    (48) expresionNumerica -> VARIABLE .

    PARENTESIS_DER  reduce using rule 120 (argumentos -> VARIABLE .)
    COMA            shift and go to state 239
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
=======
    (160) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 160 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 160 (claveValor -> CADENA ASIGNA_HASH CADENA .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 219

<<<<<<< HEAD
    (111) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
=======
    (159) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 159 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 159 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaraciones                  shift and go to state 240
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 220

<<<<<<< HEAD
    (112) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaraciones END

    PARENTESIS_DER  shift and go to state 241
=======
    (129) estructura_ifUnaLinea -> IF condicionIf declaraciones END .

    VARIABLE        reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINT           reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PUTS            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINTF          reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    GETS            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    LLAVE_IZ        reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IF              reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DEF             reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CORCHETE_IZ     reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHILE           reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CASE            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    UNTIL           reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PARENTESIS_IZ   reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    SIMBOLO         reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    FLOTANTE        reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ENTERO          reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHEN            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CLASS           reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    CADENA          reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    $end            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLECLASE   reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DO              reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    END             reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSE            reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSEIF          reduce using rule 129 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 221

<<<<<<< HEAD
    (113) funciones -> DEF VARIABLE declaraciones END .

    VARIABLE        reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    PRINT           reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    PUTS            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    PRINTF          reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    GETS            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    IF              reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    DEF             reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    WHILE           reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    CASE            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    UNTIL           reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    ENTERO          reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    WHEN            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    CLASS           reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    CADENA          reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    $end            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    DO              reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    END             reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    ELSE            reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
    ELSEIF          reduce using rule 113 (funciones -> DEF VARIABLE declaraciones END .)
=======
    (127) estructura_if -> IF condicionIf declaraciones ELSE . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaraciones                  shift and go to state 254
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 222

<<<<<<< HEAD
    (78) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 78 (elementos_array -> elemento_array COMA elementos_array .)
=======
    (128) estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 128 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 223

<<<<<<< HEAD
    (145) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (140) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 242

  ! END             [ reduce using rule 140 (declaracion -> sentencia_while .) ]
=======
    (130) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones ELSE declaraciones END
    (131) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones estructura_secundaria_if
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    condicionIf                    shift and go to state 255
    expresiones_booleanas          shift and go to state 95
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 224

<<<<<<< HEAD
    (146) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 243
=======
    (145) declaraciones -> declaracion declaraciones .

    END             reduce using rule 145 (declaraciones -> declaracion declaraciones .)
    ELSE            reduce using rule 145 (declaraciones -> declaracion declaraciones .)
    ELSEIF          reduce using rule 145 (declaraciones -> declaracion declaraciones .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 225

<<<<<<< HEAD
    (147) sentencia_case -> CASE declaraciones sentencia_when END .

    VARIABLE        reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PRINT           reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PUTS            reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PRINTF          reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    GETS            reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    LLAVE_IZ        reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    IF              reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    DEF             reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CORCHETE_IZ     reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    WHILE           reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CASE            reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    UNTIL           reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    PARENTESIS_IZ   reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    SIMBOLO         reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    FLOTANTE        reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    ENTERO          reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    WHEN            reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CLASS           reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    VARIABLECLASE   reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    CADENA          reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    $end            reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
    END             reduce using rule 147 (sentencia_case -> CASE declaraciones sentencia_when END .)
=======
    (125) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 125 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 226

<<<<<<< HEAD
    (126) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (127) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (128) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 213
    END             shift and go to state 212
    ELSEIF          shift and go to state 215

    estructura_secundaria_if       shift and go to state 214

state 227

    (151) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 244
=======
    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (126) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 256


state 227

    (121) argumentos -> VARIABLE .
    (122) argumentos -> VARIABLE . COMA argumentos
    (48) expresionNumerica -> VARIABLE .

    PARENTESIS_DER  reduce using rule 121 (argumentos -> VARIABLE .)
    COMA            shift and go to state 257
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 228

<<<<<<< HEAD
    (150) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    VARIABLE        reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PRINT           reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PUTS            reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PRINTF          reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    GETS            reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    LLAVE_IZ        reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    IF              reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    DEF             reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CORCHETE_IZ     reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    WHILE           reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CASE            reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    UNTIL           reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    PARENTESIS_IZ   reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    SIMBOLO         reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    FLOTANTE        reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    ENTERO          reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CLASS           reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    VARIABLECLASE   reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    CADENA          reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 150 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 229

    (164) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    VARIABLE        reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PRINT           reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PUTS            reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PRINTF          reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    GETS            reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    LLAVE_IZ        reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    IF              reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    VARIABLECLASE   reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    WHILE           reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    DEF             reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    PARENTESIS_IZ   reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    SIMBOLO         reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    FLOTANTE        reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    ENTERO          reduce using rule 164 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
=======
    (112) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 258
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 229

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaraciones END

    PARENTESIS_DER  shift and go to state 259
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 230

<<<<<<< HEAD
    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
=======
    (114) funciones -> DEF VARIABLE declaraciones END .

    VARIABLE        reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    PRINT           reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    PUTS            reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    PRINTF          reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    GETS            reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    IF              reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    DEF             reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    WHILE           reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    CASE            reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    UNTIL           reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    ENTERO          reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    WHEN            reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    CLASS           reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    CADENA          reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    $end            reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    END             reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 114 (funciones -> DEF VARIABLE declaraciones END .)


state 231

    (79) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 79 (elementos_array -> elemento_array COMA elementos_array .)


state 232

    (148) sentencia_while -> WHILE expresiones_booleanas sentencia_while END .

    VARIABLE        reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PRINT           reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PUTS            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PRINTF          reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    GETS            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    LLAVE_IZ        reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    IF              reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    DEF             reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CORCHETE_IZ     reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    WHILE           reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CASE            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    UNTIL           reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    PARENTESIS_IZ   reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    SIMBOLO         reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    FLOTANTE        reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ENTERO          reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    WHEN            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CLASS           reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    CADENA          reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    $end            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    VARIABLECLASE   reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    DO              reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    END             reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ELSE            reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)
    ELSEIF          reduce using rule 148 (sentencia_while -> WHILE expresiones_booleanas sentencia_while END .)


state 233

    (149) sentencia_while -> WHILE expresiones_booleanas declaracion END .

    VARIABLE        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PRINT           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PUTS            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PRINTF          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    GETS            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    LLAVE_IZ        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    IF              reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    DEF             reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CORCHETE_IZ     reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    WHILE           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CASE            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    UNTIL           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    PARENTESIS_IZ   reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    SIMBOLO         reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    FLOTANTE        reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ENTERO          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    WHEN            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CLASS           reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    CADENA          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    $end            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    VARIABLECLASE   reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    DO              reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    END             reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ELSE            reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)
    ELSEIF          reduce using rule 149 (sentencia_while -> WHILE expresiones_booleanas declaracion END .)


state 234

    (146) sentencia_while_bool -> WHILE declaracion declaraciones END .

    VARIABLE        reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PRINT           reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PUTS            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PRINTF          reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    GETS            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    LLAVE_IZ        reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    IF              reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    DEF             reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CORCHETE_IZ     reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    WHILE           reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CASE            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    UNTIL           reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    PARENTESIS_IZ   reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    SIMBOLO         reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    FLOTANTE        reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ENTERO          reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    WHEN            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CLASS           reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    CADENA          reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    $end            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    VARIABLECLASE   reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    DO              reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    END             reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ELSE            reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)
    ELSEIF          reduce using rule 146 (sentencia_while_bool -> WHILE declaracion declaraciones END .)


state 235

    (147) sentencia_while_bool -> WHILE VARIABLE declaraciones END .

    VARIABLE        reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PRINT           reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PUTS            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PRINTF          reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    GETS            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    IF              reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    DEF             reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CORCHETE_IZ     reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    WHILE           reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CASE            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    UNTIL           reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ENTERO          reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    WHEN            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CLASS           reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    CADENA          reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    $end            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    DO              reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    END             reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ELSE            reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)
    ELSEIF          reduce using rule 147 (sentencia_while_bool -> WHILE VARIABLE declaraciones END .)


state 236

    (76) asignacion -> VARIABLE IGUAL booleanos .
    (69) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHEN resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CORCHETE_IZ resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CASE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for UNTIL resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CLASS resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for CADENA resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CORCHETE_IZ     reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CASE            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    UNTIL           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CLASS           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    CADENA          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLE        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLECLASE   [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHEN            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CORCHETE_IZ     [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CASE            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! UNTIL           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CLASS           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! CADENA          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 237

    (127) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (128) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (129) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 221
    END             shift and go to state 220
    ELSEIF          shift and go to state 223

    estructura_secundaria_if       shift and go to state 222

state 238

    (64) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (31) valorCadena -> CADENA .

    VARIABLE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINT           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PUTS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINTF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    GETS            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IF              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHILE           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    SIMBOLO         reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    FLOTANTE        reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ENTERO          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DEF             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CORCHETE_IZ     reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CASE            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    UNTIL           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CLASS           reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    CADENA          reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 31 (valorCadena -> CADENA .)


state 239

    (65) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (49) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (39) operadores -> . MAS
    (40) operadores -> . MENOS
    (41) operadores -> . DIVISION
    (42) operadores -> . MULTIPLICACION
    (43) operadores -> . EXPONENCIACION
    (44) operadores -> . MODULO

    VARIABLE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINT           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PUTS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    GETS            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IF              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHILE           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DEF             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CORCHETE_IZ     reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CASE            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    UNTIL           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CLASS           reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    CADENA          reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 65 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 56
    MENOS           shift and go to state 57
    DIVISION        shift and go to state 58
    MULTIPLICACION  shift and go to state 59
    EXPONENCIACION  shift and go to state 60
    MODULO          shift and go to state 61

    operadores                     shift and go to state 55

state 240

    (66) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    VARIABLE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINT           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PUTS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINTF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    GETS            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IF              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHILE           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    SIMBOLO         reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    FLOTANTE        reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ENTERO          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DEF             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CORCHETE_IZ     reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CASE            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    UNTIL           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CLASS           reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    CADENA          reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 66 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 241

    (67) asignacion_clase -> VARIABLECLASE IGUAL array .

    VARIABLE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINT           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PUTS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINTF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    GETS            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    LLAVE_IZ        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IF              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    VARIABLECLASE   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHILE           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    SIMBOLO         reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    FLOTANTE        reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ENTERO          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DEF             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CORCHETE_IZ     reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CASE            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    UNTIL           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CLASS           reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    CADENA          reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 67 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 242

    (68) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINT           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PUTS            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    GETS            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IF              reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHILE           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DEF             reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CORCHETE_IZ     reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CASE            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    UNTIL           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CLASS           reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    CADENA          reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 68 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 243

    (48) expresionNumerica -> VARIABLE .
    (30) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (32) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 32 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 48 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 48 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CORCHETE_IZ     reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CASE            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    UNTIL           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CLASS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    CADENA          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 48 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 260
    MAS             reduce using rule 32 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 48 (expresionNumerica -> VARIABLE .) ]


state 244

    (150) sentencia_case -> CASE VARIABLE sentencia_when END .

    VARIABLE        reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PRINT           reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PUTS            reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PRINTF          reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    GETS            reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    LLAVE_IZ        reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    IF              reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    DEF             reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CORCHETE_IZ     reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    WHILE           reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CASE            reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    UNTIL           reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    PARENTESIS_IZ   reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    SIMBOLO         reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    FLOTANTE        reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    ENTERO          reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    WHEN            reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CLASS           reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    CADENA          reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    $end            reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)
    END             reduce using rule 150 (sentencia_case -> CASE VARIABLE sentencia_when END .)


state 245

    (154) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 261


state 246

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_IZ   shift and go to state 262


state 247

    (69) asignacion_clase -> VARIABLE IGUAL booleanos .
    (76) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 69 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLECLASE   [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLE        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 76 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 248

    (167) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    VARIABLECLASE   reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    VARIABLE        reduce using rule 167 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 249

    (38) entero_a_flotante -> VARIABLE PUNTO TO_F .

    VARIABLE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DO              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSEIF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)


state 250

    (88) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 263


state 251

    (163) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (164) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (165) each_args_hash -> . VARIABLE BARRA
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    VARIABLE        shift and go to state 264

    each_args_hash                 shift and go to state 265

state 231

<<<<<<< HEAD
    (38) entero_a_flotante -> VARIABLE PUNTO TO_F .

    VARIABLE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CORCHETE_IZ     reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CASE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    UNTIL           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CLASS           reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    CADENA          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DO              reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IGUAL_DOBLEP    reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSE            reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSEIF          reduce using rule 38 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
=======
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 266
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 232

<<<<<<< HEAD
    (87) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 245
=======
    (129) estructura_ifUnaLinea -> IF condicionIf declaraciones . END

    END             shift and go to state 220
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 233

<<<<<<< HEAD
    (160) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (161) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (162) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 246

    each_args_hash                 shift and go to state 247

state 234

    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 248


state 235

    (128) estructura_ifUnaLinea -> IF condicionIf declaraciones . END

    END             shift and go to state 212


state 236

    (126) estructura_if -> IF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 249


state 237

    (129) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones ELSE declaraciones END
    (130) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones estructura_secundaria_if
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
=======
    (127) estructura_if -> IF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 267


state 255

    (130) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones ELSE declaraciones END
    (131) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones estructura_secundaria_if
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

<<<<<<< HEAD
    VARIABLE        shift and go to state 124
=======
    VARIABLE        shift and go to state 128
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
<<<<<<< HEAD
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 250
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
=======
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 268
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

<<<<<<< HEAD
state 238

    (123) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (125) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (102) funcionesComparacion -> . Y_SIGNO
    (103) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINTF          reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    DEF             reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 125 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 178
    O_SIGNO         shift and go to state 179

    funcionesComparacion           shift and go to state 251

state 239

    (121) argumentos -> VARIABLE COMA . argumentos
    (120) argumentos -> . VARIABLE
    (121) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 252

    argumentos                     shift and go to state 253

state 240

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones . END

    END             shift and go to state 254


state 241

    (112) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
=======
state 256

    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (126) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (103) funcionesComparacion -> . Y_SIGNO
    (104) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINTF          reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 126 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 184
    O_SIGNO         shift and go to state 185

    funcionesComparacion           shift and go to state 269

state 257

    (122) argumentos -> VARIABLE COMA . argumentos
    (121) argumentos -> . VARIABLE
    (122) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 270

    argumentos                     shift and go to state 271

state 258

    (112) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones . END

    END             shift and go to state 272


state 259

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

<<<<<<< HEAD
    VARIABLE        shift and go to state 124
=======
    VARIABLE        shift and go to state 128
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
<<<<<<< HEAD
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 255
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
=======
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 273
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

<<<<<<< HEAD
state 242

    (145) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    VARIABLE        reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINT           reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PUTS            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINTF          reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    GETS            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    LLAVE_IZ        reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IF              reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DEF             reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CORCHETE_IZ     reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHILE           reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CASE            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    UNTIL           reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PARENTESIS_IZ   reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    SIMBOLO         reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    FLOTANTE        reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ENTERO          reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CLASS           reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    VARIABLECLASE   reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    CADENA          reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    $end            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 145 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 243

    (146) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    VARIABLE        reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINT           reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PUTS            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINTF          reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    GETS            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    LLAVE_IZ        reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IF              reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DEF             reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CORCHETE_IZ     reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHILE           reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CASE            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    UNTIL           reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    SIMBOLO         reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    FLOTANTE        reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ENTERO          reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CLASS           reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    VARIABLECLASE   reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    CADENA          reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    $end            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 146 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 244

    (151) sentencia_until -> UNTIL declaracion DO declaracion END .

    VARIABLE        reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINT           reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PUTS            reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINTF          reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    GETS            reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    LLAVE_IZ        reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    IF              reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    DEF             reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CORCHETE_IZ     reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHILE           reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CASE            reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    UNTIL           reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    SIMBOLO         reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    FLOTANTE        reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    ENTERO          reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHEN            reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CLASS           reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    VARIABLECLASE   reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CADENA          reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    $end            reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 151 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 245

    (87) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (88) cuerpo_each -> . cuerpo
    (89) cuerpo_each -> . vacio
=======
state 260

    (30) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 159


state 261

    (154) sentencia_until -> UNTIL declaracion DO declaracion END .

    VARIABLE        reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINT           reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PUTS            reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PRINTF          reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    GETS            reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    LLAVE_IZ        reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    IF              reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    DEF             reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CORCHETE_IZ     reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHILE           reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CASE            reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    UNTIL           reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    SIMBOLO         reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    FLOTANTE        reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    ENTERO          reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    WHEN            reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CLASS           reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    CADENA          reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    $end            reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 154 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 262

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClaseE END
    (121) argumentos -> . VARIABLE
    (122) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 270

    argumentos                     shift and go to state 274

state 263

    (88) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (89) cuerpo_each -> . cuerpo
    (90) cuerpo_each -> . vacio
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (4) cuerpo -> . operacionAritmetica
    (5) cuerpo -> . input_concatenacion
    (6) cuerpo -> . asignacion
    (7) cuerpo -> . impresion
    (8) cuerpo -> . impresion_vacia
    (9) cuerpo -> . expresiones_booleanas
    (10) cuerpo -> . solicitudDatosTeclado
    (11) cuerpo -> . hashes
    (12) cuerpo -> . estructura_ifUnaLinea
    (13) cuerpo -> . estructura_if
    (14) cuerpo -> . funciones
    (15) cuerpo -> . funcionesEstructuras
    (16) cuerpo -> . array
    (17) cuerpo -> . each_array
    (18) cuerpo -> . each_hash
    (19) cuerpo -> . sentencia_while
<<<<<<< HEAD
    (20) cuerpo -> . sentencia_case
    (21) cuerpo -> . sentencias_when
    (22) cuerpo -> . sentencia_until
    (23) cuerpo -> . definicion_clase
    (24) cuerpo -> . entero_a_flotante
    (25) cuerpo -> . declaracion
    (90) vacio -> .
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (118) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (85) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (86) array -> . CORCHETE_IZ CORCHETE_DER
    (87) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (160) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (147) sentencia_case -> . CASE declaraciones sentencia_when END
    (148) sentencias_when -> . sentencia_when
    (149) sentencias_when -> . sentencia_when sentencias_when
    (151) sentencia_until -> . UNTIL declaracion DO declaracion END
    (165) definicion_clase -> . encabezadoClase declaraciones END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
=======
    (20) cuerpo -> . sentencia_while_bool
    (21) cuerpo -> . sentencia_case
    (22) cuerpo -> . sentencias_when
    (23) cuerpo -> . sentencia_until
    (24) cuerpo -> . definicion_clase
    (25) cuerpo -> . entero_a_flotante
    (91) vacio -> .
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (28) input_concatenacion -> . concatenacionSimpleCadena
    (29) input_concatenacion -> . concatenacion_funcion
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE declaraciones END
    (119) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (120) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (86) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (87) array -> . CORCHETE_IZ CORCHETE_DER
    (88) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (163) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (150) sentencia_case -> . CASE VARIABLE sentencia_when END
    (152) sentencias_when -> . sentencia_when
    (153) sentencias_when -> . sentencia_when sentencias_when
    (154) sentencia_until -> . UNTIL declaracion DO declaracion END
    (168) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (38) entero_a_flotante -> . VARIABLE PUNTO TO_F
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (33) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (34) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (30) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO
<<<<<<< HEAD
    (150) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (163) encabezadoClase -> . CLASS ID_CLASE
    (164) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    END             reduce using rule 90 (vacio -> .)
=======
    (151) sentencia_when -> . WHEN declaracion declaracion
    (166) encabezadoClase -> . CLASS ID_CLASE
    (167) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (31) valorCadena -> . CADENA
    (32) valorCadena -> . VARIABLE

    END             reduce using rule 91 (vacio -> .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    VARIABLE        shift and go to state 29
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 41
    DEF             shift and go to state 42
    CORCHETE_IZ     shift and go to state 43
    WHILE           shift and go to state 44
    CASE            shift and go to state 45
    UNTIL           shift and go to state 47
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
<<<<<<< HEAD
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52
    WHEN            shift and go to state 53
    CLASS           shift and go to state 54
    VARIABLECLASE   shift and go to state 55
    CADENA          shift and go to state 30

    cuerpo_each                    shift and go to state 256
    cuerpo                         shift and go to state 257
    vacio                          shift and go to state 258
=======
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
    WHEN            shift and go to state 52
    CLASS           shift and go to state 53
    CADENA          shift and go to state 30

    cuerpo_each                    shift and go to state 275
    cuerpo                         shift and go to state 276
    vacio                          shift and go to state 277
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    operacionAritmetica            shift and go to state 4
    input_concatenacion            shift and go to state 5
    asignacion                     shift and go to state 6
    impresion                      shift and go to state 7
    impresion_vacia                shift and go to state 8
    expresiones_booleanas          shift and go to state 9
    solicitudDatosTeclado          shift and go to state 10
    hashes                         shift and go to state 11
    estructura_ifUnaLinea          shift and go to state 12
    estructura_if                  shift and go to state 13
    funciones                      shift and go to state 14
    funcionesEstructuras           shift and go to state 15
    array                          shift and go to state 16
    each_array                     shift and go to state 17
    each_hash                      shift and go to state 18
    sentencia_while                shift and go to state 19
<<<<<<< HEAD
    sentencia_case                 shift and go to state 20
    sentencias_when                shift and go to state 21
    sentencia_until                shift and go to state 22
    definicion_clase               shift and go to state 23
    entero_a_flotante              shift and go to state 24
    declaracion                    shift and go to state 25
=======
    sentencia_while_bool           shift and go to state 20
    sentencia_case                 shift and go to state 21
    sentencias_when                shift and go to state 22
    sentencia_until                shift and go to state 23
    definicion_clase               shift and go to state 24
    entero_a_flotante              shift and go to state 25
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
    expresionNumerica              shift and go to state 26
    concatenacionSimpleCadena      shift and go to state 27
    concatenacion_funcion          shift and go to state 28
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38
    sentencia_when                 shift and go to state 46
    encabezadoClase                shift and go to state 48
<<<<<<< HEAD
    asignacion_clase               shift and go to state 49
    valorCadena                    shift and go to state 50

state 246

    (161) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (162) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 259
    BARRA           shift and go to state 260


state 247

    (160) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaracion                    shift and go to state 261
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 248

    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    VARIABLE        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINT           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PUTS            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINTF          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    GETS            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IF              reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DEF             reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHILE           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CASE            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    UNTIL           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    SIMBOLO         reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    FLOTANTE        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ENTERO          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CLASS           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CADENA          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    $end            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 249

    (126) estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 126 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)


state 250

    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . ELSE declaraciones END
    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . estructura_secundaria_if
    (129) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 262
    ELSEIF          shift and go to state 215

    estructura_secundaria_if       shift and go to state 263

state 251

    (123) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (122) condicionIf -> . expresiones_booleanas
    (123) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (124) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (125) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 98
    VARIABLE        shift and go to state 100
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    expresiones_booleanas          shift and go to state 97
    condicionIf                    shift and go to state 264
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 99

state 252

    (120) argumentos -> VARIABLE .
    (121) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 120 (argumentos -> VARIABLE .)
    COMA            shift and go to state 239


state 253

    (121) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 121 (argumentos -> VARIABLE COMA argumentos .)


state 254

    (111) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DO              reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    END             reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ELSE            reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ELSEIF          reduce using rule 111 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)


state 255

    (112) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones . END

    END             shift and go to state 265


state 256

    (87) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 266


state 257

    (88) cuerpo_each -> cuerpo .

    END             reduce using rule 88 (cuerpo_each -> cuerpo .)


state 258

    (89) cuerpo_each -> vacio .

    END             reduce using rule 89 (cuerpo_each -> vacio .)


state 259

    (161) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 267


state 260

    (162) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    PRINTF          reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    DEF             reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 162 (each_args_hash -> VARIABLE BARRA .)


state 261

    (160) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 268


state 262

    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE . declaraciones END
    (143) declaraciones -> . declaracion
    (144) declaraciones -> . declaracion declaraciones
    (131) declaracion -> . operacionAritmetica
    (132) declaracion -> . asignacion
    (133) declaracion -> . impresion
    (134) declaracion -> . impresion_vacia
    (135) declaracion -> . expresiones_booleanas
    (136) declaracion -> . solicitudDatosTeclado
    (137) declaracion -> . hashes
    (138) declaracion -> . estructura_if
    (139) declaracion -> . asignacion_clase
    (140) declaracion -> . sentencia_while
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . funciones
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (69) asignacion -> . VARIABLE IGUAL CADENA
    (70) asignacion -> . VARIABLE IGUAL expresionNumerica
    (71) asignacion -> . VARIABLE IGUAL hashes
    (72) asignacion -> . VARIABLE IGUAL SIMBOLO
    (73) asignacion -> . VARIABLE IGUAL array
    (74) asignacion -> . VARIABLE IGUAL input_concatenacion
    (75) asignacion -> . VARIABLE IGUAL booleanos
    (76) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (77) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (62) impresion -> . valor_print valores
    (91) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (92) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS
    (94) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (104) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (105) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (106) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (108) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (109) solicitudDatosTeclado -> . GETS
    (110) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (152) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (153) hashes -> . LLAVE_IZ LLAVE_DER
    (126) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (127) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (63) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (64) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (65) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (66) asignacion_clase -> . VARIABLECLASE IGUAL array
    (67) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (68) asignacion_clase -> . VARIABLE IGUAL booleanos
    (145) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (146) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (128) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (111) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 124
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 125
    VARIABLECLASE   shift and go to state 55
    WHILE           shift and go to state 44
    DEF             shift and go to state 42
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 51
    ENTERO          shift and go to state 52

    declaraciones                  shift and go to state 269
    declaracion                    shift and go to state 112
    operacionAritmetica            shift and go to state 113
    asignacion                     shift and go to state 114
    impresion                      shift and go to state 115
    impresion_vacia                shift and go to state 116
    expresiones_booleanas          shift and go to state 117
    solicitudDatosTeclado          shift and go to state 118
    hashes                         shift and go to state 119
    estructura_if                  shift and go to state 120
    asignacion_clase               shift and go to state 49
    sentencia_while                shift and go to state 121
    estructura_ifUnaLinea          shift and go to state 122
    funciones                      shift and go to state 123
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 263

    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)


state 264

    (123) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    DEF             reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 123 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
=======
    valorCadena                    shift and go to state 49

state 264

    (164) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (165) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 278
    BARRA           shift and go to state 279
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 265

<<<<<<< HEAD
    (112) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DO              reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    END             reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ELSE            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ELSEIF          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
=======
    (163) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    declaracion                    shift and go to state 280
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 266

<<<<<<< HEAD
    (87) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    VARIABLE        reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINT           reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PUTS            reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINTF          reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    GETS            reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    LLAVE_IZ        reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    IF              reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    DEF             reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CORCHETE_IZ     reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHILE           reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CASE            reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    UNTIL           reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PARENTESIS_IZ   reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    SIMBOLO         reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    FLOTANTE        reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    ENTERO          reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHEN            reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CLASS           reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    VARIABLECLASE   reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CADENA          reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    $end            reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 87 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
=======
    (30) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    VARIABLE        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINT           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PUTS            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINTF          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    GETS            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IF              reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DEF             reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CORCHETE_IZ     reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHILE           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CASE            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    UNTIL           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    SIMBOLO         reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    FLOTANTE        reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ENTERO          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CLASS           reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    CADENA          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    $end            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 30 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 267

<<<<<<< HEAD
    (161) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 270
=======
    (127) estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 127 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 268

<<<<<<< HEAD
    (160) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    VARIABLE        reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINT           reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PUTS            reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINTF          reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    GETS            reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    LLAVE_IZ        reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    IF              reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    DEF             reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CORCHETE_IZ     reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHILE           reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CASE            reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    UNTIL           reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PARENTESIS_IZ   reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    SIMBOLO         reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    FLOTANTE        reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    ENTERO          reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHEN            reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CLASS           reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    VARIABLECLASE   reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CADENA          reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    $end            reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 160 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
=======
    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . ELSE declaraciones END
    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . estructura_secundaria_if
    (130) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (131) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 281
    ELSEIF          shift and go to state 223
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    estructura_secundaria_if       shift and go to state 282

state 269

<<<<<<< HEAD
    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 271
=======
    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (123) condicionIf -> . expresiones_booleanas
    (124) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (125) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (126) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 96
    VARIABLE        shift and go to state 98
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

    expresiones_booleanas          shift and go to state 95
    condicionIf                    shift and go to state 283
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 97

state 270

<<<<<<< HEAD
    (161) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINTF          reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    DEF             reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 161 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
=======
    (121) argumentos -> VARIABLE .
    (122) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 121 (argumentos -> VARIABLE .)
    COMA            shift and go to state 257
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669


state 271

<<<<<<< HEAD
    (129) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 129 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
=======
    (122) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 122 (argumentos -> VARIABLE COMA argumentos .)


state 272

    (112) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    END             reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 112 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)


state 273

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones . END

    END             shift and go to state 284


state 274

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_DER  shift and go to state 285


state 275

    (88) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 286


state 276

    (89) cuerpo_each -> cuerpo .

    END             reduce using rule 89 (cuerpo_each -> cuerpo .)


state 277

    (90) cuerpo_each -> vacio .

    END             reduce using rule 90 (cuerpo_each -> vacio .)


state 278

    (164) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 287


state 279

    (165) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    PRINTF          reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 165 (each_args_hash -> VARIABLE BARRA .)


state 280

    (163) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 288


state 281

    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE . declaraciones END
    (144) declaraciones -> . declaracion
    (145) declaraciones -> . declaracion declaraciones
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 128
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    VARIABLECLASE   shift and go to state 123
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    declaraciones                  shift and go to state 289
    declaracion                    shift and go to state 182
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    asignacion_clase               shift and go to state 119
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 282

    (131) estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .

    VARIABLE        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CORCHETE_IZ     reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CASE            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    UNTIL           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CLASS           reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    CADENA          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    $end            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 131 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)


state 283

    (124) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 124 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)


state 284

    (113) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .

    VARIABLE        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CORCHETE_IZ     reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CASE            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    UNTIL           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHEN            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CLASS           reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    CADENA          reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    $end            reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    END             reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 113 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)


state 285

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClaseE END
    (176) cuerpoClaseE -> . cuerpoClase
    (177) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (173) cuerpoClase -> . cuerpoVariables
    (174) cuerpoClase -> . declaracion
    (175) cuerpoClase -> . funciones
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE declaraciones END
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    DEF             shift and go to state 42
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 297
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    cuerpoVariables                shift and go to state 290
    cuerpoClaseE                   shift and go to state 291
    cuerpoClase                    shift and go to state 292
    declaracion                    shift and go to state 293
    funciones                      shift and go to state 294
    asignacion_clase               shift and go to state 295
    asignacion                     shift and go to state 296
    operacionAritmetica            shift and go to state 112
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 286

    (88) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    VARIABLE        reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINT           reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PUTS            reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PRINTF          reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    GETS            reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    LLAVE_IZ        reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    IF              reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    DEF             reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CORCHETE_IZ     reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHILE           reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CASE            reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    UNTIL           reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    PARENTESIS_IZ   reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    SIMBOLO         reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    FLOTANTE        reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    ENTERO          reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    WHEN            reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CLASS           reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    CADENA          reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    $end            reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 88 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 287

    (164) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 298


state 288

    (163) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    VARIABLE        reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINT           reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PUTS            reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PRINTF          reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    GETS            reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    LLAVE_IZ        reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    IF              reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    DEF             reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CORCHETE_IZ     reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHILE           reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CASE            reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    UNTIL           reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    PARENTESIS_IZ   reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    SIMBOLO         reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    FLOTANTE        reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    ENTERO          reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    WHEN            reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CLASS           reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    CADENA          reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    $end            reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 163 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 289

    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 299


state 290

    (173) cuerpoClase -> cuerpoVariables .

    DEF             reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    VARIABLECLASE   reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    VARIABLE        reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    PRINT           reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    PUTS            reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    PRINTF          reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    GETS            reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    LLAVE_IZ        reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    IF              reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    WHILE           reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    SIMBOLO         reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    FLOTANTE        reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    ENTERO          reduce using rule 173 (cuerpoClase -> cuerpoVariables .)
    END             reduce using rule 173 (cuerpoClase -> cuerpoVariables .)


state 291

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE . END

    END             shift and go to state 300


state 292

    (176) cuerpoClaseE -> cuerpoClase .
    (177) cuerpoClaseE -> cuerpoClase . cuerpoClaseE
    (176) cuerpoClaseE -> . cuerpoClase
    (177) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (173) cuerpoClase -> . cuerpoVariables
    (174) cuerpoClase -> . declaracion
    (175) cuerpoClase -> . funciones
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (132) declaracion -> . operacionAritmetica
    (133) declaracion -> . asignacion
    (134) declaracion -> . impresion
    (135) declaracion -> . impresion_vacia
    (136) declaracion -> . expresiones_booleanas
    (137) declaracion -> . solicitudDatosTeclado
    (138) declaracion -> . hashes
    (139) declaracion -> . estructura_if
    (140) declaracion -> . asignacion_clase
    (141) declaracion -> . estructura_ifUnaLinea
    (142) declaracion -> . sentencia_while
    (143) declaracion -> . sentencia_while_bool
    (112) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (113) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (114) funciones -> . DEF VARIABLE declaraciones END
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (49) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (63) impresion -> . valor_print valores
    (92) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (93) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (94) impresion_vacia -> . PUTS
    (95) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (105) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (106) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (107) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (109) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (110) solicitudDatosTeclado -> . GETS
    (111) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (155) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (156) hashes -> . LLAVE_IZ LLAVE_DER
    (127) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (128) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (129) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (148) sentencia_while -> . WHILE expresiones_booleanas sentencia_while END
    (149) sentencia_while -> . WHILE expresiones_booleanas declaracion END
    (146) sentencia_while_bool -> . WHILE declaracion declaraciones END
    (147) sentencia_while_bool -> . WHILE VARIABLE declaraciones END
    (45) expresionNumerica -> . valorNumerico
    (46) expresionNumerica -> . operacionAritmetica
    (47) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (48) expresionNumerica -> . VARIABLE
    (50) valor_print -> . PRINT
    (51) valor_print -> . PUTS
    (26) valorSimbolo -> . SIMBOLO
    (27) valorSimbolo -> . VARIABLE
    (35) valorNumerico -> . FLOTANTE
    (36) valorNumerico -> . ENTERO

    END             reduce using rule 176 (cuerpoClaseE -> cuerpoClase .)
    DEF             shift and go to state 42
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 297
    PRINT           shift and go to state 33
    PUTS            shift and go to state 35
    PRINTF          shift and go to state 36
    GETS            shift and go to state 39
    LLAVE_IZ        shift and go to state 40
    IF              shift and go to state 122
    WHILE           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 34
    SIMBOLO         shift and go to state 31
    FLOTANTE        shift and go to state 50
    ENTERO          shift and go to state 51

    cuerpoClase                    shift and go to state 292
    cuerpoClaseE                   shift and go to state 301
    cuerpoVariables                shift and go to state 290
    declaracion                    shift and go to state 293
    funciones                      shift and go to state 294
    asignacion_clase               shift and go to state 295
    asignacion                     shift and go to state 296
    operacionAritmetica            shift and go to state 112
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 127
    solicitudDatosTeclado          shift and go to state 116
    hashes                         shift and go to state 117
    estructura_if                  shift and go to state 118
    estructura_ifUnaLinea          shift and go to state 120
    sentencia_while                shift and go to state 109
    sentencia_while_bool           shift and go to state 121
    expresionNumerica              shift and go to state 26
    valor_print                    shift and go to state 32
    valorSimbolo                   shift and go to state 37
    valorNumerico                  shift and go to state 38

state 293

    (174) cuerpoClase -> declaracion .

    DEF             reduce using rule 174 (cuerpoClase -> declaracion .)
    VARIABLECLASE   reduce using rule 174 (cuerpoClase -> declaracion .)
    VARIABLE        reduce using rule 174 (cuerpoClase -> declaracion .)
    PRINT           reduce using rule 174 (cuerpoClase -> declaracion .)
    PUTS            reduce using rule 174 (cuerpoClase -> declaracion .)
    PRINTF          reduce using rule 174 (cuerpoClase -> declaracion .)
    GETS            reduce using rule 174 (cuerpoClase -> declaracion .)
    LLAVE_IZ        reduce using rule 174 (cuerpoClase -> declaracion .)
    IF              reduce using rule 174 (cuerpoClase -> declaracion .)
    WHILE           reduce using rule 174 (cuerpoClase -> declaracion .)
    PARENTESIS_IZ   reduce using rule 174 (cuerpoClase -> declaracion .)
    SIMBOLO         reduce using rule 174 (cuerpoClase -> declaracion .)
    FLOTANTE        reduce using rule 174 (cuerpoClase -> declaracion .)
    ENTERO          reduce using rule 174 (cuerpoClase -> declaracion .)
    END             reduce using rule 174 (cuerpoClase -> declaracion .)


state 294

    (175) cuerpoClase -> funciones .

    DEF             reduce using rule 175 (cuerpoClase -> funciones .)
    VARIABLECLASE   reduce using rule 175 (cuerpoClase -> funciones .)
    VARIABLE        reduce using rule 175 (cuerpoClase -> funciones .)
    PRINT           reduce using rule 175 (cuerpoClase -> funciones .)
    PUTS            reduce using rule 175 (cuerpoClase -> funciones .)
    PRINTF          reduce using rule 175 (cuerpoClase -> funciones .)
    GETS            reduce using rule 175 (cuerpoClase -> funciones .)
    LLAVE_IZ        reduce using rule 175 (cuerpoClase -> funciones .)
    IF              reduce using rule 175 (cuerpoClase -> funciones .)
    WHILE           reduce using rule 175 (cuerpoClase -> funciones .)
    PARENTESIS_IZ   reduce using rule 175 (cuerpoClase -> funciones .)
    SIMBOLO         reduce using rule 175 (cuerpoClase -> funciones .)
    FLOTANTE        reduce using rule 175 (cuerpoClase -> funciones .)
    ENTERO          reduce using rule 175 (cuerpoClase -> funciones .)
    END             reduce using rule 175 (cuerpoClase -> funciones .)


state 295

    (169) cuerpoVariables -> asignacion_clase .
    (171) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (140) declaracion -> asignacion_clase .
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINT resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PUTS resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINTF resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for GETS resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for IF resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for WHILE resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for ENTERO resolved using rule 140 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for END resolved using rule 140 (declaracion -> asignacion_clase .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 140 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 140 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 140 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 140 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 140 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 140 (declaracion -> asignacion_clase .)
    IF              reduce using rule 140 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 140 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 140 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 140 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 140 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 140 (declaracion -> asignacion_clase .)
    END             reduce using rule 140 (declaracion -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 132

  ! DEF             [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINT           [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! PUTS            [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINTF          [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! GETS            [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! LLAVE_IZ        [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! IF              [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! WHILE           [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! PARENTESIS_IZ   [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! SIMBOLO         [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! FLOTANTE        [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! ENTERO          [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! END             [ reduce using rule 169 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 140 (declaracion -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 140 (declaracion -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 130
    cuerpoVariables                shift and go to state 201
    asignacion                     shift and go to state 131

state 296

    (170) cuerpoVariables -> asignacion .
    (172) cuerpoVariables -> asignacion . cuerpoVariables
    (133) declaracion -> asignacion .
    (169) cuerpoVariables -> . asignacion_clase
    (170) cuerpoVariables -> . asignacion
    (171) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (172) cuerpoVariables -> . asignacion cuerpoVariables
    (64) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (65) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (66) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (67) asignacion_clase -> . VARIABLECLASE IGUAL array
    (68) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (69) asignacion_clase -> . VARIABLE IGUAL booleanos
    (70) asignacion -> . VARIABLE IGUAL CADENA
    (71) asignacion -> . VARIABLE IGUAL expresionNumerica
    (72) asignacion -> . VARIABLE IGUAL hashes
    (73) asignacion -> . VARIABLE IGUAL SIMBOLO
    (74) asignacion -> . VARIABLE IGUAL array
    (75) asignacion -> . VARIABLE IGUAL input_concatenacion
    (76) asignacion -> . VARIABLE IGUAL booleanos
    (77) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (78) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINT resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for GETS resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 133 (declaracion -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 133 (declaracion -> asignacion .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 133 (declaracion -> asignacion .)
    PRINT           reduce using rule 133 (declaracion -> asignacion .)
    PUTS            reduce using rule 133 (declaracion -> asignacion .)
    PRINTF          reduce using rule 133 (declaracion -> asignacion .)
    GETS            reduce using rule 133 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> asignacion .)
    IF              reduce using rule 133 (declaracion -> asignacion .)
    WHILE           reduce using rule 133 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 133 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 133 (declaracion -> asignacion .)
    ENTERO          reduce using rule 133 (declaracion -> asignacion .)
    END             reduce using rule 133 (declaracion -> asignacion .)
    VARIABLECLASE   shift and go to state 123
    VARIABLE        shift and go to state 132

  ! DEF             [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! PRINT           [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! PUTS            [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! PRINTF          [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! GETS            [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! LLAVE_IZ        [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! IF              [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! WHILE           [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! SIMBOLO         [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! FLOTANTE        [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! ENTERO          [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! END             [ reduce using rule 170 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 133 (declaracion -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 133 (declaracion -> asignacion .) ]

    asignacion                     shift and go to state 131
    cuerpoVariables                shift and go to state 202
    asignacion_clase               shift and go to state 130

state 297

    (69) asignacion_clase -> VARIABLE . IGUAL booleanos
    (70) asignacion -> VARIABLE . IGUAL CADENA
    (71) asignacion -> VARIABLE . IGUAL expresionNumerica
    (72) asignacion -> VARIABLE . IGUAL hashes
    (73) asignacion -> VARIABLE . IGUAL SIMBOLO
    (74) asignacion -> VARIABLE . IGUAL array
    (75) asignacion -> VARIABLE . IGUAL input_concatenacion
    (76) asignacion -> VARIABLE . IGUAL booleanos
    (77) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (78) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (107) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (108) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (48) expresionNumerica -> VARIABLE .
    (27) valorSimbolo -> VARIABLE .
    (96) operadoresComparacion -> . IGUAL_DOBLEP
    (97) operadoresComparacion -> . NAVE
    (98) operadoresComparacion -> . DIFERENTE
    (99) operadoresComparacion -> . MAYOR_QUE
    (100) operadoresComparacion -> . MENOR_QUE
    (101) operadoresComparacion -> . MENOR_IGUAL_QUE
    (102) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 203
    MAS             reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 48 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 48 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 48 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 66
    NAVE            shift and go to state 67
    DIFERENTE       shift and go to state 68
    MAYOR_QUE       shift and go to state 69
    MENOR_QUE       shift and go to state 70
    MENOR_IGUAL_QUE shift and go to state 71
    MAYOR_IGUAL_QUE shift and go to state 72

  ! IGUAL_DOBLEP    [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 27 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 64

state 298

    (164) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINTF          reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 164 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 299

    (130) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .

    VARIABLE        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CORCHETE_IZ     reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CASE            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    UNTIL           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CLASS           reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    CADENA          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    $end            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 130 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)


state 300

    (168) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .

    VARIABLE        reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PRINT           reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PUTS            reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PRINTF          reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    GETS            reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    LLAVE_IZ        reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    IF              reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    DEF             reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CORCHETE_IZ     reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    WHILE           reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CASE            reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    UNTIL           reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    PARENTESIS_IZ   reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    SIMBOLO         reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    FLOTANTE        reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    ENTERO          reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    WHEN            reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CLASS           reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    CADENA          reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    $end            reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    END             reduce using rule 168 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)


state 301

    (177) cuerpoClaseE -> cuerpoClase cuerpoClaseE .

    END             reduce using rule 177 (cuerpoClaseE -> cuerpoClase cuerpoClaseE .)
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 29 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 29 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 29 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 29 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 35 resolved as shift
WARNING: shift/reduce conflict for WHEN in state 46 resolved as shift
<<<<<<< HEAD
WARNING: shift/reduce conflict for IF in state 76 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 100 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 100 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 100 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 124 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 124 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 124 resolved as shift
WARNING: shift/reduce conflict for MAS in state 133 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 133 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 133 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 133 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 133 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 133 resolved as shift
WARNING: shift/reduce conflict for END in state 223 resolved as shift
WARNING: reduce/reduce conflict in state 4 resolved using rule (cuerpo -> operacionAritmetica)
WARNING: rejected rule (declaracion -> operacionAritmetica) in state 4
WARNING: reduce/reduce conflict in state 6 resolved using rule (cuerpo -> asignacion)
WARNING: rejected rule (declaracion -> asignacion) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (cuerpo -> impresion)
WARNING: rejected rule (declaracion -> impresion) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (cuerpo -> impresion_vacia)
WARNING: rejected rule (declaracion -> impresion_vacia) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (cuerpo -> expresiones_booleanas)
WARNING: rejected rule (declaracion -> expresiones_booleanas) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (cuerpo -> solicitudDatosTeclado)
WARNING: rejected rule (declaracion -> solicitudDatosTeclado) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (cuerpo -> hashes)
WARNING: rejected rule (declaracion -> hashes) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (cuerpo -> estructura_ifUnaLinea)
WARNING: rejected rule (declaracion -> estructura_ifUnaLinea) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (cuerpo -> estructura_if)
WARNING: rejected rule (declaracion -> estructura_if) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (cuerpo -> funciones)
WARNING: rejected rule (declaracion -> funciones) in state 14
WARNING: reduce/reduce conflict in state 19 resolved using rule (cuerpo -> sentencia_while)
WARNING: rejected rule (declaracion -> sentencia_while) in state 19
=======
WARNING: shift/reduce conflict for IF in state 74 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 74 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 98 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 98 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 98 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 98 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 98 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 98 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 108 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 108 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 108 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 108 resolved as shift
WARNING: shift/reduce conflict for PRINTF in state 108 resolved as shift
WARNING: shift/reduce conflict for GETS in state 108 resolved as shift
WARNING: shift/reduce conflict for LLAVE_IZ in state 108 resolved as shift
WARNING: shift/reduce conflict for IF in state 108 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 108 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 108 resolved as shift
WARNING: shift/reduce conflict for SIMBOLO in state 108 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 108 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 108 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 111 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 111 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 111 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 111 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 111 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 111 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 128 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 128 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 128 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 128 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 128 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 130 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 130 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 131 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 131 resolved as shift
WARNING: shift/reduce conflict for MAS in state 136 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 136 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 136 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 136 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 136 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 136 resolved as shift
WARNING: shift/reduce conflict for END in state 191 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 214 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 214 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 214 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 214 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 214 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 214 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 214 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 295 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 295 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 296 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 296 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 297 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 297 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 297 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 297 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 297 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 297 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 297 resolved as shift
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
WARNING: reduce/reduce conflict in state 29 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 29
WARNING: reduce/reduce conflict in state 35 resolved using rule (valor_print -> PUTS)
WARNING: rejected rule (impresion_vacia -> PUTS) in state 35
<<<<<<< HEAD
WARNING: reduce/reduce conflict in state 137 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 137
WARNING: reduce/reduce conflict in state 144 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 144
WARNING: reduce/reduce conflict in state 155 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 155
WARNING: reduce/reduce conflict in state 199 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 199
WARNING: Rule (asignacion -> VARIABLE IGUAL booleanos) is never reduced
=======
WARNING: reduce/reduce conflict in state 140 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 140
WARNING: reduce/reduce conflict in state 158 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 158
WARNING: reduce/reduce conflict in state 236 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 236
WARNING: reduce/reduce conflict in state 243 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 243
WARNING: reduce/reduce conflict in state 247 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 247
WARNING: reduce/reduce conflict in state 295 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 295
WARNING: reduce/reduce conflict in state 296 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 296
>>>>>>> 4554edfe144eee5503c71ff1b9f4b8055c6b2669
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
