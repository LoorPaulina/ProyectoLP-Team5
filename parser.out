Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BEGIN
    COMENTARIO
    COMENTARIO_MULTI
    COMILLA_D
    COMILLA_S
    DOBLE_IGUAL
    EXCLAMACION_ALTO
    IN
    MODULE
    NOT
    OR
    PORCENTAJE
    PREGUNTA
    RETURN
    SELF
    TRES_PUNTOS
    TRIPLE_IGUAL

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_ifUnaLinea
Rule 10    cuerpo -> estructura_if
Rule 11    cuerpo -> funciones
Rule 12    cuerpo -> funcionesEstructuras
Rule 13    cuerpo -> array
Rule 14    cuerpo -> each_array
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    cuerpo -> entero_a_flotante
Rule 22    valorSimbolo -> SIMBOLO
Rule 23    valorSimbolo -> VARIABLE
Rule 24    input_concatenacion -> concatenacionSimpleCadena
Rule 25    input_concatenacion -> concatenacion_funcion
Rule 26    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 27    valorCadena -> CADENA
Rule 28    valorCadena -> VARIABLE
Rule 29    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 30    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 31    valorNumerico -> FLOTANTE
Rule 32    valorNumerico -> ENTERO
Rule 33    soloEnteros -> ENTERO
Rule 34    entero_a_flotante -> VARIABLE PUNTO TO_F
Rule 35    operadores -> MAS
Rule 36    operadores -> MENOS
Rule 37    operadores -> DIVISION
Rule 38    operadores -> MULTIPLICACION
Rule 39    operadores -> EXPONENCIACION
Rule 40    operadores -> MODULO
Rule 41    expresionNumerica -> valorNumerico
Rule 42    expresionNumerica -> operacionAritmetica
Rule 43    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 44    expresionNumerica -> VARIABLE
Rule 45    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 46    valor_print -> PRINT
Rule 47    valor_print -> PUTS
Rule 48    valores -> valor
Rule 49    valores -> valor COMA valores
Rule 50    valores -> valor estructura_ifUnaLinea
Rule 51    booleanos -> TRUE
Rule 52    booleanos -> FALSE
Rule 53    valor -> CADENA
Rule 54    valor -> valorNumerico
Rule 55    valor -> VARIABLE
Rule 56    valor -> VARIABLECLASE
Rule 57    valor -> SIMBOLO
Rule 58    impresion -> valor_print valores
Rule 59    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 60    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 61    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 62    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 63    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 64    asignacion_clase -> VARIABLE IGUAL booleanos
Rule 65    asignacion -> VARIABLE IGUAL CADENA
Rule 66    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 67    asignacion -> VARIABLE IGUAL hashes
Rule 68    asignacion -> VARIABLE IGUAL SIMBOLO
Rule 69    asignacion -> VARIABLE IGUAL array
Rule 70    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 71    asignacion -> VARIABLE IGUAL booleanos
Rule 72    asignacion -> VARIABLE IGUAL solicitudDatosTeclado
Rule 73    asignacion -> VARIABLE IGUAL entero_a_flotante
Rule 74    elementos_array -> elemento_array COMA elementos_array
Rule 75    elementos_array -> elemento_array
Rule 76    elemento_array -> CADENA
Rule 77    elemento_array -> ENTERO
Rule 78    elemento_array -> FLOTANTE
Rule 79    elemento_array -> array
Rule 80    elemento_array -> VARIABLE
Rule 81    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 82    array -> CORCHETE_IZ CORCHETE_DER
Rule 83    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 84    cuerpo_each -> cuerpo
Rule 85    cuerpo_each -> vacio
Rule 86    vacio -> <empty>
Rule 87    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 88    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 89    impresion_vacia -> PUTS
Rule 90    impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER
Rule 91    operadoresComparacion -> IGUAL_DOBLEP
Rule 92    operadoresComparacion -> NAVE
Rule 93    operadoresComparacion -> DIFERENTE
Rule 94    operadoresComparacion -> MAYOR_QUE
Rule 95    operadoresComparacion -> MENOR_QUE
Rule 96    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 97    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 98    funcionesComparacion -> Y_SIGNO
Rule 99    funcionesComparacion -> O_SIGNO
Rule 100   expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo
Rule 101   expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 102   expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 103   expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 104   expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 105   solicitudDatosTeclado -> GETS
Rule 106   solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 107   funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
Rule 108   funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
Rule 109   funciones -> DEF VARIABLE declaraciones END
Rule 110   funcionesArray -> SORT
Rule 111   funcionesArray -> FOR EACH
Rule 112   funcionesFormatoImpresion -> CHOMP
Rule 113   funcionesNumeros -> TO_F
Rule 114   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 115   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 116   argumentos -> VARIABLE
Rule 117   argumentos -> VARIABLE COMA argumentos
Rule 118   condicionIf -> expresiones_booleanas
Rule 119   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
Rule 120   condicionIf -> expresiones_booleanas funcionesComparacion condicionIf
Rule 121   condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
Rule 122   estructura_if -> IF condicionIf declaraciones ELSE declaraciones END
Rule 123   estructura_if -> IF condicionIf declaraciones estructura_secundaria_if
Rule 124   estructura_ifUnaLinea -> IF condicionIf declaraciones END
Rule 125   estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END
Rule 126   estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if
Rule 127   declaracion -> operacionAritmetica
Rule 128   declaracion -> asignacion
Rule 129   declaracion -> impresion
Rule 130   declaracion -> impresion_vacia
Rule 131   declaracion -> expresiones_booleanas
Rule 132   declaracion -> solicitudDatosTeclado
Rule 133   declaracion -> hashes
Rule 134   declaracion -> estructura_if
Rule 135   declaracion -> asignacion_clase
Rule 136   declaracion -> sentencia_while
Rule 137   declaracion -> estructura_ifUnaLinea
Rule 138   declaraciones -> declaracion
Rule 139   declaraciones -> declaracion declaraciones
Rule 140   sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END
Rule 141   sentencia_while -> WHILE expresiones_booleanas DO declaracion END
Rule 142   sentencia_case -> CASE declaraciones sentencia_when END
Rule 143   sentencias_when -> sentencia_when
Rule 144   sentencias_when -> sentencia_when sentencias_when
Rule 145   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 146   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 147   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 148   hashes -> LLAVE_IZ LLAVE_DER
Rule 149   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 150   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 151   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 152   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 153   elemento_hash -> claveValor
Rule 154   elemento_hash -> claveValor COMA elemento_hash
Rule 155   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 156   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 157   each_args_hash -> VARIABLE BARRA
Rule 158   encabezadoClase -> CLASS ID_CLASE
Rule 159   encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE
Rule 160   definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
Rule 161   cuerpoVariables -> asignacion_clase
Rule 162   cuerpoVariables -> asignacion
Rule 163   cuerpoVariables -> asignacion_clase cuerpoVariables
Rule 164   cuerpoVariables -> asignacion cuerpoVariables
Rule 165   cuerpoClase -> cuerpoVariables
Rule 166   cuerpoClase -> declaracion
Rule 167   cuerpoClase -> funciones
Rule 168   cuerpoClaseE -> cuerpoClase
Rule 169   cuerpoClaseE -> cuerpoClase cuerpoClaseE

Terminals, with rules where they appear

AND                  : 
ASIGNA_HASH          : 149 150 151 152
BARRA                : 83 83 155 156 157
BEGIN                : 
CADENA               : 27 53 59 65 76 150 151 152 152
CASE                 : 142
CHOMP                : 112
CLASS                : 158 159
COMA                 : 49 74 117 154 156
COMENTARIO           : 
COMENTARIO_MULTI     : 
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 26
CORCHETE_DER         : 81 82
CORCHETE_IZ          : 81 82
DEF                  : 107 108 109 160
DIFERENTE            : 93
DIVISION             : 37
DO                   : 83 140 141 146 155
DOBLE_IGUAL          : 
EACH                 : 111 155
ELSE                 : 122 125
ELSEIF               : 125 126
END                  : 83 107 108 109 122 124 125 140 141 142 146 155 160
ENTERO               : 32 33 77
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 119 121
EXPONENCIACION       : 39
FALSE                : 52
FLOTANTE             : 31 78
FOR                  : 111
GETS                 : 105 106
ID_CLASE             : 158 159 159
IF                   : 122 123 124
IGUAL                : 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73
IGUAL_DOBLEP         : 91 145
IN                   : 
INITIALIZE           : 160
LLAVE_DER            : 147 148
LLAVE_IZ             : 147 148
MAS                  : 29 30 35
MAYOR_IGUAL_QUE      : 97
MAYOR_QUE            : 94
MENOR_IGUAL_QUE      : 96
MENOR_QUE            : 95 159
MENOS                : 36
MODULE               : 
MODULO               : 40
MULTIPLICACION       : 38
NAVE                 : 92
NOT                  : 
OR                   : 
O_SIGNO              : 99
PARENTESIS_DER       : 26 43 87 88 90 107 108 119 121 160
PARENTESIS_IZ        : 26 43 87 88 90 107 108 119 121 160
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 46 87
PRINTF               : 90
PUNTO                : 26 34 83 106 114 115 155
PUTS                 : 47 88 89
RETURN               : 
SELF                 : 
SIMBOLO              : 22 57 68
SORT                 : 110
TO_F                 : 34 113
TRES_PUNTOS          : 
TRIPLE_IGUAL         : 
TRUE                 : 51
UNTIL                : 146
VARIABLE             : 23 26 28 34 44 55 64 65 66 67 68 69 70 71 72 73 80 83 83 102 102 103 104 107 108 109 114 115 116 117 149 150 155 156 156 157
VARIABLECLASE        : 56 59 60 61 62 63
WHEN                 : 145
WHILE                : 140 141
Y_SIGNO              : 98
error                : 

Nonterminals, with rules where they appear

argumentos           : 108 117 160
array                : 13 62 69 79
asignacion           : 3 128 162 164
asignacion_clase     : 135 161 163
booleanos            : 64 71
claveValor           : 153 154
concatenacionSimpleCadena : 24 30
concatenacion_funcion : 25
condicionIf          : 119 120 122 123 124 125 126
cuerpo               : 84 0
cuerpoClase          : 168 169
cuerpoClaseE         : 160 169
cuerpoVariables      : 160 163 164 165
cuerpo_each          : 83
declaracion          : 138 139 141 145 145 146 146 155 166
declaraciones        : 107 108 109 122 122 123 124 125 125 126 139 142
definicion_clase     : 20
each_args_hash       : 155
each_array           : 14
each_hash            : 15
elemento_array       : 74 75
elemento_hash        : 147 154
elementos_array      : 74 81
encabezadoClase      : 160
entero_a_flotante    : 21 73
estructura_if        : 10 134
estructura_ifUnaLinea : 9 50 137
estructura_secundaria_if : 123 126
expresionNumerica    : 45 45 60 66
expresiones_booleanas : 6 118 119 120 121 131 140 141
funciones            : 11 167
funcionesArray       : 114
funcionesComparacion : 119 120
funcionesEstructuras : 12
funcionesFormatoImpresion : 106
funcionesNumeros     : 115
hashes               : 8 61 67 133
impresion            : 4 129
impresion_vacia      : 5 130
input_concatenacion  : 2 63 70
operacionAritmetica  : 1 42 43 127
operadores           : 45
operadoresComparacion : 100 101 102 103 104
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 142 143 144
sentencia_while      : 16 136 140
sentencias_when      : 18 144
solicitudDatosTeclado : 7 72 132
soloEnteros          : 
vacio                : 85
valor                : 48 49 50
valorCadena          : 26 29 29 30
valorNumerico        : 41 54 101 101 103 104 149 151
valorSimbolo         : 100 100
valor_print          : 58
valores              : 49 58

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_ifUnaLinea
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> . DEF VARIABLE declaraciones END
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (115) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (83) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (155) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (142) sentencia_case -> . CASE declaraciones sentencia_when END
    (143) sentencias_when -> . sentencia_when
    (144) sentencias_when -> . sentencia_when sentencias_when
    (146) sentencia_until -> . UNTIL declaracion DO declaracion END
    (160) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (145) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (158) encabezadoClase -> . CLASS ID_CLASE
    (159) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 38
    DEF             shift and go to state 39
    CORCHETE_IZ     shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48
    WHEN            shift and go to state 49
    CLASS           shift and go to state 50
    CADENA          shift and go to state 27

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_ifUnaLinea          shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35
    sentencia_when                 shift and go to state 43
    encabezadoClase                shift and go to state 45
    valorCadena                    shift and go to state 46

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_ifUnaLinea .

    $end            reduce using rule 9 (cuerpo -> estructura_ifUnaLinea .)
    END             reduce using rule 9 (cuerpo -> estructura_ifUnaLinea .)


state 11

    (10) cuerpo -> estructura_if .

    $end            reduce using rule 10 (cuerpo -> estructura_if .)
    END             reduce using rule 10 (cuerpo -> estructura_if .)


state 12

    (11) cuerpo -> funciones .

    $end            reduce using rule 11 (cuerpo -> funciones .)
    END             reduce using rule 11 (cuerpo -> funciones .)


state 13

    (12) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 12 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 12 (cuerpo -> funcionesEstructuras .)


state 14

    (13) cuerpo -> array .

    $end            reduce using rule 13 (cuerpo -> array .)
    END             reduce using rule 13 (cuerpo -> array .)


state 15

    (14) cuerpo -> each_array .

    $end            reduce using rule 14 (cuerpo -> each_array .)
    END             reduce using rule 14 (cuerpo -> each_array .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (21) cuerpo -> entero_a_flotante .

    $end            reduce using rule 21 (cuerpo -> entero_a_flotante .)
    END             reduce using rule 21 (cuerpo -> entero_a_flotante .)


state 23

    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    DIVISION        shift and go to state 54
    MULTIPLICACION  shift and go to state 55
    EXPONENCIACION  shift and go to state 56
    MODULO          shift and go to state 57

    operadores                     shift and go to state 51

state 24

    (24) input_concatenacion -> concatenacionSimpleCadena .
    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    VARIABLE        reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINT           reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    PUTS            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    PRINTF          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    GETS            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    LLAVE_IZ        reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    IF              reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    VARIABLECLASE   reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    WHILE           reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    PARENTESIS_IZ   reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    SIMBOLO         reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    FLOTANTE        reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ENTERO          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    DEF             reduce using rule 24 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 58


state 25

    (25) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    VARIABLE        reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    PRINT           reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    PUTS            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    PRINTF          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    GETS            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    LLAVE_IZ        reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    IF              reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    VARIABLECLASE   reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    WHILE           reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    PARENTESIS_IZ   reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    SIMBOLO         reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    FLOTANTE        reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ENTERO          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)
    DEF             reduce using rule 25 (input_concatenacion -> concatenacion_funcion .)


state 26

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (72) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (73) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (114) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (115) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (83) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (155) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (23) valorSimbolo -> VARIABLE .
    (28) valorCadena -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 59
    PUNTO           shift and go to state 61
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 60

state 27

    (27) valorCadena -> CADENA .

    MAS             reduce using rule 27 (valorCadena -> CADENA .)
    $end            reduce using rule 27 (valorCadena -> CADENA .)
    END             reduce using rule 27 (valorCadena -> CADENA .)
    VARIABLE        reduce using rule 27 (valorCadena -> CADENA .)
    PRINT           reduce using rule 27 (valorCadena -> CADENA .)
    PUTS            reduce using rule 27 (valorCadena -> CADENA .)
    PRINTF          reduce using rule 27 (valorCadena -> CADENA .)
    GETS            reduce using rule 27 (valorCadena -> CADENA .)
    LLAVE_IZ        reduce using rule 27 (valorCadena -> CADENA .)
    IF              reduce using rule 27 (valorCadena -> CADENA .)
    VARIABLECLASE   reduce using rule 27 (valorCadena -> CADENA .)
    WHILE           reduce using rule 27 (valorCadena -> CADENA .)
    PARENTESIS_IZ   reduce using rule 27 (valorCadena -> CADENA .)
    SIMBOLO         reduce using rule 27 (valorCadena -> CADENA .)
    FLOTANTE        reduce using rule 27 (valorCadena -> CADENA .)
    ENTERO          reduce using rule 27 (valorCadena -> CADENA .)
    WHEN            reduce using rule 27 (valorCadena -> CADENA .)
    DO              reduce using rule 27 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 27 (valorCadena -> CADENA .)
    ELSE            reduce using rule 27 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 27 (valorCadena -> CADENA .)
    DEF             reduce using rule 27 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 27 (valorCadena -> CADENA .)


state 28

    (22) valorSimbolo -> SIMBOLO .

    IGUAL_DOBLEP    reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    NAVE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DIFERENTE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_QUE       reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MENOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    MAYOR_IGUAL_QUE reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    $end            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    Y_SIGNO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    O_SIGNO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PRINT           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PUTS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PRINTF          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    GETS            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    IF              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHILE           reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    SIMBOLO         reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    FLOTANTE        reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ENTERO          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DO              reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    WHEN            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    END             reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSE            reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    ELSEIF          reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    PARENTESIS_DER  reduce using rule 22 (valorSimbolo -> SIMBOLO .)
    DEF             reduce using rule 22 (valorSimbolo -> SIMBOLO .)


state 29

    (58) impresion -> valor_print . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 71
    VARIABLE        shift and go to state 73
    VARIABLECLASE   shift and go to state 74
    SIMBOLO         shift and go to state 75
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valores                        shift and go to state 69
    valor                          shift and go to state 70
    valorNumerico                  shift and go to state 72

state 30

    (87) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (46) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 76
    CADENA          reduce using rule 46 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 46 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 46 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 46 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 46 (valor_print -> PRINT .)
    ENTERO          reduce using rule 46 (valor_print -> PRINT .)


state 31

    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 79
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    operacionAritmetica            shift and go to state 77
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 78

state 32

    (88) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> PUTS .
    (47) valor_print -> PUTS .

  ! shift/reduce conflict for PARENTESIS_IZ resolved as shift
  ! reduce/reduce conflict for VARIABLE resolved using rule 47 (valor_print -> PUTS .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 47 (valor_print -> PUTS .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 47 (valor_print -> PUTS .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 47 (valor_print -> PUTS .)
  ! reduce/reduce conflict for ENTERO resolved using rule 47 (valor_print -> PUTS .)
    PARENTESIS_IZ   shift and go to state 80
    $end            reduce using rule 89 (impresion_vacia -> PUTS .)
    PRINT           reduce using rule 89 (impresion_vacia -> PUTS .)
    PUTS            reduce using rule 89 (impresion_vacia -> PUTS .)
    PRINTF          reduce using rule 89 (impresion_vacia -> PUTS .)
    GETS            reduce using rule 89 (impresion_vacia -> PUTS .)
    LLAVE_IZ        reduce using rule 89 (impresion_vacia -> PUTS .)
    IF              reduce using rule 89 (impresion_vacia -> PUTS .)
    WHILE           reduce using rule 89 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 89 (impresion_vacia -> PUTS .)
    DO              reduce using rule 89 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 89 (impresion_vacia -> PUTS .)
    END             reduce using rule 89 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 89 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 89 (impresion_vacia -> PUTS .)
    DEF             reduce using rule 89 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 47 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 47 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 47 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 47 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 47 (valor_print -> PUTS .)
    ENTERO          reduce using rule 47 (valor_print -> PUTS .)

  ! VARIABLE        [ reduce using rule 89 (impresion_vacia -> PUTS .) ]
  ! VARIABLECLASE   [ reduce using rule 89 (impresion_vacia -> PUTS .) ]
  ! PARENTESIS_IZ   [ reduce using rule 89 (impresion_vacia -> PUTS .) ]
  ! SIMBOLO         [ reduce using rule 89 (impresion_vacia -> PUTS .) ]
  ! FLOTANTE        [ reduce using rule 89 (impresion_vacia -> PUTS .) ]
  ! ENTERO          [ reduce using rule 89 (impresion_vacia -> PUTS .) ]


state 33

    (90) impresion_vacia -> PRINTF . PARENTESIS_IZ PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 81


state 34

    (100) expresiones_booleanas -> valorSimbolo . operadoresComparacion valorSimbolo
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 82

state 35

    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (41) expresionNumerica -> valorNumerico .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 83

state 36

    (105) solicitudDatosTeclado -> GETS .
    (106) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    VARIABLE        reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PRINT           reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PUTS            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PRINTF          reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    GETS            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    LLAVE_IZ        reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    IF              reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    VARIABLECLASE   reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    WHILE           reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PARENTESIS_IZ   reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    SIMBOLO         reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    FLOTANTE        reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    ENTERO          reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    DEF             reduce using rule 105 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 84


state 37

    (147) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (148) hashes -> LLAVE_IZ . LLAVE_DER
    (153) elemento_hash -> . claveValor
    (154) elemento_hash -> . claveValor COMA elemento_hash
    (149) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (150) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (151) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (152) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 86
    VARIABLE        shift and go to state 88
    CADENA          shift and go to state 89

    elemento_hash                  shift and go to state 85
    claveValor                     shift and go to state 87

state 38

    (124) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (122) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    condicionIf                    shift and go to state 90
    expresiones_booleanas          shift and go to state 91
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 39

    (107) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> DEF . VARIABLE declaraciones END

    VARIABLE        shift and go to state 95


state 40

    (81) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (82) array -> CORCHETE_IZ . CORCHETE_DER
    (74) elementos_array -> . elemento_array COMA elementos_array
    (75) elementos_array -> . elemento_array
    (76) elemento_array -> . CADENA
    (77) elemento_array -> . ENTERO
    (78) elemento_array -> . FLOTANTE
    (79) elemento_array -> . array
    (80) elemento_array -> . VARIABLE
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 97
    CADENA          shift and go to state 99
    ENTERO          shift and go to state 100
    FLOTANTE        shift and go to state 101
    VARIABLE        shift and go to state 103
    CORCHETE_IZ     shift and go to state 40

    elementos_array                shift and go to state 96
    elemento_array                 shift and go to state 98
    array                          shift and go to state 102

state 41

    (140) sentencia_while -> WHILE . expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> WHILE . expresiones_booleanas DO declaracion END
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresiones_booleanas          shift and go to state 104
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 42

    (142) sentencia_case -> CASE . declaraciones sentencia_when END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 105
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 43

    (143) sentencias_when -> sentencia_when .
    (144) sentencias_when -> sentencia_when . sentencias_when
    (143) sentencias_when -> . sentencia_when
    (144) sentencias_when -> . sentencia_when sentencias_when
    (145) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 143 (sentencias_when -> sentencia_when .)
    END             reduce using rule 143 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 49

    sentencia_when                 shift and go to state 43
    sentencias_when                shift and go to state 121

state 44

    (146) sentencia_until -> UNTIL . declaracion DO declaracion END
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 122
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 45

    (160) definicion_clase -> encabezadoClase . cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante

    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 126

    cuerpoVariables                shift and go to state 123
    asignacion_clase               shift and go to state 124
    asignacion                     shift and go to state 125

state 46

    (29) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 127


state 47

    (31) valorNumerico -> FLOTANTE .

    IGUAL_DOBLEP    reduce using rule 31 (valorNumerico -> FLOTANTE .)
    NAVE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PRINTF          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 31 (valorNumerico -> FLOTANTE .)
    SIMBOLO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 31 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 31 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 31 (valorNumerico -> FLOTANTE .)
    DEF             reduce using rule 31 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 31 (valorNumerico -> FLOTANTE .)
    Y_SIGNO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    O_SIGNO         reduce using rule 31 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 31 (valorNumerico -> FLOTANTE .)


state 48

    (32) valorNumerico -> ENTERO .

    IGUAL_DOBLEP    reduce using rule 32 (valorNumerico -> ENTERO .)
    NAVE            reduce using rule 32 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 32 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 32 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 32 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 32 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 32 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 32 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 32 (valorNumerico -> ENTERO .)
    IF              reduce using rule 32 (valorNumerico -> ENTERO .)
    $end            reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 32 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 32 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 32 (valorNumerico -> ENTERO .)
    PRINTF          reduce using rule 32 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 32 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 32 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 32 (valorNumerico -> ENTERO .)
    SIMBOLO         reduce using rule 32 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 32 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 32 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 32 (valorNumerico -> ENTERO .)
    DO              reduce using rule 32 (valorNumerico -> ENTERO .)
    END             reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 32 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 32 (valorNumerico -> ENTERO .)
    DEF             reduce using rule 32 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 32 (valorNumerico -> ENTERO .)
    Y_SIGNO         reduce using rule 32 (valorNumerico -> ENTERO .)
    O_SIGNO         reduce using rule 32 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 32 (valorNumerico -> ENTERO .)


state 49

    (145) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 128
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 50

    (158) encabezadoClase -> CLASS . ID_CLASE
    (159) encabezadoClase -> CLASS . ID_CLASE MENOR_QUE ID_CLASE

    ID_CLASE        shift and go to state 129


state 51

    (45) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 79
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresionNumerica              shift and go to state 130
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 131

state 52

    (35) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> MAS .)
    VARIABLE        reduce using rule 35 (operadores -> MAS .)
    FLOTANTE        reduce using rule 35 (operadores -> MAS .)
    ENTERO          reduce using rule 35 (operadores -> MAS .)


state 53

    (36) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MENOS .)
    VARIABLE        reduce using rule 36 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 36 (operadores -> MENOS .)
    ENTERO          reduce using rule 36 (operadores -> MENOS .)


state 54

    (37) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 37 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 37 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 37 (operadores -> DIVISION .)
    ENTERO          reduce using rule 37 (operadores -> DIVISION .)


state 55

    (38) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 38 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 38 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 38 (operadores -> MULTIPLICACION .)


state 56

    (39) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 39 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 39 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 39 (operadores -> EXPONENCIACION .)


state 57

    (40) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 40 (operadores -> MODULO .)
    VARIABLE        reduce using rule 40 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 40 (operadores -> MODULO .)
    ENTERO          reduce using rule 40 (operadores -> MODULO .)


state 58

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 132

state 59

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (72) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (73) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 37
    CORCHETE_IZ     shift and go to state 40
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    GETS            shift and go to state 36
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    booleanos                      shift and go to state 141
    solicitudDatosTeclado          shift and go to state 142
    entero_a_flotante              shift and go to state 143
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 46

state 60

    (102) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (103) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 146
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valorNumerico                  shift and go to state 147

state 61

    (114) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (115) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (83) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (155) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (34) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (110) funcionesArray -> . SORT
    (111) funcionesArray -> . FOR EACH
    (113) funcionesNumeros -> . TO_F

    DO              shift and go to state 150
    EACH            shift and go to state 151
    TO_F            shift and go to state 152
    CONCAT          shift and go to state 153
    SORT            shift and go to state 154
    FOR             shift and go to state 155

    funcionesArray                 shift and go to state 148
    funcionesNumeros               shift and go to state 149

state 62

    (91) operadoresComparacion -> IGUAL_DOBLEP .

    VARIABLE        reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    FLOTANTE        reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    ENTERO          reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)
    SIMBOLO         reduce using rule 91 (operadoresComparacion -> IGUAL_DOBLEP .)


state 63

    (92) operadoresComparacion -> NAVE .

    VARIABLE        reduce using rule 92 (operadoresComparacion -> NAVE .)
    FLOTANTE        reduce using rule 92 (operadoresComparacion -> NAVE .)
    ENTERO          reduce using rule 92 (operadoresComparacion -> NAVE .)
    SIMBOLO         reduce using rule 92 (operadoresComparacion -> NAVE .)


state 64

    (93) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 93 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 93 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 93 (operadoresComparacion -> DIFERENTE .)
    SIMBOLO         reduce using rule 93 (operadoresComparacion -> DIFERENTE .)


state 65

    (94) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 94 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 94 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 94 (operadoresComparacion -> MAYOR_QUE .)
    SIMBOLO         reduce using rule 94 (operadoresComparacion -> MAYOR_QUE .)


state 66

    (95) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 95 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 95 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 95 (operadoresComparacion -> MENOR_QUE .)
    SIMBOLO         reduce using rule 95 (operadoresComparacion -> MENOR_QUE .)


state 67

    (96) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 96 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 96 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 96 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 96 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 68

    (97) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 97 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 97 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 97 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    SIMBOLO         reduce using rule 97 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 69

    (58) impresion -> valor_print valores .

    $end            reduce using rule 58 (impresion -> valor_print valores .)
    VARIABLE        reduce using rule 58 (impresion -> valor_print valores .)
    PRINT           reduce using rule 58 (impresion -> valor_print valores .)
    PUTS            reduce using rule 58 (impresion -> valor_print valores .)
    PRINTF          reduce using rule 58 (impresion -> valor_print valores .)
    GETS            reduce using rule 58 (impresion -> valor_print valores .)
    LLAVE_IZ        reduce using rule 58 (impresion -> valor_print valores .)
    IF              reduce using rule 58 (impresion -> valor_print valores .)
    VARIABLECLASE   reduce using rule 58 (impresion -> valor_print valores .)
    WHILE           reduce using rule 58 (impresion -> valor_print valores .)
    PARENTESIS_IZ   reduce using rule 58 (impresion -> valor_print valores .)
    SIMBOLO         reduce using rule 58 (impresion -> valor_print valores .)
    FLOTANTE        reduce using rule 58 (impresion -> valor_print valores .)
    ENTERO          reduce using rule 58 (impresion -> valor_print valores .)
    WHEN            reduce using rule 58 (impresion -> valor_print valores .)
    DO              reduce using rule 58 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 58 (impresion -> valor_print valores .)
    END             reduce using rule 58 (impresion -> valor_print valores .)
    ELSE            reduce using rule 58 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 58 (impresion -> valor_print valores .)
    DEF             reduce using rule 58 (impresion -> valor_print valores .)


state 70

    (48) valores -> valor .
    (49) valores -> valor . COMA valores
    (50) valores -> valor . estructura_ifUnaLinea
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END

  ! shift/reduce conflict for IF resolved as shift
    $end            reduce using rule 48 (valores -> valor .)
    VARIABLE        reduce using rule 48 (valores -> valor .)
    PRINT           reduce using rule 48 (valores -> valor .)
    PUTS            reduce using rule 48 (valores -> valor .)
    PRINTF          reduce using rule 48 (valores -> valor .)
    GETS            reduce using rule 48 (valores -> valor .)
    LLAVE_IZ        reduce using rule 48 (valores -> valor .)
    VARIABLECLASE   reduce using rule 48 (valores -> valor .)
    WHILE           reduce using rule 48 (valores -> valor .)
    PARENTESIS_IZ   reduce using rule 48 (valores -> valor .)
    SIMBOLO         reduce using rule 48 (valores -> valor .)
    FLOTANTE        reduce using rule 48 (valores -> valor .)
    ENTERO          reduce using rule 48 (valores -> valor .)
    WHEN            reduce using rule 48 (valores -> valor .)
    DO              reduce using rule 48 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 48 (valores -> valor .)
    END             reduce using rule 48 (valores -> valor .)
    ELSE            reduce using rule 48 (valores -> valor .)
    ELSEIF          reduce using rule 48 (valores -> valor .)
    DEF             reduce using rule 48 (valores -> valor .)
    COMA            shift and go to state 156
    IF              shift and go to state 158

  ! IF              [ reduce using rule 48 (valores -> valor .) ]

    estructura_ifUnaLinea          shift and go to state 157

state 71

    (53) valor -> CADENA .

    COMA            reduce using rule 53 (valor -> CADENA .)
    IF              reduce using rule 53 (valor -> CADENA .)
    $end            reduce using rule 53 (valor -> CADENA .)
    VARIABLE        reduce using rule 53 (valor -> CADENA .)
    PRINT           reduce using rule 53 (valor -> CADENA .)
    PUTS            reduce using rule 53 (valor -> CADENA .)
    PRINTF          reduce using rule 53 (valor -> CADENA .)
    GETS            reduce using rule 53 (valor -> CADENA .)
    LLAVE_IZ        reduce using rule 53 (valor -> CADENA .)
    VARIABLECLASE   reduce using rule 53 (valor -> CADENA .)
    WHILE           reduce using rule 53 (valor -> CADENA .)
    PARENTESIS_IZ   reduce using rule 53 (valor -> CADENA .)
    SIMBOLO         reduce using rule 53 (valor -> CADENA .)
    FLOTANTE        reduce using rule 53 (valor -> CADENA .)
    ENTERO          reduce using rule 53 (valor -> CADENA .)
    WHEN            reduce using rule 53 (valor -> CADENA .)
    DO              reduce using rule 53 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 53 (valor -> CADENA .)
    END             reduce using rule 53 (valor -> CADENA .)
    ELSE            reduce using rule 53 (valor -> CADENA .)
    ELSEIF          reduce using rule 53 (valor -> CADENA .)
    DEF             reduce using rule 53 (valor -> CADENA .)


state 72

    (54) valor -> valorNumerico .

    COMA            reduce using rule 54 (valor -> valorNumerico .)
    IF              reduce using rule 54 (valor -> valorNumerico .)
    $end            reduce using rule 54 (valor -> valorNumerico .)
    VARIABLE        reduce using rule 54 (valor -> valorNumerico .)
    PRINT           reduce using rule 54 (valor -> valorNumerico .)
    PUTS            reduce using rule 54 (valor -> valorNumerico .)
    PRINTF          reduce using rule 54 (valor -> valorNumerico .)
    GETS            reduce using rule 54 (valor -> valorNumerico .)
    LLAVE_IZ        reduce using rule 54 (valor -> valorNumerico .)
    VARIABLECLASE   reduce using rule 54 (valor -> valorNumerico .)
    WHILE           reduce using rule 54 (valor -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 54 (valor -> valorNumerico .)
    SIMBOLO         reduce using rule 54 (valor -> valorNumerico .)
    FLOTANTE        reduce using rule 54 (valor -> valorNumerico .)
    ENTERO          reduce using rule 54 (valor -> valorNumerico .)
    WHEN            reduce using rule 54 (valor -> valorNumerico .)
    DO              reduce using rule 54 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 54 (valor -> valorNumerico .)
    END             reduce using rule 54 (valor -> valorNumerico .)
    ELSE            reduce using rule 54 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 54 (valor -> valorNumerico .)
    DEF             reduce using rule 54 (valor -> valorNumerico .)


state 73

    (55) valor -> VARIABLE .

    COMA            reduce using rule 55 (valor -> VARIABLE .)
    IF              reduce using rule 55 (valor -> VARIABLE .)
    $end            reduce using rule 55 (valor -> VARIABLE .)
    VARIABLE        reduce using rule 55 (valor -> VARIABLE .)
    PRINT           reduce using rule 55 (valor -> VARIABLE .)
    PUTS            reduce using rule 55 (valor -> VARIABLE .)
    PRINTF          reduce using rule 55 (valor -> VARIABLE .)
    GETS            reduce using rule 55 (valor -> VARIABLE .)
    LLAVE_IZ        reduce using rule 55 (valor -> VARIABLE .)
    VARIABLECLASE   reduce using rule 55 (valor -> VARIABLE .)
    WHILE           reduce using rule 55 (valor -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 55 (valor -> VARIABLE .)
    SIMBOLO         reduce using rule 55 (valor -> VARIABLE .)
    FLOTANTE        reduce using rule 55 (valor -> VARIABLE .)
    ENTERO          reduce using rule 55 (valor -> VARIABLE .)
    WHEN            reduce using rule 55 (valor -> VARIABLE .)
    DO              reduce using rule 55 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 55 (valor -> VARIABLE .)
    END             reduce using rule 55 (valor -> VARIABLE .)
    ELSE            reduce using rule 55 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 55 (valor -> VARIABLE .)
    DEF             reduce using rule 55 (valor -> VARIABLE .)


state 74

    (56) valor -> VARIABLECLASE .

    COMA            reduce using rule 56 (valor -> VARIABLECLASE .)
    IF              reduce using rule 56 (valor -> VARIABLECLASE .)
    $end            reduce using rule 56 (valor -> VARIABLECLASE .)
    VARIABLE        reduce using rule 56 (valor -> VARIABLECLASE .)
    PRINT           reduce using rule 56 (valor -> VARIABLECLASE .)
    PUTS            reduce using rule 56 (valor -> VARIABLECLASE .)
    PRINTF          reduce using rule 56 (valor -> VARIABLECLASE .)
    GETS            reduce using rule 56 (valor -> VARIABLECLASE .)
    LLAVE_IZ        reduce using rule 56 (valor -> VARIABLECLASE .)
    VARIABLECLASE   reduce using rule 56 (valor -> VARIABLECLASE .)
    WHILE           reduce using rule 56 (valor -> VARIABLECLASE .)
    PARENTESIS_IZ   reduce using rule 56 (valor -> VARIABLECLASE .)
    SIMBOLO         reduce using rule 56 (valor -> VARIABLECLASE .)
    FLOTANTE        reduce using rule 56 (valor -> VARIABLECLASE .)
    ENTERO          reduce using rule 56 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 56 (valor -> VARIABLECLASE .)
    DO              reduce using rule 56 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 56 (valor -> VARIABLECLASE .)
    END             reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 56 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 56 (valor -> VARIABLECLASE .)
    DEF             reduce using rule 56 (valor -> VARIABLECLASE .)


state 75

    (57) valor -> SIMBOLO .

    COMA            reduce using rule 57 (valor -> SIMBOLO .)
    IF              reduce using rule 57 (valor -> SIMBOLO .)
    $end            reduce using rule 57 (valor -> SIMBOLO .)
    VARIABLE        reduce using rule 57 (valor -> SIMBOLO .)
    PRINT           reduce using rule 57 (valor -> SIMBOLO .)
    PUTS            reduce using rule 57 (valor -> SIMBOLO .)
    PRINTF          reduce using rule 57 (valor -> SIMBOLO .)
    GETS            reduce using rule 57 (valor -> SIMBOLO .)
    LLAVE_IZ        reduce using rule 57 (valor -> SIMBOLO .)
    VARIABLECLASE   reduce using rule 57 (valor -> SIMBOLO .)
    WHILE           reduce using rule 57 (valor -> SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 57 (valor -> SIMBOLO .)
    SIMBOLO         reduce using rule 57 (valor -> SIMBOLO .)
    FLOTANTE        reduce using rule 57 (valor -> SIMBOLO .)
    ENTERO          reduce using rule 57 (valor -> SIMBOLO .)
    WHEN            reduce using rule 57 (valor -> SIMBOLO .)
    DO              reduce using rule 57 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 57 (valor -> SIMBOLO .)
    END             reduce using rule 57 (valor -> SIMBOLO .)
    ELSE            reduce using rule 57 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 57 (valor -> SIMBOLO .)
    DEF             reduce using rule 57 (valor -> SIMBOLO .)


state 76

    (87) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 159


state 77

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (42) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 160
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 78

    (41) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 41 (expresionNumerica -> valorNumerico .)
    VARIABLE        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PRINT           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PUTS            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PRINTF          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    GETS            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    LLAVE_IZ        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IF              reduce using rule 41 (expresionNumerica -> valorNumerico .)
    VARIABLECLASE   reduce using rule 41 (expresionNumerica -> valorNumerico .)
    WHILE           reduce using rule 41 (expresionNumerica -> valorNumerico .)
    PARENTESIS_IZ   reduce using rule 41 (expresionNumerica -> valorNumerico .)
    SIMBOLO         reduce using rule 41 (expresionNumerica -> valorNumerico .)
    FLOTANTE        reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ENTERO          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 41 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 41 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 41 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 41 (expresionNumerica -> valorNumerico .)
    DEF             reduce using rule 41 (expresionNumerica -> valorNumerico .)


state 79

    (44) expresionNumerica -> VARIABLE .

    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 44 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 44 (expresionNumerica -> VARIABLE .)


state 80

    (88) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 161


state 81

    (90) impresion_vacia -> PRINTF PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 162


state 82

    (100) expresiones_booleanas -> valorSimbolo operadoresComparacion . valorSimbolo
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE

    SIMBOLO         shift and go to state 28
    VARIABLE        shift and go to state 164

    valorSimbolo                   shift and go to state 163

state 83

    (101) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (104) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 166
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valorNumerico                  shift and go to state 165

state 84

    (106) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (112) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 168

    funcionesFormatoImpresion      shift and go to state 167

state 85

    (147) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 169


state 86

    (148) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLE        reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINT           reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    PUTS            reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    PRINTF          reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    GETS            reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    LLAVE_IZ        reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    IF              reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    VARIABLECLASE   reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHILE           reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    SIMBOLO         reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    FLOTANTE        reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    ENTERO          reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)
    DEF             reduce using rule 148 (hashes -> LLAVE_IZ LLAVE_DER .)


state 87

    (153) elemento_hash -> claveValor .
    (154) elemento_hash -> claveValor . COMA elemento_hash

    LLAVE_DER       reduce using rule 153 (elemento_hash -> claveValor .)
    COMA            shift and go to state 170


state 88

    (149) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (150) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 171


state 89

    (151) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (152) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 172


state 90

    (124) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (122) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (123) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 173
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 91

    (118) condicionIf -> expresiones_booleanas .
    (120) condicionIf -> expresiones_booleanas . funcionesComparacion condicionIf
    (98) funcionesComparacion -> . Y_SIGNO
    (99) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PRINTF          reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 118 (condicionIf -> expresiones_booleanas .)
    Y_SIGNO         shift and go to state 175
    O_SIGNO         shift and go to state 176

    funcionesComparacion           shift and go to state 174

state 92

    (119) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (121) condicionIf -> EXCLAMACION_BAJO . PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 177


state 93

    (101) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

    operadoresComparacion          shift and go to state 83

state 94

    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 60

state 95

    (107) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> DEF VARIABLE . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 178
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 179
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 96

    (81) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 180


state 97

    (82) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLE        reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINT           reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    PUTS            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    PRINTF          reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    GETS            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    IF              reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHILE           reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    SIMBOLO         reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    FLOTANTE        reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    ENTERO          reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)
    DEF             reduce using rule 82 (array -> CORCHETE_IZ CORCHETE_DER .)


state 98

    (74) elementos_array -> elemento_array . COMA elementos_array
    (75) elementos_array -> elemento_array .

    COMA            shift and go to state 181
    CORCHETE_DER    reduce using rule 75 (elementos_array -> elemento_array .)


state 99

    (76) elemento_array -> CADENA .

    COMA            reduce using rule 76 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 76 (elemento_array -> CADENA .)


state 100

    (77) elemento_array -> ENTERO .

    COMA            reduce using rule 77 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 77 (elemento_array -> ENTERO .)


state 101

    (78) elemento_array -> FLOTANTE .

    COMA            reduce using rule 78 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 78 (elemento_array -> FLOTANTE .)


state 102

    (79) elemento_array -> array .

    COMA            reduce using rule 79 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 79 (elemento_array -> array .)


state 103

    (80) elemento_array -> VARIABLE .

    COMA            reduce using rule 80 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 80 (elemento_array -> VARIABLE .)


state 104

    (140) sentencia_while -> WHILE expresiones_booleanas . DO sentencia_while END
    (141) sentencia_while -> WHILE expresiones_booleanas . DO declaracion END

    DO              shift and go to state 182


state 105

    (142) sentencia_case -> CASE declaraciones . sentencia_when END
    (145) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 49

    sentencia_when                 shift and go to state 183

state 106

    (138) declaraciones -> declaracion .
    (139) declaraciones -> declaracion . declaraciones
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    WHEN            reduce using rule 138 (declaraciones -> declaracion .)
    END             reduce using rule 138 (declaraciones -> declaracion .)
    ELSE            reduce using rule 138 (declaraciones -> declaracion .)
    ELSEIF          reduce using rule 138 (declaraciones -> declaracion .)
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 106
    declaraciones                  shift and go to state 184
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 107

    (127) declaracion -> operacionAritmetica .
    (42) expresionNumerica -> operacionAritmetica .

    VARIABLE        reduce using rule 127 (declaracion -> operacionAritmetica .)
    PRINT           reduce using rule 127 (declaracion -> operacionAritmetica .)
    PUTS            reduce using rule 127 (declaracion -> operacionAritmetica .)
    PRINTF          reduce using rule 127 (declaracion -> operacionAritmetica .)
    GETS            reduce using rule 127 (declaracion -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 127 (declaracion -> operacionAritmetica .)
    IF              reduce using rule 127 (declaracion -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 127 (declaracion -> operacionAritmetica .)
    WHILE           reduce using rule 127 (declaracion -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 127 (declaracion -> operacionAritmetica .)
    SIMBOLO         reduce using rule 127 (declaracion -> operacionAritmetica .)
    FLOTANTE        reduce using rule 127 (declaracion -> operacionAritmetica .)
    ENTERO          reduce using rule 127 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 127 (declaracion -> operacionAritmetica .)
    DO              reduce using rule 127 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 127 (declaracion -> operacionAritmetica .)
    END             reduce using rule 127 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 127 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 127 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 127 (declaracion -> operacionAritmetica .)
    DEF             reduce using rule 127 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 108

    (128) declaracion -> asignacion .

    VARIABLE        reduce using rule 128 (declaracion -> asignacion .)
    PRINT           reduce using rule 128 (declaracion -> asignacion .)
    PUTS            reduce using rule 128 (declaracion -> asignacion .)
    PRINTF          reduce using rule 128 (declaracion -> asignacion .)
    GETS            reduce using rule 128 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 128 (declaracion -> asignacion .)
    IF              reduce using rule 128 (declaracion -> asignacion .)
    VARIABLECLASE   reduce using rule 128 (declaracion -> asignacion .)
    WHILE           reduce using rule 128 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 128 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 128 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 128 (declaracion -> asignacion .)
    ENTERO          reduce using rule 128 (declaracion -> asignacion .)
    WHEN            reduce using rule 128 (declaracion -> asignacion .)
    DO              reduce using rule 128 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 128 (declaracion -> asignacion .)
    END             reduce using rule 128 (declaracion -> asignacion .)
    ELSE            reduce using rule 128 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 128 (declaracion -> asignacion .)
    $end            reduce using rule 128 (declaracion -> asignacion .)


state 109

    (129) declaracion -> impresion .

    VARIABLE        reduce using rule 129 (declaracion -> impresion .)
    PRINT           reduce using rule 129 (declaracion -> impresion .)
    PUTS            reduce using rule 129 (declaracion -> impresion .)
    PRINTF          reduce using rule 129 (declaracion -> impresion .)
    GETS            reduce using rule 129 (declaracion -> impresion .)
    LLAVE_IZ        reduce using rule 129 (declaracion -> impresion .)
    IF              reduce using rule 129 (declaracion -> impresion .)
    VARIABLECLASE   reduce using rule 129 (declaracion -> impresion .)
    WHILE           reduce using rule 129 (declaracion -> impresion .)
    PARENTESIS_IZ   reduce using rule 129 (declaracion -> impresion .)
    SIMBOLO         reduce using rule 129 (declaracion -> impresion .)
    FLOTANTE        reduce using rule 129 (declaracion -> impresion .)
    ENTERO          reduce using rule 129 (declaracion -> impresion .)
    WHEN            reduce using rule 129 (declaracion -> impresion .)
    DO              reduce using rule 129 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 129 (declaracion -> impresion .)
    END             reduce using rule 129 (declaracion -> impresion .)
    ELSE            reduce using rule 129 (declaracion -> impresion .)
    ELSEIF          reduce using rule 129 (declaracion -> impresion .)
    $end            reduce using rule 129 (declaracion -> impresion .)
    DEF             reduce using rule 129 (declaracion -> impresion .)


state 110

    (130) declaracion -> impresion_vacia .

    VARIABLE        reduce using rule 130 (declaracion -> impresion_vacia .)
    PRINT           reduce using rule 130 (declaracion -> impresion_vacia .)
    PUTS            reduce using rule 130 (declaracion -> impresion_vacia .)
    PRINTF          reduce using rule 130 (declaracion -> impresion_vacia .)
    GETS            reduce using rule 130 (declaracion -> impresion_vacia .)
    LLAVE_IZ        reduce using rule 130 (declaracion -> impresion_vacia .)
    IF              reduce using rule 130 (declaracion -> impresion_vacia .)
    VARIABLECLASE   reduce using rule 130 (declaracion -> impresion_vacia .)
    WHILE           reduce using rule 130 (declaracion -> impresion_vacia .)
    PARENTESIS_IZ   reduce using rule 130 (declaracion -> impresion_vacia .)
    SIMBOLO         reduce using rule 130 (declaracion -> impresion_vacia .)
    FLOTANTE        reduce using rule 130 (declaracion -> impresion_vacia .)
    ENTERO          reduce using rule 130 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 130 (declaracion -> impresion_vacia .)
    DO              reduce using rule 130 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 130 (declaracion -> impresion_vacia .)
    END             reduce using rule 130 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 130 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 130 (declaracion -> impresion_vacia .)
    $end            reduce using rule 130 (declaracion -> impresion_vacia .)
    DEF             reduce using rule 130 (declaracion -> impresion_vacia .)


state 111

    (131) declaracion -> expresiones_booleanas .

    VARIABLE        reduce using rule 131 (declaracion -> expresiones_booleanas .)
    PRINT           reduce using rule 131 (declaracion -> expresiones_booleanas .)
    PUTS            reduce using rule 131 (declaracion -> expresiones_booleanas .)
    PRINTF          reduce using rule 131 (declaracion -> expresiones_booleanas .)
    GETS            reduce using rule 131 (declaracion -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 131 (declaracion -> expresiones_booleanas .)
    IF              reduce using rule 131 (declaracion -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 131 (declaracion -> expresiones_booleanas .)
    WHILE           reduce using rule 131 (declaracion -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 131 (declaracion -> expresiones_booleanas .)
    SIMBOLO         reduce using rule 131 (declaracion -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 131 (declaracion -> expresiones_booleanas .)
    ENTERO          reduce using rule 131 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 131 (declaracion -> expresiones_booleanas .)
    DO              reduce using rule 131 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 131 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 131 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 131 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 131 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 131 (declaracion -> expresiones_booleanas .)
    DEF             reduce using rule 131 (declaracion -> expresiones_booleanas .)


state 112

    (132) declaracion -> solicitudDatosTeclado .

    VARIABLE        reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    PRINT           reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    PUTS            reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    PRINTF          reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    GETS            reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    IF              reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    WHILE           reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    ENTERO          reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    DO              reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 132 (declaracion -> solicitudDatosTeclado .)
    DEF             reduce using rule 132 (declaracion -> solicitudDatosTeclado .)


state 113

    (133) declaracion -> hashes .

    VARIABLE        reduce using rule 133 (declaracion -> hashes .)
    PRINT           reduce using rule 133 (declaracion -> hashes .)
    PUTS            reduce using rule 133 (declaracion -> hashes .)
    PRINTF          reduce using rule 133 (declaracion -> hashes .)
    GETS            reduce using rule 133 (declaracion -> hashes .)
    LLAVE_IZ        reduce using rule 133 (declaracion -> hashes .)
    IF              reduce using rule 133 (declaracion -> hashes .)
    VARIABLECLASE   reduce using rule 133 (declaracion -> hashes .)
    WHILE           reduce using rule 133 (declaracion -> hashes .)
    PARENTESIS_IZ   reduce using rule 133 (declaracion -> hashes .)
    SIMBOLO         reduce using rule 133 (declaracion -> hashes .)
    FLOTANTE        reduce using rule 133 (declaracion -> hashes .)
    ENTERO          reduce using rule 133 (declaracion -> hashes .)
    WHEN            reduce using rule 133 (declaracion -> hashes .)
    DO              reduce using rule 133 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 133 (declaracion -> hashes .)
    END             reduce using rule 133 (declaracion -> hashes .)
    ELSE            reduce using rule 133 (declaracion -> hashes .)
    ELSEIF          reduce using rule 133 (declaracion -> hashes .)
    $end            reduce using rule 133 (declaracion -> hashes .)
    DEF             reduce using rule 133 (declaracion -> hashes .)


state 114

    (134) declaracion -> estructura_if .

    VARIABLE        reduce using rule 134 (declaracion -> estructura_if .)
    PRINT           reduce using rule 134 (declaracion -> estructura_if .)
    PUTS            reduce using rule 134 (declaracion -> estructura_if .)
    PRINTF          reduce using rule 134 (declaracion -> estructura_if .)
    GETS            reduce using rule 134 (declaracion -> estructura_if .)
    LLAVE_IZ        reduce using rule 134 (declaracion -> estructura_if .)
    IF              reduce using rule 134 (declaracion -> estructura_if .)
    VARIABLECLASE   reduce using rule 134 (declaracion -> estructura_if .)
    WHILE           reduce using rule 134 (declaracion -> estructura_if .)
    PARENTESIS_IZ   reduce using rule 134 (declaracion -> estructura_if .)
    SIMBOLO         reduce using rule 134 (declaracion -> estructura_if .)
    FLOTANTE        reduce using rule 134 (declaracion -> estructura_if .)
    ENTERO          reduce using rule 134 (declaracion -> estructura_if .)
    WHEN            reduce using rule 134 (declaracion -> estructura_if .)
    DO              reduce using rule 134 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 134 (declaracion -> estructura_if .)
    END             reduce using rule 134 (declaracion -> estructura_if .)
    ELSE            reduce using rule 134 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 134 (declaracion -> estructura_if .)
    $end            reduce using rule 134 (declaracion -> estructura_if .)
    DEF             reduce using rule 134 (declaracion -> estructura_if .)


state 115

    (135) declaracion -> asignacion_clase .

    VARIABLE        reduce using rule 135 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 135 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 135 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 135 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 135 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> asignacion_clase .)
    IF              reduce using rule 135 (declaracion -> asignacion_clase .)
    VARIABLECLASE   reduce using rule 135 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 135 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 135 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 135 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 135 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 135 (declaracion -> asignacion_clase .)
    DO              reduce using rule 135 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 135 (declaracion -> asignacion_clase .)
    END             reduce using rule 135 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 135 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 135 (declaracion -> asignacion_clase .)
    $end            reduce using rule 135 (declaracion -> asignacion_clase .)


state 116

    (136) declaracion -> sentencia_while .

    VARIABLE        reduce using rule 136 (declaracion -> sentencia_while .)
    PRINT           reduce using rule 136 (declaracion -> sentencia_while .)
    PUTS            reduce using rule 136 (declaracion -> sentencia_while .)
    PRINTF          reduce using rule 136 (declaracion -> sentencia_while .)
    GETS            reduce using rule 136 (declaracion -> sentencia_while .)
    LLAVE_IZ        reduce using rule 136 (declaracion -> sentencia_while .)
    IF              reduce using rule 136 (declaracion -> sentencia_while .)
    VARIABLECLASE   reduce using rule 136 (declaracion -> sentencia_while .)
    WHILE           reduce using rule 136 (declaracion -> sentencia_while .)
    PARENTESIS_IZ   reduce using rule 136 (declaracion -> sentencia_while .)
    SIMBOLO         reduce using rule 136 (declaracion -> sentencia_while .)
    FLOTANTE        reduce using rule 136 (declaracion -> sentencia_while .)
    ENTERO          reduce using rule 136 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 136 (declaracion -> sentencia_while .)
    DO              reduce using rule 136 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 136 (declaracion -> sentencia_while .)
    END             reduce using rule 136 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 136 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 136 (declaracion -> sentencia_while .)
    $end            reduce using rule 136 (declaracion -> sentencia_while .)
    DEF             reduce using rule 136 (declaracion -> sentencia_while .)


state 117

    (137) declaracion -> estructura_ifUnaLinea .

    VARIABLE        reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    PRINT           reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    PUTS            reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    PRINTF          reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    GETS            reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    IF              reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    WHILE           reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    ENTERO          reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    DO              reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)
    DEF             reduce using rule 137 (declaracion -> estructura_ifUnaLinea .)


state 118

    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (72) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (73) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 185
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 60

state 119

    (122) estructura_if -> IF . condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> IF . condicionIf declaraciones estructura_secundaria_if
    (124) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    condicionIf                    shift and go to state 186
    expresiones_booleanas          shift and go to state 91
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 120

    (59) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (60) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (62) asignacion_clase -> VARIABLECLASE . IGUAL array
    (63) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 187


state 121

    (144) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 144 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 144 (sentencias_when -> sentencia_when sentencias_when .)


state 122

    (146) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 188


state 123

    (160) definicion_clase -> encabezadoClase cuerpoVariables . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    DEF             shift and go to state 189


state 124

    (161) cuerpoVariables -> asignacion_clase .
    (163) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    PRINT           reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    PUTS            reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    PRINTF          reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    GETS            reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    IF              reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    WHILE           reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    SIMBOLO         reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    FLOTANTE        reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    ENTERO          reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    END             reduce using rule 161 (cuerpoVariables -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 126

  ! VARIABLECLASE   [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 124
    cuerpoVariables                shift and go to state 190
    asignacion                     shift and go to state 125

state 125

    (162) cuerpoVariables -> asignacion .
    (164) cuerpoVariables -> asignacion . cuerpoVariables
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 162 (cuerpoVariables -> asignacion .)
    PRINT           reduce using rule 162 (cuerpoVariables -> asignacion .)
    PUTS            reduce using rule 162 (cuerpoVariables -> asignacion .)
    PRINTF          reduce using rule 162 (cuerpoVariables -> asignacion .)
    GETS            reduce using rule 162 (cuerpoVariables -> asignacion .)
    LLAVE_IZ        reduce using rule 162 (cuerpoVariables -> asignacion .)
    IF              reduce using rule 162 (cuerpoVariables -> asignacion .)
    WHILE           reduce using rule 162 (cuerpoVariables -> asignacion .)
    PARENTESIS_IZ   reduce using rule 162 (cuerpoVariables -> asignacion .)
    SIMBOLO         reduce using rule 162 (cuerpoVariables -> asignacion .)
    FLOTANTE        reduce using rule 162 (cuerpoVariables -> asignacion .)
    ENTERO          reduce using rule 162 (cuerpoVariables -> asignacion .)
    END             reduce using rule 162 (cuerpoVariables -> asignacion .)
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 126

  ! VARIABLECLASE   [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]

    asignacion                     shift and go to state 125
    cuerpoVariables                shift and go to state 191
    asignacion_clase               shift and go to state 124

state 126

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (72) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (73) asignacion -> VARIABLE . IGUAL entero_a_flotante

    IGUAL           shift and go to state 192


state 127

    (29) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 193

state 128

    (145) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 194


state 129

    (158) encabezadoClase -> CLASS ID_CLASE .
    (159) encabezadoClase -> CLASS ID_CLASE . MENOR_QUE ID_CLASE

    VARIABLECLASE   reduce using rule 158 (encabezadoClase -> CLASS ID_CLASE .)
    VARIABLE        reduce using rule 158 (encabezadoClase -> CLASS ID_CLASE .)
    MENOR_QUE       shift and go to state 195


state 130

    (45) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    VARIABLE        reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINT           reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PUTS            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PRINTF          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    GETS            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    LLAVE_IZ        reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IF              reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    VARIABLECLASE   reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHILE           reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    SIMBOLO         reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    FLOTANTE        reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ENTERO          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DEF             reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    DIVISION        shift and go to state 54
    MULTIPLICACION  shift and go to state 55
    EXPONENCIACION  shift and go to state 56
    MODULO          shift and go to state 57

  ! MAS             [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 45 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 51

state 131

    (42) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    VARIABLE        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PRINT           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PUTS            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PRINTF          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    GETS            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    LLAVE_IZ        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    IF              reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    VARIABLECLASE   reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    WHILE           reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_IZ   reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    SIMBOLO         reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    FLOTANTE        reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ENTERO          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 42 (expresionNumerica -> operacionAritmetica .)
    DEF             reduce using rule 42 (expresionNumerica -> operacionAritmetica .)


state 132

    (30) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLE        reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINT           reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PUTS            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PRINTF          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    GETS            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IF              reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHILE           reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ENTERO          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DEF             reduce using rule 30 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 133

    (28) valorCadena -> VARIABLE .

    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)
    $end            reduce using rule 28 (valorCadena -> VARIABLE .)
    END             reduce using rule 28 (valorCadena -> VARIABLE .)
    VARIABLE        reduce using rule 28 (valorCadena -> VARIABLE .)
    PRINT           reduce using rule 28 (valorCadena -> VARIABLE .)
    PUTS            reduce using rule 28 (valorCadena -> VARIABLE .)
    PRINTF          reduce using rule 28 (valorCadena -> VARIABLE .)
    GETS            reduce using rule 28 (valorCadena -> VARIABLE .)
    LLAVE_IZ        reduce using rule 28 (valorCadena -> VARIABLE .)
    IF              reduce using rule 28 (valorCadena -> VARIABLE .)
    VARIABLECLASE   reduce using rule 28 (valorCadena -> VARIABLE .)
    WHILE           reduce using rule 28 (valorCadena -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 28 (valorCadena -> VARIABLE .)
    SIMBOLO         reduce using rule 28 (valorCadena -> VARIABLE .)
    FLOTANTE        reduce using rule 28 (valorCadena -> VARIABLE .)
    ENTERO          reduce using rule 28 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 28 (valorCadena -> VARIABLE .)
    DO              reduce using rule 28 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 28 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 28 (valorCadena -> VARIABLE .)
    DEF             reduce using rule 28 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 28 (valorCadena -> VARIABLE .)


state 134

    (44) expresionNumerica -> VARIABLE .
    (34) entero_a_flotante -> VARIABLE . PUNTO TO_F
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 44 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 196
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]


state 135

    (65) asignacion -> VARIABLE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    $end            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLE        reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINT           reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    PUTS            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    PRINTF          reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    GETS            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    IF              reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    WHILE           reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    SIMBOLO         reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    FLOTANTE        reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ENTERO          reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    DEF             reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 65 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 136

    (66) asignacion -> VARIABLE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    $end            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLE        reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINT           reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PUTS            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    GETS            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IF              reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHILE           reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DEF             reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 66 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    DIVISION        shift and go to state 54
    MULTIPLICACION  shift and go to state 55
    EXPONENCIACION  shift and go to state 56
    MODULO          shift and go to state 57

    operadores                     shift and go to state 51

state 137

    (67) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLE        reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    PRINT           reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    PUTS            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    PRINTF          reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    GETS            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    IF              reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    WHILE           reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    SIMBOLO         reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    FLOTANTE        reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ENTERO          reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    DEF             reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 67 (asignacion -> VARIABLE IGUAL hashes .)


state 138

    (68) asignacion -> VARIABLE IGUAL SIMBOLO .

    $end            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLE        reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINT           reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PUTS            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PRINTF          reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    GETS            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    LLAVE_IZ        reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IF              reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    VARIABLECLASE   reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHILE           reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    PARENTESIS_IZ   reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    SIMBOLO         reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    FLOTANTE        reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ENTERO          reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    WHEN            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DO              reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    DEF             reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    END             reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSE            reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)
    ELSEIF          reduce using rule 68 (asignacion -> VARIABLE IGUAL SIMBOLO .)


state 139

    (69) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    VARIABLE        reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    PRINT           reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    PUTS            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    PRINTF          reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    GETS            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    LLAVE_IZ        reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    IF              reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    VARIABLECLASE   reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    WHILE           reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    SIMBOLO         reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    FLOTANTE        reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ENTERO          reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    DEF             reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 69 (asignacion -> VARIABLE IGUAL array .)


state 140

    (70) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLE        reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINT           reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PUTS            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    GETS            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IF              reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHILE           reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DEF             reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 70 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 141

    (71) asignacion -> VARIABLE IGUAL booleanos .

    $end            reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .)


state 142

    (72) asignacion -> VARIABLE IGUAL solicitudDatosTeclado .

    $end            reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLE        reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINT           reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PUTS            reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PRINTF          reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    GETS            reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    LLAVE_IZ        reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IF              reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    VARIABLECLASE   reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHILE           reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    PARENTESIS_IZ   reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    SIMBOLO         reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    FLOTANTE        reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ENTERO          reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    WHEN            reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DO              reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    DEF             reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    END             reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSE            reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)
    ELSEIF          reduce using rule 72 (asignacion -> VARIABLE IGUAL solicitudDatosTeclado .)


state 143

    (73) asignacion -> VARIABLE IGUAL entero_a_flotante .

    $end            reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLE        reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINT           reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PUTS            reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PRINTF          reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    GETS            reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    LLAVE_IZ        reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IF              reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    VARIABLECLASE   reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHILE           reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    PARENTESIS_IZ   reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    SIMBOLO         reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    FLOTANTE        reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ENTERO          reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    WHEN            reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DO              reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    DEF             reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    IGUAL_DOBLEP    reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    END             reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSE            reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)
    ELSEIF          reduce using rule 73 (asignacion -> VARIABLE IGUAL entero_a_flotante .)


state 144

    (51) booleanos -> TRUE .

    $end            reduce using rule 51 (booleanos -> TRUE .)
    END             reduce using rule 51 (booleanos -> TRUE .)
    VARIABLE        reduce using rule 51 (booleanos -> TRUE .)
    PRINT           reduce using rule 51 (booleanos -> TRUE .)
    PUTS            reduce using rule 51 (booleanos -> TRUE .)
    PRINTF          reduce using rule 51 (booleanos -> TRUE .)
    GETS            reduce using rule 51 (booleanos -> TRUE .)
    LLAVE_IZ        reduce using rule 51 (booleanos -> TRUE .)
    IF              reduce using rule 51 (booleanos -> TRUE .)
    VARIABLECLASE   reduce using rule 51 (booleanos -> TRUE .)
    WHILE           reduce using rule 51 (booleanos -> TRUE .)
    PARENTESIS_IZ   reduce using rule 51 (booleanos -> TRUE .)
    SIMBOLO         reduce using rule 51 (booleanos -> TRUE .)
    FLOTANTE        reduce using rule 51 (booleanos -> TRUE .)
    ENTERO          reduce using rule 51 (booleanos -> TRUE .)
    WHEN            reduce using rule 51 (booleanos -> TRUE .)
    DO              reduce using rule 51 (booleanos -> TRUE .)
    IGUAL_DOBLEP    reduce using rule 51 (booleanos -> TRUE .)
    ELSE            reduce using rule 51 (booleanos -> TRUE .)
    ELSEIF          reduce using rule 51 (booleanos -> TRUE .)
    DEF             reduce using rule 51 (booleanos -> TRUE .)


state 145

    (52) booleanos -> FALSE .

    $end            reduce using rule 52 (booleanos -> FALSE .)
    END             reduce using rule 52 (booleanos -> FALSE .)
    VARIABLE        reduce using rule 52 (booleanos -> FALSE .)
    PRINT           reduce using rule 52 (booleanos -> FALSE .)
    PUTS            reduce using rule 52 (booleanos -> FALSE .)
    PRINTF          reduce using rule 52 (booleanos -> FALSE .)
    GETS            reduce using rule 52 (booleanos -> FALSE .)
    LLAVE_IZ        reduce using rule 52 (booleanos -> FALSE .)
    IF              reduce using rule 52 (booleanos -> FALSE .)
    VARIABLECLASE   reduce using rule 52 (booleanos -> FALSE .)
    WHILE           reduce using rule 52 (booleanos -> FALSE .)
    PARENTESIS_IZ   reduce using rule 52 (booleanos -> FALSE .)
    SIMBOLO         reduce using rule 52 (booleanos -> FALSE .)
    FLOTANTE        reduce using rule 52 (booleanos -> FALSE .)
    ENTERO          reduce using rule 52 (booleanos -> FALSE .)
    WHEN            reduce using rule 52 (booleanos -> FALSE .)
    DO              reduce using rule 52 (booleanos -> FALSE .)
    IGUAL_DOBLEP    reduce using rule 52 (booleanos -> FALSE .)
    ELSE            reduce using rule 52 (booleanos -> FALSE .)
    ELSEIF          reduce using rule 52 (booleanos -> FALSE .)
    DEF             reduce using rule 52 (booleanos -> FALSE .)


state 146

    (102) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DEF             reduce using rule 102 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 147

    (103) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DEF             reduce using rule 103 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 148

    (114) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 114 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 149

    (115) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 115 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 115 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 150

    (83) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 197


state 151

    (155) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 198


state 152

    (34) entero_a_flotante -> VARIABLE PUNTO TO_F .
    (113) funcionesNumeros -> TO_F .

  ! reduce/reduce conflict for $end resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
  ! reduce/reduce conflict for END resolved using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    $end            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)

  ! $end            [ reduce using rule 113 (funcionesNumeros -> TO_F .) ]
  ! END             [ reduce using rule 113 (funcionesNumeros -> TO_F .) ]


state 153

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 199


state 154

    (110) funcionesArray -> SORT .

    $end            reduce using rule 110 (funcionesArray -> SORT .)
    END             reduce using rule 110 (funcionesArray -> SORT .)


state 155

    (111) funcionesArray -> FOR . EACH

    EACH            shift and go to state 200


state 156

    (49) valores -> valor COMA . valores
    (48) valores -> . valor
    (49) valores -> . valor COMA valores
    (50) valores -> . valor estructura_ifUnaLinea
    (53) valor -> . CADENA
    (54) valor -> . valorNumerico
    (55) valor -> . VARIABLE
    (56) valor -> . VARIABLECLASE
    (57) valor -> . SIMBOLO
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 71
    VARIABLE        shift and go to state 73
    VARIABLECLASE   shift and go to state 74
    SIMBOLO         shift and go to state 75
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valor                          shift and go to state 70
    valores                        shift and go to state 201
    valorNumerico                  shift and go to state 72

state 157

    (50) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    VARIABLE        reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    PRINT           reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    PUTS            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    PRINTF          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    GETS            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    LLAVE_IZ        reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    IF              reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    VARIABLECLASE   reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    WHILE           reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    PARENTESIS_IZ   reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    SIMBOLO         reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    FLOTANTE        reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ENTERO          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)
    DEF             reduce using rule 50 (valores -> valor estructura_ifUnaLinea .)


state 158

    (124) estructura_ifUnaLinea -> IF . condicionIf declaraciones END
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    condicionIf                    shift and go to state 202
    expresiones_booleanas          shift and go to state 91
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 159

    (87) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLE        reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 87 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 160

    (43) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLE        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINT           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PUTS            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PRINTF          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    GETS            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IF              reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHILE           reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    SIMBOLO         reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    FLOTANTE        reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ENTERO          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DEF             reduce using rule 43 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 161

    (88) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLE        reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 88 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 162

    (90) impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLE        reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINT           reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PUTS            reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PRINTF          reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    GETS            reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IF              reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHILE           reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    SIMBOLO         reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    FLOTANTE        reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ENTERO          reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)
    DEF             reduce using rule 90 (impresion_vacia -> PRINTF PARENTESIS_IZ PARENTESIS_DER .)


state 163

    (100) expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .

    $end            reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    Y_SIGNO         reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    O_SIGNO         reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLE        reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINT           reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PUTS            reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PRINTF          reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    GETS            reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    LLAVE_IZ        reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IF              reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    VARIABLECLASE   reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHILE           reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_IZ   reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    SIMBOLO         reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    FLOTANTE        reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ENTERO          reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DO              reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    WHEN            reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    IGUAL_DOBLEP    reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    END             reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSE            reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    ELSEIF          reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    PARENTESIS_DER  reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)
    DEF             reduce using rule 100 (expresiones_booleanas -> valorSimbolo operadoresComparacion valorSimbolo .)


state 164

    (23) valorSimbolo -> VARIABLE .

    $end            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    Y_SIGNO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    O_SIGNO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PRINT           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PUTS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PRINTF          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    GETS            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    LLAVE_IZ        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IF              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    VARIABLECLASE   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHILE           reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 23 (valorSimbolo -> VARIABLE .)
    SIMBOLO         reduce using rule 23 (valorSimbolo -> VARIABLE .)
    FLOTANTE        reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ENTERO          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    DO              reduce using rule 23 (valorSimbolo -> VARIABLE .)
    WHEN            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 23 (valorSimbolo -> VARIABLE .)
    END             reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSE            reduce using rule 23 (valorSimbolo -> VARIABLE .)
    ELSEIF          reduce using rule 23 (valorSimbolo -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 23 (valorSimbolo -> VARIABLE .)
    DEF             reduce using rule 23 (valorSimbolo -> VARIABLE .)


state 165

    (101) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    Y_SIGNO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    O_SIGNO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINTF          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    SIMBOLO         reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_DER  reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DEF             reduce using rule 101 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 166

    (104) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    Y_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    O_SIGNO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINTF          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    SIMBOLO         reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_DER  reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DEF             reduce using rule 104 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 167

    (106) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLE        reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINT           reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PUTS            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PRINTF          reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    GETS            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    LLAVE_IZ        reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IF              reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    VARIABLECLASE   reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHILE           reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    PARENTESIS_IZ   reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    SIMBOLO         reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    FLOTANTE        reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ENTERO          reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DEF             reduce using rule 106 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 168

    (112) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLE        reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    PRINT           reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    PUTS            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    PRINTF          reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    GETS            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    LLAVE_IZ        reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    IF              reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    VARIABLECLASE   reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    WHILE           reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    PARENTESIS_IZ   reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    SIMBOLO         reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    FLOTANTE        reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    ENTERO          reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)
    DEF             reduce using rule 112 (funcionesFormatoImpresion -> CHOMP .)


state 169

    (147) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLE        reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINT           reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PUTS            reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PRINTF          reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    GETS            reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    LLAVE_IZ        reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IF              reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    VARIABLECLASE   reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHILE           reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    PARENTESIS_IZ   reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    SIMBOLO         reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    FLOTANTE        reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ENTERO          reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DEF             reduce using rule 147 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 170

    (154) elemento_hash -> claveValor COMA . elemento_hash
    (153) elemento_hash -> . claveValor
    (154) elemento_hash -> . claveValor COMA elemento_hash
    (149) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (150) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (151) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (152) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 88
    CADENA          shift and go to state 89

    claveValor                     shift and go to state 87
    elemento_hash                  shift and go to state 203

state 171

    (149) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (150) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 205
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valorNumerico                  shift and go to state 204

state 172

    (151) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (152) claveValor -> CADENA ASIGNA_HASH . CADENA
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    CADENA          shift and go to state 206
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    valorNumerico                  shift and go to state 207

state 173

    (124) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (122) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (123) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (125) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    END             shift and go to state 208
    ELSE            shift and go to state 209
    ELSEIF          shift and go to state 211

    estructura_secundaria_if       shift and go to state 210

state 174

    (120) condicionIf -> expresiones_booleanas funcionesComparacion . condicionIf
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresiones_booleanas          shift and go to state 91
    condicionIf                    shift and go to state 212
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 175

    (98) funcionesComparacion -> Y_SIGNO .

    EXCLAMACION_BAJO reduce using rule 98 (funcionesComparacion -> Y_SIGNO .)
    VARIABLE        reduce using rule 98 (funcionesComparacion -> Y_SIGNO .)
    SIMBOLO         reduce using rule 98 (funcionesComparacion -> Y_SIGNO .)
    FLOTANTE        reduce using rule 98 (funcionesComparacion -> Y_SIGNO .)
    ENTERO          reduce using rule 98 (funcionesComparacion -> Y_SIGNO .)


state 176

    (99) funcionesComparacion -> O_SIGNO .

    EXCLAMACION_BAJO reduce using rule 99 (funcionesComparacion -> O_SIGNO .)
    VARIABLE        reduce using rule 99 (funcionesComparacion -> O_SIGNO .)
    SIMBOLO         reduce using rule 99 (funcionesComparacion -> O_SIGNO .)
    FLOTANTE        reduce using rule 99 (funcionesComparacion -> O_SIGNO .)
    ENTERO          reduce using rule 99 (funcionesComparacion -> O_SIGNO .)


state 177

    (119) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (121) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ . expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresiones_booleanas          shift and go to state 213
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 178

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaraciones END
    (108) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaraciones END
    (43) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    PARENTESIS_DER  shift and go to state 215
    VARIABLE        shift and go to state 214
    PARENTESIS_IZ   shift and go to state 31
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    argumentos                     shift and go to state 216
    operacionAritmetica            shift and go to state 77
    expresionNumerica              shift and go to state 23
    valorNumerico                  shift and go to state 78

state 179

    (109) funciones -> DEF VARIABLE declaraciones . END

    END             shift and go to state 217


state 180

    (81) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLE        reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINT           reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PUTS            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PRINTF          reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    GETS            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    LLAVE_IZ        reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IF              reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    VARIABLECLASE   reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHILE           reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    PARENTESIS_IZ   reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    SIMBOLO         reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    FLOTANTE        reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ENTERO          reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DEF             reduce using rule 81 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 181

    (74) elementos_array -> elemento_array COMA . elementos_array
    (74) elementos_array -> . elemento_array COMA elementos_array
    (75) elementos_array -> . elemento_array
    (76) elemento_array -> . CADENA
    (77) elemento_array -> . ENTERO
    (78) elemento_array -> . FLOTANTE
    (79) elemento_array -> . array
    (80) elemento_array -> . VARIABLE
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 99
    ENTERO          shift and go to state 100
    FLOTANTE        shift and go to state 101
    VARIABLE        shift and go to state 103
    CORCHETE_IZ     shift and go to state 40

    elemento_array                 shift and go to state 98
    elementos_array                shift and go to state 218
    array                          shift and go to state 102

state 182

    (140) sentencia_while -> WHILE expresiones_booleanas DO . sentencia_while END
    (141) sentencia_while -> WHILE expresiones_booleanas DO . declaracion END
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    WHILE           shift and go to state 41
    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresiones_booleanas          shift and go to state 111
    sentencia_while                shift and go to state 219
    declaracion                    shift and go to state 220
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 183

    (142) sentencia_case -> CASE declaraciones sentencia_when . END

    END             shift and go to state 221


state 184

    (139) declaraciones -> declaracion declaraciones .

    WHEN            reduce using rule 139 (declaraciones -> declaracion declaraciones .)
    END             reduce using rule 139 (declaraciones -> declaracion declaraciones .)
    ELSE            reduce using rule 139 (declaraciones -> declaracion declaraciones .)
    ELSEIF          reduce using rule 139 (declaraciones -> declaracion declaraciones .)


state 185

    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (72) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (73) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 37
    CORCHETE_IZ     shift and go to state 40
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    GETS            shift and go to state 36
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    booleanos                      shift and go to state 222
    solicitudDatosTeclado          shift and go to state 142
    entero_a_flotante              shift and go to state 143
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 46

state 186

    (122) estructura_if -> IF condicionIf . declaraciones ELSE declaraciones END
    (123) estructura_if -> IF condicionIf . declaraciones estructura_secundaria_if
    (124) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 223
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 187

    (59) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (60) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (61) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (62) asignacion_clase -> VARIABLECLASE IGUAL . array
    (63) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 224
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 229
    LLAVE_IZ        shift and go to state 37
    CORCHETE_IZ     shift and go to state 40
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresionNumerica              shift and go to state 225
    hashes                         shift and go to state 226
    array                          shift and go to state 227
    input_concatenacion            shift and go to state 228
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 46

state 188

    (146) sentencia_until -> UNTIL declaracion DO . declaracion END
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 230
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 189

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    INITIALIZE      shift and go to state 231


state 190

    (163) cuerpoVariables -> asignacion_clase cuerpoVariables .

    DEF             reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLECLASE   reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    VARIABLE        reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINT           reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PUTS            reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PRINTF          reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    GETS            reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    LLAVE_IZ        reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    IF              reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    WHILE           reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    SIMBOLO         reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    FLOTANTE        reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    ENTERO          reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)
    END             reduce using rule 163 (cuerpoVariables -> asignacion_clase cuerpoVariables .)


state 191

    (164) cuerpoVariables -> asignacion cuerpoVariables .

    DEF             reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLECLASE   reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    VARIABLE        reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINT           reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    PUTS            reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    PRINTF          reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    GETS            reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    LLAVE_IZ        reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    IF              reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    WHILE           reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    SIMBOLO         reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    FLOTANTE        reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    ENTERO          reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)
    END             reduce using rule 164 (cuerpoVariables -> asignacion cuerpoVariables .)


state 192

    (64) asignacion_clase -> VARIABLE IGUAL . booleanos
    (65) asignacion -> VARIABLE IGUAL . CADENA
    (66) asignacion -> VARIABLE IGUAL . expresionNumerica
    (67) asignacion -> VARIABLE IGUAL . hashes
    (68) asignacion -> VARIABLE IGUAL . SIMBOLO
    (69) asignacion -> VARIABLE IGUAL . array
    (70) asignacion -> VARIABLE IGUAL . input_concatenacion
    (71) asignacion -> VARIABLE IGUAL . booleanos
    (72) asignacion -> VARIABLE IGUAL . solicitudDatosTeclado
    (73) asignacion -> VARIABLE IGUAL . entero_a_flotante
    (51) booleanos -> . TRUE
    (52) booleanos -> . FALSE
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 135
    SIMBOLO         shift and go to state 138
    TRUE            shift and go to state 144
    FALSE           shift and go to state 145
    PARENTESIS_IZ   shift and go to state 31
    VARIABLE        shift and go to state 134
    LLAVE_IZ        shift and go to state 37
    CORCHETE_IZ     shift and go to state 40
    GETS            shift and go to state 36
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    booleanos                      shift and go to state 232
    expresionNumerica              shift and go to state 136
    hashes                         shift and go to state 137
    array                          shift and go to state 139
    input_concatenacion            shift and go to state 140
    solicitudDatosTeclado          shift and go to state 142
    entero_a_flotante              shift and go to state 143
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 131
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valorCadena                    shift and go to state 46

state 193

    (29) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLE        reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINT           reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PUTS            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PRINTF          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    GETS            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    LLAVE_IZ        reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IF              reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    VARIABLECLASE   reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHILE           reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    PARENTESIS_IZ   reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    SIMBOLO         reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    FLOTANTE        reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ENTERO          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DEF             reduce using rule 29 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 194

    (145) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 233
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 195

    (159) encabezadoClase -> CLASS ID_CLASE MENOR_QUE . ID_CLASE

    ID_CLASE        shift and go to state 234


state 196

    (34) entero_a_flotante -> VARIABLE PUNTO . TO_F
    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    TO_F            shift and go to state 235
    CONCAT          shift and go to state 153


state 197

    (83) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 236


state 198

    (155) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 237


state 199

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    CADENA          shift and go to state 27
    VARIABLE        shift and go to state 133

    valorCadena                    shift and go to state 238

state 200

    (111) funcionesArray -> FOR EACH .

    $end            reduce using rule 111 (funcionesArray -> FOR EACH .)
    END             reduce using rule 111 (funcionesArray -> FOR EACH .)


state 201

    (49) valores -> valor COMA valores .

    $end            reduce using rule 49 (valores -> valor COMA valores .)
    VARIABLE        reduce using rule 49 (valores -> valor COMA valores .)
    PRINT           reduce using rule 49 (valores -> valor COMA valores .)
    PUTS            reduce using rule 49 (valores -> valor COMA valores .)
    PRINTF          reduce using rule 49 (valores -> valor COMA valores .)
    GETS            reduce using rule 49 (valores -> valor COMA valores .)
    LLAVE_IZ        reduce using rule 49 (valores -> valor COMA valores .)
    IF              reduce using rule 49 (valores -> valor COMA valores .)
    VARIABLECLASE   reduce using rule 49 (valores -> valor COMA valores .)
    WHILE           reduce using rule 49 (valores -> valor COMA valores .)
    PARENTESIS_IZ   reduce using rule 49 (valores -> valor COMA valores .)
    SIMBOLO         reduce using rule 49 (valores -> valor COMA valores .)
    FLOTANTE        reduce using rule 49 (valores -> valor COMA valores .)
    ENTERO          reduce using rule 49 (valores -> valor COMA valores .)
    WHEN            reduce using rule 49 (valores -> valor COMA valores .)
    DO              reduce using rule 49 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 49 (valores -> valor COMA valores .)
    END             reduce using rule 49 (valores -> valor COMA valores .)
    ELSE            reduce using rule 49 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 49 (valores -> valor COMA valores .)
    DEF             reduce using rule 49 (valores -> valor COMA valores .)


state 202

    (124) estructura_ifUnaLinea -> IF condicionIf . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 239
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 203

    (154) elemento_hash -> claveValor COMA elemento_hash .

    LLAVE_DER       reduce using rule 154 (elemento_hash -> claveValor COMA elemento_hash .)


state 204

    (149) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 149 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 149 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 205

    (150) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 150 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 150 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 206

    (152) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 152 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 152 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 207

    (151) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 151 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 151 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 208

    (124) estructura_ifUnaLinea -> IF condicionIf declaraciones END .

    $end            reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLE        reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINT           reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PUTS            reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PRINTF          reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    GETS            reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    LLAVE_IZ        reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IF              reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    VARIABLECLASE   reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHILE           reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    PARENTESIS_IZ   reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    SIMBOLO         reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    FLOTANTE        reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ENTERO          reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    WHEN            reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DO              reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    END             reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSE            reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    ELSEIF          reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)
    DEF             reduce using rule 124 (estructura_ifUnaLinea -> IF condicionIf declaraciones END .)


state 209

    (122) estructura_if -> IF condicionIf declaraciones ELSE . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 240
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 210

    (123) estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .

    $end            reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLE        reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 123 (estructura_if -> IF condicionIf declaraciones estructura_secundaria_if .)


state 211

    (125) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones ELSE declaraciones END
    (126) estructura_secundaria_if -> ELSEIF . condicionIf declaraciones estructura_secundaria_if
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    condicionIf                    shift and go to state 241
    expresiones_booleanas          shift and go to state 91
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 212

    (120) condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINT           reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PUTS            reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    GETS            reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    IF              reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    WHILE           reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 120 (condicionIf -> expresiones_booleanas funcionesComparacion condicionIf .)


state 213

    (119) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER funcionesComparacion condicionIf
    (121) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 242


state 214

    (116) argumentos -> VARIABLE .
    (117) argumentos -> VARIABLE . COMA argumentos
    (44) expresionNumerica -> VARIABLE .

    PARENTESIS_DER  reduce using rule 116 (argumentos -> VARIABLE .)
    COMA            shift and go to state 243
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)


state 215

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 244
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 216

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaraciones END

    PARENTESIS_DER  shift and go to state 245


state 217

    (109) funciones -> DEF VARIABLE declaraciones END .

    $end            reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    END             reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    DEF             reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLECLASE   reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    VARIABLE        reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    PRINT           reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    PUTS            reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    PRINTF          reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    GETS            reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    LLAVE_IZ        reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    IF              reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    WHILE           reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    SIMBOLO         reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    FLOTANTE        reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)
    ENTERO          reduce using rule 109 (funciones -> DEF VARIABLE declaraciones END .)


state 218

    (74) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 74 (elementos_array -> elemento_array COMA elementos_array .)


state 219

    (140) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while . END
    (136) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 246

  ! END             [ reduce using rule 136 (declaracion -> sentencia_while .) ]


state 220

    (141) sentencia_while -> WHILE expresiones_booleanas DO declaracion . END

    END             shift and go to state 247


state 221

    (142) sentencia_case -> CASE declaraciones sentencia_when END .

    $end            reduce using rule 142 (sentencia_case -> CASE declaraciones sentencia_when END .)
    END             reduce using rule 142 (sentencia_case -> CASE declaraciones sentencia_when END .)


state 222

    (71) asignacion -> VARIABLE IGUAL booleanos .
    (64) asignacion_clase -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHEN resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IGUAL_DOBLEP resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for $end resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHEN            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DO              reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IGUAL_DOBLEP    reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSE            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ELSEIF          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    $end            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLE        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLECLASE   [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHEN            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DO              [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IGUAL_DOBLEP    [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSE            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ELSEIF          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! $end            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 223

    (122) estructura_if -> IF condicionIf declaraciones . ELSE declaraciones END
    (123) estructura_if -> IF condicionIf declaraciones . estructura_secundaria_if
    (124) estructura_ifUnaLinea -> IF condicionIf declaraciones . END
    (125) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 209
    END             shift and go to state 208
    ELSEIF          shift and go to state 211

    estructura_secundaria_if       shift and go to state 210

state 224

    (59) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (27) valorCadena -> CADENA .

    VARIABLE        reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINT           reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PUTS            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PRINTF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    GETS            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    LLAVE_IZ        reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IF              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    VARIABLECLASE   reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHILE           reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    PARENTESIS_IZ   reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    SIMBOLO         reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    FLOTANTE        reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ENTERO          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DO              reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    DEF             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 59 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 27 (valorCadena -> CADENA .)


state 225

    (60) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (45) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (35) operadores -> . MAS
    (36) operadores -> . MENOS
    (37) operadores -> . DIVISION
    (38) operadores -> . MULTIPLICACION
    (39) operadores -> . EXPONENCIACION
    (40) operadores -> . MODULO

    VARIABLE        reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINT           reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PUTS            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PRINTF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    GETS            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    LLAVE_IZ        reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IF              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    VARIABLECLASE   reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHILE           reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    PARENTESIS_IZ   reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    SIMBOLO         reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    FLOTANTE        reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ENTERO          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DO              reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    DEF             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 60 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 52
    MENOS           shift and go to state 53
    DIVISION        shift and go to state 54
    MULTIPLICACION  shift and go to state 55
    EXPONENCIACION  shift and go to state 56
    MODULO          shift and go to state 57

    operadores                     shift and go to state 51

state 226

    (61) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    VARIABLE        reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINT           reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PUTS            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PRINTF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    GETS            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    LLAVE_IZ        reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IF              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    VARIABLECLASE   reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHILE           reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    PARENTESIS_IZ   reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    SIMBOLO         reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    FLOTANTE        reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ENTERO          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DO              reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    DEF             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 61 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 227

    (62) asignacion_clase -> VARIABLECLASE IGUAL array .

    VARIABLE        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINT           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PUTS            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PRINTF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    GETS            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    LLAVE_IZ        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IF              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    VARIABLECLASE   reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHILE           reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    PARENTESIS_IZ   reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    SIMBOLO         reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    FLOTANTE        reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ENTERO          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DO              reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    DEF             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 62 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 228

    (63) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    VARIABLE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINT           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PUTS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PRINTF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    GETS            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    LLAVE_IZ        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IF              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    VARIABLECLASE   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHILE           reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    PARENTESIS_IZ   reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    SIMBOLO         reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    FLOTANTE        reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ENTERO          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DO              reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    DEF             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 63 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 229

    (44) expresionNumerica -> VARIABLE .
    (26) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (28) valorCadena -> VARIABLE .

  ! reduce/reduce conflict for MAS resolved using rule 28 (valorCadena -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINT           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUTS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PRINTF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    GETS            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    LLAVE_IZ        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IF              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    VARIABLECLASE   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHILE           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 44 (expresionNumerica -> VARIABLE .)
    SIMBOLO         reduce using rule 44 (expresionNumerica -> VARIABLE .)
    FLOTANTE        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ENTERO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    WHEN            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DO              reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DEF             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 44 (expresionNumerica -> VARIABLE .)
    END             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSE            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    ELSEIF          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    $end            reduce using rule 44 (expresionNumerica -> VARIABLE .)
    PUNTO           shift and go to state 248
    MAS             reduce using rule 28 (valorCadena -> VARIABLE .)

  ! MAS             [ reduce using rule 44 (expresionNumerica -> VARIABLE .) ]


state 230

    (146) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 249


state 231

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_IZ   shift and go to state 250


state 232

    (64) asignacion_clase -> VARIABLE IGUAL booleanos .
    (71) asignacion -> VARIABLE IGUAL booleanos .

  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for DEF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINT resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PUTS resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PRINTF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for GETS resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for IF resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for WHILE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for ENTERO resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
  ! reduce/reduce conflict for END resolved using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLECLASE   reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    VARIABLE        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    DEF             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINT           reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PUTS            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PRINTF          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    GETS            reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    LLAVE_IZ        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    IF              reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    WHILE           reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    PARENTESIS_IZ   reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    SIMBOLO         reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    FLOTANTE        reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    ENTERO          reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)
    END             reduce using rule 64 (asignacion_clase -> VARIABLE IGUAL booleanos .)

  ! VARIABLECLASE   [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! VARIABLE        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! DEF             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINT           [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PUTS            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PRINTF          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! GETS            [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! LLAVE_IZ        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! IF              [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! WHILE           [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! PARENTESIS_IZ   [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! SIMBOLO         [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! FLOTANTE        [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! ENTERO          [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]
  ! END             [ reduce using rule 71 (asignacion -> VARIABLE IGUAL booleanos .) ]


state 233

    (145) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 145 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 145 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 145 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 234

    (159) encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .

    VARIABLECLASE   reduce using rule 159 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)
    VARIABLE        reduce using rule 159 (encabezadoClase -> CLASS ID_CLASE MENOR_QUE ID_CLASE .)


state 235

    (34) entero_a_flotante -> VARIABLE PUNTO TO_F .

    $end            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    END             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLE        reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINT           reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PUTS            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PRINTF          reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    GETS            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    LLAVE_IZ        reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IF              reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    VARIABLECLASE   reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHILE           reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    PARENTESIS_IZ   reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    SIMBOLO         reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    FLOTANTE        reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ENTERO          reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    WHEN            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DO              reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    IGUAL_DOBLEP    reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSE            reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    ELSEIF          reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)
    DEF             reduce using rule 34 (entero_a_flotante -> VARIABLE PUNTO TO_F .)


state 236

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 251


state 237

    (155) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (156) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (157) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 252

    each_args_hash                 shift and go to state 253

state 238

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 254


state 239

    (124) estructura_ifUnaLinea -> IF condicionIf declaraciones . END

    END             shift and go to state 208


state 240

    (122) estructura_if -> IF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 255


state 241

    (125) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones ELSE declaraciones END
    (126) estructura_secundaria_if -> ELSEIF condicionIf . declaraciones estructura_secundaria_if
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 256
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 242

    (119) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER . funcionesComparacion condicionIf
    (121) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .
    (98) funcionesComparacion -> . Y_SIGNO
    (99) funcionesComparacion -> . O_SIGNO

    VARIABLE        reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINT           reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PUTS            reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PRINTF          reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    GETS            reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    IF              reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    WHILE           reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    SIMBOLO         reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    FLOTANTE        reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    ENTERO          reduce using rule 121 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER .)
    Y_SIGNO         shift and go to state 175
    O_SIGNO         shift and go to state 176

    funcionesComparacion           shift and go to state 257

state 243

    (117) argumentos -> VARIABLE COMA . argumentos
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 258

    argumentos                     shift and go to state 259

state 244

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones . END

    END             shift and go to state 260


state 245

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 261
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 246

    (140) sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .

    $end            reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    VARIABLE        reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINT           reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PUTS            reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PRINTF          reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    GETS            reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    LLAVE_IZ        reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IF              reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    VARIABLECLASE   reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHILE           reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    PARENTESIS_IZ   reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    SIMBOLO         reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    FLOTANTE        reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ENTERO          reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    WHEN            reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DO              reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    END             reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSE            reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    ELSEIF          reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)
    DEF             reduce using rule 140 (sentencia_while -> WHILE expresiones_booleanas DO sentencia_while END .)


state 247

    (141) sentencia_while -> WHILE expresiones_booleanas DO declaracion END .

    $end            reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    VARIABLE        reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINT           reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PUTS            reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PRINTF          reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    GETS            reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    LLAVE_IZ        reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IF              reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    VARIABLECLASE   reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHILE           reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    PARENTESIS_IZ   reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    SIMBOLO         reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    FLOTANTE        reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ENTERO          reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    WHEN            reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DO              reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    END             reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSE            reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    ELSEIF          reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)
    DEF             reduce using rule 141 (sentencia_while -> WHILE expresiones_booleanas DO declaracion END .)


state 248

    (26) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 153


state 249

    (146) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 146 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 146 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 250

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClaseE END
    (116) argumentos -> . VARIABLE
    (117) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 258

    argumentos                     shift and go to state 262

state 251

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (84) cuerpo_each -> . cuerpo
    (85) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_ifUnaLinea
    (10) cuerpo -> . estructura_if
    (11) cuerpo -> . funciones
    (12) cuerpo -> . funcionesEstructuras
    (13) cuerpo -> . array
    (14) cuerpo -> . each_array
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (21) cuerpo -> . entero_a_flotante
    (86) vacio -> .
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) input_concatenacion -> . concatenacionSimpleCadena
    (25) input_concatenacion -> . concatenacion_funcion
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> . DEF VARIABLE declaraciones END
    (114) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (115) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (81) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (82) array -> . CORCHETE_IZ CORCHETE_DER
    (83) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (155) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (142) sentencia_case -> . CASE declaraciones sentencia_when END
    (143) sentencias_when -> . sentencia_when
    (144) sentencias_when -> . sentencia_when sentencias_when
    (146) sentencia_until -> . UNTIL declaracion DO declaracion END
    (160) definicion_clase -> . encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END
    (34) entero_a_flotante -> . VARIABLE PUNTO TO_F
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (29) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (30) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (26) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO
    (145) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (158) encabezadoClase -> . CLASS ID_CLASE
    (159) encabezadoClase -> . CLASS ID_CLASE MENOR_QUE ID_CLASE
    (27) valorCadena -> . CADENA
    (28) valorCadena -> . VARIABLE

    END             reduce using rule 86 (vacio -> .)
    VARIABLE        shift and go to state 26
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 38
    DEF             shift and go to state 39
    CORCHETE_IZ     shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48
    WHEN            shift and go to state 49
    CLASS           shift and go to state 50
    CADENA          shift and go to state 27

    cuerpo_each                    shift and go to state 263
    cuerpo                         shift and go to state 264
    vacio                          shift and go to state 265
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_ifUnaLinea          shift and go to state 10
    estructura_if                  shift and go to state 11
    funciones                      shift and go to state 12
    funcionesEstructuras           shift and go to state 13
    array                          shift and go to state 14
    each_array                     shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    entero_a_flotante              shift and go to state 22
    expresionNumerica              shift and go to state 23
    concatenacionSimpleCadena      shift and go to state 24
    concatenacion_funcion          shift and go to state 25
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35
    sentencia_when                 shift and go to state 43
    encabezadoClase                shift and go to state 45
    valorCadena                    shift and go to state 46

state 252

    (156) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (157) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 266
    BARRA           shift and go to state 267


state 253

    (155) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaracion                    shift and go to state 268
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 254

    (26) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLE        reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINT           reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PUTS            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PRINTF          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    GETS            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    LLAVE_IZ        reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IF              reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    VARIABLECLASE   reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHILE           reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    PARENTESIS_IZ   reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    SIMBOLO         reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    FLOTANTE        reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ENTERO          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DEF             reduce using rule 26 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 255

    (122) estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .

    $end            reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLE        reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 122 (estructura_if -> IF condicionIf declaraciones ELSE declaraciones END .)


state 256

    (125) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . ELSE declaraciones END
    (126) estructura_secundaria_if -> ELSEIF condicionIf declaraciones . estructura_secundaria_if
    (125) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones ELSE declaraciones END
    (126) estructura_secundaria_if -> . ELSEIF condicionIf declaraciones estructura_secundaria_if

    ELSE            shift and go to state 269
    ELSEIF          shift and go to state 211

    estructura_secundaria_if       shift and go to state 270

state 257

    (119) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion . condicionIf
    (118) condicionIf -> . expresiones_booleanas
    (119) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf
    (120) condicionIf -> . expresiones_booleanas funcionesComparacion condicionIf
    (121) condicionIf -> . EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    EXCLAMACION_BAJO shift and go to state 92
    VARIABLE        shift and go to state 94
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    expresiones_booleanas          shift and go to state 91
    condicionIf                    shift and go to state 271
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 93

state 258

    (116) argumentos -> VARIABLE .
    (117) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 116 (argumentos -> VARIABLE .)
    COMA            shift and go to state 243


state 259

    (117) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 117 (argumentos -> VARIABLE COMA argumentos .)


state 260

    (107) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .

    $end            reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    END             reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    VARIABLE        reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 107 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END .)


state 261

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones . END

    END             shift and go to state 272


state 262

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClaseE END

    PARENTESIS_DER  shift and go to state 273


state 263

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 274


state 264

    (84) cuerpo_each -> cuerpo .

    END             reduce using rule 84 (cuerpo_each -> cuerpo .)


state 265

    (85) cuerpo_each -> vacio .

    END             reduce using rule 85 (cuerpo_each -> vacio .)


state 266

    (156) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 275


state 267

    (157) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    PRINTF          reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    SIMBOLO         reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 157 (each_args_hash -> VARIABLE BARRA .)


state 268

    (155) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 276


state 269

    (125) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE . declaraciones END
    (138) declaraciones -> . declaracion
    (139) declaraciones -> . declaracion declaraciones
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 118
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    VARIABLECLASE   shift and go to state 120
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    declaraciones                  shift and go to state 277
    declaracion                    shift and go to state 106
    operacionAritmetica            shift and go to state 107
    asignacion                     shift and go to state 108
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    asignacion_clase               shift and go to state 115
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 270

    (126) estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .

    $end            reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLE        reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINT           reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PUTS            reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PRINTF          reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    GETS            reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    LLAVE_IZ        reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IF              reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    VARIABLECLASE   reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHILE           reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    PARENTESIS_IZ   reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    SIMBOLO         reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    FLOTANTE        reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ENTERO          reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    END             reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSE            reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    ELSEIF          reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    WHEN            reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DO              reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)
    DEF             reduce using rule 126 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones estructura_secundaria_if .)


state 271

    (119) condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .

    VARIABLE        reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINT           reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PUTS            reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PRINTF          reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    GETS            reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    LLAVE_IZ        reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    IF              reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    VARIABLECLASE   reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    WHILE           reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    PARENTESIS_IZ   reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    SIMBOLO         reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    FLOTANTE        reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)
    ENTERO          reduce using rule 119 (condicionIf -> EXCLAMACION_BAJO PARENTESIS_IZ expresiones_booleanas PARENTESIS_DER funcionesComparacion condicionIf .)


state 272

    (108) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .

    $end            reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    END             reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    DEF             reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLECLASE   reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    VARIABLE        reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINT           reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PUTS            reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PRINTF          reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    GETS            reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    LLAVE_IZ        reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    IF              reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    WHILE           reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    PARENTESIS_IZ   reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    SIMBOLO         reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    FLOTANTE        reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)
    ENTERO          reduce using rule 108 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END .)


state 273

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClaseE END
    (168) cuerpoClaseE -> . cuerpoClase
    (169) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (165) cuerpoClase -> . cuerpoVariables
    (166) cuerpoClase -> . declaracion
    (167) cuerpoClase -> . funciones
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> . DEF VARIABLE declaraciones END
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    DEF             shift and go to state 39
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 285
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    cuerpoVariables                shift and go to state 278
    cuerpoClaseE                   shift and go to state 279
    cuerpoClase                    shift and go to state 280
    declaracion                    shift and go to state 281
    funciones                      shift and go to state 282
    asignacion_clase               shift and go to state 283
    asignacion                     shift and go to state 284
    operacionAritmetica            shift and go to state 107
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 274

    (83) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 83 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 83 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 275

    (156) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 286


state 276

    (155) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 155 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 155 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 277

    (125) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones . END

    END             shift and go to state 287


state 278

    (165) cuerpoClase -> cuerpoVariables .

    DEF             reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    VARIABLECLASE   reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    VARIABLE        reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    PRINT           reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    PUTS            reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    PRINTF          reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    GETS            reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    LLAVE_IZ        reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    IF              reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    WHILE           reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    PARENTESIS_IZ   reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    SIMBOLO         reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    FLOTANTE        reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    ENTERO          reduce using rule 165 (cuerpoClase -> cuerpoVariables .)
    END             reduce using rule 165 (cuerpoClase -> cuerpoVariables .)


state 279

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE . END

    END             shift and go to state 288


state 280

    (168) cuerpoClaseE -> cuerpoClase .
    (169) cuerpoClaseE -> cuerpoClase . cuerpoClaseE
    (168) cuerpoClaseE -> . cuerpoClase
    (169) cuerpoClaseE -> . cuerpoClase cuerpoClaseE
    (165) cuerpoClase -> . cuerpoVariables
    (166) cuerpoClase -> . declaracion
    (167) cuerpoClase -> . funciones
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (127) declaracion -> . operacionAritmetica
    (128) declaracion -> . asignacion
    (129) declaracion -> . impresion
    (130) declaracion -> . impresion_vacia
    (131) declaracion -> . expresiones_booleanas
    (132) declaracion -> . solicitudDatosTeclado
    (133) declaracion -> . hashes
    (134) declaracion -> . estructura_if
    (135) declaracion -> . asignacion_clase
    (136) declaracion -> . sentencia_while
    (137) declaracion -> . estructura_ifUnaLinea
    (107) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaraciones END
    (108) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaraciones END
    (109) funciones -> . DEF VARIABLE declaraciones END
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante
    (45) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (58) impresion -> . valor_print valores
    (87) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (88) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (89) impresion_vacia -> . PUTS
    (90) impresion_vacia -> . PRINTF PARENTESIS_IZ PARENTESIS_DER
    (100) expresiones_booleanas -> . valorSimbolo operadoresComparacion valorSimbolo
    (101) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (102) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (104) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (105) solicitudDatosTeclado -> . GETS
    (106) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (147) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (148) hashes -> . LLAVE_IZ LLAVE_DER
    (122) estructura_if -> . IF condicionIf declaraciones ELSE declaraciones END
    (123) estructura_if -> . IF condicionIf declaraciones estructura_secundaria_if
    (140) sentencia_while -> . WHILE expresiones_booleanas DO sentencia_while END
    (141) sentencia_while -> . WHILE expresiones_booleanas DO declaracion END
    (124) estructura_ifUnaLinea -> . IF condicionIf declaraciones END
    (41) expresionNumerica -> . valorNumerico
    (42) expresionNumerica -> . operacionAritmetica
    (43) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (44) expresionNumerica -> . VARIABLE
    (46) valor_print -> . PRINT
    (47) valor_print -> . PUTS
    (22) valorSimbolo -> . SIMBOLO
    (23) valorSimbolo -> . VARIABLE
    (31) valorNumerico -> . FLOTANTE
    (32) valorNumerico -> . ENTERO

    END             reduce using rule 168 (cuerpoClaseE -> cuerpoClase .)
    DEF             shift and go to state 39
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 285
    PRINT           shift and go to state 30
    PUTS            shift and go to state 32
    PRINTF          shift and go to state 33
    GETS            shift and go to state 36
    LLAVE_IZ        shift and go to state 37
    IF              shift and go to state 119
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 31
    SIMBOLO         shift and go to state 28
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 48

    cuerpoClase                    shift and go to state 280
    cuerpoClaseE                   shift and go to state 289
    cuerpoVariables                shift and go to state 278
    declaracion                    shift and go to state 281
    funciones                      shift and go to state 282
    asignacion_clase               shift and go to state 283
    asignacion                     shift and go to state 284
    operacionAritmetica            shift and go to state 107
    impresion                      shift and go to state 109
    impresion_vacia                shift and go to state 110
    expresiones_booleanas          shift and go to state 111
    solicitudDatosTeclado          shift and go to state 112
    hashes                         shift and go to state 113
    estructura_if                  shift and go to state 114
    sentencia_while                shift and go to state 116
    estructura_ifUnaLinea          shift and go to state 117
    expresionNumerica              shift and go to state 23
    valor_print                    shift and go to state 29
    valorSimbolo                   shift and go to state 34
    valorNumerico                  shift and go to state 35

state 281

    (166) cuerpoClase -> declaracion .

    DEF             reduce using rule 166 (cuerpoClase -> declaracion .)
    VARIABLECLASE   reduce using rule 166 (cuerpoClase -> declaracion .)
    VARIABLE        reduce using rule 166 (cuerpoClase -> declaracion .)
    PRINT           reduce using rule 166 (cuerpoClase -> declaracion .)
    PUTS            reduce using rule 166 (cuerpoClase -> declaracion .)
    PRINTF          reduce using rule 166 (cuerpoClase -> declaracion .)
    GETS            reduce using rule 166 (cuerpoClase -> declaracion .)
    LLAVE_IZ        reduce using rule 166 (cuerpoClase -> declaracion .)
    IF              reduce using rule 166 (cuerpoClase -> declaracion .)
    WHILE           reduce using rule 166 (cuerpoClase -> declaracion .)
    PARENTESIS_IZ   reduce using rule 166 (cuerpoClase -> declaracion .)
    SIMBOLO         reduce using rule 166 (cuerpoClase -> declaracion .)
    FLOTANTE        reduce using rule 166 (cuerpoClase -> declaracion .)
    ENTERO          reduce using rule 166 (cuerpoClase -> declaracion .)
    END             reduce using rule 166 (cuerpoClase -> declaracion .)


state 282

    (167) cuerpoClase -> funciones .

    DEF             reduce using rule 167 (cuerpoClase -> funciones .)
    VARIABLECLASE   reduce using rule 167 (cuerpoClase -> funciones .)
    VARIABLE        reduce using rule 167 (cuerpoClase -> funciones .)
    PRINT           reduce using rule 167 (cuerpoClase -> funciones .)
    PUTS            reduce using rule 167 (cuerpoClase -> funciones .)
    PRINTF          reduce using rule 167 (cuerpoClase -> funciones .)
    GETS            reduce using rule 167 (cuerpoClase -> funciones .)
    LLAVE_IZ        reduce using rule 167 (cuerpoClase -> funciones .)
    IF              reduce using rule 167 (cuerpoClase -> funciones .)
    WHILE           reduce using rule 167 (cuerpoClase -> funciones .)
    PARENTESIS_IZ   reduce using rule 167 (cuerpoClase -> funciones .)
    SIMBOLO         reduce using rule 167 (cuerpoClase -> funciones .)
    FLOTANTE        reduce using rule 167 (cuerpoClase -> funciones .)
    ENTERO          reduce using rule 167 (cuerpoClase -> funciones .)
    END             reduce using rule 167 (cuerpoClase -> funciones .)


state 283

    (161) cuerpoVariables -> asignacion_clase .
    (163) cuerpoVariables -> asignacion_clase . cuerpoVariables
    (135) declaracion -> asignacion_clase .
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINT resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PUTS resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PRINTF resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for GETS resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for IF resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for WHILE resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for ENTERO resolved using rule 135 (declaracion -> asignacion_clase .)
  ! reduce/reduce conflict for END resolved using rule 135 (declaracion -> asignacion_clase .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 135 (declaracion -> asignacion_clase .)
    PRINT           reduce using rule 135 (declaracion -> asignacion_clase .)
    PUTS            reduce using rule 135 (declaracion -> asignacion_clase .)
    PRINTF          reduce using rule 135 (declaracion -> asignacion_clase .)
    GETS            reduce using rule 135 (declaracion -> asignacion_clase .)
    LLAVE_IZ        reduce using rule 135 (declaracion -> asignacion_clase .)
    IF              reduce using rule 135 (declaracion -> asignacion_clase .)
    WHILE           reduce using rule 135 (declaracion -> asignacion_clase .)
    PARENTESIS_IZ   reduce using rule 135 (declaracion -> asignacion_clase .)
    SIMBOLO         reduce using rule 135 (declaracion -> asignacion_clase .)
    FLOTANTE        reduce using rule 135 (declaracion -> asignacion_clase .)
    ENTERO          reduce using rule 135 (declaracion -> asignacion_clase .)
    END             reduce using rule 135 (declaracion -> asignacion_clase .)
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 126

  ! DEF             [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINT           [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! PUTS            [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! PRINTF          [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! GETS            [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! LLAVE_IZ        [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! IF              [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! WHILE           [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! PARENTESIS_IZ   [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! SIMBOLO         [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! FLOTANTE        [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! ENTERO          [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! END             [ reduce using rule 161 (cuerpoVariables -> asignacion_clase .) ]
  ! VARIABLECLASE   [ reduce using rule 135 (declaracion -> asignacion_clase .) ]
  ! VARIABLE        [ reduce using rule 135 (declaracion -> asignacion_clase .) ]

    asignacion_clase               shift and go to state 124
    cuerpoVariables                shift and go to state 190
    asignacion                     shift and go to state 125

state 284

    (162) cuerpoVariables -> asignacion .
    (164) cuerpoVariables -> asignacion . cuerpoVariables
    (128) declaracion -> asignacion .
    (161) cuerpoVariables -> . asignacion_clase
    (162) cuerpoVariables -> . asignacion
    (163) cuerpoVariables -> . asignacion_clase cuerpoVariables
    (164) cuerpoVariables -> . asignacion cuerpoVariables
    (59) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (60) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (61) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (62) asignacion_clase -> . VARIABLECLASE IGUAL array
    (63) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (64) asignacion_clase -> . VARIABLE IGUAL booleanos
    (65) asignacion -> . VARIABLE IGUAL CADENA
    (66) asignacion -> . VARIABLE IGUAL expresionNumerica
    (67) asignacion -> . VARIABLE IGUAL hashes
    (68) asignacion -> . VARIABLE IGUAL SIMBOLO
    (69) asignacion -> . VARIABLE IGUAL array
    (70) asignacion -> . VARIABLE IGUAL input_concatenacion
    (71) asignacion -> . VARIABLE IGUAL booleanos
    (72) asignacion -> . VARIABLE IGUAL solicitudDatosTeclado
    (73) asignacion -> . VARIABLE IGUAL entero_a_flotante

  ! reduce/reduce conflict for DEF resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLECLASE resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINT resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PRINTF resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for GETS resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for SIMBOLO resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for ENTERO resolved using rule 128 (declaracion -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 128 (declaracion -> asignacion .)
  ! shift/reduce conflict for VARIABLECLASE resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
    DEF             reduce using rule 128 (declaracion -> asignacion .)
    PRINT           reduce using rule 128 (declaracion -> asignacion .)
    PUTS            reduce using rule 128 (declaracion -> asignacion .)
    PRINTF          reduce using rule 128 (declaracion -> asignacion .)
    GETS            reduce using rule 128 (declaracion -> asignacion .)
    LLAVE_IZ        reduce using rule 128 (declaracion -> asignacion .)
    IF              reduce using rule 128 (declaracion -> asignacion .)
    WHILE           reduce using rule 128 (declaracion -> asignacion .)
    PARENTESIS_IZ   reduce using rule 128 (declaracion -> asignacion .)
    SIMBOLO         reduce using rule 128 (declaracion -> asignacion .)
    FLOTANTE        reduce using rule 128 (declaracion -> asignacion .)
    ENTERO          reduce using rule 128 (declaracion -> asignacion .)
    END             reduce using rule 128 (declaracion -> asignacion .)
    VARIABLECLASE   shift and go to state 120
    VARIABLE        shift and go to state 126

  ! DEF             [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! PRINT           [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! PUTS            [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! PRINTF          [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! GETS            [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! LLAVE_IZ        [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! IF              [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! WHILE           [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! PARENTESIS_IZ   [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! SIMBOLO         [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! FLOTANTE        [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! ENTERO          [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! END             [ reduce using rule 162 (cuerpoVariables -> asignacion .) ]
  ! VARIABLECLASE   [ reduce using rule 128 (declaracion -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 128 (declaracion -> asignacion .) ]

    asignacion                     shift and go to state 125
    cuerpoVariables                shift and go to state 191
    asignacion_clase               shift and go to state 124

state 285

    (64) asignacion_clase -> VARIABLE . IGUAL booleanos
    (65) asignacion -> VARIABLE . IGUAL CADENA
    (66) asignacion -> VARIABLE . IGUAL expresionNumerica
    (67) asignacion -> VARIABLE . IGUAL hashes
    (68) asignacion -> VARIABLE . IGUAL SIMBOLO
    (69) asignacion -> VARIABLE . IGUAL array
    (70) asignacion -> VARIABLE . IGUAL input_concatenacion
    (71) asignacion -> VARIABLE . IGUAL booleanos
    (72) asignacion -> VARIABLE . IGUAL solicitudDatosTeclado
    (73) asignacion -> VARIABLE . IGUAL entero_a_flotante
    (102) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (103) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (44) expresionNumerica -> VARIABLE .
    (23) valorSimbolo -> VARIABLE .
    (91) operadoresComparacion -> . IGUAL_DOBLEP
    (92) operadoresComparacion -> . NAVE
    (93) operadoresComparacion -> . DIFERENTE
    (94) operadoresComparacion -> . MAYOR_QUE
    (95) operadoresComparacion -> . MENOR_QUE
    (96) operadoresComparacion -> . MENOR_IGUAL_QUE
    (97) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for IGUAL_DOBLEP resolved as shift
  ! shift/reduce conflict for NAVE resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 192
    MAS             reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MENOS           reduce using rule 44 (expresionNumerica -> VARIABLE .)
    DIVISION        reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MULTIPLICACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    EXPONENCIACION  reduce using rule 44 (expresionNumerica -> VARIABLE .)
    MODULO          reduce using rule 44 (expresionNumerica -> VARIABLE .)
    IGUAL_DOBLEP    shift and go to state 62
    NAVE            shift and go to state 63
    DIFERENTE       shift and go to state 64
    MAYOR_QUE       shift and go to state 65
    MENOR_QUE       shift and go to state 66
    MENOR_IGUAL_QUE shift and go to state 67
    MAYOR_IGUAL_QUE shift and go to state 68

  ! IGUAL_DOBLEP    [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! NAVE            [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 23 (valorSimbolo -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 60

state 286

    (156) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINTF          reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    SIMBOLO         reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 156 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 287

    (125) estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .

    $end            reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLE        reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINT           reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PUTS            reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PRINTF          reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    GETS            reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    LLAVE_IZ        reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IF              reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    VARIABLECLASE   reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHILE           reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    PARENTESIS_IZ   reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    SIMBOLO         reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    FLOTANTE        reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ENTERO          reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    END             reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSE            reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    ELSEIF          reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    WHEN            reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DO              reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    IGUAL_DOBLEP    reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)
    DEF             reduce using rule 125 (estructura_secundaria_if -> ELSEIF condicionIf declaraciones ELSE declaraciones END .)


state 288

    (160) definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .

    $end            reduce using rule 160 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)
    END             reduce using rule 160 (definicion_clase -> encabezadoClase cuerpoVariables DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClaseE END .)


state 289

    (169) cuerpoClaseE -> cuerpoClase cuerpoClaseE .

    END             reduce using rule 169 (cuerpoClaseE -> cuerpoClase cuerpoClaseE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 26 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 26 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 26 resolved as shift
WARNING: shift/reduce conflict for PARENTESIS_IZ in state 32 resolved as shift
WARNING: shift/reduce conflict for IF in state 70 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 94 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 94 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 94 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 94 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 94 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 94 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 94 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 118 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 118 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 118 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 118 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 124 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 124 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 125 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 125 resolved as shift
WARNING: shift/reduce conflict for MAS in state 130 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 130 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 130 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 130 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 130 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 130 resolved as shift
WARNING: shift/reduce conflict for END in state 219 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 283 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 283 resolved as shift
WARNING: shift/reduce conflict for VARIABLECLASE in state 284 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 284 resolved as shift
WARNING: shift/reduce conflict for IGUAL_DOBLEP in state 285 resolved as shift
WARNING: shift/reduce conflict for NAVE in state 285 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 285 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 285 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 285 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 285 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 285 resolved as shift
WARNING: reduce/reduce conflict in state 26 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 26
WARNING: reduce/reduce conflict in state 32 resolved using rule (valor_print -> PUTS)
WARNING: rejected rule (impresion_vacia -> PUTS) in state 32
WARNING: reduce/reduce conflict in state 134 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 134
WARNING: reduce/reduce conflict in state 152 resolved using rule (entero_a_flotante -> VARIABLE PUNTO TO_F)
WARNING: rejected rule (funcionesNumeros -> TO_F) in state 152
WARNING: reduce/reduce conflict in state 222 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 222
WARNING: reduce/reduce conflict in state 229 resolved using rule (valorCadena -> VARIABLE)
WARNING: rejected rule (expresionNumerica -> VARIABLE) in state 229
WARNING: reduce/reduce conflict in state 232 resolved using rule (asignacion_clase -> VARIABLE IGUAL booleanos)
WARNING: rejected rule (asignacion -> VARIABLE IGUAL booleanos) in state 232
WARNING: reduce/reduce conflict in state 283 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 283
WARNING: reduce/reduce conflict in state 284 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 284
WARNING: Rule (funcionesNumeros -> TO_F) is never reduced
