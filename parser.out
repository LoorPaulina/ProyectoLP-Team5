Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    CASE
    CLASS
    COMILLA_D
    COMILLA_S
    CONCAT
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    ID_CLASE
    IGUAL_DOBLEP
    IN
    INITIALIZE
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SIMBOLO
    SUPER
    TRUE
    UNTIL
    WHILE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> asignacion
Rule 3     cuerpo -> impresion
Rule 4     cuerpo -> impresion_vacia
Rule 5     cuerpo -> expresiones_booleanas
Rule 6     cuerpo -> solicitudDatosTeclado
Rule 7     cuerpo -> hashes
Rule 8     cuerpo -> estructura_if
Rule 9     cuerpo -> funciones
Rule 10    cuerpo -> funcionesEstructuras
Rule 11    cuerpo -> array
Rule 12    cuerpo -> each_array
Rule 13    cuerpo -> comentarios
Rule 14    valorNumerico -> FLOTANTE
Rule 15    valorNumerico -> ENTERO
Rule 16    valorNumerico -> VARIABLE
Rule 17    soloEnteros -> ENTERO
Rule 18    operadores -> MAS
Rule 19    operadores -> MENOS
Rule 20    operadores -> DIVISION
Rule 21    operadores -> MULTIPLICACION
Rule 22    operadores -> EXPONENCIACION
Rule 23    operadores -> MODULO
Rule 24    expresionNumerica -> valorNumerico
Rule 25    expresionNumerica -> operacionAritmetica
Rule 26    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 27    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 28    valor_print -> PRINT
Rule 29    valor_print -> PUTS
Rule 30    valores -> valor
Rule 31    valores -> valor COMA valores
Rule 32    valores -> valor estructura_ifUnaLinea
Rule 33    valor -> CADENA
Rule 34    valor -> valorNumerico
Rule 35    valor -> VARIABLE
Rule 36    valor -> VARIABLECLASE
Rule 37    impresion -> valor_print valores
Rule 38    asignacion -> VARIABLE IGUAL CADENA
Rule 39    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 40    asignacion -> VARIABLE IGUAL hashes
Rule 41    asignacion -> VARIABLE IGUAL array
Rule 42    elementos_array -> elemento_array COMA elementos_array
Rule 43    elementos_array -> elemento_array
Rule 44    elemento_array -> CADENA
Rule 45    elemento_array -> ENTERO
Rule 46    elemento_array -> FLOTANTE
Rule 47    elemento_array -> array
Rule 48    elemento_array -> VARIABLE
Rule 49    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 50    array -> CORCHETE_IZ CORCHETE_DER
Rule 51    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 52    cuerpo_each -> cuerpo
Rule 53    cuerpo_each -> vacio
Rule 54    vacio -> <empty>
Rule 55    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 56    comentarios -> COMENTARIO
Rule 57    comentarios -> COMENTARIO_MULTI
Rule 58    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 59    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 60    impresion_vacia -> PUTS
Rule 61    operadoresComparacion -> DOBLE_IGUAL
Rule 62    operadoresComparacion -> DIFERENTE
Rule 63    operadoresComparacion -> MAYOR_QUE
Rule 64    operadoresComparacion -> MENOR_QUE
Rule 65    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 66    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 67    funcionesComparacion -> AND
Rule 68    funcionesComparacion -> OR
Rule 69    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 70    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 71    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 72    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 73    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 74    solicitudDatosTeclado -> GETS
Rule 75    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 76    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
Rule 77    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
Rule 78    funcionesArray -> SORT
Rule 79    funcionesArray -> FOR EACH
Rule 80    funcionesFormatoImpresion -> CHOMP
Rule 81    funcionesNumeros -> TO_F
Rule 82    funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 83    funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 84    argumentos -> VARIABLE
Rule 85    argumentos -> VARIABLE COMA argumentos
Rule 86    condicionIf -> expresiones_booleanas
Rule 87    condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 88    estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 89    estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 90    estructura_ifUnaLinea -> IF condicionIf
Rule 91    estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 92    estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 93    declaracion -> operacionAritmetica
Rule 94    declaracion -> asignacion
Rule 95    declaracion -> impresion
Rule 96    declaracion -> impresion_vacia
Rule 97    declaracion -> expresiones_booleanas
Rule 98    declaracion -> solicitudDatosTeclado
Rule 99    declaracion -> hashes
Rule 100   declaracion -> estructura_if
Rule 101   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 102   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 103   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 104   elemento_hash -> claveValor
Rule 105   elemento_hash -> claveValor COMA claveValor

Terminals, with rules where they appear

ALIAS                : 
AND                  : 67
ASIGNA_HASH          : 102 103
BARRA                : 51 51
BEGIN                : 
BREAK                : 
CADENA               : 33 38 44 103
CASE                 : 
CHOMP                : 80
CLASS                : 
COMA                 : 31 42 85 105
COMENTARIO           : 56
COMENTARIO_MULTI     : 57
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 
CORCHETE_DER         : 49 50
CORCHETE_IZ          : 49 50
DEF                  : 76 77
DEFINED_QUESTION     : 
DIFERENTE            : 62
DIVISION             : 20
DO                   : 51
DOBLE_IGUAL          : 61
EACH                 : 79
ELSE                 : 88 91
ELSEIF               : 91 92
END                  : 51 76 77 88 91
ENSURE               : 
ENTERO               : 15 17 45 70
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 22
FALSE                : 
FLOTANTE             : 14 46
FOR                  : 79
GETS                 : 74 75
ID_CLASE             : 
IF                   : 88 89 90
IGUAL                : 38 39 40 41
IGUAL_DOBLEP         : 
IN                   : 
INITIALIZE           : 
LLAVE_DER            : 101
LLAVE_IZ             : 101
MAS                  : 18
MAYOR_IGUAL_QUE      : 66
MAYOR_QUE            : 63
MENOR_IGUAL_QUE      : 65
MENOR_QUE            : 64
MENOS                : 19
MODULE               : 
MODULO               : 23
MULTIPLICACION       : 21
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 68
O_SIGNO              : 
PARENTESIS_DER       : 26 55 58 59 76 77
PARENTESIS_IZ        : 26 55 58 59 76 77
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 28 58
PRINTF               : 
PUNTO                : 51 75 82 83
PUTS                 : 29 59 60
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 
SORT                 : 78
SUPER                : 
TO_F                 : 81
TRES_PUNTOS          : 55
TRIPLE_IGUAL         : 70
TRUE                 : 
UNTIL                : 
VARIABLE             : 16 35 38 39 40 41 48 51 51 71 71 72 73 76 77 82 83 84 85 102 103
VARIABLECLASE        : 36
WHILE                : 
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 77 85
array                : 11 41 47
asignacion           : 2 94
claveValor           : 104 105 105
comentarios          : 13
condicionIf          : 88 89 90 91 92
cuerpo               : 52 0
cuerpo_each          : 51
declaracion          : 88 88 89 91 91 92
each_array           : 12
elemento_array       : 42 43
elemento_hash        : 101
elementos_array      : 42 49
estructura_if        : 8 100
estructura_ifUnaLinea : 32
estructura_secundaria_if : 89 92
expresionNumerica    : 27 27 39
expresiones_booleanas : 5 86 87 87 97
funciones            : 9
funcionesArray       : 82
funcionesComparacion : 87
funcionesEstructuras : 10
funcionesFormatoImpresion : 75
funcionesNumeros     : 83
hashes               : 7 40 99
impresion            : 3 95
impresion_vacia      : 4 96
operacionAritmetica  : 1 25 26 93
operadores           : 27
operadoresComparacion : 69 71 72 73
rangos               : 70
solicitudDatosTeclado : 6 98
soloEnteros          : 55 55
vacio                : 53
valor                : 30 31 32
valorNumerico        : 24 34 69 69 72 73 102
valor_print          : 37
valores              : 31 37

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . impresion
    (4) cuerpo -> . impresion_vacia
    (5) cuerpo -> . expresiones_booleanas
    (6) cuerpo -> . solicitudDatosTeclado
    (7) cuerpo -> . hashes
    (8) cuerpo -> . estructura_if
    (9) cuerpo -> . funciones
    (10) cuerpo -> . funcionesEstructuras
    (11) cuerpo -> . array
    (12) cuerpo -> . each_array
    (13) cuerpo -> . comentarios
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (76) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (77) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (82) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (83) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (49) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (50) array -> . CORCHETE_IZ CORCHETE_DER
    (51) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (56) comentarios -> . COMENTARIO
    (57) comentarios -> . COMENTARIO_MULTI
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    DEF             shift and go to state 27
    CORCHETE_IZ     shift and go to state 28
    COMENTARIO      shift and go to state 29
    COMENTARIO_MULTI shift and go to state 30
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    impresion_vacia                shift and go to state 5
    expresiones_booleanas          shift and go to state 6
    solicitudDatosTeclado          shift and go to state 7
    hashes                         shift and go to state 8
    estructura_if                  shift and go to state 9
    funciones                      shift and go to state 10
    funcionesEstructuras           shift and go to state 11
    array                          shift and go to state 12
    each_array                     shift and go to state 13
    comentarios                    shift and go to state 14
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (25) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 25 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> asignacion .

    $end            reduce using rule 2 (cuerpo -> asignacion .)
    END             reduce using rule 2 (cuerpo -> asignacion .)


state 4

    (3) cuerpo -> impresion .

    $end            reduce using rule 3 (cuerpo -> impresion .)
    END             reduce using rule 3 (cuerpo -> impresion .)


state 5

    (4) cuerpo -> impresion_vacia .

    $end            reduce using rule 4 (cuerpo -> impresion_vacia .)
    END             reduce using rule 4 (cuerpo -> impresion_vacia .)


state 6

    (5) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 5 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 5 (cuerpo -> expresiones_booleanas .)


state 7

    (6) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 6 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 6 (cuerpo -> solicitudDatosTeclado .)


state 8

    (7) cuerpo -> hashes .

    $end            reduce using rule 7 (cuerpo -> hashes .)
    END             reduce using rule 7 (cuerpo -> hashes .)


state 9

    (8) cuerpo -> estructura_if .

    $end            reduce using rule 8 (cuerpo -> estructura_if .)
    END             reduce using rule 8 (cuerpo -> estructura_if .)


state 10

    (9) cuerpo -> funciones .

    $end            reduce using rule 9 (cuerpo -> funciones .)
    END             reduce using rule 9 (cuerpo -> funciones .)


state 11

    (10) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 10 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 10 (cuerpo -> funcionesEstructuras .)


state 12

    (11) cuerpo -> array .

    $end            reduce using rule 11 (cuerpo -> array .)
    END             reduce using rule 11 (cuerpo -> array .)


state 13

    (12) cuerpo -> each_array .

    $end            reduce using rule 12 (cuerpo -> each_array .)
    END             reduce using rule 12 (cuerpo -> each_array .)


state 14

    (13) cuerpo -> comentarios .

    $end            reduce using rule 13 (cuerpo -> comentarios .)
    END             reduce using rule 13 (cuerpo -> comentarios .)


state 15

    (27) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (18) operadores -> . MAS
    (19) operadores -> . MENOS
    (20) operadores -> . DIVISION
    (21) operadores -> . MULTIPLICACION
    (22) operadores -> . EXPONENCIACION
    (23) operadores -> . MODULO

    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    DIVISION        shift and go to state 35
    MULTIPLICACION  shift and go to state 36
    EXPONENCIACION  shift and go to state 37
    MODULO          shift and go to state 38

    operadores                     shift and go to state 32

state 16

    (38) asignacion -> VARIABLE . IGUAL CADENA
    (39) asignacion -> VARIABLE . IGUAL expresionNumerica
    (40) asignacion -> VARIABLE . IGUAL hashes
    (41) asignacion -> VARIABLE . IGUAL array
    (71) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (82) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (83) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (51) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (16) valorNumerico -> VARIABLE .
    (61) operadoresComparacion -> . DOBLE_IGUAL
    (62) operadoresComparacion -> . DIFERENTE
    (63) operadoresComparacion -> . MAYOR_QUE
    (64) operadoresComparacion -> . MENOR_QUE
    (65) operadoresComparacion -> . MENOR_IGUAL_QUE
    (66) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 39
    PUNTO           shift and go to state 41
    MAS             reduce using rule 16 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 16 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 16 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 16 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 42
    DIFERENTE       shift and go to state 43
    MAYOR_QUE       shift and go to state 44
    MENOR_QUE       shift and go to state 45
    MENOR_IGUAL_QUE shift and go to state 46
    MAYOR_IGUAL_QUE shift and go to state 47

  ! DOBLE_IGUAL     [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 40

state 17

    (37) impresion -> valor_print . valores
    (30) valores -> . valor
    (31) valores -> . valor COMA valores
    (32) valores -> . valor estructura_ifUnaLinea
    (33) valor -> . CADENA
    (34) valor -> . valorNumerico
    (35) valor -> . VARIABLE
    (36) valor -> . VARIABLECLASE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 50
    VARIABLE        shift and go to state 52
    VARIABLECLASE   shift and go to state 53
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    valores                        shift and go to state 48
    valor                          shift and go to state 49
    valorNumerico                  shift and go to state 51

state 18

    (58) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (28) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 54
    CADENA          reduce using rule 28 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 28 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 28 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 28 (valor_print -> PRINT .)
    ENTERO          reduce using rule 28 (valor_print -> PRINT .)


state 19

    (26) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (55) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (17) soloEnteros -> . ENTERO
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    ENTERO          shift and go to state 58
    PARENTESIS_IZ   shift and go to state 55
    FLOTANTE        shift and go to state 31
    VARIABLE        shift and go to state 60

    operacionAritmetica            shift and go to state 56
    soloEnteros                    shift and go to state 57
    expresionNumerica              shift and go to state 15
    valorNumerico                  shift and go to state 59

state 20

    (59) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> PUTS .
    (29) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 61
    $end            reduce using rule 60 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 60 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 60 (impresion_vacia -> PUTS .)
    END             reduce using rule 60 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 29 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 29 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 29 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 29 (valor_print -> PUTS .)
    ENTERO          reduce using rule 29 (valor_print -> PUTS .)


state 21

    (69) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (24) expresionNumerica -> valorNumerico .
    (61) operadoresComparacion -> . DOBLE_IGUAL
    (62) operadoresComparacion -> . DIFERENTE
    (63) operadoresComparacion -> . MAYOR_QUE
    (64) operadoresComparacion -> . MENOR_QUE
    (65) operadoresComparacion -> . MENOR_IGUAL_QUE
    (66) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 24 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 24 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 24 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 42
    DIFERENTE       shift and go to state 43
    MAYOR_QUE       shift and go to state 44
    MENOR_QUE       shift and go to state 45
    MENOR_IGUAL_QUE shift and go to state 46
    MAYOR_IGUAL_QUE shift and go to state 47

    operadoresComparacion          shift and go to state 62

state 22

    (70) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 63


state 23

    (15) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 15 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 15 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 15 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 15 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 15 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 15 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 15 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 15 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 15 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 15 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 15 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 15 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 15 (valorNumerico -> ENTERO .)
    IF              reduce using rule 15 (valorNumerico -> ENTERO .)
    $end            reduce using rule 15 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 15 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 15 (valorNumerico -> ENTERO .)
    END             reduce using rule 15 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 15 (valorNumerico -> ENTERO .)
    AND             reduce using rule 15 (valorNumerico -> ENTERO .)
    OR              reduce using rule 15 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 15 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 15 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 15 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 15 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 15 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 15 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 15 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 15 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 15 (valorNumerico -> ENTERO .)


state 24

    (74) solicitudDatosTeclado -> GETS .
    (75) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 74 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 74 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 74 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 74 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 64


state 25

    (101) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (104) elemento_hash -> . claveValor
    (105) elemento_hash -> . claveValor COMA claveValor
    (102) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (103) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 67

    elemento_hash                  shift and go to state 65
    claveValor                     shift and go to state 66

state 26

    (88) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (86) condicionIf -> . expresiones_booleanas
    (87) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 71
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    PARENTESIS_IZ   shift and go to state 72

    condicionIf                    shift and go to state 68
    expresiones_booleanas          shift and go to state 69
    valorNumerico                  shift and go to state 70
    rangos                         shift and go to state 22

state 27

    (76) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (77) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END

    VARIABLE        shift and go to state 73


state 28

    (49) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (50) array -> CORCHETE_IZ . CORCHETE_DER
    (42) elementos_array -> . elemento_array COMA elementos_array
    (43) elementos_array -> . elemento_array
    (44) elemento_array -> . CADENA
    (45) elemento_array -> . ENTERO
    (46) elemento_array -> . FLOTANTE
    (47) elemento_array -> . array
    (48) elemento_array -> . VARIABLE
    (49) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (50) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 75
    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    VARIABLE        shift and go to state 81
    CORCHETE_IZ     shift and go to state 28

    elementos_array                shift and go to state 74
    elemento_array                 shift and go to state 76
    array                          shift and go to state 80

state 29

    (56) comentarios -> COMENTARIO .

    $end            reduce using rule 56 (comentarios -> COMENTARIO .)
    END             reduce using rule 56 (comentarios -> COMENTARIO .)


state 30

    (57) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 57 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 57 (comentarios -> COMENTARIO_MULTI .)


state 31

    (14) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 14 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 14 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 14 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 14 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 14 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 14 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 14 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 14 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 14 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 14 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 14 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 14 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 14 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 14 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 14 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 14 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 14 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 14 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 14 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 14 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 14 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 14 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 14 (valorNumerico -> FLOTANTE .)


state 32

    (27) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 55
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    VARIABLE        shift and go to state 60

    expresionNumerica              shift and go to state 82
    valorNumerico                  shift and go to state 59
    operacionAritmetica            shift and go to state 83

state 33

    (18) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 18 (operadores -> MAS .)
    FLOTANTE        reduce using rule 18 (operadores -> MAS .)
    ENTERO          reduce using rule 18 (operadores -> MAS .)
    VARIABLE        reduce using rule 18 (operadores -> MAS .)


state 34

    (19) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 19 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 19 (operadores -> MENOS .)
    ENTERO          reduce using rule 19 (operadores -> MENOS .)
    VARIABLE        reduce using rule 19 (operadores -> MENOS .)


state 35

    (20) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 20 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 20 (operadores -> DIVISION .)
    ENTERO          reduce using rule 20 (operadores -> DIVISION .)
    VARIABLE        reduce using rule 20 (operadores -> DIVISION .)


state 36

    (21) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 21 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 21 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 21 (operadores -> MULTIPLICACION .)
    VARIABLE        reduce using rule 21 (operadores -> MULTIPLICACION .)


state 37

    (22) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 22 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 22 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 22 (operadores -> EXPONENCIACION .)
    VARIABLE        reduce using rule 22 (operadores -> EXPONENCIACION .)


state 38

    (23) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 23 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 23 (operadores -> MODULO .)
    ENTERO          reduce using rule 23 (operadores -> MODULO .)
    VARIABLE        reduce using rule 23 (operadores -> MODULO .)


state 39

    (38) asignacion -> VARIABLE IGUAL . CADENA
    (39) asignacion -> VARIABLE IGUAL . expresionNumerica
    (40) asignacion -> VARIABLE IGUAL . hashes
    (41) asignacion -> VARIABLE IGUAL . array
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (49) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (50) array -> . CORCHETE_IZ CORCHETE_DER
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    CADENA          shift and go to state 84
    PARENTESIS_IZ   shift and go to state 55
    LLAVE_IZ        shift and go to state 25
    CORCHETE_IZ     shift and go to state 28
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    VARIABLE        shift and go to state 60

    expresionNumerica              shift and go to state 85
    hashes                         shift and go to state 86
    array                          shift and go to state 87
    valorNumerico                  shift and go to state 59
    operacionAritmetica            shift and go to state 83

state 40

    (71) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (72) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 88
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    valorNumerico                  shift and go to state 89

state 41

    (82) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (83) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (51) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (78) funcionesArray -> . SORT
    (79) funcionesArray -> . FOR EACH
    (81) funcionesNumeros -> . TO_F

    DO              shift and go to state 92
    SORT            shift and go to state 93
    FOR             shift and go to state 94
    TO_F            shift and go to state 95

    funcionesArray                 shift and go to state 90
    funcionesNumeros               shift and go to state 91

state 42

    (61) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 61 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 61 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 61 (operadoresComparacion -> DOBLE_IGUAL .)


state 43

    (62) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 62 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 62 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 62 (operadoresComparacion -> DIFERENTE .)


state 44

    (63) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 63 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 63 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 63 (operadoresComparacion -> MAYOR_QUE .)


state 45

    (64) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 64 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 64 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 64 (operadoresComparacion -> MENOR_QUE .)


state 46

    (65) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 65 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 65 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 65 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 47

    (66) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 66 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 66 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 66 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 48

    (37) impresion -> valor_print valores .

    $end            reduce using rule 37 (impresion -> valor_print valores .)
    ELSE            reduce using rule 37 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 37 (impresion -> valor_print valores .)
    END             reduce using rule 37 (impresion -> valor_print valores .)


state 49

    (30) valores -> valor .
    (31) valores -> valor . COMA valores
    (32) valores -> valor . estructura_ifUnaLinea
    (90) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 30 (valores -> valor .)
    ELSE            reduce using rule 30 (valores -> valor .)
    ELSEIF          reduce using rule 30 (valores -> valor .)
    END             reduce using rule 30 (valores -> valor .)
    COMA            shift and go to state 96
    IF              shift and go to state 98

    estructura_ifUnaLinea          shift and go to state 97

state 50

    (33) valor -> CADENA .

    COMA            reduce using rule 33 (valor -> CADENA .)
    IF              reduce using rule 33 (valor -> CADENA .)
    $end            reduce using rule 33 (valor -> CADENA .)
    ELSE            reduce using rule 33 (valor -> CADENA .)
    ELSEIF          reduce using rule 33 (valor -> CADENA .)
    END             reduce using rule 33 (valor -> CADENA .)


state 51

    (34) valor -> valorNumerico .

    COMA            reduce using rule 34 (valor -> valorNumerico .)
    IF              reduce using rule 34 (valor -> valorNumerico .)
    $end            reduce using rule 34 (valor -> valorNumerico .)
    ELSE            reduce using rule 34 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 34 (valor -> valorNumerico .)
    END             reduce using rule 34 (valor -> valorNumerico .)


state 52

    (35) valor -> VARIABLE .
    (16) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for COMA resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for $end resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 16 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 16 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 16 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 16 (valorNumerico -> VARIABLE .)
    END             reduce using rule 16 (valorNumerico -> VARIABLE .)

  ! COMA            [ reduce using rule 35 (valor -> VARIABLE .) ]
  ! IF              [ reduce using rule 35 (valor -> VARIABLE .) ]
  ! $end            [ reduce using rule 35 (valor -> VARIABLE .) ]
  ! ELSE            [ reduce using rule 35 (valor -> VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 35 (valor -> VARIABLE .) ]
  ! END             [ reduce using rule 35 (valor -> VARIABLE .) ]


state 53

    (36) valor -> VARIABLECLASE .

    COMA            reduce using rule 36 (valor -> VARIABLECLASE .)
    IF              reduce using rule 36 (valor -> VARIABLECLASE .)
    $end            reduce using rule 36 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 36 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 36 (valor -> VARIABLECLASE .)
    END             reduce using rule 36 (valor -> VARIABLECLASE .)


state 54

    (58) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 99


state 55

    (26) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    PARENTESIS_IZ   shift and go to state 55
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    VARIABLE        shift and go to state 60

    operacionAritmetica            shift and go to state 56
    expresionNumerica              shift and go to state 15
    valorNumerico                  shift and go to state 59

state 56

    (26) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (25) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 100
    MAS             reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 25 (expresionNumerica -> operacionAritmetica .)


state 57

    (55) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 101


state 58

    (17) soloEnteros -> ENTERO .
    (15) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 17 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 15 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 15 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 15 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 15 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 15 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 15 (valorNumerico -> ENTERO .)


state 59

    (24) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 24 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 24 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 24 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 24 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 24 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 24 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 24 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 24 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 24 (expresionNumerica -> valorNumerico .)


state 60

    (16) valorNumerico -> VARIABLE .

    MAS             reduce using rule 16 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 16 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 16 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 16 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 16 (valorNumerico -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 16 (valorNumerico -> VARIABLE .)
    END             reduce using rule 16 (valorNumerico -> VARIABLE .)
    COMA            reduce using rule 16 (valorNumerico -> VARIABLE .)
    LLAVE_DER       reduce using rule 16 (valorNumerico -> VARIABLE .)


state 61

    (59) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 102


state 62

    (69) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (73) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    VARIABLE        shift and go to state 104
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    valorNumerico                  shift and go to state 103

state 63

    (70) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 105


state 64

    (75) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (80) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 107

    funcionesFormatoImpresion      shift and go to state 106

state 65

    (101) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 108


state 66

    (104) elemento_hash -> claveValor .
    (105) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 104 (elemento_hash -> claveValor .)
    COMA            shift and go to state 109


state 67

    (102) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (103) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 110


state 68

    (88) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (89) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (93) declaracion -> . operacionAritmetica
    (94) declaracion -> . asignacion
    (95) declaracion -> . impresion
    (96) declaracion -> . impresion_vacia
    (97) declaracion -> . expresiones_booleanas
    (98) declaracion -> . solicitudDatosTeclado
    (99) declaracion -> . hashes
    (100) declaracion -> . estructura_if
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    declaracion                    shift and go to state 111
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 116
    solicitudDatosTeclado          shift and go to state 117
    hashes                         shift and go to state 118
    estructura_if                  shift and go to state 119
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 69

    (86) condicionIf -> expresiones_booleanas .
    (87) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (67) funcionesComparacion -> . AND
    (68) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 86 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 122
    OR              shift and go to state 123

    funcionesComparacion           shift and go to state 121

state 70

    (69) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (61) operadoresComparacion -> . DOBLE_IGUAL
    (62) operadoresComparacion -> . DIFERENTE
    (63) operadoresComparacion -> . MAYOR_QUE
    (64) operadoresComparacion -> . MENOR_QUE
    (65) operadoresComparacion -> . MENOR_IGUAL_QUE
    (66) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 42
    DIFERENTE       shift and go to state 43
    MAYOR_QUE       shift and go to state 44
    MENOR_QUE       shift and go to state 45
    MENOR_IGUAL_QUE shift and go to state 46
    MAYOR_IGUAL_QUE shift and go to state 47

    operadoresComparacion          shift and go to state 62

state 71

    (71) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (16) valorNumerico -> VARIABLE .
    (61) operadoresComparacion -> . DOBLE_IGUAL
    (62) operadoresComparacion -> . DIFERENTE
    (63) operadoresComparacion -> . MAYOR_QUE
    (64) operadoresComparacion -> . MENOR_QUE
    (65) operadoresComparacion -> . MENOR_IGUAL_QUE
    (66) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    DOBLE_IGUAL     shift and go to state 42
    DIFERENTE       shift and go to state 43
    MAYOR_QUE       shift and go to state 44
    MENOR_QUE       shift and go to state 45
    MENOR_IGUAL_QUE shift and go to state 46
    MAYOR_IGUAL_QUE shift and go to state 47

  ! DOBLE_IGUAL     [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 40

state 72

    (55) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (17) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 124

    soloEnteros                    shift and go to state 57

state 73

    (76) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER END
    (77) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER END

    PARENTESIS_IZ   shift and go to state 125


state 74

    (49) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 126


state 75

    (50) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 50 (array -> CORCHETE_IZ CORCHETE_DER .)


state 76

    (42) elementos_array -> elemento_array . COMA elementos_array
    (43) elementos_array -> elemento_array .

    COMA            shift and go to state 127
    CORCHETE_DER    reduce using rule 43 (elementos_array -> elemento_array .)


state 77

    (44) elemento_array -> CADENA .

    COMA            reduce using rule 44 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 44 (elemento_array -> CADENA .)


state 78

    (45) elemento_array -> ENTERO .

    COMA            reduce using rule 45 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 45 (elemento_array -> ENTERO .)


state 79

    (46) elemento_array -> FLOTANTE .

    COMA            reduce using rule 46 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 46 (elemento_array -> FLOTANTE .)


state 80

    (47) elemento_array -> array .

    COMA            reduce using rule 47 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 47 (elemento_array -> array .)


state 81

    (48) elemento_array -> VARIABLE .

    COMA            reduce using rule 48 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 48 (elemento_array -> VARIABLE .)


state 82

    (27) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (27) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (18) operadores -> . MAS
    (19) operadores -> . MENOS
    (20) operadores -> . DIVISION
    (21) operadores -> . MULTIPLICACION
    (22) operadores -> . EXPONENCIACION
    (23) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    DIVISION        shift and go to state 35
    MULTIPLICACION  shift and go to state 36
    EXPONENCIACION  shift and go to state 37
    MODULO          shift and go to state 38

  ! MAS             [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 27 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 32

state 83

    (25) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 25 (expresionNumerica -> operacionAritmetica .)


state 84

    (38) asignacion -> VARIABLE IGUAL CADENA .

    $end            reduce using rule 38 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 38 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 38 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 38 (asignacion -> VARIABLE IGUAL CADENA .)


state 85

    (39) asignacion -> VARIABLE IGUAL expresionNumerica .
    (27) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (18) operadores -> . MAS
    (19) operadores -> . MENOS
    (20) operadores -> . DIVISION
    (21) operadores -> . MULTIPLICACION
    (22) operadores -> . EXPONENCIACION
    (23) operadores -> . MODULO

    $end            reduce using rule 39 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 39 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 39 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 39 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 33
    MENOS           shift and go to state 34
    DIVISION        shift and go to state 35
    MULTIPLICACION  shift and go to state 36
    EXPONENCIACION  shift and go to state 37
    MODULO          shift and go to state 38

    operadores                     shift and go to state 32

state 86

    (40) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 40 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 40 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 40 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 40 (asignacion -> VARIABLE IGUAL hashes .)


state 87

    (41) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 41 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 41 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 41 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 41 (asignacion -> VARIABLE IGUAL array .)


state 88

    (71) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .
    (16) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 16 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 16 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 16 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 16 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 16 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 16 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 16 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 16 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 16 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 16 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 16 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 16 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 16 (valorNumerico -> VARIABLE .)
    END             reduce using rule 16 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 71 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .) ]


state 89

    (72) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 72 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 90

    (82) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 82 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 82 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 91

    (83) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 83 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 83 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 92

    (51) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 128


state 93

    (78) funcionesArray -> SORT .

    $end            reduce using rule 78 (funcionesArray -> SORT .)
    END             reduce using rule 78 (funcionesArray -> SORT .)


state 94

    (79) funcionesArray -> FOR . EACH

    EACH            shift and go to state 129


state 95

    (81) funcionesNumeros -> TO_F .

    $end            reduce using rule 81 (funcionesNumeros -> TO_F .)
    END             reduce using rule 81 (funcionesNumeros -> TO_F .)


state 96

    (31) valores -> valor COMA . valores
    (30) valores -> . valor
    (31) valores -> . valor COMA valores
    (32) valores -> . valor estructura_ifUnaLinea
    (33) valor -> . CADENA
    (34) valor -> . valorNumerico
    (35) valor -> . VARIABLE
    (36) valor -> . VARIABLECLASE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 50
    VARIABLE        shift and go to state 52
    VARIABLECLASE   shift and go to state 53
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    valor                          shift and go to state 49
    valores                        shift and go to state 130
    valorNumerico                  shift and go to state 51

state 97

    (32) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 32 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 32 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 32 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 32 (valores -> valor estructura_ifUnaLinea .)


state 98

    (90) estructura_ifUnaLinea -> IF . condicionIf
    (86) condicionIf -> . expresiones_booleanas
    (87) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 71
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    PARENTESIS_IZ   shift and go to state 72

    condicionIf                    shift and go to state 131
    expresiones_booleanas          shift and go to state 69
    valorNumerico                  shift and go to state 70
    rangos                         shift and go to state 22

state 99

    (58) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 58 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 58 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 58 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 58 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 100

    (26) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 26 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 101

    (55) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (17) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 124

    soloEnteros                    shift and go to state 132

state 102

    (59) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 59 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 59 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 59 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 59 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 103

    (69) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 69 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 104

    (73) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .
    (16) valorNumerico -> VARIABLE .

  ! reduce/reduce conflict for $end resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for AND resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for OR resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PRINT resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PUTS resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for GETS resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for LLAVE_IZ resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for IF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for PARENTESIS_IZ resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for FLOTANTE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ENTERO resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSE resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for ELSEIF resolved using rule 16 (valorNumerico -> VARIABLE .)
  ! reduce/reduce conflict for END resolved using rule 16 (valorNumerico -> VARIABLE .)
    $end            reduce using rule 16 (valorNumerico -> VARIABLE .)
    AND             reduce using rule 16 (valorNumerico -> VARIABLE .)
    OR              reduce using rule 16 (valorNumerico -> VARIABLE .)
    VARIABLE        reduce using rule 16 (valorNumerico -> VARIABLE .)
    PRINT           reduce using rule 16 (valorNumerico -> VARIABLE .)
    PUTS            reduce using rule 16 (valorNumerico -> VARIABLE .)
    GETS            reduce using rule 16 (valorNumerico -> VARIABLE .)
    LLAVE_IZ        reduce using rule 16 (valorNumerico -> VARIABLE .)
    IF              reduce using rule 16 (valorNumerico -> VARIABLE .)
    PARENTESIS_IZ   reduce using rule 16 (valorNumerico -> VARIABLE .)
    FLOTANTE        reduce using rule 16 (valorNumerico -> VARIABLE .)
    ENTERO          reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSE            reduce using rule 16 (valorNumerico -> VARIABLE .)
    ELSEIF          reduce using rule 16 (valorNumerico -> VARIABLE .)
    END             reduce using rule 16 (valorNumerico -> VARIABLE .)

  ! $end            [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! AND             [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! OR              [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! VARIABLE        [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PRINT           [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PUTS            [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! GETS            [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! LLAVE_IZ        [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! IF              [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! PARENTESIS_IZ   [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! FLOTANTE        [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ENTERO          [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSE            [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! ELSEIF          [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]
  ! END             [ reduce using rule 73 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .) ]


state 105

    (70) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 70 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 106

    (75) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 75 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 75 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 75 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 75 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 107

    (80) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 80 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 80 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 80 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 80 (funcionesFormatoImpresion -> CHOMP .)


state 108

    (101) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 101 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 101 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 101 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 101 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 109

    (105) elemento_hash -> claveValor COMA . claveValor
    (102) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (103) claveValor -> . VARIABLE ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 67

    claveValor                     shift and go to state 133

state 110

    (102) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (103) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE

    CADENA          shift and go to state 135
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    VARIABLE        shift and go to state 60

    valorNumerico                  shift and go to state 134

state 111

    (88) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (89) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (91) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (92) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 136
    ELSEIF          shift and go to state 138

    estructura_secundaria_if       shift and go to state 137

state 112

    (93) declaracion -> operacionAritmetica .
    (25) expresionNumerica -> operacionAritmetica .

    ELSE            reduce using rule 93 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 93 (declaracion -> operacionAritmetica .)
    END             reduce using rule 93 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 25 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 25 (expresionNumerica -> operacionAritmetica .)


state 113

    (94) declaracion -> asignacion .

    ELSE            reduce using rule 94 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 94 (declaracion -> asignacion .)
    END             reduce using rule 94 (declaracion -> asignacion .)


state 114

    (95) declaracion -> impresion .

    ELSE            reduce using rule 95 (declaracion -> impresion .)
    ELSEIF          reduce using rule 95 (declaracion -> impresion .)
    END             reduce using rule 95 (declaracion -> impresion .)


state 115

    (96) declaracion -> impresion_vacia .

    ELSE            reduce using rule 96 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 96 (declaracion -> impresion_vacia .)
    END             reduce using rule 96 (declaracion -> impresion_vacia .)


state 116

    (97) declaracion -> expresiones_booleanas .

    ELSE            reduce using rule 97 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 97 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 97 (declaracion -> expresiones_booleanas .)


state 117

    (98) declaracion -> solicitudDatosTeclado .

    ELSE            reduce using rule 98 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 98 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 98 (declaracion -> solicitudDatosTeclado .)


state 118

    (99) declaracion -> hashes .

    ELSE            reduce using rule 99 (declaracion -> hashes .)
    ELSEIF          reduce using rule 99 (declaracion -> hashes .)
    END             reduce using rule 99 (declaracion -> hashes .)


state 119

    (100) declaracion -> estructura_if .

    ELSE            reduce using rule 100 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 100 (declaracion -> estructura_if .)
    END             reduce using rule 100 (declaracion -> estructura_if .)


state 120

    (38) asignacion -> VARIABLE . IGUAL CADENA
    (39) asignacion -> VARIABLE . IGUAL expresionNumerica
    (40) asignacion -> VARIABLE . IGUAL hashes
    (41) asignacion -> VARIABLE . IGUAL array
    (71) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (16) valorNumerico -> VARIABLE .
    (61) operadoresComparacion -> . DOBLE_IGUAL
    (62) operadoresComparacion -> . DIFERENTE
    (63) operadoresComparacion -> . MAYOR_QUE
    (64) operadoresComparacion -> . MENOR_QUE
    (65) operadoresComparacion -> . MENOR_IGUAL_QUE
    (66) operadoresComparacion -> . MAYOR_IGUAL_QUE

  ! shift/reduce conflict for DOBLE_IGUAL resolved as shift
  ! shift/reduce conflict for DIFERENTE resolved as shift
  ! shift/reduce conflict for MAYOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_QUE resolved as shift
  ! shift/reduce conflict for MENOR_IGUAL_QUE resolved as shift
  ! shift/reduce conflict for MAYOR_IGUAL_QUE resolved as shift
    IGUAL           shift and go to state 39
    MAS             reduce using rule 16 (valorNumerico -> VARIABLE .)
    MENOS           reduce using rule 16 (valorNumerico -> VARIABLE .)
    DIVISION        reduce using rule 16 (valorNumerico -> VARIABLE .)
    MULTIPLICACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    EXPONENCIACION  reduce using rule 16 (valorNumerico -> VARIABLE .)
    MODULO          reduce using rule 16 (valorNumerico -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 42
    DIFERENTE       shift and go to state 43
    MAYOR_QUE       shift and go to state 44
    MENOR_QUE       shift and go to state 45
    MENOR_IGUAL_QUE shift and go to state 46
    MAYOR_IGUAL_QUE shift and go to state 47

  ! DOBLE_IGUAL     [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! DIFERENTE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_QUE       [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MENOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]
  ! MAYOR_IGUAL_QUE [ reduce using rule 16 (valorNumerico -> VARIABLE .) ]

    operadoresComparacion          shift and go to state 40

state 121

    (87) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 71
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    PARENTESIS_IZ   shift and go to state 72

    expresiones_booleanas          shift and go to state 139
    valorNumerico                  shift and go to state 70
    rangos                         shift and go to state 22

state 122

    (67) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 67 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 67 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 67 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 67 (funcionesComparacion -> AND .)


state 123

    (68) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 68 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 68 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 68 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 68 (funcionesComparacion -> OR .)


state 124

    (17) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 17 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 17 (soloEnteros -> ENTERO .)


state 125

    (76) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER END
    (77) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER END
    (84) argumentos -> . VARIABLE
    (85) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 141
    VARIABLE        shift and go to state 140

    argumentos                     shift and go to state 142

state 126

    (49) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 49 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 127

    (42) elementos_array -> elemento_array COMA . elementos_array
    (42) elementos_array -> . elemento_array COMA elementos_array
    (43) elementos_array -> . elemento_array
    (44) elemento_array -> . CADENA
    (45) elemento_array -> . ENTERO
    (46) elemento_array -> . FLOTANTE
    (47) elemento_array -> . array
    (48) elemento_array -> . VARIABLE
    (49) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (50) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 77
    ENTERO          shift and go to state 78
    FLOTANTE        shift and go to state 79
    VARIABLE        shift and go to state 81
    CORCHETE_IZ     shift and go to state 28

    elemento_array                 shift and go to state 76
    elementos_array                shift and go to state 143
    array                          shift and go to state 80

state 128

    (51) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 144


state 129

    (79) funcionesArray -> FOR EACH .

    $end            reduce using rule 79 (funcionesArray -> FOR EACH .)
    END             reduce using rule 79 (funcionesArray -> FOR EACH .)


state 130

    (31) valores -> valor COMA valores .

    $end            reduce using rule 31 (valores -> valor COMA valores .)
    ELSE            reduce using rule 31 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 31 (valores -> valor COMA valores .)
    END             reduce using rule 31 (valores -> valor COMA valores .)


state 131

    (90) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 90 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 90 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 90 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 90 (estructura_ifUnaLinea -> IF condicionIf .)


state 132

    (55) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 145


state 133

    (105) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 105 (elemento_hash -> claveValor COMA claveValor .)


state 134

    (102) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 102 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 102 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 135

    (103) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 103 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 103 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 136

    (88) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (93) declaracion -> . operacionAritmetica
    (94) declaracion -> . asignacion
    (95) declaracion -> . impresion
    (96) declaracion -> . impresion_vacia
    (97) declaracion -> . expresiones_booleanas
    (98) declaracion -> . solicitudDatosTeclado
    (99) declaracion -> . hashes
    (100) declaracion -> . estructura_if
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    declaracion                    shift and go to state 146
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 116
    solicitudDatosTeclado          shift and go to state 117
    hashes                         shift and go to state 118
    estructura_if                  shift and go to state 119
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 137

    (89) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 89 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 89 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 89 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 89 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 138

    (91) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (92) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (86) condicionIf -> . expresiones_booleanas
    (87) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 71
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23
    PARENTESIS_IZ   shift and go to state 72

    condicionIf                    shift and go to state 147
    expresiones_booleanas          shift and go to state 69
    valorNumerico                  shift and go to state 70
    rangos                         shift and go to state 22

state 139

    (87) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 87 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 140

    (84) argumentos -> VARIABLE .
    (85) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 84 (argumentos -> VARIABLE .)
    COMA            shift and go to state 148


state 141

    (76) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . END

    END             shift and go to state 149


state 142

    (77) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER END

    PARENTESIS_DER  shift and go to state 150


state 143

    (42) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 42 (elementos_array -> elemento_array COMA elementos_array .)


state 144

    (51) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 151


state 145

    (55) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 55 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 146

    (88) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 152


state 147

    (91) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (92) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (93) declaracion -> . operacionAritmetica
    (94) declaracion -> . asignacion
    (95) declaracion -> . impresion
    (96) declaracion -> . impresion_vacia
    (97) declaracion -> . expresiones_booleanas
    (98) declaracion -> . solicitudDatosTeclado
    (99) declaracion -> . hashes
    (100) declaracion -> . estructura_if
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    declaracion                    shift and go to state 153
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 116
    solicitudDatosTeclado          shift and go to state 117
    hashes                         shift and go to state 118
    estructura_if                  shift and go to state 119
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 148

    (85) argumentos -> VARIABLE COMA . argumentos
    (84) argumentos -> . VARIABLE
    (85) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 140

    argumentos                     shift and go to state 154

state 149

    (76) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .

    $end            reduce using rule 76 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)
    END             reduce using rule 76 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END .)


state 150

    (77) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . END

    END             shift and go to state 155


state 151

    (51) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (52) cuerpo_each -> . cuerpo
    (53) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . asignacion
    (3) cuerpo -> . impresion
    (4) cuerpo -> . impresion_vacia
    (5) cuerpo -> . expresiones_booleanas
    (6) cuerpo -> . solicitudDatosTeclado
    (7) cuerpo -> . hashes
    (8) cuerpo -> . estructura_if
    (9) cuerpo -> . funciones
    (10) cuerpo -> . funcionesEstructuras
    (11) cuerpo -> . array
    (12) cuerpo -> . each_array
    (13) cuerpo -> . comentarios
    (54) vacio -> .
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (76) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER END
    (77) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END
    (82) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (83) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (49) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (50) array -> . CORCHETE_IZ CORCHETE_DER
    (51) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (56) comentarios -> . COMENTARIO
    (57) comentarios -> . COMENTARIO_MULTI
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    END             reduce using rule 54 (vacio -> .)
    VARIABLE        shift and go to state 16
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    DEF             shift and go to state 27
    CORCHETE_IZ     shift and go to state 28
    COMENTARIO      shift and go to state 29
    COMENTARIO_MULTI shift and go to state 30
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    cuerpo_each                    shift and go to state 156
    cuerpo                         shift and go to state 157
    vacio                          shift and go to state 158
    operacionAritmetica            shift and go to state 2
    asignacion                     shift and go to state 3
    impresion                      shift and go to state 4
    impresion_vacia                shift and go to state 5
    expresiones_booleanas          shift and go to state 6
    solicitudDatosTeclado          shift and go to state 7
    hashes                         shift and go to state 8
    estructura_if                  shift and go to state 9
    funciones                      shift and go to state 10
    funcionesEstructuras           shift and go to state 11
    array                          shift and go to state 12
    each_array                     shift and go to state 13
    comentarios                    shift and go to state 14
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 152

    (88) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 88 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 88 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 88 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 88 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 153

    (91) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (92) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (91) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (92) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 159
    ELSEIF          shift and go to state 138

    estructura_secundaria_if       shift and go to state 160

state 154

    (85) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 85 (argumentos -> VARIABLE COMA argumentos .)


state 155

    (77) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .

    $end            reduce using rule 77 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)
    END             reduce using rule 77 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER END .)


state 156

    (51) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 161


state 157

    (52) cuerpo_each -> cuerpo .

    END             reduce using rule 52 (cuerpo_each -> cuerpo .)


state 158

    (53) cuerpo_each -> vacio .

    END             reduce using rule 53 (cuerpo_each -> vacio .)


state 159

    (91) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (93) declaracion -> . operacionAritmetica
    (94) declaracion -> . asignacion
    (95) declaracion -> . impresion
    (96) declaracion -> . impresion_vacia
    (97) declaracion -> . expresiones_booleanas
    (98) declaracion -> . solicitudDatosTeclado
    (99) declaracion -> . hashes
    (100) declaracion -> . estructura_if
    (27) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (38) asignacion -> . VARIABLE IGUAL CADENA
    (39) asignacion -> . VARIABLE IGUAL expresionNumerica
    (40) asignacion -> . VARIABLE IGUAL hashes
    (41) asignacion -> . VARIABLE IGUAL array
    (37) impresion -> . valor_print valores
    (58) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (59) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (60) impresion_vacia -> . PUTS
    (69) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (70) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (71) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (72) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (73) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (74) solicitudDatosTeclado -> . GETS
    (75) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (101) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (88) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (89) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (24) expresionNumerica -> . valorNumerico
    (25) expresionNumerica -> . operacionAritmetica
    (26) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valor_print -> . PRINT
    (29) valor_print -> . PUTS
    (14) valorNumerico -> . FLOTANTE
    (15) valorNumerico -> . ENTERO
    (16) valorNumerico -> . VARIABLE
    (55) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 120
    PRINT           shift and go to state 18
    PUTS            shift and go to state 20
    GETS            shift and go to state 24
    LLAVE_IZ        shift and go to state 25
    IF              shift and go to state 26
    PARENTESIS_IZ   shift and go to state 19
    FLOTANTE        shift and go to state 31
    ENTERO          shift and go to state 23

    declaracion                    shift and go to state 162
    operacionAritmetica            shift and go to state 112
    asignacion                     shift and go to state 113
    impresion                      shift and go to state 114
    impresion_vacia                shift and go to state 115
    expresiones_booleanas          shift and go to state 116
    solicitudDatosTeclado          shift and go to state 117
    hashes                         shift and go to state 118
    estructura_if                  shift and go to state 119
    expresionNumerica              shift and go to state 15
    valor_print                    shift and go to state 17
    valorNumerico                  shift and go to state 21
    rangos                         shift and go to state 22

state 160

    (92) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 92 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 92 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 92 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 92 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 161

    (51) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 51 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 51 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 162

    (91) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 163


state 163

    (91) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 91 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 91 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 91 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 91 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 16 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 16 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 16 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 16 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 71 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 71 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 71 resolved as shift
WARNING: shift/reduce conflict for MAS in state 82 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 82 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 82 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 82 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 82 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 82 resolved as shift
WARNING: shift/reduce conflict for DOBLE_IGUAL in state 120 resolved as shift
WARNING: shift/reduce conflict for DIFERENTE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MENOR_IGUAL_QUE in state 120 resolved as shift
WARNING: shift/reduce conflict for MAYOR_IGUAL_QUE in state 120 resolved as shift
WARNING: reduce/reduce conflict in state 52 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (valor -> VARIABLE) in state 52
WARNING: reduce/reduce conflict in state 88 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) in state 88
WARNING: reduce/reduce conflict in state 104 resolved using rule (valorNumerico -> VARIABLE)
WARNING: rejected rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) in state 104
WARNING: Rule (valor -> VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE) is never reduced
WARNING: Rule (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE) is never reduced
