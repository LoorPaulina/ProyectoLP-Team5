Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    BEGIN
    BREAK
    COMILLA_D
    COMILLA_S
    DEFINED_QUESTION
    ENSURE
    EXCLAMACION_ALTO
    EXCLAMACION_BAJO
    FALSE
    IN
    MODULE
    NEXT
    NIL
    NOT
    O_SIGNO
    PORCENTAJE
    PREGUNTA
    PRINTF
    RAISE
    REDO
    RESCUE
    RETRY
    RETURN
    SELF
    SUPER
    TRUE
    YIELD
    Y_SIGNO

Grammar

Rule 0     S' -> cuerpo
Rule 1     cuerpo -> operacionAritmetica
Rule 2     cuerpo -> input_concatenacion
Rule 3     cuerpo -> asignacion
Rule 4     cuerpo -> impresion
Rule 5     cuerpo -> impresion_vacia
Rule 6     cuerpo -> expresiones_booleanas
Rule 7     cuerpo -> solicitudDatosTeclado
Rule 8     cuerpo -> hashes
Rule 9     cuerpo -> estructura_if
Rule 10    cuerpo -> funciones
Rule 11    cuerpo -> funcionesEstructuras
Rule 12    cuerpo -> array
Rule 13    cuerpo -> each_array
Rule 14    cuerpo -> comentarios
Rule 15    cuerpo -> each_hash
Rule 16    cuerpo -> sentencia_while
Rule 17    cuerpo -> sentencia_case
Rule 18    cuerpo -> sentencias_when
Rule 19    cuerpo -> sentencia_until
Rule 20    cuerpo -> definicion_clase
Rule 21    input_concatenacion -> concatenacionSimpleCadena
Rule 22    input_concatenacion -> concatenacion_funcion
Rule 23    concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
Rule 24    valorCadena -> CADENA
Rule 25    valorCadena -> VARIABLE
Rule 26    concatenacionSimpleCadena -> valorCadena MAS valorCadena
Rule 27    concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena
Rule 28    valorNumerico -> FLOTANTE
Rule 29    valorNumerico -> ENTERO
Rule 30    soloEnteros -> ENTERO
Rule 31    operadores -> MAS
Rule 32    operadores -> MENOS
Rule 33    operadores -> DIVISION
Rule 34    operadores -> MULTIPLICACION
Rule 35    operadores -> EXPONENCIACION
Rule 36    operadores -> MODULO
Rule 37    expresionNumerica -> valorNumerico
Rule 38    expresionNumerica -> operacionAritmetica
Rule 39    expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
Rule 40    operacionAritmetica -> expresionNumerica operadores expresionNumerica
Rule 41    valor_print -> PRINT
Rule 42    valor_print -> PUTS
Rule 43    valores -> valor
Rule 44    valores -> valor COMA valores
Rule 45    valores -> valor estructura_ifUnaLinea
Rule 46    valor -> CADENA
Rule 47    valor -> valorNumerico
Rule 48    valor -> VARIABLE
Rule 49    valor -> VARIABLECLASE
Rule 50    valor -> SIMBOLO
Rule 51    impresion -> valor_print valores
Rule 52    asignacion_clase -> VARIABLECLASE IGUAL CADENA
Rule 53    asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica
Rule 54    asignacion_clase -> VARIABLECLASE IGUAL hashes
Rule 55    asignacion_clase -> VARIABLECLASE IGUAL array
Rule 56    asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion
Rule 57    asignacion -> VARIABLE IGUAL CADENA
Rule 58    asignacion -> VARIABLE IGUAL expresionNumerica
Rule 59    asignacion -> VARIABLE IGUAL hashes
Rule 60    asignacion -> VARIABLE IGUAL array
Rule 61    asignacion -> VARIABLE IGUAL input_concatenacion
Rule 62    elementos_array -> elemento_array COMA elementos_array
Rule 63    elementos_array -> elemento_array
Rule 64    elemento_array -> CADENA
Rule 65    elemento_array -> ENTERO
Rule 66    elemento_array -> FLOTANTE
Rule 67    elemento_array -> array
Rule 68    elemento_array -> VARIABLE
Rule 69    array -> CORCHETE_IZ elementos_array CORCHETE_DER
Rule 70    array -> CORCHETE_IZ CORCHETE_DER
Rule 71    each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
Rule 72    cuerpo_each -> cuerpo
Rule 73    cuerpo_each -> vacio
Rule 74    vacio -> <empty>
Rule 75    rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
Rule 76    comentarios -> COMENTARIO
Rule 77    comentarios -> COMENTARIO_MULTI
Rule 78    impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER
Rule 79    impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER
Rule 80    impresion_vacia -> PUTS
Rule 81    operadoresComparacion -> DOBLE_IGUAL
Rule 82    operadoresComparacion -> DIFERENTE
Rule 83    operadoresComparacion -> MAYOR_QUE
Rule 84    operadoresComparacion -> MENOR_QUE
Rule 85    operadoresComparacion -> MENOR_IGUAL_QUE
Rule 86    operadoresComparacion -> MAYOR_IGUAL_QUE
Rule 87    funcionesComparacion -> AND
Rule 88    funcionesComparacion -> OR
Rule 89    expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico
Rule 90    expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO
Rule 91    expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE
Rule 92    expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico
Rule 93    expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE
Rule 94    solicitudDatosTeclado -> GETS
Rule 95    solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion
Rule 96    funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
Rule 97    funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
Rule 98    funcionesArray -> SORT
Rule 99    funcionesArray -> FOR EACH
Rule 100   funcionesFormatoImpresion -> CHOMP
Rule 101   funcionesNumeros -> TO_F
Rule 102   funcionesEstructuras -> VARIABLE PUNTO funcionesArray
Rule 103   funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros
Rule 104   argumentos -> VARIABLE
Rule 105   argumentos -> VARIABLE COMA argumentos
Rule 106   condicionIf -> expresiones_booleanas
Rule 107   condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas
Rule 108   estructura_if -> IF condicionIf declaracion ELSE declaracion END
Rule 109   estructura_if -> IF condicionIf declaracion estructura_secundaria_if
Rule 110   estructura_ifUnaLinea -> IF condicionIf
Rule 111   estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END
Rule 112   estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if
Rule 113   declaracion -> operacionAritmetica
Rule 114   declaracion -> asignacion
Rule 115   declaracion -> impresion
Rule 116   declaracion -> impresion_vacia
Rule 117   declaracion -> expresiones_booleanas
Rule 118   declaracion -> solicitudDatosTeclado
Rule 119   declaracion -> hashes
Rule 120   declaracion -> estructura_if
Rule 121   declaracion -> asignacion_clase
Rule 122   declaracion -> sentencia_while
Rule 123   declaracion -> estructura_ifUnaLinea
Rule 124   sentencia_while -> WHILE declaracion DO sentencia_while END
Rule 125   sentencia_while -> WHILE declaracion DO declaracion END
Rule 126   sentencia_case -> CASE declaracion sentencia_when END
Rule 127   sentencias_when -> sentencia_when
Rule 128   sentencias_when -> sentencia_when sentencias_when
Rule 129   sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion
Rule 130   sentencia_until -> UNTIL declaracion DO declaracion END
Rule 131   hashes -> LLAVE_IZ elemento_hash LLAVE_DER
Rule 132   hashes -> LLAVE_IZ LLAVE_DER
Rule 133   claveValor -> VARIABLE ASIGNA_HASH valorNumerico
Rule 134   claveValor -> VARIABLE ASIGNA_HASH CADENA
Rule 135   claveValor -> CADENA ASIGNA_HASH valorNumerico
Rule 136   claveValor -> CADENA ASIGNA_HASH CADENA
Rule 137   elemento_hash -> claveValor
Rule 138   elemento_hash -> claveValor COMA claveValor
Rule 139   each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
Rule 140   each_args_hash -> VARIABLE COMA VARIABLE BARRA
Rule 141   each_args_hash -> VARIABLE BARRA
Rule 142   definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
Rule 143   cuerpoVariables -> asignacion_clase
Rule 144   cuerpoVariables -> asignacion
Rule 145   cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables
Rule 146   cuerpoVariables -> asignacion NEWLINE cuerpoVariables
Rule 147   cuerpoClase -> cuerpoVariables
Rule 148   cuerpoClase -> declaracion
Rule 149   cuerpoClase -> funciones

Terminals, with rules where they appear

ALIAS                : 
AND                  : 87
ASIGNA_HASH          : 133 134 135 136
BARRA                : 71 71 139 140 141
BEGIN                : 
BREAK                : 
CADENA               : 24 46 52 57 64 134 135 136 136
CASE                 : 126
CHOMP                : 100
CLASS                : 142
COMA                 : 44 62 105 138 140
COMENTARIO           : 76
COMENTARIO_MULTI     : 77
COMILLA_D            : 
COMILLA_S            : 
CONCAT               : 23
CORCHETE_DER         : 69 70
CORCHETE_IZ          : 69 70
DEF                  : 96 97 142
DEFINED_QUESTION     : 
DIFERENTE            : 82
DIVISION             : 33
DO                   : 71 124 125 130 139
DOBLE_IGUAL          : 81
EACH                 : 99 139
ELSE                 : 108 111
ELSEIF               : 111 112
END                  : 71 96 97 108 111 124 125 126 130 139 142
ENSURE               : 
ENTERO               : 29 30 65 90
EXCLAMACION_ALTO     : 
EXCLAMACION_BAJO     : 
EXPONENCIACION       : 35
FALSE                : 
FLOTANTE             : 28 66
FOR                  : 99
GETS                 : 94 95
ID_CLASE             : 142
IF                   : 108 109 110
IGUAL                : 52 53 54 55 56 57 58 59 60 61
IGUAL_DOBLEP         : 129
IN                   : 
INITIALIZE           : 142
LLAVE_DER            : 131 132
LLAVE_IZ             : 131 132
MAS                  : 26 27 31
MAYOR_IGUAL_QUE      : 86
MAYOR_QUE            : 83
MENOR_IGUAL_QUE      : 85
MENOR_QUE            : 84
MENOS                : 32
MODULE               : 
MODULO               : 36
MULTIPLICACION       : 34
NEWLINE              : 142 142 145 146
NEXT                 : 
NIL                  : 
NOT                  : 
OR                   : 88
O_SIGNO              : 
PARENTESIS_DER       : 23 39 75 78 79 96 97 142
PARENTESIS_IZ        : 23 39 75 78 79 96 97 142
PORCENTAJE           : 
PREGUNTA             : 
PRINT                : 41 78
PRINTF               : 
PUNTO                : 23 71 95 102 103 139
PUTS                 : 42 79 80
RAISE                : 
REDO                 : 
RESCUE               : 
RETRY                : 
RETURN               : 
SELF                 : 
SIMBOLO              : 50
SORT                 : 98
SUPER                : 
TO_F                 : 101
TRES_PUNTOS          : 75
TRIPLE_IGUAL         : 90
TRUE                 : 
UNTIL                : 130
VARIABLE             : 23 25 48 57 58 59 60 61 68 71 71 91 91 92 93 96 97 102 103 104 105 133 134 139 140 140 141
VARIABLECLASE        : 49 52 53 54 55 56
WHEN                 : 129
WHILE                : 124 125
YIELD                : 
Y_SIGNO              : 
error                : 

Nonterminals, with rules where they appear

argumentos           : 97 105 142
array                : 12 55 60 67
asignacion           : 3 114 144 146
asignacion_clase     : 121 143 145
claveValor           : 137 138 138
comentarios          : 14
concatenacionSimpleCadena : 21 27
concatenacion_funcion : 22
condicionIf          : 108 109 110 111 112
cuerpo               : 72 0
cuerpoClase          : 142
cuerpoVariables      : 142 145 146 147
cuerpo_each          : 71
declaracion          : 96 97 108 108 109 111 111 112 124 125 125 126 129 129 130 130 139 148
definicion_clase     : 20
each_args_hash       : 139
each_array           : 13
each_hash            : 15
elemento_array       : 62 63
elemento_hash        : 131
elementos_array      : 62 69
estructura_if        : 9 120
estructura_ifUnaLinea : 45 123
estructura_secundaria_if : 109 112
expresionNumerica    : 40 40 53 58
expresiones_booleanas : 6 106 107 107 117
funciones            : 10 149
funcionesArray       : 102
funcionesComparacion : 107
funcionesEstructuras : 11
funcionesFormatoImpresion : 95
funcionesNumeros     : 103
hashes               : 8 54 59 119
impresion            : 4 115
impresion_vacia      : 5 116
input_concatenacion  : 2 56 61
operacionAritmetica  : 1 38 39 113
operadores           : 40
operadoresComparacion : 89 91 92 93
rangos               : 90
sentencia_case       : 17
sentencia_until      : 19
sentencia_when       : 126 127 128
sentencia_while      : 16 122 124
sentencias_when      : 18 128
solicitudDatosTeclado : 7 118
soloEnteros          : 75 75
vacio                : 73
valor                : 43 44 45
valorCadena          : 23 26 26 27
valorNumerico        : 37 47 89 89 92 93 133 135
valor_print          : 51
valores              : 44 51

Parsing method: LALR

state 0

    (0) S' -> . cuerpo
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (96) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (97) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (102) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (103) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER
    (71) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (76) comentarios -> . COMENTARIO
    (77) comentarios -> . COMENTARIO_MULTI
    (139) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (126) sentencia_case -> . CASE declaracion sentencia_when END
    (127) sentencias_when -> . sentencia_when
    (128) sentencias_when -> . sentencia_when sentencias_when
    (130) sentencia_until -> . UNTIL declaracion DO declaracion END
    (142) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (129) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    VARIABLE        shift and go to state 25
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    DEF             shift and go to state 37
    CORCHETE_IZ     shift and go to state 38
    COMENTARIO      shift and go to state 39
    COMENTARIO_MULTI shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    CLASS           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    WHEN            shift and go to state 48
    CADENA          shift and go to state 26

    cuerpo                         shift and go to state 1
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32
    sentencia_when                 shift and go to state 43
    valorCadena                    shift and go to state 46

state 1

    (0) S' -> cuerpo .



state 2

    (1) cuerpo -> operacionAritmetica .
    (38) expresionNumerica -> operacionAritmetica .

    $end            reduce using rule 1 (cuerpo -> operacionAritmetica .)
    END             reduce using rule 1 (cuerpo -> operacionAritmetica .)
    MAS             reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 38 (expresionNumerica -> operacionAritmetica .)


state 3

    (2) cuerpo -> input_concatenacion .

    $end            reduce using rule 2 (cuerpo -> input_concatenacion .)
    END             reduce using rule 2 (cuerpo -> input_concatenacion .)


state 4

    (3) cuerpo -> asignacion .

    $end            reduce using rule 3 (cuerpo -> asignacion .)
    END             reduce using rule 3 (cuerpo -> asignacion .)


state 5

    (4) cuerpo -> impresion .

    $end            reduce using rule 4 (cuerpo -> impresion .)
    END             reduce using rule 4 (cuerpo -> impresion .)


state 6

    (5) cuerpo -> impresion_vacia .

    $end            reduce using rule 5 (cuerpo -> impresion_vacia .)
    END             reduce using rule 5 (cuerpo -> impresion_vacia .)


state 7

    (6) cuerpo -> expresiones_booleanas .

    $end            reduce using rule 6 (cuerpo -> expresiones_booleanas .)
    END             reduce using rule 6 (cuerpo -> expresiones_booleanas .)


state 8

    (7) cuerpo -> solicitudDatosTeclado .

    $end            reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)
    END             reduce using rule 7 (cuerpo -> solicitudDatosTeclado .)


state 9

    (8) cuerpo -> hashes .

    $end            reduce using rule 8 (cuerpo -> hashes .)
    END             reduce using rule 8 (cuerpo -> hashes .)


state 10

    (9) cuerpo -> estructura_if .

    $end            reduce using rule 9 (cuerpo -> estructura_if .)
    END             reduce using rule 9 (cuerpo -> estructura_if .)


state 11

    (10) cuerpo -> funciones .

    $end            reduce using rule 10 (cuerpo -> funciones .)
    END             reduce using rule 10 (cuerpo -> funciones .)


state 12

    (11) cuerpo -> funcionesEstructuras .

    $end            reduce using rule 11 (cuerpo -> funcionesEstructuras .)
    END             reduce using rule 11 (cuerpo -> funcionesEstructuras .)


state 13

    (12) cuerpo -> array .

    $end            reduce using rule 12 (cuerpo -> array .)
    END             reduce using rule 12 (cuerpo -> array .)


state 14

    (13) cuerpo -> each_array .

    $end            reduce using rule 13 (cuerpo -> each_array .)
    END             reduce using rule 13 (cuerpo -> each_array .)


state 15

    (14) cuerpo -> comentarios .

    $end            reduce using rule 14 (cuerpo -> comentarios .)
    END             reduce using rule 14 (cuerpo -> comentarios .)


state 16

    (15) cuerpo -> each_hash .

    $end            reduce using rule 15 (cuerpo -> each_hash .)
    END             reduce using rule 15 (cuerpo -> each_hash .)


state 17

    (16) cuerpo -> sentencia_while .

    $end            reduce using rule 16 (cuerpo -> sentencia_while .)
    END             reduce using rule 16 (cuerpo -> sentencia_while .)


state 18

    (17) cuerpo -> sentencia_case .

    $end            reduce using rule 17 (cuerpo -> sentencia_case .)
    END             reduce using rule 17 (cuerpo -> sentencia_case .)


state 19

    (18) cuerpo -> sentencias_when .

    $end            reduce using rule 18 (cuerpo -> sentencias_when .)
    END             reduce using rule 18 (cuerpo -> sentencias_when .)


state 20

    (19) cuerpo -> sentencia_until .

    $end            reduce using rule 19 (cuerpo -> sentencia_until .)
    END             reduce using rule 19 (cuerpo -> sentencia_until .)


state 21

    (20) cuerpo -> definicion_clase .

    $end            reduce using rule 20 (cuerpo -> definicion_clase .)
    END             reduce using rule 20 (cuerpo -> definicion_clase .)


state 22

    (40) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (31) operadores -> . MAS
    (32) operadores -> . MENOS
    (33) operadores -> . DIVISION
    (34) operadores -> . MULTIPLICACION
    (35) operadores -> . EXPONENCIACION
    (36) operadores -> . MODULO

    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

    operadores                     shift and go to state 49

state 23

    (21) input_concatenacion -> concatenacionSimpleCadena .
    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena . MAS valorCadena

    $end            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    DO              reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    WHEN            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    IGUAL_DOBLEP    reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSE            reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    ELSEIF          reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    END             reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    NEWLINE         reduce using rule 21 (input_concatenacion -> concatenacionSimpleCadena .)
    MAS             shift and go to state 56


state 24

    (22) input_concatenacion -> concatenacion_funcion .

    $end            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    DO              reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    WHEN            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    IGUAL_DOBLEP    reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    ELSE            reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    ELSEIF          reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    END             reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)
    NEWLINE         reduce using rule 22 (input_concatenacion -> concatenacion_funcion .)


state 25

    (57) asignacion -> VARIABLE . IGUAL CADENA
    (58) asignacion -> VARIABLE . IGUAL expresionNumerica
    (59) asignacion -> VARIABLE . IGUAL hashes
    (60) asignacion -> VARIABLE . IGUAL array
    (61) asignacion -> VARIABLE . IGUAL input_concatenacion
    (91) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (102) funcionesEstructuras -> VARIABLE . PUNTO funcionesArray
    (103) funcionesEstructuras -> VARIABLE . PUNTO funcionesNumeros
    (71) each_array -> VARIABLE . PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (139) each_hash -> VARIABLE . PUNTO EACH DO BARRA each_args_hash declaracion END
    (23) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> VARIABLE .
    (81) operadoresComparacion -> . DOBLE_IGUAL
    (82) operadoresComparacion -> . DIFERENTE
    (83) operadoresComparacion -> . MAYOR_QUE
    (84) operadoresComparacion -> . MENOR_QUE
    (85) operadoresComparacion -> . MENOR_IGUAL_QUE
    (86) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 57
    PUNTO           shift and go to state 59
    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 58

state 26

    (24) valorCadena -> CADENA .

    MAS             reduce using rule 24 (valorCadena -> CADENA .)
    $end            reduce using rule 24 (valorCadena -> CADENA .)
    DO              reduce using rule 24 (valorCadena -> CADENA .)
    WHEN            reduce using rule 24 (valorCadena -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 24 (valorCadena -> CADENA .)
    ELSE            reduce using rule 24 (valorCadena -> CADENA .)
    ELSEIF          reduce using rule 24 (valorCadena -> CADENA .)
    END             reduce using rule 24 (valorCadena -> CADENA .)
    NEWLINE         reduce using rule 24 (valorCadena -> CADENA .)
    PARENTESIS_DER  reduce using rule 24 (valorCadena -> CADENA .)


state 27

    (51) impresion -> valor_print . valores
    (43) valores -> . valor
    (44) valores -> . valor COMA valores
    (45) valores -> . valor estructura_ifUnaLinea
    (46) valor -> . CADENA
    (47) valor -> . valorNumerico
    (48) valor -> . VARIABLE
    (49) valor -> . VARIABLECLASE
    (50) valor -> . SIMBOLO
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    CADENA          shift and go to state 68
    VARIABLE        shift and go to state 70
    VARIABLECLASE   shift and go to state 71
    SIMBOLO         shift and go to state 72
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valores                        shift and go to state 66
    valor                          shift and go to state 67
    valorNumerico                  shift and go to state 69

state 28

    (78) impresion_vacia -> PRINT . PARENTESIS_IZ PARENTESIS_DER
    (41) valor_print -> PRINT .

    PARENTESIS_IZ   shift and go to state 73
    CADENA          reduce using rule 41 (valor_print -> PRINT .)
    VARIABLE        reduce using rule 41 (valor_print -> PRINT .)
    VARIABLECLASE   reduce using rule 41 (valor_print -> PRINT .)
    SIMBOLO         reduce using rule 41 (valor_print -> PRINT .)
    FLOTANTE        reduce using rule 41 (valor_print -> PRINT .)
    ENTERO          reduce using rule 41 (valor_print -> PRINT .)


state 29

    (39) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (75) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (30) soloEnteros -> . ENTERO
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    ENTERO          shift and go to state 77
    PARENTESIS_IZ   shift and go to state 74
    FLOTANTE        shift and go to state 47

    operacionAritmetica            shift and go to state 75
    soloEnteros                    shift and go to state 76
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 78

state 30

    (79) impresion_vacia -> PUTS . PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> PUTS .
    (42) valor_print -> PUTS .

    PARENTESIS_IZ   shift and go to state 79
    $end            reduce using rule 80 (impresion_vacia -> PUTS .)
    DO              reduce using rule 80 (impresion_vacia -> PUTS .)
    WHEN            reduce using rule 80 (impresion_vacia -> PUTS .)
    IGUAL_DOBLEP    reduce using rule 80 (impresion_vacia -> PUTS .)
    ELSE            reduce using rule 80 (impresion_vacia -> PUTS .)
    ELSEIF          reduce using rule 80 (impresion_vacia -> PUTS .)
    END             reduce using rule 80 (impresion_vacia -> PUTS .)
    CADENA          reduce using rule 42 (valor_print -> PUTS .)
    VARIABLE        reduce using rule 42 (valor_print -> PUTS .)
    VARIABLECLASE   reduce using rule 42 (valor_print -> PUTS .)
    SIMBOLO         reduce using rule 42 (valor_print -> PUTS .)
    FLOTANTE        reduce using rule 42 (valor_print -> PUTS .)
    ENTERO          reduce using rule 42 (valor_print -> PUTS .)


state 31

    (89) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (37) expresionNumerica -> valorNumerico .
    (81) operadoresComparacion -> . DOBLE_IGUAL
    (82) operadoresComparacion -> . DIFERENTE
    (83) operadoresComparacion -> . MAYOR_QUE
    (84) operadoresComparacion -> . MENOR_QUE
    (85) operadoresComparacion -> . MENOR_IGUAL_QUE
    (86) operadoresComparacion -> . MAYOR_IGUAL_QUE

    MAS             reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 37 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 37 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 37 (expresionNumerica -> valorNumerico .)
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 80

state 32

    (90) expresiones_booleanas -> rangos . TRIPLE_IGUAL ENTERO

    TRIPLE_IGUAL    shift and go to state 81


state 33

    (29) valorNumerico -> ENTERO .

    DOBLE_IGUAL     reduce using rule 29 (valorNumerico -> ENTERO .)
    DIFERENTE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MAYOR_QUE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOR_QUE       reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> ENTERO .)
    MAYOR_IGUAL_QUE reduce using rule 29 (valorNumerico -> ENTERO .)
    MAS             reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 29 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 29 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 29 (valorNumerico -> ENTERO .)
    COMA            reduce using rule 29 (valorNumerico -> ENTERO .)
    IF              reduce using rule 29 (valorNumerico -> ENTERO .)
    $end            reduce using rule 29 (valorNumerico -> ENTERO .)
    DO              reduce using rule 29 (valorNumerico -> ENTERO .)
    WHEN            reduce using rule 29 (valorNumerico -> ENTERO .)
    IGUAL_DOBLEP    reduce using rule 29 (valorNumerico -> ENTERO .)
    ELSE            reduce using rule 29 (valorNumerico -> ENTERO .)
    ELSEIF          reduce using rule 29 (valorNumerico -> ENTERO .)
    END             reduce using rule 29 (valorNumerico -> ENTERO .)
    PARENTESIS_DER  reduce using rule 29 (valorNumerico -> ENTERO .)
    NEWLINE         reduce using rule 29 (valorNumerico -> ENTERO .)
    AND             reduce using rule 29 (valorNumerico -> ENTERO .)
    OR              reduce using rule 29 (valorNumerico -> ENTERO .)
    VARIABLE        reduce using rule 29 (valorNumerico -> ENTERO .)
    PRINT           reduce using rule 29 (valorNumerico -> ENTERO .)
    PUTS            reduce using rule 29 (valorNumerico -> ENTERO .)
    GETS            reduce using rule 29 (valorNumerico -> ENTERO .)
    LLAVE_IZ        reduce using rule 29 (valorNumerico -> ENTERO .)
    VARIABLECLASE   reduce using rule 29 (valorNumerico -> ENTERO .)
    WHILE           reduce using rule 29 (valorNumerico -> ENTERO .)
    PARENTESIS_IZ   reduce using rule 29 (valorNumerico -> ENTERO .)
    FLOTANTE        reduce using rule 29 (valorNumerico -> ENTERO .)
    ENTERO          reduce using rule 29 (valorNumerico -> ENTERO .)
    LLAVE_DER       reduce using rule 29 (valorNumerico -> ENTERO .)


state 34

    (94) solicitudDatosTeclado -> GETS .
    (95) solicitudDatosTeclado -> GETS . PUNTO funcionesFormatoImpresion

    $end            reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    DO              reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    WHEN            reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    IGUAL_DOBLEP    reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    ELSE            reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    ELSEIF          reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    END             reduce using rule 94 (solicitudDatosTeclado -> GETS .)
    PUNTO           shift and go to state 82


state 35

    (131) hashes -> LLAVE_IZ . elemento_hash LLAVE_DER
    (132) hashes -> LLAVE_IZ . LLAVE_DER
    (137) elemento_hash -> . claveValor
    (138) elemento_hash -> . claveValor COMA claveValor
    (133) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (134) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (135) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (136) claveValor -> . CADENA ASIGNA_HASH CADENA

    LLAVE_DER       shift and go to state 84
    VARIABLE        shift and go to state 86
    CADENA          shift and go to state 87

    elemento_hash                  shift and go to state 83
    claveValor                     shift and go to state 85

state 36

    (108) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (106) condicionIf -> . expresiones_booleanas
    (107) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 91
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 92

    condicionIf                    shift and go to state 88
    expresiones_booleanas          shift and go to state 89
    valorNumerico                  shift and go to state 90
    rangos                         shift and go to state 32

state 37

    (96) funciones -> DEF . VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (97) funciones -> DEF . VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    VARIABLE        shift and go to state 93


state 38

    (69) array -> CORCHETE_IZ . elementos_array CORCHETE_DER
    (70) array -> CORCHETE_IZ . CORCHETE_DER
    (62) elementos_array -> . elemento_array COMA elementos_array
    (63) elementos_array -> . elemento_array
    (64) elemento_array -> . CADENA
    (65) elemento_array -> . ENTERO
    (66) elemento_array -> . FLOTANTE
    (67) elemento_array -> . array
    (68) elemento_array -> . VARIABLE
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER

    CORCHETE_DER    shift and go to state 95
    CADENA          shift and go to state 97
    ENTERO          shift and go to state 98
    FLOTANTE        shift and go to state 99
    VARIABLE        shift and go to state 101
    CORCHETE_IZ     shift and go to state 38

    elementos_array                shift and go to state 94
    elemento_array                 shift and go to state 96
    array                          shift and go to state 100

state 39

    (76) comentarios -> COMENTARIO .

    $end            reduce using rule 76 (comentarios -> COMENTARIO .)
    END             reduce using rule 76 (comentarios -> COMENTARIO .)


state 40

    (77) comentarios -> COMENTARIO_MULTI .

    $end            reduce using rule 77 (comentarios -> COMENTARIO_MULTI .)
    END             reduce using rule 77 (comentarios -> COMENTARIO_MULTI .)


state 41

    (124) sentencia_while -> WHILE . declaracion DO sentencia_while END
    (125) sentencia_while -> WHILE . declaracion DO declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 102
    sentencia_while                shift and go to state 103
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 42

    (126) sentencia_case -> CASE . declaracion sentencia_when END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 117
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 43

    (127) sentencias_when -> sentencia_when .
    (128) sentencias_when -> sentencia_when . sentencias_when
    (127) sentencias_when -> . sentencia_when
    (128) sentencias_when -> . sentencia_when sentencias_when
    (129) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    $end            reduce using rule 127 (sentencias_when -> sentencia_when .)
    END             reduce using rule 127 (sentencias_when -> sentencia_when .)
    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 43
    sentencias_when                shift and go to state 118

state 44

    (130) sentencia_until -> UNTIL . declaracion DO declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 119
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 45

    (142) definicion_clase -> CLASS . ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    ID_CLASE        shift and go to state 120


state 46

    (26) concatenacionSimpleCadena -> valorCadena . MAS valorCadena

    MAS             shift and go to state 121


state 47

    (28) valorNumerico -> FLOTANTE .

    DOBLE_IGUAL     reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DIFERENTE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAYOR_QUE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOR_QUE       reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOR_IGUAL_QUE reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAYOR_IGUAL_QUE reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MAS             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MENOS           reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DIVISION        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MULTIPLICACION  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    EXPONENCIACION  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    MODULO          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    COMA            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    IF              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    $end            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    DO              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    WHEN            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    IGUAL_DOBLEP    reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ELSE            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ELSEIF          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    END             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PARENTESIS_DER  reduce using rule 28 (valorNumerico -> FLOTANTE .)
    NEWLINE         reduce using rule 28 (valorNumerico -> FLOTANTE .)
    AND             reduce using rule 28 (valorNumerico -> FLOTANTE .)
    OR              reduce using rule 28 (valorNumerico -> FLOTANTE .)
    VARIABLE        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PRINT           reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PUTS            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    GETS            reduce using rule 28 (valorNumerico -> FLOTANTE .)
    LLAVE_IZ        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    VARIABLECLASE   reduce using rule 28 (valorNumerico -> FLOTANTE .)
    WHILE           reduce using rule 28 (valorNumerico -> FLOTANTE .)
    PARENTESIS_IZ   reduce using rule 28 (valorNumerico -> FLOTANTE .)
    FLOTANTE        reduce using rule 28 (valorNumerico -> FLOTANTE .)
    ENTERO          reduce using rule 28 (valorNumerico -> FLOTANTE .)
    LLAVE_DER       reduce using rule 28 (valorNumerico -> FLOTANTE .)


state 48

    (129) sentencia_when -> WHEN . declaracion IGUAL_DOBLEP declaracion
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 122
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 49

    (40) operacionAritmetica -> expresionNumerica operadores . expresionNumerica
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica

    PARENTESIS_IZ   shift and go to state 74
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    expresionNumerica              shift and go to state 123
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 124

state 50

    (31) operadores -> MAS .

    PARENTESIS_IZ   reduce using rule 31 (operadores -> MAS .)
    FLOTANTE        reduce using rule 31 (operadores -> MAS .)
    ENTERO          reduce using rule 31 (operadores -> MAS .)


state 51

    (32) operadores -> MENOS .

    PARENTESIS_IZ   reduce using rule 32 (operadores -> MENOS .)
    FLOTANTE        reduce using rule 32 (operadores -> MENOS .)
    ENTERO          reduce using rule 32 (operadores -> MENOS .)


state 52

    (33) operadores -> DIVISION .

    PARENTESIS_IZ   reduce using rule 33 (operadores -> DIVISION .)
    FLOTANTE        reduce using rule 33 (operadores -> DIVISION .)
    ENTERO          reduce using rule 33 (operadores -> DIVISION .)


state 53

    (34) operadores -> MULTIPLICACION .

    PARENTESIS_IZ   reduce using rule 34 (operadores -> MULTIPLICACION .)
    FLOTANTE        reduce using rule 34 (operadores -> MULTIPLICACION .)
    ENTERO          reduce using rule 34 (operadores -> MULTIPLICACION .)


state 54

    (35) operadores -> EXPONENCIACION .

    PARENTESIS_IZ   reduce using rule 35 (operadores -> EXPONENCIACION .)
    FLOTANTE        reduce using rule 35 (operadores -> EXPONENCIACION .)
    ENTERO          reduce using rule 35 (operadores -> EXPONENCIACION .)


state 55

    (36) operadores -> MODULO .

    PARENTESIS_IZ   reduce using rule 36 (operadores -> MODULO .)
    FLOTANTE        reduce using rule 36 (operadores -> MODULO .)
    ENTERO          reduce using rule 36 (operadores -> MODULO .)


state 56

    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS . valorCadena
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 126

    valorCadena                    shift and go to state 125

state 57

    (57) asignacion -> VARIABLE IGUAL . CADENA
    (58) asignacion -> VARIABLE IGUAL . expresionNumerica
    (59) asignacion -> VARIABLE IGUAL . hashes
    (60) asignacion -> VARIABLE IGUAL . array
    (61) asignacion -> VARIABLE IGUAL . input_concatenacion
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 128
    PARENTESIS_IZ   shift and go to state 74
    LLAVE_IZ        shift and go to state 35
    CORCHETE_IZ     shift and go to state 38
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 127

    expresionNumerica              shift and go to state 129
    hashes                         shift and go to state 130
    array                          shift and go to state 131
    input_concatenacion            shift and go to state 132
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 124
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valorCadena                    shift and go to state 46

state 58

    (91) expresiones_booleanas -> VARIABLE operadoresComparacion . VARIABLE
    (92) expresiones_booleanas -> VARIABLE operadoresComparacion . valorNumerico
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 133
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 134

state 59

    (102) funcionesEstructuras -> VARIABLE PUNTO . funcionesArray
    (103) funcionesEstructuras -> VARIABLE PUNTO . funcionesNumeros
    (71) each_array -> VARIABLE PUNTO . DO BARRA VARIABLE BARRA cuerpo_each END
    (139) each_hash -> VARIABLE PUNTO . EACH DO BARRA each_args_hash declaracion END
    (23) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (98) funcionesArray -> . SORT
    (99) funcionesArray -> . FOR EACH
    (101) funcionesNumeros -> . TO_F

    DO              shift and go to state 137
    EACH            shift and go to state 138
    CONCAT          shift and go to state 139
    SORT            shift and go to state 140
    FOR             shift and go to state 141
    TO_F            shift and go to state 142

    funcionesArray                 shift and go to state 135
    funcionesNumeros               shift and go to state 136

state 60

    (81) operadoresComparacion -> DOBLE_IGUAL .

    VARIABLE        reduce using rule 81 (operadoresComparacion -> DOBLE_IGUAL .)
    FLOTANTE        reduce using rule 81 (operadoresComparacion -> DOBLE_IGUAL .)
    ENTERO          reduce using rule 81 (operadoresComparacion -> DOBLE_IGUAL .)


state 61

    (82) operadoresComparacion -> DIFERENTE .

    VARIABLE        reduce using rule 82 (operadoresComparacion -> DIFERENTE .)
    FLOTANTE        reduce using rule 82 (operadoresComparacion -> DIFERENTE .)
    ENTERO          reduce using rule 82 (operadoresComparacion -> DIFERENTE .)


state 62

    (83) operadoresComparacion -> MAYOR_QUE .

    VARIABLE        reduce using rule 83 (operadoresComparacion -> MAYOR_QUE .)
    FLOTANTE        reduce using rule 83 (operadoresComparacion -> MAYOR_QUE .)
    ENTERO          reduce using rule 83 (operadoresComparacion -> MAYOR_QUE .)


state 63

    (84) operadoresComparacion -> MENOR_QUE .

    VARIABLE        reduce using rule 84 (operadoresComparacion -> MENOR_QUE .)
    FLOTANTE        reduce using rule 84 (operadoresComparacion -> MENOR_QUE .)
    ENTERO          reduce using rule 84 (operadoresComparacion -> MENOR_QUE .)


state 64

    (85) operadoresComparacion -> MENOR_IGUAL_QUE .

    VARIABLE        reduce using rule 85 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 85 (operadoresComparacion -> MENOR_IGUAL_QUE .)
    ENTERO          reduce using rule 85 (operadoresComparacion -> MENOR_IGUAL_QUE .)


state 65

    (86) operadoresComparacion -> MAYOR_IGUAL_QUE .

    VARIABLE        reduce using rule 86 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    FLOTANTE        reduce using rule 86 (operadoresComparacion -> MAYOR_IGUAL_QUE .)
    ENTERO          reduce using rule 86 (operadoresComparacion -> MAYOR_IGUAL_QUE .)


state 66

    (51) impresion -> valor_print valores .

    $end            reduce using rule 51 (impresion -> valor_print valores .)
    DO              reduce using rule 51 (impresion -> valor_print valores .)
    WHEN            reduce using rule 51 (impresion -> valor_print valores .)
    IGUAL_DOBLEP    reduce using rule 51 (impresion -> valor_print valores .)
    ELSE            reduce using rule 51 (impresion -> valor_print valores .)
    ELSEIF          reduce using rule 51 (impresion -> valor_print valores .)
    END             reduce using rule 51 (impresion -> valor_print valores .)


state 67

    (43) valores -> valor .
    (44) valores -> valor . COMA valores
    (45) valores -> valor . estructura_ifUnaLinea
    (110) estructura_ifUnaLinea -> . IF condicionIf

    $end            reduce using rule 43 (valores -> valor .)
    DO              reduce using rule 43 (valores -> valor .)
    WHEN            reduce using rule 43 (valores -> valor .)
    IGUAL_DOBLEP    reduce using rule 43 (valores -> valor .)
    ELSE            reduce using rule 43 (valores -> valor .)
    ELSEIF          reduce using rule 43 (valores -> valor .)
    END             reduce using rule 43 (valores -> valor .)
    COMA            shift and go to state 143
    IF              shift and go to state 145

    estructura_ifUnaLinea          shift and go to state 144

state 68

    (46) valor -> CADENA .

    COMA            reduce using rule 46 (valor -> CADENA .)
    IF              reduce using rule 46 (valor -> CADENA .)
    $end            reduce using rule 46 (valor -> CADENA .)
    DO              reduce using rule 46 (valor -> CADENA .)
    WHEN            reduce using rule 46 (valor -> CADENA .)
    IGUAL_DOBLEP    reduce using rule 46 (valor -> CADENA .)
    ELSE            reduce using rule 46 (valor -> CADENA .)
    ELSEIF          reduce using rule 46 (valor -> CADENA .)
    END             reduce using rule 46 (valor -> CADENA .)


state 69

    (47) valor -> valorNumerico .

    COMA            reduce using rule 47 (valor -> valorNumerico .)
    IF              reduce using rule 47 (valor -> valorNumerico .)
    $end            reduce using rule 47 (valor -> valorNumerico .)
    DO              reduce using rule 47 (valor -> valorNumerico .)
    WHEN            reduce using rule 47 (valor -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 47 (valor -> valorNumerico .)
    ELSE            reduce using rule 47 (valor -> valorNumerico .)
    ELSEIF          reduce using rule 47 (valor -> valorNumerico .)
    END             reduce using rule 47 (valor -> valorNumerico .)


state 70

    (48) valor -> VARIABLE .

    COMA            reduce using rule 48 (valor -> VARIABLE .)
    IF              reduce using rule 48 (valor -> VARIABLE .)
    $end            reduce using rule 48 (valor -> VARIABLE .)
    DO              reduce using rule 48 (valor -> VARIABLE .)
    WHEN            reduce using rule 48 (valor -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 48 (valor -> VARIABLE .)
    ELSE            reduce using rule 48 (valor -> VARIABLE .)
    ELSEIF          reduce using rule 48 (valor -> VARIABLE .)
    END             reduce using rule 48 (valor -> VARIABLE .)


state 71

    (49) valor -> VARIABLECLASE .

    COMA            reduce using rule 49 (valor -> VARIABLECLASE .)
    IF              reduce using rule 49 (valor -> VARIABLECLASE .)
    $end            reduce using rule 49 (valor -> VARIABLECLASE .)
    DO              reduce using rule 49 (valor -> VARIABLECLASE .)
    WHEN            reduce using rule 49 (valor -> VARIABLECLASE .)
    IGUAL_DOBLEP    reduce using rule 49 (valor -> VARIABLECLASE .)
    ELSE            reduce using rule 49 (valor -> VARIABLECLASE .)
    ELSEIF          reduce using rule 49 (valor -> VARIABLECLASE .)
    END             reduce using rule 49 (valor -> VARIABLECLASE .)


state 72

    (50) valor -> SIMBOLO .

    COMA            reduce using rule 50 (valor -> SIMBOLO .)
    IF              reduce using rule 50 (valor -> SIMBOLO .)
    $end            reduce using rule 50 (valor -> SIMBOLO .)
    DO              reduce using rule 50 (valor -> SIMBOLO .)
    WHEN            reduce using rule 50 (valor -> SIMBOLO .)
    IGUAL_DOBLEP    reduce using rule 50 (valor -> SIMBOLO .)
    ELSE            reduce using rule 50 (valor -> SIMBOLO .)
    ELSEIF          reduce using rule 50 (valor -> SIMBOLO .)
    END             reduce using rule 50 (valor -> SIMBOLO .)


state 73

    (78) impresion_vacia -> PRINT PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 146


state 74

    (39) expresionNumerica -> PARENTESIS_IZ . operacionAritmetica PARENTESIS_DER
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    PARENTESIS_IZ   shift and go to state 74
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    operacionAritmetica            shift and go to state 75
    expresionNumerica              shift and go to state 22
    valorNumerico                  shift and go to state 78

state 75

    (39) expresionNumerica -> PARENTESIS_IZ operacionAritmetica . PARENTESIS_DER
    (38) expresionNumerica -> operacionAritmetica .

    PARENTESIS_DER  shift and go to state 147
    MAS             reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 38 (expresionNumerica -> operacionAritmetica .)


state 76

    (75) rangos -> PARENTESIS_IZ soloEnteros . TRES_PUNTOS soloEnteros PARENTESIS_DER

    TRES_PUNTOS     shift and go to state 148


state 77

    (30) soloEnteros -> ENTERO .
    (29) valorNumerico -> ENTERO .

    TRES_PUNTOS     reduce using rule 30 (soloEnteros -> ENTERO .)
    MAS             reduce using rule 29 (valorNumerico -> ENTERO .)
    MENOS           reduce using rule 29 (valorNumerico -> ENTERO .)
    DIVISION        reduce using rule 29 (valorNumerico -> ENTERO .)
    MULTIPLICACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    EXPONENCIACION  reduce using rule 29 (valorNumerico -> ENTERO .)
    MODULO          reduce using rule 29 (valorNumerico -> ENTERO .)


state 78

    (37) expresionNumerica -> valorNumerico .

    MAS             reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MENOS           reduce using rule 37 (expresionNumerica -> valorNumerico .)
    DIVISION        reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MULTIPLICACION  reduce using rule 37 (expresionNumerica -> valorNumerico .)
    EXPONENCIACION  reduce using rule 37 (expresionNumerica -> valorNumerico .)
    MODULO          reduce using rule 37 (expresionNumerica -> valorNumerico .)
    $end            reduce using rule 37 (expresionNumerica -> valorNumerico .)
    PARENTESIS_DER  reduce using rule 37 (expresionNumerica -> valorNumerico .)
    DO              reduce using rule 37 (expresionNumerica -> valorNumerico .)
    WHEN            reduce using rule 37 (expresionNumerica -> valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 37 (expresionNumerica -> valorNumerico .)
    ELSE            reduce using rule 37 (expresionNumerica -> valorNumerico .)
    ELSEIF          reduce using rule 37 (expresionNumerica -> valorNumerico .)
    END             reduce using rule 37 (expresionNumerica -> valorNumerico .)
    NEWLINE         reduce using rule 37 (expresionNumerica -> valorNumerico .)


state 79

    (79) impresion_vacia -> PUTS PARENTESIS_IZ . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 149


state 80

    (89) expresiones_booleanas -> valorNumerico operadoresComparacion . valorNumerico
    (93) expresiones_booleanas -> valorNumerico operadoresComparacion . VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    VARIABLE        shift and go to state 151
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 150

state 81

    (90) expresiones_booleanas -> rangos TRIPLE_IGUAL . ENTERO

    ENTERO          shift and go to state 152


state 82

    (95) solicitudDatosTeclado -> GETS PUNTO . funcionesFormatoImpresion
    (100) funcionesFormatoImpresion -> . CHOMP

    CHOMP           shift and go to state 154

    funcionesFormatoImpresion      shift and go to state 153

state 83

    (131) hashes -> LLAVE_IZ elemento_hash . LLAVE_DER

    LLAVE_DER       shift and go to state 155


state 84

    (132) hashes -> LLAVE_IZ LLAVE_DER .

    $end            reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    DO              reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    WHEN            reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSE            reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    ELSEIF          reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    END             reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)
    NEWLINE         reduce using rule 132 (hashes -> LLAVE_IZ LLAVE_DER .)


state 85

    (137) elemento_hash -> claveValor .
    (138) elemento_hash -> claveValor . COMA claveValor

    LLAVE_DER       reduce using rule 137 (elemento_hash -> claveValor .)
    COMA            shift and go to state 156


state 86

    (133) claveValor -> VARIABLE . ASIGNA_HASH valorNumerico
    (134) claveValor -> VARIABLE . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 157


state 87

    (135) claveValor -> CADENA . ASIGNA_HASH valorNumerico
    (136) claveValor -> CADENA . ASIGNA_HASH CADENA

    ASIGNA_HASH     shift and go to state 158


state 88

    (108) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (109) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 159
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 89

    (106) condicionIf -> expresiones_booleanas .
    (107) condicionIf -> expresiones_booleanas . funcionesComparacion expresiones_booleanas
    (87) funcionesComparacion -> . AND
    (88) funcionesComparacion -> . OR

    VARIABLE        reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    PRINT           reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    PUTS            reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    GETS            reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    IF              reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    WHILE           reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    FLOTANTE        reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    ENTERO          reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    DO              reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    WHEN            reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    ELSE            reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    ELSEIF          reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    END             reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    $end            reduce using rule 106 (condicionIf -> expresiones_booleanas .)
    AND             shift and go to state 161
    OR              shift and go to state 162

    funcionesComparacion           shift and go to state 160

state 90

    (89) expresiones_booleanas -> valorNumerico . operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> valorNumerico . operadoresComparacion VARIABLE
    (81) operadoresComparacion -> . DOBLE_IGUAL
    (82) operadoresComparacion -> . DIFERENTE
    (83) operadoresComparacion -> . MAYOR_QUE
    (84) operadoresComparacion -> . MENOR_QUE
    (85) operadoresComparacion -> . MENOR_IGUAL_QUE
    (86) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 80

state 91

    (91) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (81) operadoresComparacion -> . DOBLE_IGUAL
    (82) operadoresComparacion -> . DIFERENTE
    (83) operadoresComparacion -> . MAYOR_QUE
    (84) operadoresComparacion -> . MENOR_QUE
    (85) operadoresComparacion -> . MENOR_IGUAL_QUE
    (86) operadoresComparacion -> . MAYOR_IGUAL_QUE

    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 58

state 92

    (75) rangos -> PARENTESIS_IZ . soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (30) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 163

    soloEnteros                    shift and go to state 76

state 93

    (96) funciones -> DEF VARIABLE . PARENTESIS_IZ PARENTESIS_DER declaracion END
    (97) funciones -> DEF VARIABLE . PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END

    PARENTESIS_IZ   shift and go to state 164


state 94

    (69) array -> CORCHETE_IZ elementos_array . CORCHETE_DER

    CORCHETE_DER    shift and go to state 165


state 95

    (70) array -> CORCHETE_IZ CORCHETE_DER .

    $end            reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    COMA            reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    DO              reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    WHEN            reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSE            reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    ELSEIF          reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    END             reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)
    NEWLINE         reduce using rule 70 (array -> CORCHETE_IZ CORCHETE_DER .)


state 96

    (62) elementos_array -> elemento_array . COMA elementos_array
    (63) elementos_array -> elemento_array .

    COMA            shift and go to state 166
    CORCHETE_DER    reduce using rule 63 (elementos_array -> elemento_array .)


state 97

    (64) elemento_array -> CADENA .

    COMA            reduce using rule 64 (elemento_array -> CADENA .)
    CORCHETE_DER    reduce using rule 64 (elemento_array -> CADENA .)


state 98

    (65) elemento_array -> ENTERO .

    COMA            reduce using rule 65 (elemento_array -> ENTERO .)
    CORCHETE_DER    reduce using rule 65 (elemento_array -> ENTERO .)


state 99

    (66) elemento_array -> FLOTANTE .

    COMA            reduce using rule 66 (elemento_array -> FLOTANTE .)
    CORCHETE_DER    reduce using rule 66 (elemento_array -> FLOTANTE .)


state 100

    (67) elemento_array -> array .

    COMA            reduce using rule 67 (elemento_array -> array .)
    CORCHETE_DER    reduce using rule 67 (elemento_array -> array .)


state 101

    (68) elemento_array -> VARIABLE .

    COMA            reduce using rule 68 (elemento_array -> VARIABLE .)
    CORCHETE_DER    reduce using rule 68 (elemento_array -> VARIABLE .)


state 102

    (124) sentencia_while -> WHILE declaracion . DO sentencia_while END
    (125) sentencia_while -> WHILE declaracion . DO declaracion END

    DO              shift and go to state 167


state 103

    (122) declaracion -> sentencia_while .

    DO              reduce using rule 122 (declaracion -> sentencia_while .)
    WHEN            reduce using rule 122 (declaracion -> sentencia_while .)
    IGUAL_DOBLEP    reduce using rule 122 (declaracion -> sentencia_while .)
    ELSE            reduce using rule 122 (declaracion -> sentencia_while .)
    ELSEIF          reduce using rule 122 (declaracion -> sentencia_while .)
    END             reduce using rule 122 (declaracion -> sentencia_while .)
    $end            reduce using rule 122 (declaracion -> sentencia_while .)


state 104

    (113) declaracion -> operacionAritmetica .
    (38) expresionNumerica -> operacionAritmetica .

    DO              reduce using rule 113 (declaracion -> operacionAritmetica .)
    WHEN            reduce using rule 113 (declaracion -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 113 (declaracion -> operacionAritmetica .)
    ELSE            reduce using rule 113 (declaracion -> operacionAritmetica .)
    ELSEIF          reduce using rule 113 (declaracion -> operacionAritmetica .)
    END             reduce using rule 113 (declaracion -> operacionAritmetica .)
    $end            reduce using rule 113 (declaracion -> operacionAritmetica .)
    MAS             reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 38 (expresionNumerica -> operacionAritmetica .)


state 105

    (114) declaracion -> asignacion .

    DO              reduce using rule 114 (declaracion -> asignacion .)
    WHEN            reduce using rule 114 (declaracion -> asignacion .)
    IGUAL_DOBLEP    reduce using rule 114 (declaracion -> asignacion .)
    ELSE            reduce using rule 114 (declaracion -> asignacion .)
    ELSEIF          reduce using rule 114 (declaracion -> asignacion .)
    END             reduce using rule 114 (declaracion -> asignacion .)
    $end            reduce using rule 114 (declaracion -> asignacion .)


state 106

    (115) declaracion -> impresion .

    DO              reduce using rule 115 (declaracion -> impresion .)
    WHEN            reduce using rule 115 (declaracion -> impresion .)
    IGUAL_DOBLEP    reduce using rule 115 (declaracion -> impresion .)
    ELSE            reduce using rule 115 (declaracion -> impresion .)
    ELSEIF          reduce using rule 115 (declaracion -> impresion .)
    END             reduce using rule 115 (declaracion -> impresion .)
    $end            reduce using rule 115 (declaracion -> impresion .)


state 107

    (116) declaracion -> impresion_vacia .

    DO              reduce using rule 116 (declaracion -> impresion_vacia .)
    WHEN            reduce using rule 116 (declaracion -> impresion_vacia .)
    IGUAL_DOBLEP    reduce using rule 116 (declaracion -> impresion_vacia .)
    ELSE            reduce using rule 116 (declaracion -> impresion_vacia .)
    ELSEIF          reduce using rule 116 (declaracion -> impresion_vacia .)
    END             reduce using rule 116 (declaracion -> impresion_vacia .)
    $end            reduce using rule 116 (declaracion -> impresion_vacia .)


state 108

    (117) declaracion -> expresiones_booleanas .

    DO              reduce using rule 117 (declaracion -> expresiones_booleanas .)
    WHEN            reduce using rule 117 (declaracion -> expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 117 (declaracion -> expresiones_booleanas .)
    ELSE            reduce using rule 117 (declaracion -> expresiones_booleanas .)
    ELSEIF          reduce using rule 117 (declaracion -> expresiones_booleanas .)
    END             reduce using rule 117 (declaracion -> expresiones_booleanas .)
    $end            reduce using rule 117 (declaracion -> expresiones_booleanas .)


state 109

    (118) declaracion -> solicitudDatosTeclado .

    DO              reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    WHEN            reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    IGUAL_DOBLEP    reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    ELSE            reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    ELSEIF          reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    END             reduce using rule 118 (declaracion -> solicitudDatosTeclado .)
    $end            reduce using rule 118 (declaracion -> solicitudDatosTeclado .)


state 110

    (119) declaracion -> hashes .

    DO              reduce using rule 119 (declaracion -> hashes .)
    WHEN            reduce using rule 119 (declaracion -> hashes .)
    IGUAL_DOBLEP    reduce using rule 119 (declaracion -> hashes .)
    ELSE            reduce using rule 119 (declaracion -> hashes .)
    ELSEIF          reduce using rule 119 (declaracion -> hashes .)
    END             reduce using rule 119 (declaracion -> hashes .)
    $end            reduce using rule 119 (declaracion -> hashes .)


state 111

    (120) declaracion -> estructura_if .

    DO              reduce using rule 120 (declaracion -> estructura_if .)
    WHEN            reduce using rule 120 (declaracion -> estructura_if .)
    IGUAL_DOBLEP    reduce using rule 120 (declaracion -> estructura_if .)
    ELSE            reduce using rule 120 (declaracion -> estructura_if .)
    ELSEIF          reduce using rule 120 (declaracion -> estructura_if .)
    END             reduce using rule 120 (declaracion -> estructura_if .)
    $end            reduce using rule 120 (declaracion -> estructura_if .)


state 112

    (121) declaracion -> asignacion_clase .

    DO              reduce using rule 121 (declaracion -> asignacion_clase .)
    WHEN            reduce using rule 121 (declaracion -> asignacion_clase .)
    IGUAL_DOBLEP    reduce using rule 121 (declaracion -> asignacion_clase .)
    ELSE            reduce using rule 121 (declaracion -> asignacion_clase .)
    ELSEIF          reduce using rule 121 (declaracion -> asignacion_clase .)
    END             reduce using rule 121 (declaracion -> asignacion_clase .)
    $end            reduce using rule 121 (declaracion -> asignacion_clase .)


state 113

    (123) declaracion -> estructura_ifUnaLinea .

    DO              reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    WHEN            reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    ELSE            reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    END             reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)
    $end            reduce using rule 123 (declaracion -> estructura_ifUnaLinea .)


state 114

    (57) asignacion -> VARIABLE . IGUAL CADENA
    (58) asignacion -> VARIABLE . IGUAL expresionNumerica
    (59) asignacion -> VARIABLE . IGUAL hashes
    (60) asignacion -> VARIABLE . IGUAL array
    (61) asignacion -> VARIABLE . IGUAL input_concatenacion
    (91) expresiones_booleanas -> VARIABLE . operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> VARIABLE . operadoresComparacion valorNumerico
    (81) operadoresComparacion -> . DOBLE_IGUAL
    (82) operadoresComparacion -> . DIFERENTE
    (83) operadoresComparacion -> . MAYOR_QUE
    (84) operadoresComparacion -> . MENOR_QUE
    (85) operadoresComparacion -> . MENOR_IGUAL_QUE
    (86) operadoresComparacion -> . MAYOR_IGUAL_QUE

    IGUAL           shift and go to state 57
    DOBLE_IGUAL     shift and go to state 60
    DIFERENTE       shift and go to state 61
    MAYOR_QUE       shift and go to state 62
    MENOR_QUE       shift and go to state 63
    MENOR_IGUAL_QUE shift and go to state 64
    MAYOR_IGUAL_QUE shift and go to state 65

    operadoresComparacion          shift and go to state 58

state 115

    (108) estructura_if -> IF . condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> IF . condicionIf declaracion estructura_secundaria_if
    (110) estructura_ifUnaLinea -> IF . condicionIf
    (106) condicionIf -> . expresiones_booleanas
    (107) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 91
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 92

    condicionIf                    shift and go to state 168
    expresiones_booleanas          shift and go to state 89
    valorNumerico                  shift and go to state 90
    rangos                         shift and go to state 32

state 116

    (52) asignacion_clase -> VARIABLECLASE . IGUAL CADENA
    (53) asignacion_clase -> VARIABLECLASE . IGUAL expresionNumerica
    (54) asignacion_clase -> VARIABLECLASE . IGUAL hashes
    (55) asignacion_clase -> VARIABLECLASE . IGUAL array
    (56) asignacion_clase -> VARIABLECLASE . IGUAL input_concatenacion

    IGUAL           shift and go to state 169


state 117

    (126) sentencia_case -> CASE declaracion . sentencia_when END
    (129) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion

    WHEN            shift and go to state 48

    sentencia_when                 shift and go to state 170

state 118

    (128) sentencias_when -> sentencia_when sentencias_when .

    $end            reduce using rule 128 (sentencias_when -> sentencia_when sentencias_when .)
    END             reduce using rule 128 (sentencias_when -> sentencia_when sentencias_when .)


state 119

    (130) sentencia_until -> UNTIL declaracion . DO declaracion END

    DO              shift and go to state 171


state 120

    (142) definicion_clase -> CLASS ID_CLASE . NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 172


state 121

    (26) concatenacionSimpleCadena -> valorCadena MAS . valorCadena
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 126

    valorCadena                    shift and go to state 173

state 122

    (129) sentencia_when -> WHEN declaracion . IGUAL_DOBLEP declaracion

    IGUAL_DOBLEP    shift and go to state 174


state 123

    (40) operacionAritmetica -> expresionNumerica operadores expresionNumerica .
    (40) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (31) operadores -> . MAS
    (32) operadores -> . MENOS
    (33) operadores -> . DIVISION
    (34) operadores -> . MULTIPLICACION
    (35) operadores -> . EXPONENCIACION
    (36) operadores -> . MODULO

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for EXPONENCIACION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
    $end            reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    PARENTESIS_DER  reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    DO              reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    WHEN            reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSE            reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    ELSEIF          reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    END             reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    NEWLINE         reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .)
    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

  ! MAS             [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MENOS           [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! DIVISION        [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MULTIPLICACION  [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! EXPONENCIACION  [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]
  ! MODULO          [ reduce using rule 40 (operacionAritmetica -> expresionNumerica operadores expresionNumerica .) ]

    operadores                     shift and go to state 49

state 124

    (38) expresionNumerica -> operacionAritmetica .

    MAS             reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MENOS           reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    DIVISION        reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MULTIPLICACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    EXPONENCIACION  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    MODULO          reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    $end            reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    PARENTESIS_DER  reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    DO              reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    WHEN            reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    IGUAL_DOBLEP    reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    ELSE            reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    ELSEIF          reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    END             reduce using rule 38 (expresionNumerica -> operacionAritmetica .)
    NEWLINE         reduce using rule 38 (expresionNumerica -> operacionAritmetica .)


state 125

    (27) concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .

    MAS             reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    $end            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    DO              reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    WHEN            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSE            reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    ELSEIF          reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    END             reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)
    NEWLINE         reduce using rule 27 (concatenacionSimpleCadena -> concatenacionSimpleCadena MAS valorCadena .)


state 126

    (25) valorCadena -> VARIABLE .

    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)
    $end            reduce using rule 25 (valorCadena -> VARIABLE .)
    DO              reduce using rule 25 (valorCadena -> VARIABLE .)
    WHEN            reduce using rule 25 (valorCadena -> VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 25 (valorCadena -> VARIABLE .)
    ELSE            reduce using rule 25 (valorCadena -> VARIABLE .)
    ELSEIF          reduce using rule 25 (valorCadena -> VARIABLE .)
    END             reduce using rule 25 (valorCadena -> VARIABLE .)
    NEWLINE         reduce using rule 25 (valorCadena -> VARIABLE .)
    PARENTESIS_DER  reduce using rule 25 (valorCadena -> VARIABLE .)


state 127

    (23) concatenacion_funcion -> VARIABLE . PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (25) valorCadena -> VARIABLE .

    PUNTO           shift and go to state 175
    MAS             reduce using rule 25 (valorCadena -> VARIABLE .)


state 128

    (57) asignacion -> VARIABLE IGUAL CADENA .
    (24) valorCadena -> CADENA .

    $end            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    DO              reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    WHEN            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSE            reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    ELSEIF          reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    END             reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    NEWLINE         reduce using rule 57 (asignacion -> VARIABLE IGUAL CADENA .)
    MAS             reduce using rule 24 (valorCadena -> CADENA .)


state 129

    (58) asignacion -> VARIABLE IGUAL expresionNumerica .
    (40) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (31) operadores -> . MAS
    (32) operadores -> . MENOS
    (33) operadores -> . DIVISION
    (34) operadores -> . MULTIPLICACION
    (35) operadores -> . EXPONENCIACION
    (36) operadores -> . MODULO

    $end            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    DO              reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    WHEN            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSE            reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    END             reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 58 (asignacion -> VARIABLE IGUAL expresionNumerica .)
    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

    operadores                     shift and go to state 49

state 130

    (59) asignacion -> VARIABLE IGUAL hashes .

    $end            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    DO              reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    WHEN            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    ELSE            reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    ELSEIF          reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    END             reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)
    NEWLINE         reduce using rule 59 (asignacion -> VARIABLE IGUAL hashes .)


state 131

    (60) asignacion -> VARIABLE IGUAL array .

    $end            reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    DO              reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    WHEN            reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    ELSE            reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    ELSEIF          reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    END             reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)
    NEWLINE         reduce using rule 60 (asignacion -> VARIABLE IGUAL array .)


state 132

    (61) asignacion -> VARIABLE IGUAL input_concatenacion .

    $end            reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    DO              reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    WHEN            reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSE            reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    END             reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 61 (asignacion -> VARIABLE IGUAL input_concatenacion .)


state 133

    (91) expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .

    $end            reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    AND             reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    OR              reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    GETS            reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IF              reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    DO              reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)
    END             reduce using rule 91 (expresiones_booleanas -> VARIABLE operadoresComparacion VARIABLE .)


state 134

    (92) expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .

    $end            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    AND             reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    OR              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    GETS            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IF              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    DO              reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)
    END             reduce using rule 92 (expresiones_booleanas -> VARIABLE operadoresComparacion valorNumerico .)


state 135

    (102) funcionesEstructuras -> VARIABLE PUNTO funcionesArray .

    $end            reduce using rule 102 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)
    END             reduce using rule 102 (funcionesEstructuras -> VARIABLE PUNTO funcionesArray .)


state 136

    (103) funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .

    $end            reduce using rule 103 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)
    END             reduce using rule 103 (funcionesEstructuras -> VARIABLE PUNTO funcionesNumeros .)


state 137

    (71) each_array -> VARIABLE PUNTO DO . BARRA VARIABLE BARRA cuerpo_each END

    BARRA           shift and go to state 176


state 138

    (139) each_hash -> VARIABLE PUNTO EACH . DO BARRA each_args_hash declaracion END

    DO              shift and go to state 177


state 139

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT . PARENTESIS_IZ valorCadena PARENTESIS_DER

    PARENTESIS_IZ   shift and go to state 178


state 140

    (98) funcionesArray -> SORT .

    $end            reduce using rule 98 (funcionesArray -> SORT .)
    END             reduce using rule 98 (funcionesArray -> SORT .)


state 141

    (99) funcionesArray -> FOR . EACH

    EACH            shift and go to state 179


state 142

    (101) funcionesNumeros -> TO_F .

    $end            reduce using rule 101 (funcionesNumeros -> TO_F .)
    END             reduce using rule 101 (funcionesNumeros -> TO_F .)


state 143

    (44) valores -> valor COMA . valores
    (43) valores -> . valor
    (44) valores -> . valor COMA valores
    (45) valores -> . valor estructura_ifUnaLinea
    (46) valor -> . CADENA
    (47) valor -> . valorNumerico
    (48) valor -> . VARIABLE
    (49) valor -> . VARIABLECLASE
    (50) valor -> . SIMBOLO
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    CADENA          shift and go to state 68
    VARIABLE        shift and go to state 70
    VARIABLECLASE   shift and go to state 71
    SIMBOLO         shift and go to state 72
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valor                          shift and go to state 67
    valores                        shift and go to state 180
    valorNumerico                  shift and go to state 69

state 144

    (45) valores -> valor estructura_ifUnaLinea .

    $end            reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    DO              reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    WHEN            reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    IGUAL_DOBLEP    reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    ELSE            reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    ELSEIF          reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)
    END             reduce using rule 45 (valores -> valor estructura_ifUnaLinea .)


state 145

    (110) estructura_ifUnaLinea -> IF . condicionIf
    (106) condicionIf -> . expresiones_booleanas
    (107) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 91
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 92

    condicionIf                    shift and go to state 181
    expresiones_booleanas          shift and go to state 89
    valorNumerico                  shift and go to state 90
    rangos                         shift and go to state 32

state 146

    (78) impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 78 (impresion_vacia -> PRINT PARENTESIS_IZ PARENTESIS_DER .)


state 147

    (39) expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .

    MAS             reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MENOS           reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DIVISION        reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MULTIPLICACION  reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    EXPONENCIACION  reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    MODULO          reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    $end            reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    PARENTESIS_DER  reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    DO              reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    WHEN            reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSE            reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    ELSEIF          reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    END             reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)
    NEWLINE         reduce using rule 39 (expresionNumerica -> PARENTESIS_IZ operacionAritmetica PARENTESIS_DER .)


state 148

    (75) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS . soloEnteros PARENTESIS_DER
    (30) soloEnteros -> . ENTERO

    ENTERO          shift and go to state 163

    soloEnteros                    shift and go to state 182

state 149

    (79) impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .

    $end            reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    DO              reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    WHEN            reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSE            reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    ELSEIF          reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)
    END             reduce using rule 79 (impresion_vacia -> PUTS PARENTESIS_IZ PARENTESIS_DER .)


state 150

    (89) expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .

    $end            reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    AND             reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    OR              reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLE        reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PRINT           reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PUTS            reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    GETS            reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    LLAVE_IZ        reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IF              reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    VARIABLECLASE   reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHILE           reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    PARENTESIS_IZ   reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    FLOTANTE        reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ENTERO          reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    DO              reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    WHEN            reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    IGUAL_DOBLEP    reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSE            reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    ELSEIF          reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)
    END             reduce using rule 89 (expresiones_booleanas -> valorNumerico operadoresComparacion valorNumerico .)


state 151

    (93) expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .

    $end            reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    AND             reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    OR              reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLE        reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PRINT           reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PUTS            reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    GETS            reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    LLAVE_IZ        reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IF              reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    VARIABLECLASE   reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHILE           reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    PARENTESIS_IZ   reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    FLOTANTE        reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ENTERO          reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    DO              reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    WHEN            reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    IGUAL_DOBLEP    reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSE            reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    ELSEIF          reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)
    END             reduce using rule 93 (expresiones_booleanas -> valorNumerico operadoresComparacion VARIABLE .)


state 152

    (90) expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .

    $end            reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    AND             reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    OR              reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLE        reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PRINT           reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PUTS            reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    GETS            reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    LLAVE_IZ        reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IF              reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    VARIABLECLASE   reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHILE           reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    PARENTESIS_IZ   reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    FLOTANTE        reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ENTERO          reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    DO              reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    WHEN            reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    IGUAL_DOBLEP    reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSE            reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    ELSEIF          reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)
    END             reduce using rule 90 (expresiones_booleanas -> rangos TRIPLE_IGUAL ENTERO .)


state 153

    (95) solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .

    $end            reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    DO              reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    WHEN            reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    IGUAL_DOBLEP    reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSE            reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    ELSEIF          reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)
    END             reduce using rule 95 (solicitudDatosTeclado -> GETS PUNTO funcionesFormatoImpresion .)


state 154

    (100) funcionesFormatoImpresion -> CHOMP .

    $end            reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    DO              reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    WHEN            reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    IGUAL_DOBLEP    reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    ELSE            reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    ELSEIF          reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)
    END             reduce using rule 100 (funcionesFormatoImpresion -> CHOMP .)


state 155

    (131) hashes -> LLAVE_IZ elemento_hash LLAVE_DER .

    $end            reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    DO              reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    WHEN            reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    IGUAL_DOBLEP    reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSE            reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    ELSEIF          reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    END             reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)
    NEWLINE         reduce using rule 131 (hashes -> LLAVE_IZ elemento_hash LLAVE_DER .)


state 156

    (138) elemento_hash -> claveValor COMA . claveValor
    (133) claveValor -> . VARIABLE ASIGNA_HASH valorNumerico
    (134) claveValor -> . VARIABLE ASIGNA_HASH CADENA
    (135) claveValor -> . CADENA ASIGNA_HASH valorNumerico
    (136) claveValor -> . CADENA ASIGNA_HASH CADENA

    VARIABLE        shift and go to state 86
    CADENA          shift and go to state 87

    claveValor                     shift and go to state 183

state 157

    (133) claveValor -> VARIABLE ASIGNA_HASH . valorNumerico
    (134) claveValor -> VARIABLE ASIGNA_HASH . CADENA
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    CADENA          shift and go to state 185
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 184

state 158

    (135) claveValor -> CADENA ASIGNA_HASH . valorNumerico
    (136) claveValor -> CADENA ASIGNA_HASH . CADENA
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO

    CADENA          shift and go to state 186
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    valorNumerico                  shift and go to state 187

state 159

    (108) estructura_if -> IF condicionIf declaracion . ELSE declaracion END
    (109) estructura_if -> IF condicionIf declaracion . estructura_secundaria_if
    (111) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (112) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 188
    ELSEIF          shift and go to state 190

    estructura_secundaria_if       shift and go to state 189

state 160

    (107) condicionIf -> expresiones_booleanas funcionesComparacion . expresiones_booleanas
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 91
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 92

    expresiones_booleanas          shift and go to state 191
    valorNumerico                  shift and go to state 90
    rangos                         shift and go to state 32

state 161

    (87) funcionesComparacion -> AND .

    VARIABLE        reduce using rule 87 (funcionesComparacion -> AND .)
    FLOTANTE        reduce using rule 87 (funcionesComparacion -> AND .)
    ENTERO          reduce using rule 87 (funcionesComparacion -> AND .)
    PARENTESIS_IZ   reduce using rule 87 (funcionesComparacion -> AND .)


state 162

    (88) funcionesComparacion -> OR .

    VARIABLE        reduce using rule 88 (funcionesComparacion -> OR .)
    FLOTANTE        reduce using rule 88 (funcionesComparacion -> OR .)
    ENTERO          reduce using rule 88 (funcionesComparacion -> OR .)
    PARENTESIS_IZ   reduce using rule 88 (funcionesComparacion -> OR .)


state 163

    (30) soloEnteros -> ENTERO .

    TRES_PUNTOS     reduce using rule 30 (soloEnteros -> ENTERO .)
    PARENTESIS_DER  reduce using rule 30 (soloEnteros -> ENTERO .)


state 164

    (96) funciones -> DEF VARIABLE PARENTESIS_IZ . PARENTESIS_DER declaracion END
    (97) funciones -> DEF VARIABLE PARENTESIS_IZ . argumentos PARENTESIS_DER declaracion END
    (104) argumentos -> . VARIABLE
    (105) argumentos -> . VARIABLE COMA argumentos

    PARENTESIS_DER  shift and go to state 193
    VARIABLE        shift and go to state 192

    argumentos                     shift and go to state 194

state 165

    (69) array -> CORCHETE_IZ elementos_array CORCHETE_DER .

    $end            reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    COMA            reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    CORCHETE_DER    reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    DO              reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    WHEN            reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    IGUAL_DOBLEP    reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSE            reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    ELSEIF          reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    END             reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)
    NEWLINE         reduce using rule 69 (array -> CORCHETE_IZ elementos_array CORCHETE_DER .)


state 166

    (62) elementos_array -> elemento_array COMA . elementos_array
    (62) elementos_array -> . elemento_array COMA elementos_array
    (63) elementos_array -> . elemento_array
    (64) elemento_array -> . CADENA
    (65) elemento_array -> . ENTERO
    (66) elemento_array -> . FLOTANTE
    (67) elemento_array -> . array
    (68) elemento_array -> . VARIABLE
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER

    CADENA          shift and go to state 97
    ENTERO          shift and go to state 98
    FLOTANTE        shift and go to state 99
    VARIABLE        shift and go to state 101
    CORCHETE_IZ     shift and go to state 38

    elemento_array                 shift and go to state 96
    elementos_array                shift and go to state 195
    array                          shift and go to state 100

state 167

    (124) sentencia_while -> WHILE declaracion DO . sentencia_while END
    (125) sentencia_while -> WHILE declaracion DO . declaracion END
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    WHILE           shift and go to state 41
    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 196
    sentencia_while                shift and go to state 197
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 168

    (108) estructura_if -> IF condicionIf . declaracion ELSE declaracion END
    (109) estructura_if -> IF condicionIf . declaracion estructura_secundaria_if
    (110) estructura_ifUnaLinea -> IF condicionIf .
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DO              reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    $end            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 159
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 169

    (52) asignacion_clase -> VARIABLECLASE IGUAL . CADENA
    (53) asignacion_clase -> VARIABLECLASE IGUAL . expresionNumerica
    (54) asignacion_clase -> VARIABLECLASE IGUAL . hashes
    (55) asignacion_clase -> VARIABLECLASE IGUAL . array
    (56) asignacion_clase -> VARIABLECLASE IGUAL . input_concatenacion
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 198
    PARENTESIS_IZ   shift and go to state 74
    LLAVE_IZ        shift and go to state 35
    CORCHETE_IZ     shift and go to state 38
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    VARIABLE        shift and go to state 127

    expresionNumerica              shift and go to state 199
    hashes                         shift and go to state 200
    array                          shift and go to state 201
    input_concatenacion            shift and go to state 202
    valorNumerico                  shift and go to state 78
    operacionAritmetica            shift and go to state 124
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valorCadena                    shift and go to state 46

state 170

    (126) sentencia_case -> CASE declaracion sentencia_when . END

    END             shift and go to state 203


state 171

    (130) sentencia_until -> UNTIL declaracion DO . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 204
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 172

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE . cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (143) cuerpoVariables -> . asignacion_clase
    (144) cuerpoVariables -> . asignacion
    (145) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (146) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 116
    VARIABLE        shift and go to state 208

    cuerpoVariables                shift and go to state 205
    asignacion_clase               shift and go to state 206
    asignacion                     shift and go to state 207

state 173

    (26) concatenacionSimpleCadena -> valorCadena MAS valorCadena .

    MAS             reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    $end            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    DO              reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    WHEN            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    IGUAL_DOBLEP    reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSE            reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    ELSEIF          reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    END             reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)
    NEWLINE         reduce using rule 26 (concatenacionSimpleCadena -> valorCadena MAS valorCadena .)


state 174

    (129) sentencia_when -> WHEN declaracion IGUAL_DOBLEP . declaracion
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 209
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 175

    (23) concatenacion_funcion -> VARIABLE PUNTO . CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER

    CONCAT          shift and go to state 139


state 176

    (71) each_array -> VARIABLE PUNTO DO BARRA . VARIABLE BARRA cuerpo_each END

    VARIABLE        shift and go to state 210


state 177

    (139) each_hash -> VARIABLE PUNTO EACH DO . BARRA each_args_hash declaracion END

    BARRA           shift and go to state 211


state 178

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ . valorCadena PARENTESIS_DER
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    CADENA          shift and go to state 26
    VARIABLE        shift and go to state 126

    valorCadena                    shift and go to state 212

state 179

    (99) funcionesArray -> FOR EACH .

    $end            reduce using rule 99 (funcionesArray -> FOR EACH .)
    END             reduce using rule 99 (funcionesArray -> FOR EACH .)


state 180

    (44) valores -> valor COMA valores .

    $end            reduce using rule 44 (valores -> valor COMA valores .)
    DO              reduce using rule 44 (valores -> valor COMA valores .)
    WHEN            reduce using rule 44 (valores -> valor COMA valores .)
    IGUAL_DOBLEP    reduce using rule 44 (valores -> valor COMA valores .)
    ELSE            reduce using rule 44 (valores -> valor COMA valores .)
    ELSEIF          reduce using rule 44 (valores -> valor COMA valores .)
    END             reduce using rule 44 (valores -> valor COMA valores .)


state 181

    (110) estructura_ifUnaLinea -> IF condicionIf .

    $end            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    DO              reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    WHEN            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    IGUAL_DOBLEP    reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSE            reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    ELSEIF          reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)
    END             reduce using rule 110 (estructura_ifUnaLinea -> IF condicionIf .)


state 182

    (75) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 213


state 183

    (138) elemento_hash -> claveValor COMA claveValor .

    LLAVE_DER       reduce using rule 138 (elemento_hash -> claveValor COMA claveValor .)


state 184

    (133) claveValor -> VARIABLE ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 133 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 133 (claveValor -> VARIABLE ASIGNA_HASH valorNumerico .)


state 185

    (134) claveValor -> VARIABLE ASIGNA_HASH CADENA .

    COMA            reduce using rule 134 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 134 (claveValor -> VARIABLE ASIGNA_HASH CADENA .)


state 186

    (136) claveValor -> CADENA ASIGNA_HASH CADENA .

    COMA            reduce using rule 136 (claveValor -> CADENA ASIGNA_HASH CADENA .)
    LLAVE_DER       reduce using rule 136 (claveValor -> CADENA ASIGNA_HASH CADENA .)


state 187

    (135) claveValor -> CADENA ASIGNA_HASH valorNumerico .

    COMA            reduce using rule 135 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)
    LLAVE_DER       reduce using rule 135 (claveValor -> CADENA ASIGNA_HASH valorNumerico .)


state 188

    (108) estructura_if -> IF condicionIf declaracion ELSE . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 214
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 189

    (109) estructura_if -> IF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 109 (estructura_if -> IF condicionIf declaracion estructura_secundaria_if .)


state 190

    (111) estructura_secundaria_if -> ELSEIF . condicionIf declaracion ELSE declaracion END
    (112) estructura_secundaria_if -> ELSEIF . condicionIf declaracion estructura_secundaria_if
    (106) condicionIf -> . expresiones_booleanas
    (107) condicionIf -> . expresiones_booleanas funcionesComparacion expresiones_booleanas
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 91
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    PARENTESIS_IZ   shift and go to state 92

    condicionIf                    shift and go to state 215
    expresiones_booleanas          shift and go to state 89
    valorNumerico                  shift and go to state 90
    rangos                         shift and go to state 32

state 191

    (107) condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .

    VARIABLE        reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PRINT           reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PUTS            reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    GETS            reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    LLAVE_IZ        reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IF              reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    VARIABLECLASE   reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHILE           reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    PARENTESIS_IZ   reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    FLOTANTE        reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ENTERO          reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    DO              reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    WHEN            reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    IGUAL_DOBLEP    reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSE            reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    ELSEIF          reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    END             reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)
    $end            reduce using rule 107 (condicionIf -> expresiones_booleanas funcionesComparacion expresiones_booleanas .)


state 192

    (104) argumentos -> VARIABLE .
    (105) argumentos -> VARIABLE . COMA argumentos

    PARENTESIS_DER  reduce using rule 104 (argumentos -> VARIABLE .)
    COMA            shift and go to state 216


state 193

    (96) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 217
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 194

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos . PARENTESIS_DER declaracion END

    PARENTESIS_DER  shift and go to state 218


state 195

    (62) elementos_array -> elemento_array COMA elementos_array .

    CORCHETE_DER    reduce using rule 62 (elementos_array -> elemento_array COMA elementos_array .)


state 196

    (125) sentencia_while -> WHILE declaracion DO declaracion . END

    END             shift and go to state 219


state 197

    (124) sentencia_while -> WHILE declaracion DO sentencia_while . END
    (122) declaracion -> sentencia_while .

  ! shift/reduce conflict for END resolved as shift
    END             shift and go to state 220

  ! END             [ reduce using rule 122 (declaracion -> sentencia_while .) ]


state 198

    (52) asignacion_clase -> VARIABLECLASE IGUAL CADENA .
    (24) valorCadena -> CADENA .

    DO              reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    WHEN            reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    IGUAL_DOBLEP    reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSE            reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    ELSEIF          reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    END             reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    NEWLINE         reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    $end            reduce using rule 52 (asignacion_clase -> VARIABLECLASE IGUAL CADENA .)
    MAS             reduce using rule 24 (valorCadena -> CADENA .)


state 199

    (53) asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .
    (40) operacionAritmetica -> expresionNumerica . operadores expresionNumerica
    (31) operadores -> . MAS
    (32) operadores -> . MENOS
    (33) operadores -> . DIVISION
    (34) operadores -> . MULTIPLICACION
    (35) operadores -> . EXPONENCIACION
    (36) operadores -> . MODULO

    DO              reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    WHEN            reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    IGUAL_DOBLEP    reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSE            reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    ELSEIF          reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    END             reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    NEWLINE         reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    $end            reduce using rule 53 (asignacion_clase -> VARIABLECLASE IGUAL expresionNumerica .)
    MAS             shift and go to state 50
    MENOS           shift and go to state 51
    DIVISION        shift and go to state 52
    MULTIPLICACION  shift and go to state 53
    EXPONENCIACION  shift and go to state 54
    MODULO          shift and go to state 55

    operadores                     shift and go to state 49

state 200

    (54) asignacion_clase -> VARIABLECLASE IGUAL hashes .

    DO              reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    WHEN            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    IGUAL_DOBLEP    reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSE            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    ELSEIF          reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    END             reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    NEWLINE         reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)
    $end            reduce using rule 54 (asignacion_clase -> VARIABLECLASE IGUAL hashes .)


state 201

    (55) asignacion_clase -> VARIABLECLASE IGUAL array .

    DO              reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    WHEN            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    IGUAL_DOBLEP    reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSE            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    ELSEIF          reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    END             reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    NEWLINE         reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)
    $end            reduce using rule 55 (asignacion_clase -> VARIABLECLASE IGUAL array .)


state 202

    (56) asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .

    DO              reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    WHEN            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    IGUAL_DOBLEP    reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSE            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    ELSEIF          reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    END             reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    NEWLINE         reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)
    $end            reduce using rule 56 (asignacion_clase -> VARIABLECLASE IGUAL input_concatenacion .)


state 203

    (126) sentencia_case -> CASE declaracion sentencia_when END .

    $end            reduce using rule 126 (sentencia_case -> CASE declaracion sentencia_when END .)
    END             reduce using rule 126 (sentencia_case -> CASE declaracion sentencia_when END .)


state 204

    (130) sentencia_until -> UNTIL declaracion DO declaracion . END

    END             shift and go to state 221


state 205

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables . NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    NEWLINE         shift and go to state 222


state 206

    (143) cuerpoVariables -> asignacion_clase .
    (145) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 143 (cuerpoVariables -> asignacion_clase .)
    NEWLINE         shift and go to state 223

  ! NEWLINE         [ reduce using rule 143 (cuerpoVariables -> asignacion_clase .) ]


state 207

    (144) cuerpoVariables -> asignacion .
    (146) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables

  ! shift/reduce conflict for NEWLINE resolved as shift
    END             reduce using rule 144 (cuerpoVariables -> asignacion .)
    NEWLINE         shift and go to state 224

  ! NEWLINE         [ reduce using rule 144 (cuerpoVariables -> asignacion .) ]


state 208

    (57) asignacion -> VARIABLE . IGUAL CADENA
    (58) asignacion -> VARIABLE . IGUAL expresionNumerica
    (59) asignacion -> VARIABLE . IGUAL hashes
    (60) asignacion -> VARIABLE . IGUAL array
    (61) asignacion -> VARIABLE . IGUAL input_concatenacion

    IGUAL           shift and go to state 57


state 209

    (129) sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .

    WHEN            reduce using rule 129 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    $end            reduce using rule 129 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)
    END             reduce using rule 129 (sentencia_when -> WHEN declaracion IGUAL_DOBLEP declaracion .)


state 210

    (71) each_array -> VARIABLE PUNTO DO BARRA VARIABLE . BARRA cuerpo_each END

    BARRA           shift and go to state 225


state 211

    (139) each_hash -> VARIABLE PUNTO EACH DO BARRA . each_args_hash declaracion END
    (140) each_args_hash -> . VARIABLE COMA VARIABLE BARRA
    (141) each_args_hash -> . VARIABLE BARRA

    VARIABLE        shift and go to state 226

    each_args_hash                 shift and go to state 227

state 212

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena . PARENTESIS_DER

    PARENTESIS_DER  shift and go to state 228


state 213

    (75) rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .

    TRIPLE_IGUAL    reduce using rule 75 (rangos -> PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER .)


state 214

    (108) estructura_if -> IF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 229


state 215

    (111) estructura_secundaria_if -> ELSEIF condicionIf . declaracion ELSE declaracion END
    (112) estructura_secundaria_if -> ELSEIF condicionIf . declaracion estructura_secundaria_if
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 230
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 216

    (105) argumentos -> VARIABLE COMA . argumentos
    (104) argumentos -> . VARIABLE
    (105) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 192

    argumentos                     shift and go to state 231

state 217

    (96) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion . END

    END             shift and go to state 232


state 218

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 233
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 219

    (125) sentencia_while -> WHILE declaracion DO declaracion END .

    $end            reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    DO              reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    WHEN            reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    IGUAL_DOBLEP    reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    ELSE            reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    ELSEIF          reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)
    END             reduce using rule 125 (sentencia_while -> WHILE declaracion DO declaracion END .)


state 220

    (124) sentencia_while -> WHILE declaracion DO sentencia_while END .

    $end            reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    DO              reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    WHEN            reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    IGUAL_DOBLEP    reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    ELSE            reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    ELSEIF          reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)
    END             reduce using rule 124 (sentencia_while -> WHILE declaracion DO sentencia_while END .)


state 221

    (130) sentencia_until -> UNTIL declaracion DO declaracion END .

    $end            reduce using rule 130 (sentencia_until -> UNTIL declaracion DO declaracion END .)
    END             reduce using rule 130 (sentencia_until -> UNTIL declaracion DO declaracion END .)


state 222

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE . DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    DEF             shift and go to state 234


state 223

    (145) cuerpoVariables -> asignacion_clase NEWLINE . cuerpoVariables
    (143) cuerpoVariables -> . asignacion_clase
    (144) cuerpoVariables -> . asignacion
    (145) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (146) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 116
    VARIABLE        shift and go to state 208

    asignacion_clase               shift and go to state 206
    cuerpoVariables                shift and go to state 235
    asignacion                     shift and go to state 207

state 224

    (146) cuerpoVariables -> asignacion NEWLINE . cuerpoVariables
    (143) cuerpoVariables -> . asignacion_clase
    (144) cuerpoVariables -> . asignacion
    (145) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (146) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion

    VARIABLECLASE   shift and go to state 116
    VARIABLE        shift and go to state 208

    asignacion                     shift and go to state 207
    cuerpoVariables                shift and go to state 236
    asignacion_clase               shift and go to state 206

state 225

    (71) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA . cuerpo_each END
    (72) cuerpo_each -> . cuerpo
    (73) cuerpo_each -> . vacio
    (1) cuerpo -> . operacionAritmetica
    (2) cuerpo -> . input_concatenacion
    (3) cuerpo -> . asignacion
    (4) cuerpo -> . impresion
    (5) cuerpo -> . impresion_vacia
    (6) cuerpo -> . expresiones_booleanas
    (7) cuerpo -> . solicitudDatosTeclado
    (8) cuerpo -> . hashes
    (9) cuerpo -> . estructura_if
    (10) cuerpo -> . funciones
    (11) cuerpo -> . funcionesEstructuras
    (12) cuerpo -> . array
    (13) cuerpo -> . each_array
    (14) cuerpo -> . comentarios
    (15) cuerpo -> . each_hash
    (16) cuerpo -> . sentencia_while
    (17) cuerpo -> . sentencia_case
    (18) cuerpo -> . sentencias_when
    (19) cuerpo -> . sentencia_until
    (20) cuerpo -> . definicion_clase
    (74) vacio -> .
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (21) input_concatenacion -> . concatenacionSimpleCadena
    (22) input_concatenacion -> . concatenacion_funcion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (96) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (97) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (102) funcionesEstructuras -> . VARIABLE PUNTO funcionesArray
    (103) funcionesEstructuras -> . VARIABLE PUNTO funcionesNumeros
    (69) array -> . CORCHETE_IZ elementos_array CORCHETE_DER
    (70) array -> . CORCHETE_IZ CORCHETE_DER
    (71) each_array -> . VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END
    (76) comentarios -> . COMENTARIO
    (77) comentarios -> . COMENTARIO_MULTI
    (139) each_hash -> . VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (126) sentencia_case -> . CASE declaracion sentencia_when END
    (127) sentencias_when -> . sentencia_when
    (128) sentencias_when -> . sentencia_when sentencias_when
    (130) sentencia_until -> . UNTIL declaracion DO declaracion END
    (142) definicion_clase -> . CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (26) concatenacionSimpleCadena -> . valorCadena MAS valorCadena
    (27) concatenacionSimpleCadena -> . concatenacionSimpleCadena MAS valorCadena
    (23) concatenacion_funcion -> . VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER
    (129) sentencia_when -> . WHEN declaracion IGUAL_DOBLEP declaracion
    (24) valorCadena -> . CADENA
    (25) valorCadena -> . VARIABLE

    END             reduce using rule 74 (vacio -> .)
    VARIABLE        shift and go to state 25
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 36
    DEF             shift and go to state 37
    CORCHETE_IZ     shift and go to state 38
    COMENTARIO      shift and go to state 39
    COMENTARIO_MULTI shift and go to state 40
    WHILE           shift and go to state 41
    CASE            shift and go to state 42
    UNTIL           shift and go to state 44
    CLASS           shift and go to state 45
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33
    WHEN            shift and go to state 48
    CADENA          shift and go to state 26

    cuerpo_each                    shift and go to state 237
    cuerpo                         shift and go to state 238
    vacio                          shift and go to state 239
    operacionAritmetica            shift and go to state 2
    input_concatenacion            shift and go to state 3
    asignacion                     shift and go to state 4
    impresion                      shift and go to state 5
    impresion_vacia                shift and go to state 6
    expresiones_booleanas          shift and go to state 7
    solicitudDatosTeclado          shift and go to state 8
    hashes                         shift and go to state 9
    estructura_if                  shift and go to state 10
    funciones                      shift and go to state 11
    funcionesEstructuras           shift and go to state 12
    array                          shift and go to state 13
    each_array                     shift and go to state 14
    comentarios                    shift and go to state 15
    each_hash                      shift and go to state 16
    sentencia_while                shift and go to state 17
    sentencia_case                 shift and go to state 18
    sentencias_when                shift and go to state 19
    sentencia_until                shift and go to state 20
    definicion_clase               shift and go to state 21
    expresionNumerica              shift and go to state 22
    concatenacionSimpleCadena      shift and go to state 23
    concatenacion_funcion          shift and go to state 24
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32
    sentencia_when                 shift and go to state 43
    valorCadena                    shift and go to state 46

state 226

    (140) each_args_hash -> VARIABLE . COMA VARIABLE BARRA
    (141) each_args_hash -> VARIABLE . BARRA

    COMA            shift and go to state 240
    BARRA           shift and go to state 241


state 227

    (139) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 242
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 228

    (23) concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .

    $end            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    DO              reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    WHEN            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    IGUAL_DOBLEP    reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSE            reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    ELSEIF          reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    END             reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)
    NEWLINE         reduce using rule 23 (concatenacion_funcion -> VARIABLE PUNTO CONCAT PARENTESIS_IZ valorCadena PARENTESIS_DER .)


state 229

    (108) estructura_if -> IF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 108 (estructura_if -> IF condicionIf declaracion ELSE declaracion END .)


state 230

    (111) estructura_secundaria_if -> ELSEIF condicionIf declaracion . ELSE declaracion END
    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion . estructura_secundaria_if
    (111) estructura_secundaria_if -> . ELSEIF condicionIf declaracion ELSE declaracion END
    (112) estructura_secundaria_if -> . ELSEIF condicionIf declaracion estructura_secundaria_if

    ELSE            shift and go to state 243
    ELSEIF          shift and go to state 190

    estructura_secundaria_if       shift and go to state 244

state 231

    (105) argumentos -> VARIABLE COMA argumentos .

    PARENTESIS_DER  reduce using rule 105 (argumentos -> VARIABLE COMA argumentos .)


state 232

    (96) funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .

    $end            reduce using rule 96 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)
    END             reduce using rule 96 (funciones -> DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END .)


state 233

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion . END

    END             shift and go to state 245


state 234

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF . INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    INITIALIZE      shift and go to state 246


state 235

    (145) cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 145 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)
    END             reduce using rule 145 (cuerpoVariables -> asignacion_clase NEWLINE cuerpoVariables .)


state 236

    (146) cuerpoVariables -> asignacion NEWLINE cuerpoVariables .

    NEWLINE         reduce using rule 146 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)
    END             reduce using rule 146 (cuerpoVariables -> asignacion NEWLINE cuerpoVariables .)


state 237

    (71) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each . END

    END             shift and go to state 247


state 238

    (72) cuerpo_each -> cuerpo .

    END             reduce using rule 72 (cuerpo_each -> cuerpo .)


state 239

    (73) cuerpo_each -> vacio .

    END             reduce using rule 73 (cuerpo_each -> vacio .)


state 240

    (140) each_args_hash -> VARIABLE COMA . VARIABLE BARRA

    VARIABLE        shift and go to state 248


state 241

    (141) each_args_hash -> VARIABLE BARRA .

    VARIABLE        reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    PRINT           reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    PUTS            reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    GETS            reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    IF              reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    WHILE           reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    FLOTANTE        reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)
    ENTERO          reduce using rule 141 (each_args_hash -> VARIABLE BARRA .)


state 242

    (139) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion . END

    END             shift and go to state 249


state 243

    (111) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE . declaracion END
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    VARIABLECLASE   shift and go to state 116
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    declaracion                    shift and go to state 250
    operacionAritmetica            shift and go to state 104
    asignacion                     shift and go to state 105
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    asignacion_clase               shift and go to state 112
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 244

    (112) estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .

    $end            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    DO              reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    WHEN            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    IGUAL_DOBLEP    reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSE            reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    ELSEIF          reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)
    END             reduce using rule 112 (estructura_secundaria_if -> ELSEIF condicionIf declaracion estructura_secundaria_if .)


state 245

    (97) funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .

    $end            reduce using rule 97 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)
    END             reduce using rule 97 (funciones -> DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END .)


state 246

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE . PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END

    PARENTESIS_IZ   shift and go to state 251


state 247

    (71) each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .

    $end            reduce using rule 71 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)
    END             reduce using rule 71 (each_array -> VARIABLE PUNTO DO BARRA VARIABLE BARRA cuerpo_each END .)


state 248

    (140) each_args_hash -> VARIABLE COMA VARIABLE . BARRA

    BARRA           shift and go to state 252


state 249

    (139) each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .

    $end            reduce using rule 139 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)
    END             reduce using rule 139 (each_hash -> VARIABLE PUNTO EACH DO BARRA each_args_hash declaracion END .)


state 250

    (111) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion . END

    END             shift and go to state 253


state 251

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ . argumentos PARENTESIS_DER cuerpoClase END
    (104) argumentos -> . VARIABLE
    (105) argumentos -> . VARIABLE COMA argumentos

    VARIABLE        shift and go to state 192

    argumentos                     shift and go to state 254

state 252

    (140) each_args_hash -> VARIABLE COMA VARIABLE BARRA .

    VARIABLE        reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PRINT           reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PUTS            reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    GETS            reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    LLAVE_IZ        reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    IF              reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    VARIABLECLASE   reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    WHILE           reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    PARENTESIS_IZ   reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    FLOTANTE        reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)
    ENTERO          reduce using rule 140 (each_args_hash -> VARIABLE COMA VARIABLE BARRA .)


state 253

    (111) estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .

    $end            reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    DO              reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    WHEN            reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    IGUAL_DOBLEP    reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSE            reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    ELSEIF          reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)
    END             reduce using rule 111 (estructura_secundaria_if -> ELSEIF condicionIf declaracion ELSE declaracion END .)


state 254

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos . PARENTESIS_DER cuerpoClase END

    PARENTESIS_DER  shift and go to state 255


state 255

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER . cuerpoClase END
    (147) cuerpoClase -> . cuerpoVariables
    (148) cuerpoClase -> . declaracion
    (149) cuerpoClase -> . funciones
    (143) cuerpoVariables -> . asignacion_clase
    (144) cuerpoVariables -> . asignacion
    (145) cuerpoVariables -> . asignacion_clase NEWLINE cuerpoVariables
    (146) cuerpoVariables -> . asignacion NEWLINE cuerpoVariables
    (113) declaracion -> . operacionAritmetica
    (114) declaracion -> . asignacion
    (115) declaracion -> . impresion
    (116) declaracion -> . impresion_vacia
    (117) declaracion -> . expresiones_booleanas
    (118) declaracion -> . solicitudDatosTeclado
    (119) declaracion -> . hashes
    (120) declaracion -> . estructura_if
    (121) declaracion -> . asignacion_clase
    (122) declaracion -> . sentencia_while
    (123) declaracion -> . estructura_ifUnaLinea
    (96) funciones -> . DEF VARIABLE PARENTESIS_IZ PARENTESIS_DER declaracion END
    (97) funciones -> . DEF VARIABLE PARENTESIS_IZ argumentos PARENTESIS_DER declaracion END
    (52) asignacion_clase -> . VARIABLECLASE IGUAL CADENA
    (53) asignacion_clase -> . VARIABLECLASE IGUAL expresionNumerica
    (54) asignacion_clase -> . VARIABLECLASE IGUAL hashes
    (55) asignacion_clase -> . VARIABLECLASE IGUAL array
    (56) asignacion_clase -> . VARIABLECLASE IGUAL input_concatenacion
    (57) asignacion -> . VARIABLE IGUAL CADENA
    (58) asignacion -> . VARIABLE IGUAL expresionNumerica
    (59) asignacion -> . VARIABLE IGUAL hashes
    (60) asignacion -> . VARIABLE IGUAL array
    (61) asignacion -> . VARIABLE IGUAL input_concatenacion
    (40) operacionAritmetica -> . expresionNumerica operadores expresionNumerica
    (51) impresion -> . valor_print valores
    (78) impresion_vacia -> . PRINT PARENTESIS_IZ PARENTESIS_DER
    (79) impresion_vacia -> . PUTS PARENTESIS_IZ PARENTESIS_DER
    (80) impresion_vacia -> . PUTS
    (89) expresiones_booleanas -> . valorNumerico operadoresComparacion valorNumerico
    (90) expresiones_booleanas -> . rangos TRIPLE_IGUAL ENTERO
    (91) expresiones_booleanas -> . VARIABLE operadoresComparacion VARIABLE
    (92) expresiones_booleanas -> . VARIABLE operadoresComparacion valorNumerico
    (93) expresiones_booleanas -> . valorNumerico operadoresComparacion VARIABLE
    (94) solicitudDatosTeclado -> . GETS
    (95) solicitudDatosTeclado -> . GETS PUNTO funcionesFormatoImpresion
    (131) hashes -> . LLAVE_IZ elemento_hash LLAVE_DER
    (132) hashes -> . LLAVE_IZ LLAVE_DER
    (108) estructura_if -> . IF condicionIf declaracion ELSE declaracion END
    (109) estructura_if -> . IF condicionIf declaracion estructura_secundaria_if
    (124) sentencia_while -> . WHILE declaracion DO sentencia_while END
    (125) sentencia_while -> . WHILE declaracion DO declaracion END
    (110) estructura_ifUnaLinea -> . IF condicionIf
    (37) expresionNumerica -> . valorNumerico
    (38) expresionNumerica -> . operacionAritmetica
    (39) expresionNumerica -> . PARENTESIS_IZ operacionAritmetica PARENTESIS_DER
    (41) valor_print -> . PRINT
    (42) valor_print -> . PUTS
    (28) valorNumerico -> . FLOTANTE
    (29) valorNumerico -> . ENTERO
    (75) rangos -> . PARENTESIS_IZ soloEnteros TRES_PUNTOS soloEnteros PARENTESIS_DER

    DEF             shift and go to state 37
    VARIABLECLASE   shift and go to state 116
    VARIABLE        shift and go to state 114
    PRINT           shift and go to state 28
    PUTS            shift and go to state 30
    GETS            shift and go to state 34
    LLAVE_IZ        shift and go to state 35
    IF              shift and go to state 115
    WHILE           shift and go to state 41
    PARENTESIS_IZ   shift and go to state 29
    FLOTANTE        shift and go to state 47
    ENTERO          shift and go to state 33

    cuerpoVariables                shift and go to state 256
    cuerpoClase                    shift and go to state 257
    declaracion                    shift and go to state 258
    funciones                      shift and go to state 259
    asignacion_clase               shift and go to state 260
    asignacion                     shift and go to state 261
    operacionAritmetica            shift and go to state 104
    impresion                      shift and go to state 106
    impresion_vacia                shift and go to state 107
    expresiones_booleanas          shift and go to state 108
    solicitudDatosTeclado          shift and go to state 109
    hashes                         shift and go to state 110
    estructura_if                  shift and go to state 111
    sentencia_while                shift and go to state 103
    estructura_ifUnaLinea          shift and go to state 113
    expresionNumerica              shift and go to state 22
    valor_print                    shift and go to state 27
    valorNumerico                  shift and go to state 31
    rangos                         shift and go to state 32

state 256

    (147) cuerpoClase -> cuerpoVariables .

    END             reduce using rule 147 (cuerpoClase -> cuerpoVariables .)


state 257

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase . END

    END             shift and go to state 262


state 258

    (148) cuerpoClase -> declaracion .

    END             reduce using rule 148 (cuerpoClase -> declaracion .)


state 259

    (149) cuerpoClase -> funciones .

    END             reduce using rule 149 (cuerpoClase -> funciones .)


state 260

    (143) cuerpoVariables -> asignacion_clase .
    (145) cuerpoVariables -> asignacion_clase . NEWLINE cuerpoVariables
    (121) declaracion -> asignacion_clase .

  ! reduce/reduce conflict for END resolved using rule 121 (declaracion -> asignacion_clase .)
    NEWLINE         shift and go to state 223
    END             reduce using rule 121 (declaracion -> asignacion_clase .)

  ! END             [ reduce using rule 143 (cuerpoVariables -> asignacion_clase .) ]


state 261

    (144) cuerpoVariables -> asignacion .
    (146) cuerpoVariables -> asignacion . NEWLINE cuerpoVariables
    (114) declaracion -> asignacion .

  ! reduce/reduce conflict for END resolved using rule 114 (declaracion -> asignacion .)
    NEWLINE         shift and go to state 224
    END             reduce using rule 114 (declaracion -> asignacion .)

  ! END             [ reduce using rule 144 (cuerpoVariables -> asignacion .) ]


state 262

    (142) definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .

    $end            reduce using rule 142 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)
    END             reduce using rule 142 (definicion_clase -> CLASS ID_CLASE NEWLINE cuerpoVariables NEWLINE DEF INITIALIZE PARENTESIS_IZ argumentos PARENTESIS_DER cuerpoClase END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAS in state 123 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 123 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 123 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 123 resolved as shift
WARNING: shift/reduce conflict for EXPONENCIACION in state 123 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 123 resolved as shift
WARNING: shift/reduce conflict for END in state 197 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 206 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 207 resolved as shift
WARNING: reduce/reduce conflict in state 260 resolved using rule (declaracion -> asignacion_clase)
WARNING: rejected rule (cuerpoVariables -> asignacion_clase) in state 260
WARNING: reduce/reduce conflict in state 261 resolved using rule (declaracion -> asignacion)
WARNING: rejected rule (cuerpoVariables -> asignacion) in state 261
